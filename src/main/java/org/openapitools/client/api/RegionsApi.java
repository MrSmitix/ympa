/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.ApiClientDataErrorResponse;
import org.openapitools.client.model.ApiForbiddenErrorResponse;
import org.openapitools.client.model.ApiLimitErrorResponse;
import org.openapitools.client.model.ApiNotFoundErrorResponse;
import org.openapitools.client.model.ApiServerErrorResponse;
import org.openapitools.client.model.ApiUnauthorizedErrorResponse;
import org.openapitools.client.model.GetRegionWithChildrenResponse;
import org.openapitools.client.model.GetRegionsResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class RegionsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public RegionsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public RegionsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for searchRegionChildren
     * @param regionId Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).  (required)
     * @param page Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром &#x60;page_size&#x60;.  &#x60;page_number&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;.  (optional, default to 1)
     * @param pageSize Размер страницы.  Используется вместе с параметром &#x60;page_number&#x60;.  &#x60;page_size&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;.  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Регионы, являющиеся дочерними к указанному в запросе. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Запрос содержит неправильные данные. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> В запросе не указаны данные для авторизации. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Данные для авторизации неверны или доступ к ресурсу запрещен. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Запрашиваемый ресурс не найден. </td><td>  -  </td></tr>
        <tr><td> 420 </td><td> Превышено ограничение на доступ к ресурсу. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Внутренняя ошибка сервера. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call searchRegionChildrenCall(Long regionId, Integer page, Integer pageSize, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/regions/{regionId}/children"
            .replace("{" + "regionId" + "}", localVarApiClient.escapeString(regionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (pageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pageSize", pageSize));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "OAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call searchRegionChildrenValidateBeforeCall(Long regionId, Integer page, Integer pageSize, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'regionId' is set
        if (regionId == null) {
            throw new ApiException("Missing the required parameter 'regionId' when calling searchRegionChildren(Async)");
        }

        return searchRegionChildrenCall(regionId, page, pageSize, _callback);

    }

    /**
     * Информация о дочерних регионах
     * Возвращает информацию о регионах, являющихся дочерними по отношению к региону, идентификатор которого указан в запросе.  Для методов &#x60;GET regions&#x60;, &#x60;GET regions/{regionId}&#x60; и &#x60;GET regions/{regionId}/children&#x60; действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-| 
     * @param regionId Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).  (required)
     * @param page Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром &#x60;page_size&#x60;.  &#x60;page_number&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;.  (optional, default to 1)
     * @param pageSize Размер страницы.  Используется вместе с параметром &#x60;page_number&#x60;.  &#x60;page_size&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;.  (optional)
     * @return GetRegionWithChildrenResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Регионы, являющиеся дочерними к указанному в запросе. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Запрос содержит неправильные данные. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> В запросе не указаны данные для авторизации. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Данные для авторизации неверны или доступ к ресурсу запрещен. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Запрашиваемый ресурс не найден. </td><td>  -  </td></tr>
        <tr><td> 420 </td><td> Превышено ограничение на доступ к ресурсу. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Внутренняя ошибка сервера. </td><td>  -  </td></tr>
     </table>
     */
    public GetRegionWithChildrenResponse searchRegionChildren(Long regionId, Integer page, Integer pageSize) throws ApiException {
        ApiResponse<GetRegionWithChildrenResponse> localVarResp = searchRegionChildrenWithHttpInfo(regionId, page, pageSize);
        return localVarResp.getData();
    }

    /**
     * Информация о дочерних регионах
     * Возвращает информацию о регионах, являющихся дочерними по отношению к региону, идентификатор которого указан в запросе.  Для методов &#x60;GET regions&#x60;, &#x60;GET regions/{regionId}&#x60; и &#x60;GET regions/{regionId}/children&#x60; действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-| 
     * @param regionId Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).  (required)
     * @param page Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром &#x60;page_size&#x60;.  &#x60;page_number&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;.  (optional, default to 1)
     * @param pageSize Размер страницы.  Используется вместе с параметром &#x60;page_number&#x60;.  &#x60;page_size&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;.  (optional)
     * @return ApiResponse&lt;GetRegionWithChildrenResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Регионы, являющиеся дочерними к указанному в запросе. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Запрос содержит неправильные данные. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> В запросе не указаны данные для авторизации. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Данные для авторизации неверны или доступ к ресурсу запрещен. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Запрашиваемый ресурс не найден. </td><td>  -  </td></tr>
        <tr><td> 420 </td><td> Превышено ограничение на доступ к ресурсу. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Внутренняя ошибка сервера. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetRegionWithChildrenResponse> searchRegionChildrenWithHttpInfo(Long regionId, Integer page, Integer pageSize) throws ApiException {
        okhttp3.Call localVarCall = searchRegionChildrenValidateBeforeCall(regionId, page, pageSize, null);
        Type localVarReturnType = new TypeToken<GetRegionWithChildrenResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Информация о дочерних регионах (asynchronously)
     * Возвращает информацию о регионах, являющихся дочерними по отношению к региону, идентификатор которого указан в запросе.  Для методов &#x60;GET regions&#x60;, &#x60;GET regions/{regionId}&#x60; и &#x60;GET regions/{regionId}/children&#x60; действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-| 
     * @param regionId Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).  (required)
     * @param page Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром &#x60;page_size&#x60;.  &#x60;page_number&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;.  (optional, default to 1)
     * @param pageSize Размер страницы.  Используется вместе с параметром &#x60;page_number&#x60;.  &#x60;page_size&#x60; игнорируется, если задан &#x60;page_token&#x60;, &#x60;limit&#x60; или &#x60;offset&#x60;.  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Регионы, являющиеся дочерними к указанному в запросе. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Запрос содержит неправильные данные. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> В запросе не указаны данные для авторизации. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Данные для авторизации неверны или доступ к ресурсу запрещен. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Запрашиваемый ресурс не найден. </td><td>  -  </td></tr>
        <tr><td> 420 </td><td> Превышено ограничение на доступ к ресурсу. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Внутренняя ошибка сервера. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call searchRegionChildrenAsync(Long regionId, Integer page, Integer pageSize, final ApiCallback<GetRegionWithChildrenResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = searchRegionChildrenValidateBeforeCall(regionId, page, pageSize, _callback);
        Type localVarReturnType = new TypeToken<GetRegionWithChildrenResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for searchRegionsById
     * @param regionId Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Найденный регион. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> В запросе не указаны данные для авторизации. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Данные для авторизации неверны или доступ к ресурсу запрещен. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Запрашиваемый ресурс не найден. </td><td>  -  </td></tr>
        <tr><td> 420 </td><td> Превышено ограничение на доступ к ресурсу. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Внутренняя ошибка сервера. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call searchRegionsByIdCall(Long regionId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/regions/{regionId}"
            .replace("{" + "regionId" + "}", localVarApiClient.escapeString(regionId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "OAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call searchRegionsByIdValidateBeforeCall(Long regionId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'regionId' is set
        if (regionId == null) {
            throw new ApiException("Missing the required parameter 'regionId' when calling searchRegionsById(Async)");
        }

        return searchRegionsByIdCall(regionId, _callback);

    }

    /**
     * Информация о регионе
     * Возвращает информацию о регионе.  Для методов &#x60;GET regions&#x60;, &#x60;GET regions/{regionId}&#x60; и &#x60;GET regions/{regionId}/children&#x60; действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-| 
     * @param regionId Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).  (required)
     * @return GetRegionsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Найденный регион. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> В запросе не указаны данные для авторизации. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Данные для авторизации неверны или доступ к ресурсу запрещен. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Запрашиваемый ресурс не найден. </td><td>  -  </td></tr>
        <tr><td> 420 </td><td> Превышено ограничение на доступ к ресурсу. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Внутренняя ошибка сервера. </td><td>  -  </td></tr>
     </table>
     */
    public GetRegionsResponse searchRegionsById(Long regionId) throws ApiException {
        ApiResponse<GetRegionsResponse> localVarResp = searchRegionsByIdWithHttpInfo(regionId);
        return localVarResp.getData();
    }

    /**
     * Информация о регионе
     * Возвращает информацию о регионе.  Для методов &#x60;GET regions&#x60;, &#x60;GET regions/{regionId}&#x60; и &#x60;GET regions/{regionId}/children&#x60; действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-| 
     * @param regionId Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).  (required)
     * @return ApiResponse&lt;GetRegionsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Найденный регион. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> В запросе не указаны данные для авторизации. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Данные для авторизации неверны или доступ к ресурсу запрещен. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Запрашиваемый ресурс не найден. </td><td>  -  </td></tr>
        <tr><td> 420 </td><td> Превышено ограничение на доступ к ресурсу. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Внутренняя ошибка сервера. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetRegionsResponse> searchRegionsByIdWithHttpInfo(Long regionId) throws ApiException {
        okhttp3.Call localVarCall = searchRegionsByIdValidateBeforeCall(regionId, null);
        Type localVarReturnType = new TypeToken<GetRegionsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Информация о регионе (asynchronously)
     * Возвращает информацию о регионе.  Для методов &#x60;GET regions&#x60;, &#x60;GET regions/{regionId}&#x60; и &#x60;GET regions/{regionId}/children&#x60; действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-| 
     * @param regionId Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Найденный регион. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> В запросе не указаны данные для авторизации. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Данные для авторизации неверны или доступ к ресурсу запрещен. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Запрашиваемый ресурс не найден. </td><td>  -  </td></tr>
        <tr><td> 420 </td><td> Превышено ограничение на доступ к ресурсу. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Внутренняя ошибка сервера. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call searchRegionsByIdAsync(Long regionId, final ApiCallback<GetRegionsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = searchRegionsByIdValidateBeforeCall(regionId, _callback);
        Type localVarReturnType = new TypeToken<GetRegionsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for searchRegionsByName
     * @param name Название региона.  Важно учитывать регистр: первая буква должна быть заглавной, остальные — строчными. Например, &#x60;Москва&#x60;.  (required)
     * @param pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.  (optional)
     * @param limit Количество значений на одной странице.  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Список найденных регионов. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> В запросе не указаны данные для авторизации. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Данные для авторизации неверны или доступ к ресурсу запрещен. </td><td>  -  </td></tr>
        <tr><td> 420 </td><td> Превышено ограничение на доступ к ресурсу. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Внутренняя ошибка сервера. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call searchRegionsByNameCall(String name, String pageToken, Integer limit, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/regions";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (name != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("name", name));
        }

        if (pageToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page_token", pageToken));
        }

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "OAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call searchRegionsByNameValidateBeforeCall(String name, String pageToken, Integer limit, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'name' is set
        if (name == null) {
            throw new ApiException("Missing the required parameter 'name' when calling searchRegionsByName(Async)");
        }

        return searchRegionsByNameCall(name, pageToken, limit, _callback);

    }

    /**
     * Поиск регионов по их имени
     * Возвращает информацию о регионе, удовлетворяющем заданным в запросе условиям поиска.  Если найдено несколько регионов, удовлетворяющих условиям поиска, возвращается информация по каждому найденному региону (но не более десяти регионов) для возможности определения нужного региона по родительским регионам.  Для методов &#x60;GET regions&#x60;, &#x60;GET regions/{regionId}&#x60; и &#x60;GET regions/{regionId}/children&#x60; действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-| 
     * @param name Название региона.  Важно учитывать регистр: первая буква должна быть заглавной, остальные — строчными. Например, &#x60;Москва&#x60;.  (required)
     * @param pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.  (optional)
     * @param limit Количество значений на одной странице.  (optional)
     * @return GetRegionsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Список найденных регионов. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> В запросе не указаны данные для авторизации. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Данные для авторизации неверны или доступ к ресурсу запрещен. </td><td>  -  </td></tr>
        <tr><td> 420 </td><td> Превышено ограничение на доступ к ресурсу. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Внутренняя ошибка сервера. </td><td>  -  </td></tr>
     </table>
     */
    public GetRegionsResponse searchRegionsByName(String name, String pageToken, Integer limit) throws ApiException {
        ApiResponse<GetRegionsResponse> localVarResp = searchRegionsByNameWithHttpInfo(name, pageToken, limit);
        return localVarResp.getData();
    }

    /**
     * Поиск регионов по их имени
     * Возвращает информацию о регионе, удовлетворяющем заданным в запросе условиям поиска.  Если найдено несколько регионов, удовлетворяющих условиям поиска, возвращается информация по каждому найденному региону (но не более десяти регионов) для возможности определения нужного региона по родительским регионам.  Для методов &#x60;GET regions&#x60;, &#x60;GET regions/{regionId}&#x60; и &#x60;GET regions/{regionId}/children&#x60; действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-| 
     * @param name Название региона.  Важно учитывать регистр: первая буква должна быть заглавной, остальные — строчными. Например, &#x60;Москва&#x60;.  (required)
     * @param pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.  (optional)
     * @param limit Количество значений на одной странице.  (optional)
     * @return ApiResponse&lt;GetRegionsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Список найденных регионов. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> В запросе не указаны данные для авторизации. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Данные для авторизации неверны или доступ к ресурсу запрещен. </td><td>  -  </td></tr>
        <tr><td> 420 </td><td> Превышено ограничение на доступ к ресурсу. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Внутренняя ошибка сервера. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetRegionsResponse> searchRegionsByNameWithHttpInfo(String name, String pageToken, Integer limit) throws ApiException {
        okhttp3.Call localVarCall = searchRegionsByNameValidateBeforeCall(name, pageToken, limit, null);
        Type localVarReturnType = new TypeToken<GetRegionsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Поиск регионов по их имени (asynchronously)
     * Возвращает информацию о регионе, удовлетворяющем заданным в запросе условиям поиска.  Если найдено несколько регионов, удовлетворяющих условиям поиска, возвращается информация по каждому найденному региону (но не более десяти регионов) для возможности определения нужного региона по родительским регионам.  Для методов &#x60;GET regions&#x60;, &#x60;GET regions/{regionId}&#x60; и &#x60;GET regions/{regionId}/children&#x60; действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-| 
     * @param name Название региона.  Важно учитывать регистр: первая буква должна быть заглавной, остальные — строчными. Например, &#x60;Москва&#x60;.  (required)
     * @param pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.  (optional)
     * @param limit Количество значений на одной странице.  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Список найденных регионов. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> В запросе не указаны данные для авторизации. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Данные для авторизации неверны или доступ к ресурсу запрещен. </td><td>  -  </td></tr>
        <tr><td> 420 </td><td> Превышено ограничение на доступ к ресурсу. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Внутренняя ошибка сервера. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call searchRegionsByNameAsync(String name, String pageToken, Integer limit, final ApiCallback<GetRegionsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = searchRegionsByNameValidateBeforeCall(name, pageToken, limit, _callback);
        Type localVarReturnType = new TypeToken<GetRegionsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
