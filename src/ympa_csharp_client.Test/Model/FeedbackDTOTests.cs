/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ympa_csharp_client.Model;
using ympa_csharp_client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace ympa_csharp_client.Test.Model
{
    /// <summary>
    ///  Class for testing FeedbackDTO
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class FeedbackDTOTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for FeedbackDTO
        //private FeedbackDTO instance;

        public FeedbackDTOTests()
        {
            // TODO uncomment below to create an instance of FeedbackDTO
            //instance = new FeedbackDTO();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of FeedbackDTO
        /// </summary>
        [Fact]
        public void FeedbackDTOInstanceTest()
        {
            // TODO uncomment below to test "IsType" FeedbackDTO
            //Assert.IsType<FeedbackDTO>(instance);
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

        /// <summary>
        /// Test the property 'CreatedAt'
        /// </summary>
        [Fact]
        public void CreatedAtTest()
        {
            // TODO unit test for the property 'CreatedAt'
        }

        /// <summary>
        /// Test the property 'Text'
        /// </summary>
        [Fact]
        public void TextTest()
        {
            // TODO unit test for the property 'Text'
        }

        /// <summary>
        /// Test the property 'State'
        /// </summary>
        [Fact]
        public void StateTest()
        {
            // TODO unit test for the property 'State'
        }

        /// <summary>
        /// Test the property 'Author'
        /// </summary>
        [Fact]
        public void AuthorTest()
        {
            // TODO unit test for the property 'Author'
        }

        /// <summary>
        /// Test the property 'Pro'
        /// </summary>
        [Fact]
        public void ProTest()
        {
            // TODO unit test for the property 'Pro'
        }

        /// <summary>
        /// Test the property 'Contra'
        /// </summary>
        [Fact]
        public void ContraTest()
        {
            // TODO unit test for the property 'Contra'
        }

        /// <summary>
        /// Test the property 'Comments'
        /// </summary>
        [Fact]
        public void CommentsTest()
        {
            // TODO unit test for the property 'Comments'
        }

        /// <summary>
        /// Test the property 'Shop'
        /// </summary>
        [Fact]
        public void ShopTest()
        {
            // TODO unit test for the property 'Shop'
        }

        /// <summary>
        /// Test the property 'Resolved'
        /// </summary>
        [Fact]
        public void ResolvedTest()
        {
            // TODO unit test for the property 'Resolved'
        }

        /// <summary>
        /// Test the property 'Verified'
        /// </summary>
        [Fact]
        public void VerifiedTest()
        {
            // TODO unit test for the property 'Verified'
        }

        /// <summary>
        /// Test the property 'Recommend'
        /// </summary>
        [Fact]
        public void RecommendTest()
        {
            // TODO unit test for the property 'Recommend'
        }

        /// <summary>
        /// Test the property 'Grades'
        /// </summary>
        [Fact]
        public void GradesTest()
        {
            // TODO unit test for the property 'Grades'
        }

        /// <summary>
        /// Test the property 'Order'
        /// </summary>
        [Fact]
        public void OrderTest()
        {
            // TODO unit test for the property 'Order'
        }
    }
}
