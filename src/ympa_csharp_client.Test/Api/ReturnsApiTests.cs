/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using ympa_csharp_client.Client;
using ympa_csharp_client.Api;
// uncomment below to import models
//using ympa_csharp_client.Model;

namespace ympa_csharp_client.Test.Api
{
    /// <summary>
    ///  Class for testing ReturnsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ReturnsApiTests : IDisposable
    {
        private ReturnsApi instance;

        public ReturnsApiTests()
        {
            instance = new ReturnsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ReturnsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ReturnsApi
            //Assert.IsType<ReturnsApi>(instance);
        }

        /// <summary>
        /// Test GetReturn
        /// </summary>
        [Fact]
        public void GetReturnTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //long orderId = null;
            //long returnId = null;
            //var response = instance.GetReturn(campaignId, orderId, returnId);
            //Assert.IsType<GetReturnResponse>(response);
        }

        /// <summary>
        /// Test GetReturnApplication
        /// </summary>
        [Fact]
        public void GetReturnApplicationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //long orderId = null;
            //long returnId = null;
            //var response = instance.GetReturnApplication(campaignId, orderId, returnId);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test GetReturnPhoto
        /// </summary>
        [Fact]
        public void GetReturnPhotoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //long orderId = null;
            //long returnId = null;
            //long itemId = null;
            //string imageHash = null;
            //var response = instance.GetReturnPhoto(campaignId, orderId, returnId, itemId, imageHash);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test GetReturns
        /// </summary>
        [Fact]
        public void GetReturnsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //string? pageToken = null;
            //int? limit = null;
            //List<long>? orderIds = null;
            //List<RefundStatusType>? statuses = null;
            //ReturnType? type = null;
            //DateOnly? fromDate = null;
            //DateOnly? toDate = null;
            //DateOnly? fromDate2 = null;
            //DateOnly? toDate2 = null;
            //var response = instance.GetReturns(campaignId, pageToken, limit, orderIds, statuses, type, fromDate, toDate, fromDate2, toDate2);
            //Assert.IsType<GetReturnsResponse>(response);
        }

        /// <summary>
        /// Test SetReturnDecision
        /// </summary>
        [Fact]
        public void SetReturnDecisionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //long orderId = null;
            //long returnId = null;
            //SetReturnDecisionRequest setReturnDecisionRequest = null;
            //var response = instance.SetReturnDecision(campaignId, orderId, returnId, setReturnDecisionRequest);
            //Assert.IsType<EmptyApiResponse>(response);
        }

        /// <summary>
        /// Test SubmitReturnDecision
        /// </summary>
        [Fact]
        public void SubmitReturnDecisionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //long orderId = null;
            //long returnId = null;
            //var response = instance.SubmitReturnDecision(campaignId, orderId, returnId);
            //Assert.IsType<EmptyApiResponse>(response);
        }
    }
}
