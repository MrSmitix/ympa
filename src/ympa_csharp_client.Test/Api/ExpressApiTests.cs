/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using ympa_csharp_client.Client;
using ympa_csharp_client.Api;
// uncomment below to import models
//using ympa_csharp_client.Model;

namespace ympa_csharp_client.Test.Api
{
    /// <summary>
    ///  Class for testing ExpressApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ExpressApiTests : IDisposable
    {
        private ExpressApi instance;

        public ExpressApiTests()
        {
            instance = new ExpressApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ExpressApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ExpressApi
            //Assert.IsType<ExpressApi>(instance);
        }

        /// <summary>
        /// Test AddHiddenOffers
        /// </summary>
        [Fact]
        public void AddHiddenOffersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //AddHiddenOffersRequest addHiddenOffersRequest = null;
            //var response = instance.AddHiddenOffers(campaignId, addHiddenOffersRequest);
            //Assert.IsType<EmptyApiResponse>(response);
        }

        /// <summary>
        /// Test AddOffersToArchive
        /// </summary>
        [Fact]
        public void AddOffersToArchiveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //AddOffersToArchiveRequest addOffersToArchiveRequest = null;
            //var response = instance.AddOffersToArchive(businessId, addOffersToArchiveRequest);
            //Assert.IsType<AddOffersToArchiveResponse>(response);
        }

        /// <summary>
        /// Test CalculateTariffs
        /// </summary>
        [Fact]
        public void CalculateTariffsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CalculateTariffsRequest calculateTariffsRequest = null;
            //var response = instance.CalculateTariffs(calculateTariffsRequest);
            //Assert.IsType<CalculateTariffsResponse>(response);
        }

        /// <summary>
        /// Test ConfirmBusinessPrices
        /// </summary>
        [Fact]
        public void ConfirmBusinessPricesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //ConfirmPricesRequest confirmPricesRequest = null;
            //var response = instance.ConfirmBusinessPrices(businessId, confirmPricesRequest);
            //Assert.IsType<EmptyApiResponse>(response);
        }

        /// <summary>
        /// Test ConfirmCampaignPrices
        /// </summary>
        [Fact]
        public void ConfirmCampaignPricesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //ConfirmPricesRequest confirmPricesRequest = null;
            //var response = instance.ConfirmCampaignPrices(campaignId, confirmPricesRequest);
            //Assert.IsType<EmptyApiResponse>(response);
        }

        /// <summary>
        /// Test CreateChat
        /// </summary>
        [Fact]
        public void CreateChatTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //CreateChatRequest createChatRequest = null;
            //var response = instance.CreateChat(businessId, createChatRequest);
            //Assert.IsType<CreateChatResponse>(response);
        }

        /// <summary>
        /// Test DeleteCampaignOffers
        /// </summary>
        [Fact]
        public void DeleteCampaignOffersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //DeleteCampaignOffersRequest deleteCampaignOffersRequest = null;
            //var response = instance.DeleteCampaignOffers(campaignId, deleteCampaignOffersRequest);
            //Assert.IsType<DeleteCampaignOffersResponse>(response);
        }

        /// <summary>
        /// Test DeleteGoodsFeedbackComment
        /// </summary>
        [Fact]
        public void DeleteGoodsFeedbackCommentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //DeleteGoodsFeedbackCommentRequest deleteGoodsFeedbackCommentRequest = null;
            //var response = instance.DeleteGoodsFeedbackComment(businessId, deleteGoodsFeedbackCommentRequest);
            //Assert.IsType<EmptyApiResponse>(response);
        }

        /// <summary>
        /// Test DeleteHiddenOffers
        /// </summary>
        [Fact]
        public void DeleteHiddenOffersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //DeleteHiddenOffersRequest deleteHiddenOffersRequest = null;
            //var response = instance.DeleteHiddenOffers(campaignId, deleteHiddenOffersRequest);
            //Assert.IsType<EmptyApiResponse>(response);
        }

        /// <summary>
        /// Test DeleteOffers
        /// </summary>
        [Fact]
        public void DeleteOffersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //DeleteOffersRequest deleteOffersRequest = null;
            //var response = instance.DeleteOffers(businessId, deleteOffersRequest);
            //Assert.IsType<DeleteOffersResponse>(response);
        }

        /// <summary>
        /// Test DeleteOffersFromArchive
        /// </summary>
        [Fact]
        public void DeleteOffersFromArchiveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //DeleteOffersFromArchiveRequest deleteOffersFromArchiveRequest = null;
            //var response = instance.DeleteOffersFromArchive(businessId, deleteOffersFromArchiveRequest);
            //Assert.IsType<DeleteOffersFromArchiveResponse>(response);
        }

        /// <summary>
        /// Test DeletePromoOffers
        /// </summary>
        [Fact]
        public void DeletePromoOffersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //DeletePromoOffersRequest deletePromoOffersRequest = null;
            //var response = instance.DeletePromoOffers(businessId, deletePromoOffersRequest);
            //Assert.IsType<DeletePromoOffersResponse>(response);
        }

        /// <summary>
        /// Test GenerateBoostConsolidatedReport
        /// </summary>
        [Fact]
        public void GenerateBoostConsolidatedReportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GenerateBoostConsolidatedRequest generateBoostConsolidatedRequest = null;
            //ReportFormatType? format = null;
            //var response = instance.GenerateBoostConsolidatedReport(generateBoostConsolidatedRequest, format);
            //Assert.IsType<GenerateReportResponse>(response);
        }

        /// <summary>
        /// Test GenerateCompetitorsPositionReport
        /// </summary>
        [Fact]
        public void GenerateCompetitorsPositionReportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GenerateCompetitorsPositionReportRequest generateCompetitorsPositionReportRequest = null;
            //ReportFormatType? format = null;
            //var response = instance.GenerateCompetitorsPositionReport(generateCompetitorsPositionReportRequest, format);
            //Assert.IsType<GenerateReportResponse>(response);
        }

        /// <summary>
        /// Test GenerateGoodsFeedbackReport
        /// </summary>
        [Fact]
        public void GenerateGoodsFeedbackReportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GenerateGoodsFeedbackRequest generateGoodsFeedbackRequest = null;
            //ReportFormatType? format = null;
            //var response = instance.GenerateGoodsFeedbackReport(generateGoodsFeedbackRequest, format);
            //Assert.IsType<GenerateReportResponse>(response);
        }

        /// <summary>
        /// Test GenerateGoodsRealizationReport
        /// </summary>
        [Fact]
        public void GenerateGoodsRealizationReportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GenerateGoodsRealizationReportRequest generateGoodsRealizationReportRequest = null;
            //ReportFormatType? format = null;
            //var response = instance.GenerateGoodsRealizationReport(generateGoodsRealizationReportRequest, format);
            //Assert.IsType<GenerateReportResponse>(response);
        }

        /// <summary>
        /// Test GenerateMassOrderLabelsReport
        /// </summary>
        [Fact]
        public void GenerateMassOrderLabelsReportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GenerateMassOrderLabelsRequest generateMassOrderLabelsRequest = null;
            //PageFormatType? format = null;
            //var response = instance.GenerateMassOrderLabelsReport(generateMassOrderLabelsRequest, format);
            //Assert.IsType<GenerateReportResponse>(response);
        }

        /// <summary>
        /// Test GenerateOrderLabel
        /// </summary>
        [Fact]
        public void GenerateOrderLabelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //long orderId = null;
            //long shipmentId = null;
            //long boxId = null;
            //PageFormatType? format = null;
            //var response = instance.GenerateOrderLabel(campaignId, orderId, shipmentId, boxId, format);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test GenerateOrderLabels
        /// </summary>
        [Fact]
        public void GenerateOrderLabelsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //long orderId = null;
            //PageFormatType? format = null;
            //var response = instance.GenerateOrderLabels(campaignId, orderId, format);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test GeneratePricesReport
        /// </summary>
        [Fact]
        public void GeneratePricesReportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GeneratePricesReportRequest generatePricesReportRequest = null;
            //ReportFormatType? format = null;
            //var response = instance.GeneratePricesReport(generatePricesReportRequest, format);
            //Assert.IsType<GenerateReportResponse>(response);
        }

        /// <summary>
        /// Test GenerateShelfsStatisticsReport
        /// </summary>
        [Fact]
        public void GenerateShelfsStatisticsReportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GenerateShelfsStatisticsRequest generateShelfsStatisticsRequest = null;
            //ReportFormatType? format = null;
            //var response = instance.GenerateShelfsStatisticsReport(generateShelfsStatisticsRequest, format);
            //Assert.IsType<GenerateReportResponse>(response);
        }

        /// <summary>
        /// Test GenerateShowsSalesReport
        /// </summary>
        [Fact]
        public void GenerateShowsSalesReportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GenerateShowsSalesReportRequest generateShowsSalesReportRequest = null;
            //ReportFormatType? format = null;
            //var response = instance.GenerateShowsSalesReport(generateShowsSalesReportRequest, format);
            //Assert.IsType<GenerateReportResponse>(response);
        }

        /// <summary>
        /// Test GenerateStocksOnWarehousesReport
        /// </summary>
        [Fact]
        public void GenerateStocksOnWarehousesReportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GenerateStocksOnWarehousesReportRequest generateStocksOnWarehousesReportRequest = null;
            //ReportFormatType? format = null;
            //var response = instance.GenerateStocksOnWarehousesReport(generateStocksOnWarehousesReportRequest, format);
            //Assert.IsType<GenerateReportResponse>(response);
        }

        /// <summary>
        /// Test GenerateUnitedMarketplaceServicesReport
        /// </summary>
        [Fact]
        public void GenerateUnitedMarketplaceServicesReportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GenerateUnitedMarketplaceServicesReportRequest generateUnitedMarketplaceServicesReportRequest = null;
            //ReportFormatType? format = null;
            //var response = instance.GenerateUnitedMarketplaceServicesReport(generateUnitedMarketplaceServicesReportRequest, format);
            //Assert.IsType<GenerateReportResponse>(response);
        }

        /// <summary>
        /// Test GenerateUnitedNettingReport
        /// </summary>
        [Fact]
        public void GenerateUnitedNettingReportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GenerateUnitedNettingReportRequest generateUnitedNettingReportRequest = null;
            //ReportFormatType? format = null;
            //var response = instance.GenerateUnitedNettingReport(generateUnitedNettingReportRequest, format);
            //Assert.IsType<GenerateReportResponse>(response);
        }

        /// <summary>
        /// Test GenerateUnitedOrdersReport
        /// </summary>
        [Fact]
        public void GenerateUnitedOrdersReportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GenerateUnitedOrdersRequest generateUnitedOrdersRequest = null;
            //ReportFormatType? format = null;
            //var response = instance.GenerateUnitedOrdersReport(generateUnitedOrdersRequest, format);
            //Assert.IsType<GenerateReportResponse>(response);
        }

        /// <summary>
        /// Test GetAllOffers
        /// </summary>
        [Fact]
        public void GetAllOffersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //long? feedId = null;
            //int? chunk = null;
            //var response = instance.GetAllOffers(campaignId, feedId, chunk);
            //Assert.IsType<GetAllOffersResponse>(response);
        }

        /// <summary>
        /// Test GetBidsInfoForBusiness
        /// </summary>
        [Fact]
        public void GetBidsInfoForBusinessTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //string? pageToken = null;
            //int? limit = null;
            //GetBidsInfoRequest? getBidsInfoRequest = null;
            //var response = instance.GetBidsInfoForBusiness(businessId, pageToken, limit, getBidsInfoRequest);
            //Assert.IsType<GetBidsInfoResponse>(response);
        }

        /// <summary>
        /// Test GetBidsRecommendations
        /// </summary>
        [Fact]
        public void GetBidsRecommendationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //GetBidsRecommendationsRequest getBidsRecommendationsRequest = null;
            //var response = instance.GetBidsRecommendations(businessId, getBidsRecommendationsRequest);
            //Assert.IsType<GetBidsRecommendationsResponse>(response);
        }

        /// <summary>
        /// Test GetBusinessQuarantineOffers
        /// </summary>
        [Fact]
        public void GetBusinessQuarantineOffersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //GetQuarantineOffersRequest getQuarantineOffersRequest = null;
            //string? pageToken = null;
            //int? limit = null;
            //var response = instance.GetBusinessQuarantineOffers(businessId, getQuarantineOffersRequest, pageToken, limit);
            //Assert.IsType<GetQuarantineOffersResponse>(response);
        }

        /// <summary>
        /// Test GetBusinessSettings
        /// </summary>
        [Fact]
        public void GetBusinessSettingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //var response = instance.GetBusinessSettings(businessId);
            //Assert.IsType<GetBusinessSettingsResponse>(response);
        }

        /// <summary>
        /// Test GetCampaign
        /// </summary>
        [Fact]
        public void GetCampaignTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //var response = instance.GetCampaign(campaignId);
            //Assert.IsType<GetCampaignResponse>(response);
        }

        /// <summary>
        /// Test GetCampaignLogins
        /// </summary>
        [Fact]
        public void GetCampaignLoginsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //var response = instance.GetCampaignLogins(campaignId);
            //Assert.IsType<GetCampaignLoginsResponse>(response);
        }

        /// <summary>
        /// Test GetCampaignOffers
        /// </summary>
        [Fact]
        public void GetCampaignOffersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //GetCampaignOffersRequest getCampaignOffersRequest = null;
            //string? pageToken = null;
            //int? limit = null;
            //var response = instance.GetCampaignOffers(campaignId, getCampaignOffersRequest, pageToken, limit);
            //Assert.IsType<GetCampaignOffersResponse>(response);
        }

        /// <summary>
        /// Test GetCampaignQuarantineOffers
        /// </summary>
        [Fact]
        public void GetCampaignQuarantineOffersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //GetQuarantineOffersRequest getQuarantineOffersRequest = null;
            //string? pageToken = null;
            //int? limit = null;
            //var response = instance.GetCampaignQuarantineOffers(campaignId, getQuarantineOffersRequest, pageToken, limit);
            //Assert.IsType<GetQuarantineOffersResponse>(response);
        }

        /// <summary>
        /// Test GetCampaignRegion
        /// </summary>
        [Fact]
        public void GetCampaignRegionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //var response = instance.GetCampaignRegion(campaignId);
            //Assert.IsType<GetCampaignRegionResponse>(response);
        }

        /// <summary>
        /// Test GetCampaignSettings
        /// </summary>
        [Fact]
        public void GetCampaignSettingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //var response = instance.GetCampaignSettings(campaignId);
            //Assert.IsType<GetCampaignSettingsResponse>(response);
        }

        /// <summary>
        /// Test GetCampaigns
        /// </summary>
        [Fact]
        public void GetCampaignsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //int? pageSize = null;
            //var response = instance.GetCampaigns(page, pageSize);
            //Assert.IsType<GetCampaignsResponse>(response);
        }

        /// <summary>
        /// Test GetCampaignsByLogin
        /// </summary>
        [Fact]
        public void GetCampaignsByLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string login = null;
            //int? page = null;
            //int? pageSize = null;
            //var response = instance.GetCampaignsByLogin(login, page, pageSize);
            //Assert.IsType<GetCampaignsResponse>(response);
        }

        /// <summary>
        /// Test GetCategoriesMaxSaleQuantum
        /// </summary>
        [Fact]
        public void GetCategoriesMaxSaleQuantumTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetCategoriesMaxSaleQuantumRequest getCategoriesMaxSaleQuantumRequest = null;
            //var response = instance.GetCategoriesMaxSaleQuantum(getCategoriesMaxSaleQuantumRequest);
            //Assert.IsType<GetCategoriesMaxSaleQuantumResponse>(response);
        }

        /// <summary>
        /// Test GetCategoriesTree
        /// </summary>
        [Fact]
        public void GetCategoriesTreeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetCategoriesRequest? getCategoriesRequest = null;
            //var response = instance.GetCategoriesTree(getCategoriesRequest);
            //Assert.IsType<GetCategoriesResponse>(response);
        }

        /// <summary>
        /// Test GetCategoryContentParameters
        /// </summary>
        [Fact]
        public void GetCategoryContentParametersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long categoryId = null;
            //var response = instance.GetCategoryContentParameters(categoryId);
            //Assert.IsType<GetCategoryContentParametersResponse>(response);
        }

        /// <summary>
        /// Test GetChatHistory
        /// </summary>
        [Fact]
        public void GetChatHistoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //long chatId = null;
            //GetChatHistoryRequest getChatHistoryRequest = null;
            //string? pageToken = null;
            //int? limit = null;
            //var response = instance.GetChatHistory(businessId, chatId, getChatHistoryRequest, pageToken, limit);
            //Assert.IsType<GetChatHistoryResponse>(response);
        }

        /// <summary>
        /// Test GetChats
        /// </summary>
        [Fact]
        public void GetChatsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //GetChatsRequest getChatsRequest = null;
            //string? pageToken = null;
            //int? limit = null;
            //var response = instance.GetChats(businessId, getChatsRequest, pageToken, limit);
            //Assert.IsType<GetChatsResponse>(response);
        }

        /// <summary>
        /// Test GetDeliveryServices
        /// </summary>
        [Fact]
        public void GetDeliveryServicesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetDeliveryServices();
            //Assert.IsType<GetDeliveryServicesResponse>(response);
        }

        /// <summary>
        /// Test GetFeed
        /// </summary>
        [Fact]
        public void GetFeedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //long feedId = null;
            //var response = instance.GetFeed(campaignId, feedId);
            //Assert.IsType<GetFeedResponse>(response);
        }

        /// <summary>
        /// Test GetFeedIndexLogs
        /// </summary>
        [Fact]
        public void GetFeedIndexLogsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //long feedId = null;
            //int? limit = null;
            //DateTime? publishedTimeFrom = null;
            //DateTime? publishedTimeTo = null;
            //FeedIndexLogsStatusType? status = null;
            //var response = instance.GetFeedIndexLogs(campaignId, feedId, limit, publishedTimeFrom, publishedTimeTo, status);
            //Assert.IsType<GetFeedIndexLogsResponse>(response);
        }

        /// <summary>
        /// Test GetFeedbackAndCommentUpdates
        /// </summary>
        [Fact]
        public void GetFeedbackAndCommentUpdatesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //string? pageToken = null;
            //int? limit = null;
            //DateOnly? fromDate = null;
            //var response = instance.GetFeedbackAndCommentUpdates(campaignId, pageToken, limit, fromDate);
            //Assert.IsType<GetFeedbackListResponse>(response);
        }

        /// <summary>
        /// Test GetFeeds
        /// </summary>
        [Fact]
        public void GetFeedsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //var response = instance.GetFeeds(campaignId);
            //Assert.IsType<GetFeedsResponse>(response);
        }

        /// <summary>
        /// Test GetGoodsFeedbackComments
        /// </summary>
        [Fact]
        public void GetGoodsFeedbackCommentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //GetGoodsFeedbackCommentsRequest getGoodsFeedbackCommentsRequest = null;
            //string? pageToken = null;
            //int? limit = null;
            //var response = instance.GetGoodsFeedbackComments(businessId, getGoodsFeedbackCommentsRequest, pageToken, limit);
            //Assert.IsType<GetGoodsFeedbackCommentsResponse>(response);
        }

        /// <summary>
        /// Test GetGoodsFeedbacks
        /// </summary>
        [Fact]
        public void GetGoodsFeedbacksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //string? pageToken = null;
            //int? limit = null;
            //GetGoodsFeedbackRequest? getGoodsFeedbackRequest = null;
            //var response = instance.GetGoodsFeedbacks(businessId, pageToken, limit, getGoodsFeedbackRequest);
            //Assert.IsType<GetGoodsFeedbackResponse>(response);
        }

        /// <summary>
        /// Test GetGoodsStats
        /// </summary>
        [Fact]
        public void GetGoodsStatsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //GetGoodsStatsRequest getGoodsStatsRequest = null;
            //var response = instance.GetGoodsStats(campaignId, getGoodsStatsRequest);
            //Assert.IsType<GetGoodsStatsResponse>(response);
        }

        /// <summary>
        /// Test GetHiddenOffers
        /// </summary>
        [Fact]
        public void GetHiddenOffersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //List<string>? offerId = null;
            //string? pageToken = null;
            //int? limit = null;
            //int? offset = null;
            //int? page = null;
            //int? pageSize = null;
            //var response = instance.GetHiddenOffers(campaignId, offerId, pageToken, limit, offset, page, pageSize);
            //Assert.IsType<GetHiddenOffersResponse>(response);
        }

        /// <summary>
        /// Test GetOfferCardsContentStatus
        /// </summary>
        [Fact]
        public void GetOfferCardsContentStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //string? pageToken = null;
            //int? limit = null;
            //GetOfferCardsContentStatusRequest? getOfferCardsContentStatusRequest = null;
            //var response = instance.GetOfferCardsContentStatus(businessId, pageToken, limit, getOfferCardsContentStatusRequest);
            //Assert.IsType<GetOfferCardsContentStatusResponse>(response);
        }

        /// <summary>
        /// Test GetOfferMappingEntries
        /// </summary>
        [Fact]
        public void GetOfferMappingEntriesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //List<string>? offerId = null;
            //List<string>? shopSku = null;
            //OfferMappingKindType? mappingKind = null;
            //List<OfferProcessingStatusType>? status = null;
            //List<OfferAvailabilityStatusType>? availability = null;
            //List<int>? categoryId = null;
            //List<string>? vendor = null;
            //string? pageToken = null;
            //int? limit = null;
            //var response = instance.GetOfferMappingEntries(campaignId, offerId, shopSku, mappingKind, status, availability, categoryId, vendor, pageToken, limit);
            //Assert.IsType<GetOfferMappingEntriesResponse>(response);
        }

        /// <summary>
        /// Test GetOfferMappings
        /// </summary>
        [Fact]
        public void GetOfferMappingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //string? pageToken = null;
            //int? limit = null;
            //GetOfferMappingsRequest? getOfferMappingsRequest = null;
            //var response = instance.GetOfferMappings(businessId, pageToken, limit, getOfferMappingsRequest);
            //Assert.IsType<GetOfferMappingsResponse>(response);
        }

        /// <summary>
        /// Test GetOfferRecommendations
        /// </summary>
        [Fact]
        public void GetOfferRecommendationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //GetOfferRecommendationsRequest getOfferRecommendationsRequest = null;
            //string? pageToken = null;
            //int? limit = null;
            //var response = instance.GetOfferRecommendations(businessId, getOfferRecommendationsRequest, pageToken, limit);
            //Assert.IsType<GetOfferRecommendationsResponse>(response);
        }

        /// <summary>
        /// Test GetOffers
        /// </summary>
        [Fact]
        public void GetOffersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //string? query = null;
            //long? feedId = null;
            //string? shopCategoryId = null;
            //CurrencyType? currency = null;
            //bool? matched = null;
            //int? page = null;
            //int? pageSize = null;
            //var response = instance.GetOffers(campaignId, query, feedId, shopCategoryId, currency, matched, page, pageSize);
            //Assert.IsType<GetOffersResponse>(response);
        }

        /// <summary>
        /// Test GetOrder
        /// </summary>
        [Fact]
        public void GetOrderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //long orderId = null;
            //var response = instance.GetOrder(campaignId, orderId);
            //Assert.IsType<GetOrderResponse>(response);
        }

        /// <summary>
        /// Test GetOrderBusinessBuyerInfo
        /// </summary>
        [Fact]
        public void GetOrderBusinessBuyerInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //long orderId = null;
            //var response = instance.GetOrderBusinessBuyerInfo(campaignId, orderId);
            //Assert.IsType<GetBusinessBuyerInfoResponse>(response);
        }

        /// <summary>
        /// Test GetOrderBusinessDocumentsInfo
        /// </summary>
        [Fact]
        public void GetOrderBusinessDocumentsInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //long orderId = null;
            //var response = instance.GetOrderBusinessDocumentsInfo(campaignId, orderId);
            //Assert.IsType<GetBusinessDocumentsInfoResponse>(response);
        }

        /// <summary>
        /// Test GetOrderLabelsData
        /// </summary>
        [Fact]
        public void GetOrderLabelsDataTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //long orderId = null;
            //var response = instance.GetOrderLabelsData(campaignId, orderId);
            //Assert.IsType<GetOrderLabelsDataResponse>(response);
        }

        /// <summary>
        /// Test GetOrders
        /// </summary>
        [Fact]
        public void GetOrdersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //List<long>? orderIds = null;
            //List<OrderStatusType>? status = null;
            //List<OrderSubstatusType>? substatus = null;
            //DateOnly? fromDate = null;
            //DateOnly? toDate = null;
            //DateOnly? supplierShipmentDateFrom = null;
            //DateOnly? supplierShipmentDateTo = null;
            //DateTime? updatedAtFrom = null;
            //DateTime? updatedAtTo = null;
            //OrderDeliveryDispatchType? dispatchType = null;
            //bool? fake = null;
            //bool? hasCis = null;
            //bool? onlyWaitingForCancellationApprove = null;
            //bool? onlyEstimatedDelivery = null;
            //OrderBuyerType? buyerType = null;
            //int? page = null;
            //int? pageSize = null;
            //string? pageToken = null;
            //int? limit = null;
            //var response = instance.GetOrders(campaignId, orderIds, status, substatus, fromDate, toDate, supplierShipmentDateFrom, supplierShipmentDateTo, updatedAtFrom, updatedAtTo, dispatchType, fake, hasCis, onlyWaitingForCancellationApprove, onlyEstimatedDelivery, buyerType, page, pageSize, pageToken, limit);
            //Assert.IsType<GetOrdersResponse>(response);
        }

        /// <summary>
        /// Test GetOrdersStats
        /// </summary>
        [Fact]
        public void GetOrdersStatsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //string? pageToken = null;
            //int? limit = null;
            //GetOrdersStatsRequest? getOrdersStatsRequest = null;
            //var response = instance.GetOrdersStats(campaignId, pageToken, limit, getOrdersStatsRequest);
            //Assert.IsType<GetOrdersStatsResponse>(response);
        }

        /// <summary>
        /// Test GetPrices
        /// </summary>
        [Fact]
        public void GetPricesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //string? pageToken = null;
            //int? limit = null;
            //bool? archived = null;
            //var response = instance.GetPrices(campaignId, pageToken, limit, archived);
            //Assert.IsType<GetPricesResponse>(response);
        }

        /// <summary>
        /// Test GetPricesByOfferIds
        /// </summary>
        [Fact]
        public void GetPricesByOfferIdsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //string? pageToken = null;
            //int? limit = null;
            //GetPricesByOfferIdsRequest? getPricesByOfferIdsRequest = null;
            //var response = instance.GetPricesByOfferIds(campaignId, pageToken, limit, getPricesByOfferIdsRequest);
            //Assert.IsType<GetPricesByOfferIdsResponse>(response);
        }

        /// <summary>
        /// Test GetPromoOffers
        /// </summary>
        [Fact]
        public void GetPromoOffersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //GetPromoOffersRequest getPromoOffersRequest = null;
            //string? pageToken = null;
            //int? limit = null;
            //var response = instance.GetPromoOffers(businessId, getPromoOffersRequest, pageToken, limit);
            //Assert.IsType<GetPromoOffersResponse>(response);
        }

        /// <summary>
        /// Test GetPromos
        /// </summary>
        [Fact]
        public void GetPromosTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //GetPromosRequest? getPromosRequest = null;
            //var response = instance.GetPromos(businessId, getPromosRequest);
            //Assert.IsType<GetPromosResponse>(response);
        }

        /// <summary>
        /// Test GetQualityRatingDetails
        /// </summary>
        [Fact]
        public void GetQualityRatingDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //var response = instance.GetQualityRatingDetails(campaignId);
            //Assert.IsType<GetQualityRatingDetailsResponse>(response);
        }

        /// <summary>
        /// Test GetQualityRatings
        /// </summary>
        [Fact]
        public void GetQualityRatingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //GetQualityRatingRequest getQualityRatingRequest = null;
            //var response = instance.GetQualityRatings(businessId, getQualityRatingRequest);
            //Assert.IsType<GetQualityRatingResponse>(response);
        }

        /// <summary>
        /// Test GetReportInfo
        /// </summary>
        [Fact]
        public void GetReportInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string reportId = null;
            //var response = instance.GetReportInfo(reportId);
            //Assert.IsType<GetReportInfoResponse>(response);
        }

        /// <summary>
        /// Test GetReturn
        /// </summary>
        [Fact]
        public void GetReturnTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //long orderId = null;
            //long returnId = null;
            //var response = instance.GetReturn(campaignId, orderId, returnId);
            //Assert.IsType<GetReturnResponse>(response);
        }

        /// <summary>
        /// Test GetReturnApplication
        /// </summary>
        [Fact]
        public void GetReturnApplicationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //long orderId = null;
            //long returnId = null;
            //var response = instance.GetReturnApplication(campaignId, orderId, returnId);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test GetReturnPhoto
        /// </summary>
        [Fact]
        public void GetReturnPhotoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //long orderId = null;
            //long returnId = null;
            //long itemId = null;
            //string imageHash = null;
            //var response = instance.GetReturnPhoto(campaignId, orderId, returnId, itemId, imageHash);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test GetReturns
        /// </summary>
        [Fact]
        public void GetReturnsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //string? pageToken = null;
            //int? limit = null;
            //List<long>? orderIds = null;
            //List<RefundStatusType>? statuses = null;
            //ReturnType? type = null;
            //DateOnly? fromDate = null;
            //DateOnly? toDate = null;
            //DateOnly? fromDate2 = null;
            //DateOnly? toDate2 = null;
            //var response = instance.GetReturns(campaignId, pageToken, limit, orderIds, statuses, type, fromDate, toDate, fromDate2, toDate2);
            //Assert.IsType<GetReturnsResponse>(response);
        }

        /// <summary>
        /// Test GetStocks
        /// </summary>
        [Fact]
        public void GetStocksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //string? pageToken = null;
            //int? limit = null;
            //GetWarehouseStocksRequest? getWarehouseStocksRequest = null;
            //var response = instance.GetStocks(campaignId, pageToken, limit, getWarehouseStocksRequest);
            //Assert.IsType<GetWarehouseStocksResponse>(response);
        }

        /// <summary>
        /// Test GetSuggestedOfferMappingEntries
        /// </summary>
        [Fact]
        public void GetSuggestedOfferMappingEntriesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //GetSuggestedOfferMappingEntriesRequest getSuggestedOfferMappingEntriesRequest = null;
            //var response = instance.GetSuggestedOfferMappingEntries(campaignId, getSuggestedOfferMappingEntriesRequest);
            //Assert.IsType<GetSuggestedOfferMappingEntriesResponse>(response);
        }

        /// <summary>
        /// Test GetSuggestedOfferMappings
        /// </summary>
        [Fact]
        public void GetSuggestedOfferMappingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //GetSuggestedOfferMappingsRequest? getSuggestedOfferMappingsRequest = null;
            //var response = instance.GetSuggestedOfferMappings(businessId, getSuggestedOfferMappingsRequest);
            //Assert.IsType<GetSuggestedOfferMappingsResponse>(response);
        }

        /// <summary>
        /// Test GetSuggestedPrices
        /// </summary>
        [Fact]
        public void GetSuggestedPricesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //SuggestPricesRequest suggestPricesRequest = null;
            //var response = instance.GetSuggestedPrices(campaignId, suggestPricesRequest);
            //Assert.IsType<SuggestPricesResponse>(response);
        }

        /// <summary>
        /// Test GetWarehouses
        /// </summary>
        [Fact]
        public void GetWarehousesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //var response = instance.GetWarehouses(businessId);
            //Assert.IsType<GetWarehousesResponse>(response);
        }

        /// <summary>
        /// Test ProvideOrderItemIdentifiers
        /// </summary>
        [Fact]
        public void ProvideOrderItemIdentifiersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //long orderId = null;
            //ProvideOrderItemIdentifiersRequest provideOrderItemIdentifiersRequest = null;
            //var response = instance.ProvideOrderItemIdentifiers(campaignId, orderId, provideOrderItemIdentifiersRequest);
            //Assert.IsType<ProvideOrderItemIdentifiersResponse>(response);
        }

        /// <summary>
        /// Test PutBidsForBusiness
        /// </summary>
        [Fact]
        public void PutBidsForBusinessTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //PutSkuBidsRequest putSkuBidsRequest = null;
            //var response = instance.PutBidsForBusiness(businessId, putSkuBidsRequest);
            //Assert.IsType<EmptyApiResponse>(response);
        }

        /// <summary>
        /// Test PutBidsForCampaign
        /// </summary>
        [Fact]
        public void PutBidsForCampaignTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //PutSkuBidsRequest putSkuBidsRequest = null;
            //var response = instance.PutBidsForCampaign(campaignId, putSkuBidsRequest);
            //Assert.IsType<EmptyApiResponse>(response);
        }

        /// <summary>
        /// Test RefreshFeed
        /// </summary>
        [Fact]
        public void RefreshFeedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //long feedId = null;
            //var response = instance.RefreshFeed(campaignId, feedId);
            //Assert.IsType<EmptyApiResponse>(response);
        }

        /// <summary>
        /// Test SearchRegionChildren
        /// </summary>
        [Fact]
        public void SearchRegionChildrenTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long regionId = null;
            //int? page = null;
            //int? pageSize = null;
            //var response = instance.SearchRegionChildren(regionId, page, pageSize);
            //Assert.IsType<GetRegionWithChildrenResponse>(response);
        }

        /// <summary>
        /// Test SearchRegionsById
        /// </summary>
        [Fact]
        public void SearchRegionsByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long regionId = null;
            //var response = instance.SearchRegionsById(regionId);
            //Assert.IsType<GetRegionsResponse>(response);
        }

        /// <summary>
        /// Test SearchRegionsByName
        /// </summary>
        [Fact]
        public void SearchRegionsByNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string? pageToken = null;
            //int? limit = null;
            //var response = instance.SearchRegionsByName(name, pageToken, limit);
            //Assert.IsType<GetRegionsResponse>(response);
        }

        /// <summary>
        /// Test SendFileToChat
        /// </summary>
        [Fact]
        public void SendFileToChatTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //long chatId = null;
            //System.IO.Stream file = null;
            //var response = instance.SendFileToChat(businessId, chatId, file);
            //Assert.IsType<EmptyApiResponse>(response);
        }

        /// <summary>
        /// Test SendMessageToChat
        /// </summary>
        [Fact]
        public void SendMessageToChatTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //long chatId = null;
            //SendMessageToChatRequest sendMessageToChatRequest = null;
            //var response = instance.SendMessageToChat(businessId, chatId, sendMessageToChatRequest);
            //Assert.IsType<EmptyApiResponse>(response);
        }

        /// <summary>
        /// Test SetFeedParams
        /// </summary>
        [Fact]
        public void SetFeedParamsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //long feedId = null;
            //SetFeedParamsRequest setFeedParamsRequest = null;
            //var response = instance.SetFeedParams(campaignId, feedId, setFeedParamsRequest);
            //Assert.IsType<EmptyApiResponse>(response);
        }

        /// <summary>
        /// Test SetOrderBoxLayout
        /// </summary>
        [Fact]
        public void SetOrderBoxLayoutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //long orderId = null;
            //SetOrderBoxLayoutRequest setOrderBoxLayoutRequest = null;
            //var response = instance.SetOrderBoxLayout(campaignId, orderId, setOrderBoxLayoutRequest);
            //Assert.IsType<SetOrderBoxLayoutResponse>(response);
        }

        /// <summary>
        /// Test SetOrderShipmentBoxes
        /// </summary>
        [Fact]
        public void SetOrderShipmentBoxesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //long orderId = null;
            //long shipmentId = null;
            //SetOrderShipmentBoxesRequest setOrderShipmentBoxesRequest = null;
            //var response = instance.SetOrderShipmentBoxes(campaignId, orderId, shipmentId, setOrderShipmentBoxesRequest);
            //Assert.IsType<SetOrderShipmentBoxesResponse>(response);
        }

        /// <summary>
        /// Test SkipGoodsFeedbacksReaction
        /// </summary>
        [Fact]
        public void SkipGoodsFeedbacksReactionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //SkipGoodsFeedbackReactionRequest skipGoodsFeedbackReactionRequest = null;
            //var response = instance.SkipGoodsFeedbacksReaction(businessId, skipGoodsFeedbackReactionRequest);
            //Assert.IsType<EmptyApiResponse>(response);
        }

        /// <summary>
        /// Test UpdateBusinessPrices
        /// </summary>
        [Fact]
        public void UpdateBusinessPricesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //UpdateBusinessPricesRequest updateBusinessPricesRequest = null;
            //var response = instance.UpdateBusinessPrices(businessId, updateBusinessPricesRequest);
            //Assert.IsType<EmptyApiResponse>(response);
        }

        /// <summary>
        /// Test UpdateCampaignOffers
        /// </summary>
        [Fact]
        public void UpdateCampaignOffersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //UpdateCampaignOffersRequest updateCampaignOffersRequest = null;
            //var response = instance.UpdateCampaignOffers(campaignId, updateCampaignOffersRequest);
            //Assert.IsType<EmptyApiResponse>(response);
        }

        /// <summary>
        /// Test UpdateGoodsFeedbackComment
        /// </summary>
        [Fact]
        public void UpdateGoodsFeedbackCommentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //UpdateGoodsFeedbackCommentRequest updateGoodsFeedbackCommentRequest = null;
            //var response = instance.UpdateGoodsFeedbackComment(businessId, updateGoodsFeedbackCommentRequest);
            //Assert.IsType<UpdateGoodsFeedbackCommentResponse>(response);
        }

        /// <summary>
        /// Test UpdateOfferContent
        /// </summary>
        [Fact]
        public void UpdateOfferContentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //UpdateOfferContentRequest updateOfferContentRequest = null;
            //var response = instance.UpdateOfferContent(businessId, updateOfferContentRequest);
            //Assert.IsType<UpdateOfferContentResponse>(response);
        }

        /// <summary>
        /// Test UpdateOfferMappingEntries
        /// </summary>
        [Fact]
        public void UpdateOfferMappingEntriesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //UpdateOfferMappingEntryRequest updateOfferMappingEntryRequest = null;
            //var response = instance.UpdateOfferMappingEntries(campaignId, updateOfferMappingEntryRequest);
            //Assert.IsType<EmptyApiResponse>(response);
        }

        /// <summary>
        /// Test UpdateOfferMappings
        /// </summary>
        [Fact]
        public void UpdateOfferMappingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //UpdateOfferMappingsRequest updateOfferMappingsRequest = null;
            //var response = instance.UpdateOfferMappings(businessId, updateOfferMappingsRequest);
            //Assert.IsType<UpdateOfferMappingsResponse>(response);
        }

        /// <summary>
        /// Test UpdateOrderItems
        /// </summary>
        [Fact]
        public void UpdateOrderItemsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //long orderId = null;
            //UpdateOrderItemRequest updateOrderItemRequest = null;
            //instance.UpdateOrderItems(campaignId, orderId, updateOrderItemRequest);
        }

        /// <summary>
        /// Test UpdateOrderStatus
        /// </summary>
        [Fact]
        public void UpdateOrderStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //long orderId = null;
            //UpdateOrderStatusRequest updateOrderStatusRequest = null;
            //var response = instance.UpdateOrderStatus(campaignId, orderId, updateOrderStatusRequest);
            //Assert.IsType<UpdateOrderStatusResponse>(response);
        }

        /// <summary>
        /// Test UpdateOrderStatuses
        /// </summary>
        [Fact]
        public void UpdateOrderStatusesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //UpdateOrderStatusesRequest updateOrderStatusesRequest = null;
            //var response = instance.UpdateOrderStatuses(campaignId, updateOrderStatusesRequest);
            //Assert.IsType<UpdateOrderStatusesResponse>(response);
        }

        /// <summary>
        /// Test UpdatePrices
        /// </summary>
        [Fact]
        public void UpdatePricesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //UpdatePricesRequest updatePricesRequest = null;
            //var response = instance.UpdatePrices(campaignId, updatePricesRequest);
            //Assert.IsType<EmptyApiResponse>(response);
        }

        /// <summary>
        /// Test UpdatePromoOffers
        /// </summary>
        [Fact]
        public void UpdatePromoOffersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //UpdatePromoOffersRequest updatePromoOffersRequest = null;
            //var response = instance.UpdatePromoOffers(businessId, updatePromoOffersRequest);
            //Assert.IsType<UpdatePromoOffersResponse>(response);
        }

        /// <summary>
        /// Test UpdateStocks
        /// </summary>
        [Fact]
        public void UpdateStocksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //UpdateStocksRequest updateStocksRequest = null;
            //var response = instance.UpdateStocks(campaignId, updateStocksRequest);
            //Assert.IsType<EmptyApiResponse>(response);
        }

        /// <summary>
        /// Test VerifyOrderEac
        /// </summary>
        [Fact]
        public void VerifyOrderEacTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //long orderId = null;
            //VerifyOrderEacRequest verifyOrderEacRequest = null;
            //var response = instance.VerifyOrderEac(campaignId, orderId, verifyOrderEacRequest);
            //Assert.IsType<VerifyOrderEacResponse>(response);
        }
    }
}
