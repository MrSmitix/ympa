/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using ympa_csharp_client.Client;
using ympa_csharp_client.Api;
// uncomment below to import models
//using ympa_csharp_client.Model;

namespace ympa_csharp_client.Test.Api
{
    /// <summary>
    ///  Class for testing OffersApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class OffersApiTests : IDisposable
    {
        private OffersApi instance;

        public OffersApiTests()
        {
            instance = new OffersApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of OffersApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' OffersApi
            //Assert.IsType<OffersApi>(instance);
        }

        /// <summary>
        /// Test DeleteCampaignOffers
        /// </summary>
        [Fact]
        public void DeleteCampaignOffersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //DeleteCampaignOffersRequest deleteCampaignOffersRequest = null;
            //var response = instance.DeleteCampaignOffers(campaignId, deleteCampaignOffersRequest);
            //Assert.IsType<DeleteCampaignOffersResponse>(response);
        }

        /// <summary>
        /// Test GetAllOffers
        /// </summary>
        [Fact]
        public void GetAllOffersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //long? feedId = null;
            //int? chunk = null;
            //var response = instance.GetAllOffers(campaignId, feedId, chunk);
            //Assert.IsType<GetAllOffersResponse>(response);
        }

        /// <summary>
        /// Test GetCampaignOffers
        /// </summary>
        [Fact]
        public void GetCampaignOffersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //GetCampaignOffersRequest getCampaignOffersRequest = null;
            //string? pageToken = null;
            //int? limit = null;
            //var response = instance.GetCampaignOffers(campaignId, getCampaignOffersRequest, pageToken, limit);
            //Assert.IsType<GetCampaignOffersResponse>(response);
        }

        /// <summary>
        /// Test GetOfferRecommendations
        /// </summary>
        [Fact]
        public void GetOfferRecommendationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //GetOfferRecommendationsRequest getOfferRecommendationsRequest = null;
            //string? pageToken = null;
            //int? limit = null;
            //var response = instance.GetOfferRecommendations(businessId, getOfferRecommendationsRequest, pageToken, limit);
            //Assert.IsType<GetOfferRecommendationsResponse>(response);
        }

        /// <summary>
        /// Test GetOffers
        /// </summary>
        [Fact]
        public void GetOffersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //string? query = null;
            //long? feedId = null;
            //string? shopCategoryId = null;
            //CurrencyType? currency = null;
            //bool? matched = null;
            //int? page = null;
            //int? pageSize = null;
            //var response = instance.GetOffers(campaignId, query, feedId, shopCategoryId, currency, matched, page, pageSize);
            //Assert.IsType<GetOffersResponse>(response);
        }

        /// <summary>
        /// Test UpdateCampaignOffers
        /// </summary>
        [Fact]
        public void UpdateCampaignOffersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //UpdateCampaignOffersRequest updateCampaignOffersRequest = null;
            //var response = instance.UpdateCampaignOffers(campaignId, updateCampaignOffersRequest);
            //Assert.IsType<EmptyApiResponse>(response);
        }
    }
}
