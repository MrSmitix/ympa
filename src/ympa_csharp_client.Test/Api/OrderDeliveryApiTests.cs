/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using ympa_csharp_client.Client;
using ympa_csharp_client.Api;
// uncomment below to import models
//using ympa_csharp_client.Model;

namespace ympa_csharp_client.Test.Api
{
    /// <summary>
    ///  Class for testing OrderDeliveryApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class OrderDeliveryApiTests : IDisposable
    {
        private OrderDeliveryApi instance;

        public OrderDeliveryApiTests()
        {
            instance = new OrderDeliveryApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of OrderDeliveryApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' OrderDeliveryApi
            //Assert.IsType<OrderDeliveryApi>(instance);
        }

        /// <summary>
        /// Test GetOrderBuyerInfo
        /// </summary>
        [Fact]
        public void GetOrderBuyerInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //long orderId = null;
            //var response = instance.GetOrderBuyerInfo(campaignId, orderId);
            //Assert.IsType<GetOrderBuyerInfoResponse>(response);
        }

        /// <summary>
        /// Test SetOrderDeliveryDate
        /// </summary>
        [Fact]
        public void SetOrderDeliveryDateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //long orderId = null;
            //SetOrderDeliveryDateRequest setOrderDeliveryDateRequest = null;
            //var response = instance.SetOrderDeliveryDate(campaignId, orderId, setOrderDeliveryDateRequest);
            //Assert.IsType<EmptyApiResponse>(response);
        }

        /// <summary>
        /// Test SetOrderDeliveryTrackCode
        /// </summary>
        [Fact]
        public void SetOrderDeliveryTrackCodeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //long orderId = null;
            //SetOrderDeliveryTrackCodeRequest setOrderDeliveryTrackCodeRequest = null;
            //var response = instance.SetOrderDeliveryTrackCode(campaignId, orderId, setOrderDeliveryTrackCodeRequest);
            //Assert.IsType<EmptyApiResponse>(response);
        }

        /// <summary>
        /// Test UpdateOrderStorageLimit
        /// </summary>
        [Fact]
        public void UpdateOrderStorageLimitTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //long orderId = null;
            //UpdateOrderStorageLimitRequest updateOrderStorageLimitRequest = null;
            //var response = instance.UpdateOrderStorageLimit(campaignId, orderId, updateOrderStorageLimitRequest);
            //Assert.IsType<EmptyApiResponse>(response);
        }

        /// <summary>
        /// Test VerifyOrderEac
        /// </summary>
        [Fact]
        public void VerifyOrderEacTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //long orderId = null;
            //VerifyOrderEacRequest verifyOrderEacRequest = null;
            //var response = instance.VerifyOrderEac(campaignId, orderId, verifyOrderEacRequest);
            //Assert.IsType<VerifyOrderEacResponse>(response);
        }
    }
}
