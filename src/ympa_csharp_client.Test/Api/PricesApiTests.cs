/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using ympa_csharp_client.Client;
using ympa_csharp_client.Api;
// uncomment below to import models
//using ympa_csharp_client.Model;

namespace ympa_csharp_client.Test.Api
{
    /// <summary>
    ///  Class for testing PricesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PricesApiTests : IDisposable
    {
        private PricesApi instance;

        public PricesApiTests()
        {
            instance = new PricesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PricesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' PricesApi
            //Assert.IsType<PricesApi>(instance);
        }

        /// <summary>
        /// Test GetPrices
        /// </summary>
        [Fact]
        public void GetPricesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //string? pageToken = null;
            //int? limit = null;
            //bool? archived = null;
            //var response = instance.GetPrices(campaignId, pageToken, limit, archived);
            //Assert.IsType<GetPricesResponse>(response);
        }

        /// <summary>
        /// Test GetPricesByOfferIds
        /// </summary>
        [Fact]
        public void GetPricesByOfferIdsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //string? pageToken = null;
            //int? limit = null;
            //GetPricesByOfferIdsRequest? getPricesByOfferIdsRequest = null;
            //var response = instance.GetPricesByOfferIds(campaignId, pageToken, limit, getPricesByOfferIdsRequest);
            //Assert.IsType<GetPricesByOfferIdsResponse>(response);
        }

        /// <summary>
        /// Test GetSuggestedPrices
        /// </summary>
        [Fact]
        public void GetSuggestedPricesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //SuggestPricesRequest suggestPricesRequest = null;
            //var response = instance.GetSuggestedPrices(campaignId, suggestPricesRequest);
            //Assert.IsType<SuggestPricesResponse>(response);
        }

        /// <summary>
        /// Test UpdateBusinessPrices
        /// </summary>
        [Fact]
        public void UpdateBusinessPricesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //UpdateBusinessPricesRequest updateBusinessPricesRequest = null;
            //var response = instance.UpdateBusinessPrices(businessId, updateBusinessPricesRequest);
            //Assert.IsType<EmptyApiResponse>(response);
        }

        /// <summary>
        /// Test UpdatePrices
        /// </summary>
        [Fact]
        public void UpdatePricesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //UpdatePricesRequest updatePricesRequest = null;
            //var response = instance.UpdatePrices(campaignId, updatePricesRequest);
            //Assert.IsType<EmptyApiResponse>(response);
        }
    }
}
