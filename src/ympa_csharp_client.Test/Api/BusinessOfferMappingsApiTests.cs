/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using ympa_csharp_client.Client;
using ympa_csharp_client.Api;
// uncomment below to import models
//using ympa_csharp_client.Model;

namespace ympa_csharp_client.Test.Api
{
    /// <summary>
    ///  Class for testing BusinessOfferMappingsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class BusinessOfferMappingsApiTests : IDisposable
    {
        private BusinessOfferMappingsApi instance;

        public BusinessOfferMappingsApiTests()
        {
            instance = new BusinessOfferMappingsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of BusinessOfferMappingsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' BusinessOfferMappingsApi
            //Assert.IsType<BusinessOfferMappingsApi>(instance);
        }

        /// <summary>
        /// Test AddOffersToArchive
        /// </summary>
        [Fact]
        public void AddOffersToArchiveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //AddOffersToArchiveRequest addOffersToArchiveRequest = null;
            //var response = instance.AddOffersToArchive(businessId, addOffersToArchiveRequest);
            //Assert.IsType<AddOffersToArchiveResponse>(response);
        }

        /// <summary>
        /// Test DeleteOffers
        /// </summary>
        [Fact]
        public void DeleteOffersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //DeleteOffersRequest deleteOffersRequest = null;
            //var response = instance.DeleteOffers(businessId, deleteOffersRequest);
            //Assert.IsType<DeleteOffersResponse>(response);
        }

        /// <summary>
        /// Test DeleteOffersFromArchive
        /// </summary>
        [Fact]
        public void DeleteOffersFromArchiveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //DeleteOffersFromArchiveRequest deleteOffersFromArchiveRequest = null;
            //var response = instance.DeleteOffersFromArchive(businessId, deleteOffersFromArchiveRequest);
            //Assert.IsType<DeleteOffersFromArchiveResponse>(response);
        }

        /// <summary>
        /// Test GetOfferMappings
        /// </summary>
        [Fact]
        public void GetOfferMappingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //string? pageToken = null;
            //int? limit = null;
            //GetOfferMappingsRequest? getOfferMappingsRequest = null;
            //var response = instance.GetOfferMappings(businessId, pageToken, limit, getOfferMappingsRequest);
            //Assert.IsType<GetOfferMappingsResponse>(response);
        }

        /// <summary>
        /// Test GetSuggestedOfferMappings
        /// </summary>
        [Fact]
        public void GetSuggestedOfferMappingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //GetSuggestedOfferMappingsRequest? getSuggestedOfferMappingsRequest = null;
            //var response = instance.GetSuggestedOfferMappings(businessId, getSuggestedOfferMappingsRequest);
            //Assert.IsType<GetSuggestedOfferMappingsResponse>(response);
        }

        /// <summary>
        /// Test UpdateOfferMappings
        /// </summary>
        [Fact]
        public void UpdateOfferMappingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //UpdateOfferMappingsRequest updateOfferMappingsRequest = null;
            //var response = instance.UpdateOfferMappings(businessId, updateOfferMappingsRequest);
            //Assert.IsType<UpdateOfferMappingsResponse>(response);
        }
    }
}
