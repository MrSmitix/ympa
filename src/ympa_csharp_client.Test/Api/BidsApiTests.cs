/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using ympa_csharp_client.Client;
using ympa_csharp_client.Api;
// uncomment below to import models
//using ympa_csharp_client.Model;

namespace ympa_csharp_client.Test.Api
{
    /// <summary>
    ///  Class for testing BidsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class BidsApiTests : IDisposable
    {
        private BidsApi instance;

        public BidsApiTests()
        {
            instance = new BidsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of BidsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' BidsApi
            //Assert.IsType<BidsApi>(instance);
        }

        /// <summary>
        /// Test GetBidsInfoForBusiness
        /// </summary>
        [Fact]
        public void GetBidsInfoForBusinessTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //string? pageToken = null;
            //int? limit = null;
            //GetBidsInfoRequest? getBidsInfoRequest = null;
            //var response = instance.GetBidsInfoForBusiness(businessId, pageToken, limit, getBidsInfoRequest);
            //Assert.IsType<GetBidsInfoResponse>(response);
        }

        /// <summary>
        /// Test GetBidsRecommendations
        /// </summary>
        [Fact]
        public void GetBidsRecommendationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //GetBidsRecommendationsRequest getBidsRecommendationsRequest = null;
            //var response = instance.GetBidsRecommendations(businessId, getBidsRecommendationsRequest);
            //Assert.IsType<GetBidsRecommendationsResponse>(response);
        }

        /// <summary>
        /// Test PutBidsForBusiness
        /// </summary>
        [Fact]
        public void PutBidsForBusinessTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long businessId = null;
            //PutSkuBidsRequest putSkuBidsRequest = null;
            //var response = instance.PutBidsForBusiness(businessId, putSkuBidsRequest);
            //Assert.IsType<EmptyApiResponse>(response);
        }

        /// <summary>
        /// Test PutBidsForCampaign
        /// </summary>
        [Fact]
        public void PutBidsForCampaignTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long campaignId = null;
            //PutSkuBidsRequest putSkuBidsRequest = null;
            //var response = instance.PutBidsForCampaign(campaignId, putSkuBidsRequest);
            //Assert.IsType<EmptyApiResponse>(response);
        }
    }
}
