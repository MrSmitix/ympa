/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using ympa_csharp_functions_server.Converters;

namespace ympa_csharp_functions_server.Models
{ 
        /// <summary>
        /// Детали причин возврата:   * `DO_NOT_FIT`:     * `USER_DID_NOT_LIKE` — товар не понравился.     * `USER_CHANGED_MIND` — передумал покупать.     * `DELIVERED_TOO_LONG` — длительный срок доставки, поэтому передумал.    * `BAD_QUALITY`:     * `BAD_PACKAGE` — упаковка товара была нарушена.     * `DAMAGED` — царапины, сколы.     * `NOT_WORKING` — не включается / не работает.     * `INCOMPLETENESS` — некомплект (не хватает детали в наборе, к товару).    * `WRONG_ITEM`:     * `WRONG_ITEM` — не тот товар.     * `WRONG_COLOR` — не соответствует по цвету.     * `DID_NOT_MATCH_DESCRIPTION` — не соответствует заявленным характеристикам/описанию. 
        /// </summary>
        /// <value>Детали причин возврата:   * `DO_NOT_FIT`:     * `USER_DID_NOT_LIKE` — товар не понравился.     * `USER_CHANGED_MIND` — передумал покупать.     * `DELIVERED_TOO_LONG` — длительный срок доставки, поэтому передумал.    * `BAD_QUALITY`:     * `BAD_PACKAGE` — упаковка товара была нарушена.     * `DAMAGED` — царапины, сколы.     * `NOT_WORKING` — не включается / не работает.     * `INCOMPLETENESS` — некомплект (не хватает детали в наборе, к товару).    * `WRONG_ITEM`:     * `WRONG_ITEM` — не тот товар.     * `WRONG_COLOR` — не соответствует по цвету.     * `DID_NOT_MATCH_DESCRIPTION` — не соответствует заявленным характеристикам/описанию. </value>
        [TypeConverter(typeof(CustomEnumConverter<ReturnDecisionSubreasonType>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum ReturnDecisionSubreasonType
        {
            
            /// <summary>
            /// Enum USERDIDNOTLIKEEnum for USER_DID_NOT_LIKE
            /// </summary>
            [EnumMember(Value = "USER_DID_NOT_LIKE")]
            USERDIDNOTLIKEEnum = 1,
            
            /// <summary>
            /// Enum USERCHANGEDMINDEnum for USER_CHANGED_MIND
            /// </summary>
            [EnumMember(Value = "USER_CHANGED_MIND")]
            USERCHANGEDMINDEnum = 2,
            
            /// <summary>
            /// Enum DELIVEREDTOOLONGEnum for DELIVERED_TOO_LONG
            /// </summary>
            [EnumMember(Value = "DELIVERED_TOO_LONG")]
            DELIVEREDTOOLONGEnum = 3,
            
            /// <summary>
            /// Enum BADPACKAGEEnum for BAD_PACKAGE
            /// </summary>
            [EnumMember(Value = "BAD_PACKAGE")]
            BADPACKAGEEnum = 4,
            
            /// <summary>
            /// Enum DAMAGEDEnum for DAMAGED
            /// </summary>
            [EnumMember(Value = "DAMAGED")]
            DAMAGEDEnum = 5,
            
            /// <summary>
            /// Enum NOTWORKINGEnum for NOT_WORKING
            /// </summary>
            [EnumMember(Value = "NOT_WORKING")]
            NOTWORKINGEnum = 6,
            
            /// <summary>
            /// Enum INCOMPLETENESSEnum for INCOMPLETENESS
            /// </summary>
            [EnumMember(Value = "INCOMPLETENESS")]
            INCOMPLETENESSEnum = 7,
            
            /// <summary>
            /// Enum WRONGITEMEnum for WRONG_ITEM
            /// </summary>
            [EnumMember(Value = "WRONG_ITEM")]
            WRONGITEMEnum = 8,
            
            /// <summary>
            /// Enum WRONGCOLOREnum for WRONG_COLOR
            /// </summary>
            [EnumMember(Value = "WRONG_COLOR")]
            WRONGCOLOREnum = 9,
            
            /// <summary>
            /// Enum DIDNOTMATCHDESCRIPTIONEnum for DID_NOT_MATCH_DESCRIPTION
            /// </summary>
            [EnumMember(Value = "DID_NOT_MATCH_DESCRIPTION")]
            DIDNOTMATCHDESCRIPTIONEnum = 10,
            
            /// <summary>
            /// Enum UNKNOWNEnum for UNKNOWN
            /// </summary>
            [EnumMember(Value = "UNKNOWN")]
            UNKNOWNEnum = 11
        }
}
