#
# Партнерский API Маркета
# API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
# Version: LATEST
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Информация о чатах.

.PARAMETER ChatId
Идентификатор чата.
.PARAMETER OrderId
Идентификатор заказа.
.PARAMETER Type
No description available.
.PARAMETER Status
No description available.
.PARAMETER CreatedAt
Дата и время создания чата.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:00:00+03:00`. 
.PARAMETER UpdatedAt
Дата и время последнего сообщения в чате.
.OUTPUTS

GetChatInfoDTO<PSCustomObject>
#>

function Initialize-GetChatInfoDTO {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [Int64]
        ${ChatId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [Int64]
        ${OrderId},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("CHAT", "ARBITRAGE")]
        [PSCustomObject]
        ${Type},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("NEW", "WAITING_FOR_CUSTOMER", "WAITING_FOR_PARTNER", "WAITING_FOR_ARBITER", "WAITING_FOR_MARKET", "FINISHED")]
        [PSCustomObject]
        ${Status},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.DateTime]
        ${CreatedAt},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [System.DateTime]
        ${UpdatedAt}
    )

    Process {
        'Creating PSCustomObject: ympa_powershell_client => GetChatInfoDTO' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $ChatId) {
            throw "invalid value for 'ChatId', 'ChatId' cannot be null."
        }

        if ($null -eq $OrderId) {
            throw "invalid value for 'OrderId', 'OrderId' cannot be null."
        }

        if ($null -eq $Type) {
            throw "invalid value for 'Type', 'Type' cannot be null."
        }

        if ($null -eq $Status) {
            throw "invalid value for 'Status', 'Status' cannot be null."
        }

        if ($null -eq $CreatedAt) {
            throw "invalid value for 'CreatedAt', 'CreatedAt' cannot be null."
        }

        if ($null -eq $UpdatedAt) {
            throw "invalid value for 'UpdatedAt', 'UpdatedAt' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "chatId" = ${ChatId}
            "orderId" = ${OrderId}
            "type" = ${Type}
            "status" = ${Status}
            "createdAt" = ${CreatedAt}
            "updatedAt" = ${UpdatedAt}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to GetChatInfoDTO<PSCustomObject>

.DESCRIPTION

Convert from JSON to GetChatInfoDTO<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

GetChatInfoDTO<PSCustomObject>
#>
function ConvertFrom-JsonToGetChatInfoDTO {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: ympa_powershell_client => GetChatInfoDTO' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in GetChatInfoDTO
        $AllProperties = ("chatId", "orderId", "type", "status", "createdAt", "updatedAt")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'chatId' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "chatId"))) {
            throw "Error! JSON cannot be serialized due to the required property 'chatId' missing."
        } else {
            $ChatId = $JsonParameters.PSobject.Properties["chatId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "orderId"))) {
            throw "Error! JSON cannot be serialized due to the required property 'orderId' missing."
        } else {
            $OrderId = $JsonParameters.PSobject.Properties["orderId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "type"))) {
            throw "Error! JSON cannot be serialized due to the required property 'type' missing."
        } else {
            $Type = $JsonParameters.PSobject.Properties["type"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "status"))) {
            throw "Error! JSON cannot be serialized due to the required property 'status' missing."
        } else {
            $Status = $JsonParameters.PSobject.Properties["status"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "createdAt"))) {
            throw "Error! JSON cannot be serialized due to the required property 'createdAt' missing."
        } else {
            $CreatedAt = $JsonParameters.PSobject.Properties["createdAt"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "updatedAt"))) {
            throw "Error! JSON cannot be serialized due to the required property 'updatedAt' missing."
        } else {
            $UpdatedAt = $JsonParameters.PSobject.Properties["updatedAt"].value
        }

        $PSO = [PSCustomObject]@{
            "chatId" = ${ChatId}
            "orderId" = ${OrderId}
            "type" = ${Type}
            "status" = ${Status}
            "createdAt" = ${CreatedAt}
            "updatedAt" = ${UpdatedAt}
        }

        return $PSO
    }

}

