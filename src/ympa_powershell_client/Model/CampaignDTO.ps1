#
# Партнерский API Маркета
# API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
# Version: LATEST
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Информация о магазине.

.PARAMETER Domain
URL магазина.
.PARAMETER Id
Идентификатор кампании.
.PARAMETER ClientId
Идентификатор плательщика в Яндекс Балансе.
.PARAMETER Business
No description available.
.PARAMETER PlacementType
No description available.
.OUTPUTS

CampaignDTO<PSCustomObject>
#>

function Initialize-CampaignDTO {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Domain},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${Id},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${ClientId},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Business},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("FBS", "FBY", "DBS")]
        [PSCustomObject]
        ${PlacementType}
    )

    Process {
        'Creating PSCustomObject: ympa_powershell_client => CampaignDTO' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "domain" = ${Domain}
            "id" = ${Id}
            "clientId" = ${ClientId}
            "business" = ${Business}
            "placementType" = ${PlacementType}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to CampaignDTO<PSCustomObject>

.DESCRIPTION

Convert from JSON to CampaignDTO<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

CampaignDTO<PSCustomObject>
#>
function ConvertFrom-JsonToCampaignDTO {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: ympa_powershell_client => CampaignDTO' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in CampaignDTO
        $AllProperties = ("domain", "id", "clientId", "business", "placementType")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "domain"))) { #optional property not found
            $Domain = $null
        } else {
            $Domain = $JsonParameters.PSobject.Properties["domain"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "clientId"))) { #optional property not found
            $ClientId = $null
        } else {
            $ClientId = $JsonParameters.PSobject.Properties["clientId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "business"))) { #optional property not found
            $Business = $null
        } else {
            $Business = $JsonParameters.PSobject.Properties["business"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "placementType"))) { #optional property not found
            $PlacementType = $null
        } else {
            $PlacementType = $JsonParameters.PSobject.Properties["placementType"].value
        }

        $PSO = [PSCustomObject]@{
            "domain" = ${Domain}
            "id" = ${Id}
            "clientId" = ${ClientId}
            "business" = ${Business}
            "placementType" = ${PlacementType}
        }

        return $PSO
    }

}

