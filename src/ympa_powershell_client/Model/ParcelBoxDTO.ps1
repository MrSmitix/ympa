#
# Партнерский API Маркета
# API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
# Version: LATEST
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Элемент отображает одно грузовое место. Вложенные поля больше не используются, передавайте элемент пустым в запросах и не обращайте внимание на содержимое в ответах.

.PARAMETER Id
{% note warning """" %}  Этот параметр устарел. Не используйте его.  {% endnote %} 
.PARAMETER FulfilmentId
{% note warning """" %}  Этот параметр устарел. Не используйте его.  {% endnote %} 
.OUTPUTS

ParcelBoxDTO<PSCustomObject>
#>

function Initialize-ParcelBoxDTO {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${Id},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [ValidatePattern("^[\p{Alnum}- ]*$")]
        [String]
        ${FulfilmentId}
    )

    Process {
        'Creating PSCustomObject: ympa_powershell_client => ParcelBoxDTO' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "fulfilmentId" = ${FulfilmentId}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ParcelBoxDTO<PSCustomObject>

.DESCRIPTION

Convert from JSON to ParcelBoxDTO<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ParcelBoxDTO<PSCustomObject>
#>
function ConvertFrom-JsonToParcelBoxDTO {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: ympa_powershell_client => ParcelBoxDTO' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ParcelBoxDTO
        $AllProperties = ("id", "fulfilmentId")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "fulfilmentId"))) { #optional property not found
            $FulfilmentId = $null
        } else {
            $FulfilmentId = $JsonParameters.PSobject.Properties["fulfilmentId"].value
        }

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "fulfilmentId" = ${FulfilmentId}
        }

        return $PSO
    }

}

