#
# Партнерский API Маркета
# API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
# Version: LATEST
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Ограничения на значения характеристик.

.PARAMETER MinValue
Минимальное число.
.PARAMETER MaxValue
Максимальное число.
.PARAMETER MaxLength
Максимальная длина текста.
.OUTPUTS

ParameterValueConstraintsDTO<PSCustomObject>
#>

function Initialize-ParameterValueConstraintsDTO {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${MinValue},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${MaxValue},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${MaxLength}
    )

    Process {
        'Creating PSCustomObject: ympa_powershell_client => ParameterValueConstraintsDTO' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "minValue" = ${MinValue}
            "maxValue" = ${MaxValue}
            "maxLength" = ${MaxLength}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ParameterValueConstraintsDTO<PSCustomObject>

.DESCRIPTION

Convert from JSON to ParameterValueConstraintsDTO<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ParameterValueConstraintsDTO<PSCustomObject>
#>
function ConvertFrom-JsonToParameterValueConstraintsDTO {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: ympa_powershell_client => ParameterValueConstraintsDTO' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ParameterValueConstraintsDTO
        $AllProperties = ("minValue", "maxValue", "maxLength")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "minValue"))) { #optional property not found
            $MinValue = $null
        } else {
            $MinValue = $JsonParameters.PSobject.Properties["minValue"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "maxValue"))) { #optional property not found
            $MaxValue = $null
        } else {
            $MaxValue = $JsonParameters.PSobject.Properties["maxValue"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "maxLength"))) { #optional property not found
            $MaxLength = $null
        } else {
            $MaxLength = $JsonParameters.PSobject.Properties["maxLength"].value
        }

        $PSO = [PSCustomObject]@{
            "minValue" = ${MinValue}
            "maxValue" = ${MaxValue}
            "maxLength" = ${MaxLength}
        }

        return $PSO
    }

}

