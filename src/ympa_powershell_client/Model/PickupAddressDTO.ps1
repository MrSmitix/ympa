#
# Партнерский API Маркета
# API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
# Version: LATEST
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Адрес доставки.

.PARAMETER Country
Страна.
.PARAMETER City
Город.
.PARAMETER Street
Улица.
.PARAMETER House
Номер дома.
.PARAMETER Postcode
Почтовый индекс.
.OUTPUTS

PickupAddressDTO<PSCustomObject>
#>

function Initialize-PickupAddressDTO {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Country},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${City},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Street},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${House},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Postcode}
    )

    Process {
        'Creating PSCustomObject: ympa_powershell_client => PickupAddressDTO' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "country" = ${Country}
            "city" = ${City}
            "street" = ${Street}
            "house" = ${House}
            "postcode" = ${Postcode}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to PickupAddressDTO<PSCustomObject>

.DESCRIPTION

Convert from JSON to PickupAddressDTO<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

PickupAddressDTO<PSCustomObject>
#>
function ConvertFrom-JsonToPickupAddressDTO {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: ympa_powershell_client => PickupAddressDTO' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in PickupAddressDTO
        $AllProperties = ("country", "city", "street", "house", "postcode")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "country"))) { #optional property not found
            $Country = $null
        } else {
            $Country = $JsonParameters.PSobject.Properties["country"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "city"))) { #optional property not found
            $City = $null
        } else {
            $City = $JsonParameters.PSobject.Properties["city"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "street"))) { #optional property not found
            $Street = $null
        } else {
            $Street = $JsonParameters.PSobject.Properties["street"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "house"))) { #optional property not found
            $House = $null
        } else {
            $House = $JsonParameters.PSobject.Properties["house"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "postcode"))) { #optional property not found
            $Postcode = $null
        } else {
            $Postcode = $JsonParameters.PSobject.Properties["postcode"].value
        }

        $PSO = [PSCustomObject]@{
            "country" = ${Country}
            "city" = ${City}
            "street" = ${Street}
            "house" = ${House}
            "postcode" = ${Postcode}
        }

        return $PSO
    }

}

