#
# Партнерский API Маркета
# API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
# Version: LATEST
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Составляющая индекса качества.

.PARAMETER Value
Значение составляющей в процентах.
.PARAMETER ComponentType
No description available.
.OUTPUTS

QualityRatingComponentDTO<PSCustomObject>
#>

function Initialize-QualityRatingComponentDTO {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [Double]
        ${Value},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("DBS_CANCELLATION_RATE", "DBS_LATE_DELIVERY_RATE", "FBS_CANCELLATION_RATE", "FBS_LATE_SHIP_RATE", "FBY_LATE_DELIVERY_RATE", "FBY_CANCELLATION_RATE", "FBY_DELIVERY_DIFF_RATE", "FBY_LATE_EDITING_RATE")]
        [PSCustomObject]
        ${ComponentType}
    )

    Process {
        'Creating PSCustomObject: ympa_powershell_client => QualityRatingComponentDTO' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $Value) {
            throw "invalid value for 'Value', 'Value' cannot be null."
        }

        if ($Value -gt 100) {
          throw "invalid value for 'Value', must be smaller than or equal to 100."
        }

        if ($Value -lt 0) {
          throw "invalid value for 'Value', must be greater than or equal to 0."
        }

        if ($null -eq $ComponentType) {
            throw "invalid value for 'ComponentType', 'ComponentType' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "value" = ${Value}
            "componentType" = ${ComponentType}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to QualityRatingComponentDTO<PSCustomObject>

.DESCRIPTION

Convert from JSON to QualityRatingComponentDTO<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

QualityRatingComponentDTO<PSCustomObject>
#>
function ConvertFrom-JsonToQualityRatingComponentDTO {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: ympa_powershell_client => QualityRatingComponentDTO' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in QualityRatingComponentDTO
        $AllProperties = ("value", "componentType")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'value' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "value"))) {
            throw "Error! JSON cannot be serialized due to the required property 'value' missing."
        } else {
            $Value = $JsonParameters.PSobject.Properties["value"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "componentType"))) {
            throw "Error! JSON cannot be serialized due to the required property 'componentType' missing."
        } else {
            $ComponentType = $JsonParameters.PSobject.Properties["componentType"].value
        }

        $PSO = [PSCustomObject]@{
            "value" = ${Value}
            "componentType" = ${ComponentType}
        }

        return $PSO
    }

}

