#
# Партнерский API Маркета
# API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
# Version: LATEST
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Временной отрезок с комментарием. Требования к содержанию комментария зависят от контекста использования параметра и указаны в описании поля, которое его содержит.

.PARAMETER TimePeriod
Продолжительность в указанных единицах.
.PARAMETER TimeUnit
No description available.
.PARAMETER Comment
Комментарий.
.OUTPUTS

TimePeriodDTO<PSCustomObject>
#>

function Initialize-TimePeriodDTO {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [Int32]
        ${TimePeriod},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("HOUR", "DAY", "WEEK", "MONTH", "YEAR")]
        [PSCustomObject]
        ${TimeUnit},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Comment}
    )

    Process {
        'Creating PSCustomObject: ympa_powershell_client => TimePeriodDTO' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $TimePeriod) {
            throw "invalid value for 'TimePeriod', 'TimePeriod' cannot be null."
        }

        if ($null -eq $TimeUnit) {
            throw "invalid value for 'TimeUnit', 'TimeUnit' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "timePeriod" = ${TimePeriod}
            "timeUnit" = ${TimeUnit}
            "comment" = ${Comment}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to TimePeriodDTO<PSCustomObject>

.DESCRIPTION

Convert from JSON to TimePeriodDTO<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

TimePeriodDTO<PSCustomObject>
#>
function ConvertFrom-JsonToTimePeriodDTO {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: ympa_powershell_client => TimePeriodDTO' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in TimePeriodDTO
        $AllProperties = ("timePeriod", "timeUnit", "comment")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'timePeriod' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "timePeriod"))) {
            throw "Error! JSON cannot be serialized due to the required property 'timePeriod' missing."
        } else {
            $TimePeriod = $JsonParameters.PSobject.Properties["timePeriod"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "timeUnit"))) {
            throw "Error! JSON cannot be serialized due to the required property 'timeUnit' missing."
        } else {
            $TimeUnit = $JsonParameters.PSobject.Properties["timeUnit"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "comment"))) { #optional property not found
            $Comment = $null
        } else {
            $Comment = $JsonParameters.PSobject.Properties["comment"].value
        }

        $PSO = [PSCustomObject]@{
            "timePeriod" = ${TimePeriod}
            "timeUnit" = ${TimeUnit}
            "comment" = ${Comment}
        }

        return $PSO
    }

}

