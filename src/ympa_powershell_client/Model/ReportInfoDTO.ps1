#
# Партнерский API Маркета
# API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
# Version: LATEST
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Статус генерации и ссылка на готовый отчет.

.PARAMETER Status
No description available.
.PARAMETER SubStatus
No description available.
.PARAMETER GenerationRequestedAt
Дата и время запроса на генерацию.
.PARAMETER GenerationFinishedAt
Дата и время завершения генерации.
.PARAMETER File
Ссылка на готовый отчет.
.PARAMETER EstimatedGenerationTime
Ожидаемая продолжительность генерации в миллисекундах.
.OUTPUTS

ReportInfoDTO<PSCustomObject>
#>

function Initialize-ReportInfoDTO {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("PENDING", "PROCESSING", "FAILED", "DONE")]
        [PSCustomObject]
        ${Status},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("NO_DATA", "TOO_LARGE", "RESOURCE_NOT_FOUND")]
        [PSCustomObject]
        ${SubStatus},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.DateTime]
        ${GenerationRequestedAt},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${GenerationFinishedAt},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${File},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${EstimatedGenerationTime}
    )

    Process {
        'Creating PSCustomObject: ympa_powershell_client => ReportInfoDTO' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $Status) {
            throw "invalid value for 'Status', 'Status' cannot be null."
        }

        if ($null -eq $GenerationRequestedAt) {
            throw "invalid value for 'GenerationRequestedAt', 'GenerationRequestedAt' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "status" = ${Status}
            "subStatus" = ${SubStatus}
            "generationRequestedAt" = ${GenerationRequestedAt}
            "generationFinishedAt" = ${GenerationFinishedAt}
            "file" = ${File}
            "estimatedGenerationTime" = ${EstimatedGenerationTime}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ReportInfoDTO<PSCustomObject>

.DESCRIPTION

Convert from JSON to ReportInfoDTO<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ReportInfoDTO<PSCustomObject>
#>
function ConvertFrom-JsonToReportInfoDTO {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: ympa_powershell_client => ReportInfoDTO' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ReportInfoDTO
        $AllProperties = ("status", "subStatus", "generationRequestedAt", "generationFinishedAt", "file", "estimatedGenerationTime")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'status' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "status"))) {
            throw "Error! JSON cannot be serialized due to the required property 'status' missing."
        } else {
            $Status = $JsonParameters.PSobject.Properties["status"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "generationRequestedAt"))) {
            throw "Error! JSON cannot be serialized due to the required property 'generationRequestedAt' missing."
        } else {
            $GenerationRequestedAt = $JsonParameters.PSobject.Properties["generationRequestedAt"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "subStatus"))) { #optional property not found
            $SubStatus = $null
        } else {
            $SubStatus = $JsonParameters.PSobject.Properties["subStatus"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "generationFinishedAt"))) { #optional property not found
            $GenerationFinishedAt = $null
        } else {
            $GenerationFinishedAt = $JsonParameters.PSobject.Properties["generationFinishedAt"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "file"))) { #optional property not found
            $File = $null
        } else {
            $File = $JsonParameters.PSobject.Properties["file"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "estimatedGenerationTime"))) { #optional property not found
            $EstimatedGenerationTime = $null
        } else {
            $EstimatedGenerationTime = $JsonParameters.PSobject.Properties["estimatedGenerationTime"].value
        }

        $PSO = [PSCustomObject]@{
            "status" = ${Status}
            "subStatus" = ${SubStatus}
            "generationRequestedAt" = ${GenerationRequestedAt}
            "generationFinishedAt" = ${GenerationFinishedAt}
            "file" = ${File}
            "estimatedGenerationTime" = ${EstimatedGenerationTime}
        }

        return $PSO
    }

}

