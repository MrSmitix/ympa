#
# Партнерский API Маркета
# API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
# Version: LATEST
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Информация об изменении статуса заказа.

.PARAMETER Order
No description available.
.OUTPUTS

UpdateOrderStatusResponse<PSCustomObject>
#>

function Initialize-UpdateOrderStatusResponse {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Order}
    )

    Process {
        'Creating PSCustomObject: ympa_powershell_client => UpdateOrderStatusResponse' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "order" = ${Order}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to UpdateOrderStatusResponse<PSCustomObject>

.DESCRIPTION

Convert from JSON to UpdateOrderStatusResponse<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

UpdateOrderStatusResponse<PSCustomObject>
#>
function ConvertFrom-JsonToUpdateOrderStatusResponse {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: ympa_powershell_client => UpdateOrderStatusResponse' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in UpdateOrderStatusResponse
        $AllProperties = ("order")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "order"))) { #optional property not found
            $Order = $null
        } else {
            $Order = $JsonParameters.PSobject.Properties["order"].value
        }

        $PSO = [PSCustomObject]@{
            "order" = ${Order}
        }

        return $PSO
    }

}

