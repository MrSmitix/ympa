#
# Партнерский API Маркета
# API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
# Version: LATEST
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Информация о группе складов.

.PARAMETER Name
Название группы складов.
.PARAMETER MainWarehouse
No description available.
.PARAMETER Warehouses
Список складов, входящих в группу.
.OUTPUTS

WarehouseGroupDTO<PSCustomObject>
#>

function Initialize-WarehouseGroupDTO {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Name},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${MainWarehouse},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Warehouses}
    )

    Process {
        'Creating PSCustomObject: ympa_powershell_client => WarehouseGroupDTO' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $Name) {
            throw "invalid value for 'Name', 'Name' cannot be null."
        }

        if ($null -eq $MainWarehouse) {
            throw "invalid value for 'MainWarehouse', 'MainWarehouse' cannot be null."
        }

        if ($null -eq $Warehouses) {
            throw "invalid value for 'Warehouses', 'Warehouses' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "name" = ${Name}
            "mainWarehouse" = ${MainWarehouse}
            "warehouses" = ${Warehouses}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to WarehouseGroupDTO<PSCustomObject>

.DESCRIPTION

Convert from JSON to WarehouseGroupDTO<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

WarehouseGroupDTO<PSCustomObject>
#>
function ConvertFrom-JsonToWarehouseGroupDTO {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: ympa_powershell_client => WarehouseGroupDTO' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in WarehouseGroupDTO
        $AllProperties = ("name", "mainWarehouse", "warehouses")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'name' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "name"))) {
            throw "Error! JSON cannot be serialized due to the required property 'name' missing."
        } else {
            $Name = $JsonParameters.PSobject.Properties["name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "mainWarehouse"))) {
            throw "Error! JSON cannot be serialized due to the required property 'mainWarehouse' missing."
        } else {
            $MainWarehouse = $JsonParameters.PSobject.Properties["mainWarehouse"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "warehouses"))) {
            throw "Error! JSON cannot be serialized due to the required property 'warehouses' missing."
        } else {
            $Warehouses = $JsonParameters.PSobject.Properties["warehouses"].value
        }

        $PSO = [PSCustomObject]@{
            "name" = ${Name}
            "mainWarehouse" = ${MainWarehouse}
            "warehouses" = ${Warehouses}
        }

        return $PSO
    }

}

