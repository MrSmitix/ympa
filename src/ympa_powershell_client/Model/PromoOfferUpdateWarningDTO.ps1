#
# Партнерский API Маркета
# API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
# Version: LATEST
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Предупреждение, которое появилось при добавлении товара в акцию или изменении его цен.

.PARAMETER Code
No description available.
.PARAMETER CampaignIds
Идентификаторы магазинов в кабинете, для которых получены предупреждения.  Не возвращается, если предупреждения действуют для всех магазинов в кабинете. 
.OUTPUTS

PromoOfferUpdateWarningDTO<PSCustomObject>
#>

function Initialize-PromoOfferUpdateWarningDTO {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("DEEP_DISCOUNT_OFFER", "CATALOG_PRICE_IS_LOWER_THAN_PROMO", "SHOP_PRICES_ARE_LOWER_THAN_PROMO", "PROMOCODE_PRICE_MORE_THAN_MAX_FAIR_PRICE", "SHOP_OFFER_NOT_ELIGIBLE_FOR_PROMO")]
        [PSCustomObject]
        ${Code},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [Int64[]]
        ${CampaignIds}
    )

    Process {
        'Creating PSCustomObject: ympa_powershell_client => PromoOfferUpdateWarningDTO' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $Code) {
            throw "invalid value for 'Code', 'Code' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "code" = ${Code}
            "campaignIds" = ${CampaignIds}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to PromoOfferUpdateWarningDTO<PSCustomObject>

.DESCRIPTION

Convert from JSON to PromoOfferUpdateWarningDTO<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

PromoOfferUpdateWarningDTO<PSCustomObject>
#>
function ConvertFrom-JsonToPromoOfferUpdateWarningDTO {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: ympa_powershell_client => PromoOfferUpdateWarningDTO' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in PromoOfferUpdateWarningDTO
        $AllProperties = ("code", "campaignIds")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'code' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "code"))) {
            throw "Error! JSON cannot be serialized due to the required property 'code' missing."
        } else {
            $Code = $JsonParameters.PSobject.Properties["code"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "campaignIds"))) { #optional property not found
            $CampaignIds = $null
        } else {
            $CampaignIds = $JsonParameters.PSobject.Properties["campaignIds"].value
        }

        $PSO = [PSCustomObject]@{
            "code" = ${Code}
            "campaignIds" = ${CampaignIds}
        }

        return $PSO
    }

}

