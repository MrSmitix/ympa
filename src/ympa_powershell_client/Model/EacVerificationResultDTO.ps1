#
# Партнерский API Маркета
# API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
# Version: LATEST
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Результат выполнения запроса.

.PARAMETER VerificationResult
No description available.
.PARAMETER AttemptsLeft
Количество оставшихся попыток проверки кода.  Возвращается, если магазин отправил некорректный код.  Когда все попытки будут исчерпаны, код обновится. 
.OUTPUTS

EacVerificationResultDTO<PSCustomObject>
#>

function Initialize-EacVerificationResultDTO {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("ACCEPTED", "REJECTED", "NEED_UPDATE")]
        [PSCustomObject]
        ${VerificationResult},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${AttemptsLeft}
    )

    Process {
        'Creating PSCustomObject: ympa_powershell_client => EacVerificationResultDTO' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "verificationResult" = ${VerificationResult}
            "attemptsLeft" = ${AttemptsLeft}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to EacVerificationResultDTO<PSCustomObject>

.DESCRIPTION

Convert from JSON to EacVerificationResultDTO<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

EacVerificationResultDTO<PSCustomObject>
#>
function ConvertFrom-JsonToEacVerificationResultDTO {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: ympa_powershell_client => EacVerificationResultDTO' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in EacVerificationResultDTO
        $AllProperties = ("verificationResult", "attemptsLeft")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "verificationResult"))) { #optional property not found
            $VerificationResult = $null
        } else {
            $VerificationResult = $JsonParameters.PSobject.Properties["verificationResult"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "attemptsLeft"))) { #optional property not found
            $AttemptsLeft = $null
        } else {
            $AttemptsLeft = $JsonParameters.PSobject.Properties["attemptsLeft"].value
        }

        $PSO = [PSCustomObject]@{
            "verificationResult" = ${VerificationResult}
            "attemptsLeft" = ${AttemptsLeft}
        }

        return $PSO
    }

}

