#
# Партнерский API Маркета
# API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
# Version: LATEST
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Данные, необходимые для генерации отчета. 

.PARAMETER BusinessId
Идентификатор бизнеса.
.PARAMETER DateFrom
Начало периода, включительно.
.PARAMETER DateTo
Конец периода, включительно.
.OUTPUTS

GenerateBoostConsolidatedRequest<PSCustomObject>
#>

function Initialize-GenerateBoostConsolidatedRequest {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [Int64]
        ${BusinessId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.DateTime]
        ${DateFrom},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.DateTime]
        ${DateTo}
    )

    Process {
        'Creating PSCustomObject: ympa_powershell_client => GenerateBoostConsolidatedRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $BusinessId) {
            throw "invalid value for 'BusinessId', 'BusinessId' cannot be null."
        }

        if ($null -eq $DateFrom) {
            throw "invalid value for 'DateFrom', 'DateFrom' cannot be null."
        }

        if ($null -eq $DateTo) {
            throw "invalid value for 'DateTo', 'DateTo' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "businessId" = ${BusinessId}
            "dateFrom" = ${DateFrom}
            "dateTo" = ${DateTo}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to GenerateBoostConsolidatedRequest<PSCustomObject>

.DESCRIPTION

Convert from JSON to GenerateBoostConsolidatedRequest<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

GenerateBoostConsolidatedRequest<PSCustomObject>
#>
function ConvertFrom-JsonToGenerateBoostConsolidatedRequest {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: ympa_powershell_client => GenerateBoostConsolidatedRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in GenerateBoostConsolidatedRequest
        $AllProperties = ("businessId", "dateFrom", "dateTo")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'businessId' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "businessId"))) {
            throw "Error! JSON cannot be serialized due to the required property 'businessId' missing."
        } else {
            $BusinessId = $JsonParameters.PSobject.Properties["businessId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "dateFrom"))) {
            throw "Error! JSON cannot be serialized due to the required property 'dateFrom' missing."
        } else {
            $DateFrom = $JsonParameters.PSobject.Properties["dateFrom"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "dateTo"))) {
            throw "Error! JSON cannot be serialized due to the required property 'dateTo' missing."
        } else {
            $DateTo = $JsonParameters.PSobject.Properties["dateTo"].value
        }

        $PSO = [PSCustomObject]@{
            "businessId" = ${BusinessId}
            "dateFrom" = ${DateFrom}
            "dateTo" = ${DateTo}
        }

        return $PSO
    }

}

