#
# Партнерский API Маркета
# API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
# Version: LATEST
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Информация о курьере.

.PARAMETER FullName
Полное имя курьера.
.PARAMETER Phone
Номер телефона курьера.
.PARAMETER PhoneExtension
Добавочный номер телефона.
.PARAMETER VehicleNumber
Номер транспортного средства.
.PARAMETER VehicleDescription
Описание машины. Например, модель и цвет.
.OUTPUTS

OrderCourierDTO<PSCustomObject>
#>

function Initialize-OrderCourierDTO {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${FullName},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Phone},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PhoneExtension},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${VehicleNumber},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${VehicleDescription}
    )

    Process {
        'Creating PSCustomObject: ympa_powershell_client => OrderCourierDTO' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "fullName" = ${FullName}
            "phone" = ${Phone}
            "phoneExtension" = ${PhoneExtension}
            "vehicleNumber" = ${VehicleNumber}
            "vehicleDescription" = ${VehicleDescription}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to OrderCourierDTO<PSCustomObject>

.DESCRIPTION

Convert from JSON to OrderCourierDTO<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

OrderCourierDTO<PSCustomObject>
#>
function ConvertFrom-JsonToOrderCourierDTO {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: ympa_powershell_client => OrderCourierDTO' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in OrderCourierDTO
        $AllProperties = ("fullName", "phone", "phoneExtension", "vehicleNumber", "vehicleDescription")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "fullName"))) { #optional property not found
            $FullName = $null
        } else {
            $FullName = $JsonParameters.PSobject.Properties["fullName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "phone"))) { #optional property not found
            $Phone = $null
        } else {
            $Phone = $JsonParameters.PSobject.Properties["phone"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "phoneExtension"))) { #optional property not found
            $PhoneExtension = $null
        } else {
            $PhoneExtension = $JsonParameters.PSobject.Properties["phoneExtension"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "vehicleNumber"))) { #optional property not found
            $VehicleNumber = $null
        } else {
            $VehicleNumber = $JsonParameters.PSobject.Properties["vehicleNumber"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "vehicleDescription"))) { #optional property not found
            $VehicleDescription = $null
        } else {
            $VehicleDescription = $JsonParameters.PSobject.Properties["vehicleDescription"].value
        }

        $PSO = [PSCustomObject]@{
            "fullName" = ${FullName}
            "phone" = ${Phone}
            "phoneExtension" = ${PhoneExtension}
            "vehicleNumber" = ${VehicleNumber}
            "vehicleDescription" = ${VehicleDescription}
        }

        return $PSO
    }

}

