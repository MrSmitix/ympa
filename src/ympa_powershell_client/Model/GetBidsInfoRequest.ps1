#
# Партнерский API Маркета
# API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
# Version: LATEST
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

description.

.PARAMETER Skus
Список товаров, для которых нужно получить значения ставок.  Если список не задан, постранично возвращаются все товары со ставками.  Если список задан, результаты возвращаются одной страницей, а параметры `page_token` и `limit` игнорируются. 
.OUTPUTS

GetBidsInfoRequest<PSCustomObject>
#>

function Initialize-GetBidsInfoRequest {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${Skus}
    )

    Process {
        'Creating PSCustomObject: ympa_powershell_client => GetBidsInfoRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if (!$Skus -and $Skus.length -gt 1500) {
            throw "invalid value for 'Skus', number of items must be less than or equal to 1500."
        }

        if (!$Skus -and $Skus.length -lt 1) {
            throw "invalid value for 'Skus', number of items must be greater than or equal to 1."
        }


        $PSO = [PSCustomObject]@{
            "skus" = ${Skus}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to GetBidsInfoRequest<PSCustomObject>

.DESCRIPTION

Convert from JSON to GetBidsInfoRequest<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

GetBidsInfoRequest<PSCustomObject>
#>
function ConvertFrom-JsonToGetBidsInfoRequest {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: ympa_powershell_client => GetBidsInfoRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in GetBidsInfoRequest
        $AllProperties = ("skus")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "skus"))) { #optional property not found
            $Skus = $null
        } else {
            $Skus = $JsonParameters.PSobject.Properties["skus"].value
        }

        $PSO = [PSCustomObject]@{
            "skus" = ${Skus}
        }

        return $PSO
    }

}

