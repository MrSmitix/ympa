#
# Партнерский API Маркета
# API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
# Version: LATEST
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Товар с ценами для продвижения.

.PARAMETER MarketSku
SKU на Маркете.
.PARAMETER OfferId
Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
.PARAMETER PriceSuggestion
Цены для продвижения. 
.OUTPUTS

PriceSuggestOfferDTO<PSCustomObject>
#>

function Initialize-PriceSuggestOfferDTO {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${MarketSku},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [ValidatePattern("^[^\x00-\x08\x0A-\x1f\x7f]{1,255}$")]
        [String]
        ${OfferId},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${PriceSuggestion}
    )

    Process {
        'Creating PSCustomObject: ympa_powershell_client => PriceSuggestOfferDTO' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if (!$OfferId -and $OfferId.length -gt 255) {
            throw "invalid value for 'OfferId', the character length must be smaller than or equal to 255."
        }

        if (!$OfferId -and $OfferId.length -lt 1) {
            throw "invalid value for 'OfferId', the character length must be great than or equal to 1."
        }


        $PSO = [PSCustomObject]@{
            "marketSku" = ${MarketSku}
            "offerId" = ${OfferId}
            "priceSuggestion" = ${PriceSuggestion}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to PriceSuggestOfferDTO<PSCustomObject>

.DESCRIPTION

Convert from JSON to PriceSuggestOfferDTO<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

PriceSuggestOfferDTO<PSCustomObject>
#>
function ConvertFrom-JsonToPriceSuggestOfferDTO {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: ympa_powershell_client => PriceSuggestOfferDTO' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in PriceSuggestOfferDTO
        $AllProperties = ("marketSku", "offerId", "priceSuggestion")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "marketSku"))) { #optional property not found
            $MarketSku = $null
        } else {
            $MarketSku = $JsonParameters.PSobject.Properties["marketSku"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "offerId"))) { #optional property not found
            $OfferId = $null
        } else {
            $OfferId = $JsonParameters.PSobject.Properties["offerId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "priceSuggestion"))) { #optional property not found
            $PriceSuggestion = $null
        } else {
            $PriceSuggestion = $JsonParameters.PSobject.Properties["priceSuggestion"].value
        }

        $PSO = [PSCustomObject]@{
            "marketSku" = ${MarketSku}
            "offerId" = ${OfferId}
            "priceSuggestion" = ${PriceSuggestion}
        }

        return $PSO
    }

}

