#
# Партнерский API Маркета
# API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
# Version: LATEST
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Информация о покупателе. 

.PARAMETER Inn
ИНН.
.PARAMETER Kpp
КПП.
.PARAMETER OrganizationName
Наименование юридического лица.
.PARAMETER OrganizationJurAddress
Юридический адрес.
.OUTPUTS

OrderBusinessBuyerDTO<PSCustomObject>
#>

function Initialize-OrderBusinessBuyerDTO {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Inn},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Kpp},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${OrganizationName},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${OrganizationJurAddress}
    )

    Process {
        'Creating PSCustomObject: ympa_powershell_client => OrderBusinessBuyerDTO' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "inn" = ${Inn}
            "kpp" = ${Kpp}
            "organizationName" = ${OrganizationName}
            "organizationJurAddress" = ${OrganizationJurAddress}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to OrderBusinessBuyerDTO<PSCustomObject>

.DESCRIPTION

Convert from JSON to OrderBusinessBuyerDTO<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

OrderBusinessBuyerDTO<PSCustomObject>
#>
function ConvertFrom-JsonToOrderBusinessBuyerDTO {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: ympa_powershell_client => OrderBusinessBuyerDTO' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in OrderBusinessBuyerDTO
        $AllProperties = ("inn", "kpp", "organizationName", "organizationJurAddress")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "inn"))) { #optional property not found
            $Inn = $null
        } else {
            $Inn = $JsonParameters.PSobject.Properties["inn"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "kpp"))) { #optional property not found
            $Kpp = $null
        } else {
            $Kpp = $JsonParameters.PSobject.Properties["kpp"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "organizationName"))) { #optional property not found
            $OrganizationName = $null
        } else {
            $OrganizationName = $JsonParameters.PSobject.Properties["organizationName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "organizationJurAddress"))) { #optional property not found
            $OrganizationJurAddress = $null
        } else {
            $OrganizationJurAddress = $JsonParameters.PSobject.Properties["organizationJurAddress"].value
        }

        $PSO = [PSCustomObject]@{
            "inn" = ${Inn}
            "kpp" = ${Kpp}
            "organizationName" = ${OrganizationName}
            "organizationJurAddress" = ${OrganizationJurAddress}
        }

        return $PSO
    }

}

