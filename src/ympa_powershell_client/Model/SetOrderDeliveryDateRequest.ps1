#
# Партнерский API Маркета
# API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
# Version: LATEST
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Dates
No description available.
.PARAMETER Reason
No description available.
.OUTPUTS

SetOrderDeliveryDateRequest<PSCustomObject>
#>

function Initialize-SetOrderDeliveryDateRequest {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Dates},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("USER_MOVED_DELIVERY_DATES", "PARTNER_MOVED_DELIVERY_DATES")]
        [PSCustomObject]
        ${Reason}
    )

    Process {
        'Creating PSCustomObject: ympa_powershell_client => SetOrderDeliveryDateRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $Dates) {
            throw "invalid value for 'Dates', 'Dates' cannot be null."
        }

        if ($null -eq $Reason) {
            throw "invalid value for 'Reason', 'Reason' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "dates" = ${Dates}
            "reason" = ${Reason}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to SetOrderDeliveryDateRequest<PSCustomObject>

.DESCRIPTION

Convert from JSON to SetOrderDeliveryDateRequest<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

SetOrderDeliveryDateRequest<PSCustomObject>
#>
function ConvertFrom-JsonToSetOrderDeliveryDateRequest {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: ympa_powershell_client => SetOrderDeliveryDateRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in SetOrderDeliveryDateRequest
        $AllProperties = ("dates", "reason")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'dates' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "dates"))) {
            throw "Error! JSON cannot be serialized due to the required property 'dates' missing."
        } else {
            $Dates = $JsonParameters.PSobject.Properties["dates"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "reason"))) {
            throw "Error! JSON cannot be serialized due to the required property 'reason' missing."
        } else {
            $Reason = $JsonParameters.PSobject.Properties["reason"].value
        }

        $PSO = [PSCustomObject]@{
            "dates" = ${Dates}
            "reason" = ${Reason}
        }

        return $PSO
    }

}

