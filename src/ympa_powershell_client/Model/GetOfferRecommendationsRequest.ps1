#
# Партнерский API Маркета
# API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
# Version: LATEST
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER OfferIds
Идентификаторы товаров, информация о которых нужна. ⚠️ Не используйте это поле одновременно с остальными фильтрами. Если вы хотите воспользоваться фильтрами, оставьте поле пустым.
.PARAMETER CofinancePriceFilter
No description available.
.PARAMETER RecommendedCofinancePriceFilter
No description available.
.PARAMETER CompetitivenessFilter
No description available.
.OUTPUTS

GetOfferRecommendationsRequest<PSCustomObject>
#>

function Initialize-GetOfferRecommendationsRequest {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${OfferIds},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("SPECIFIED", "EMPTY")]
        [PSCustomObject]
        ${CofinancePriceFilter},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("SPECIFIED", "EMPTY")]
        [PSCustomObject]
        ${RecommendedCofinancePriceFilter},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("OPTIMAL", "AVERAGE", "LOW")]
        [PSCustomObject]
        ${CompetitivenessFilter}
    )

    Process {
        'Creating PSCustomObject: ympa_powershell_client => GetOfferRecommendationsRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "offerIds" = ${OfferIds}
            "cofinancePriceFilter" = ${CofinancePriceFilter}
            "recommendedCofinancePriceFilter" = ${RecommendedCofinancePriceFilter}
            "competitivenessFilter" = ${CompetitivenessFilter}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to GetOfferRecommendationsRequest<PSCustomObject>

.DESCRIPTION

Convert from JSON to GetOfferRecommendationsRequest<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

GetOfferRecommendationsRequest<PSCustomObject>
#>
function ConvertFrom-JsonToGetOfferRecommendationsRequest {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: ympa_powershell_client => GetOfferRecommendationsRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in GetOfferRecommendationsRequest
        $AllProperties = ("offerIds", "cofinancePriceFilter", "recommendedCofinancePriceFilter", "competitivenessFilter")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "offerIds"))) { #optional property not found
            $OfferIds = $null
        } else {
            $OfferIds = $JsonParameters.PSobject.Properties["offerIds"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cofinancePriceFilter"))) { #optional property not found
            $CofinancePriceFilter = $null
        } else {
            $CofinancePriceFilter = $JsonParameters.PSobject.Properties["cofinancePriceFilter"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "recommendedCofinancePriceFilter"))) { #optional property not found
            $RecommendedCofinancePriceFilter = $null
        } else {
            $RecommendedCofinancePriceFilter = $JsonParameters.PSobject.Properties["recommendedCofinancePriceFilter"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "competitivenessFilter"))) { #optional property not found
            $CompetitivenessFilter = $null
        } else {
            $CompetitivenessFilter = $JsonParameters.PSobject.Properties["competitivenessFilter"].value
        }

        $PSO = [PSCustomObject]@{
            "offerIds" = ${OfferIds}
            "cofinancePriceFilter" = ${CofinancePriceFilter}
            "recommendedCofinancePriceFilter" = ${RecommendedCofinancePriceFilter}
            "competitivenessFilter" = ${CompetitivenessFilter}
        }

        return $PSO
    }

}

