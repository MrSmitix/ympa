#
# Партнерский API Маркета
# API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
# Version: LATEST
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Список товаров.  В теле запроса можно передать от одного до 500 товаров.  Обязательный параметр. 

.PARAMETER Mapping
No description available.
.PARAMETER AwaitingModerationMapping
No description available.
.PARAMETER RejectedMapping
No description available.
.PARAMETER Offer
No description available.
.OUTPUTS

UpdateOfferMappingEntryDTO<PSCustomObject>
#>

function Initialize-UpdateOfferMappingEntryDTO {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Mapping},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${AwaitingModerationMapping},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${RejectedMapping},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Offer}
    )

    Process {
        'Creating PSCustomObject: ympa_powershell_client => UpdateOfferMappingEntryDTO' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "mapping" = ${Mapping}
            "awaitingModerationMapping" = ${AwaitingModerationMapping}
            "rejectedMapping" = ${RejectedMapping}
            "offer" = ${Offer}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to UpdateOfferMappingEntryDTO<PSCustomObject>

.DESCRIPTION

Convert from JSON to UpdateOfferMappingEntryDTO<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

UpdateOfferMappingEntryDTO<PSCustomObject>
#>
function ConvertFrom-JsonToUpdateOfferMappingEntryDTO {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: ympa_powershell_client => UpdateOfferMappingEntryDTO' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in UpdateOfferMappingEntryDTO
        $AllProperties = ("mapping", "awaitingModerationMapping", "rejectedMapping", "offer")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "mapping"))) { #optional property not found
            $Mapping = $null
        } else {
            $Mapping = $JsonParameters.PSobject.Properties["mapping"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "awaitingModerationMapping"))) { #optional property not found
            $AwaitingModerationMapping = $null
        } else {
            $AwaitingModerationMapping = $JsonParameters.PSobject.Properties["awaitingModerationMapping"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "rejectedMapping"))) { #optional property not found
            $RejectedMapping = $null
        } else {
            $RejectedMapping = $JsonParameters.PSobject.Properties["rejectedMapping"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "offer"))) { #optional property not found
            $Offer = $null
        } else {
            $Offer = $JsonParameters.PSobject.Properties["offer"].value
        }

        $PSO = [PSCustomObject]@{
            "mapping" = ${Mapping}
            "awaitingModerationMapping" = ${AwaitingModerationMapping}
            "rejectedMapping" = ${RejectedMapping}
            "offer" = ${Offer}
        }

        return $PSO
    }

}

