#
# Партнерский API Маркета
# API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
# Version: LATEST
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Данные, необходимые для генерации отчета.

.PARAMETER BusinessId
Идентификатор бизнеса.  В большинстве случаев обязателен. Не указывается, если задан `campaignId`. 
.PARAMETER CampaignId
Идентификатор кампании.  Как правило, не используется. Передавайте только если в кабинете есть магазины с уникальными ценами и вы хотите получить отчет для них. В этом случае передавать `businessId` не нужно. 
.PARAMETER CategoryIds
Фильтр по категориям на Маркете.
.PARAMETER CreationDateFrom
Фильтр по времени появления предложения — начало периода.  Формат даты: `ДД-ММ-ГГГГ`. 
.PARAMETER CreationDateTo
Фильтр по времени появления предложения — окончание периода.  Формат даты: `ДД-ММ-ГГГГ`. 
.OUTPUTS

GeneratePricesReportRequest<PSCustomObject>
#>

function Initialize-GeneratePricesReportRequest {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${BusinessId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${CampaignId},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [Int64[]]
        ${CategoryIds},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${CreationDateFrom},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${CreationDateTo}
    )

    Process {
        'Creating PSCustomObject: ympa_powershell_client => GeneratePricesReportRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "businessId" = ${BusinessId}
            "campaignId" = ${CampaignId}
            "categoryIds" = ${CategoryIds}
            "creationDateFrom" = ${CreationDateFrom}
            "creationDateTo" = ${CreationDateTo}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to GeneratePricesReportRequest<PSCustomObject>

.DESCRIPTION

Convert from JSON to GeneratePricesReportRequest<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

GeneratePricesReportRequest<PSCustomObject>
#>
function ConvertFrom-JsonToGeneratePricesReportRequest {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: ympa_powershell_client => GeneratePricesReportRequest' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in GeneratePricesReportRequest
        $AllProperties = ("businessId", "campaignId", "categoryIds", "creationDateFrom", "creationDateTo")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "businessId"))) { #optional property not found
            $BusinessId = $null
        } else {
            $BusinessId = $JsonParameters.PSobject.Properties["businessId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "campaignId"))) { #optional property not found
            $CampaignId = $null
        } else {
            $CampaignId = $JsonParameters.PSobject.Properties["campaignId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "categoryIds"))) { #optional property not found
            $CategoryIds = $null
        } else {
            $CategoryIds = $JsonParameters.PSobject.Properties["categoryIds"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "creationDateFrom"))) { #optional property not found
            $CreationDateFrom = $null
        } else {
            $CreationDateFrom = $JsonParameters.PSobject.Properties["creationDateFrom"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "creationDateTo"))) { #optional property not found
            $CreationDateTo = $null
        } else {
            $CreationDateTo = $JsonParameters.PSobject.Properties["creationDateTo"].value
        }

        $PSO = [PSCustomObject]@{
            "businessId" = ${BusinessId}
            "campaignId" = ${CampaignId}
            "categoryIds" = ${CategoryIds}
            "creationDateFrom" = ${CreationDateFrom}
            "creationDateTo" = ${CreationDateTo}
        }

        return $PSO
    }

}

