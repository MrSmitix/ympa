{-
   Партнерский API Маркета
   API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

   The version of the OpenAPI document: LATEST

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Request.Express exposing
    ( addHiddenOffers
    , addOffersToArchive
    , calculateTariffs
    , confirmBusinessPrices
    , confirmCampaignPrices
    , createChat
    , deleteCampaignOffers
    , deleteGoodsFeedbackComment
    , deleteHiddenOffers
    , deleteOffers
    , deleteOffersFromArchive
    , deletePromoOffers
    , generateBoostConsolidatedReport
    , generateCompetitorsPositionReport
    , generateGoodsFeedbackReport
    , generateGoodsRealizationReport
    , generateMassOrderLabelsReport
    , generateOrderLabel
    , generateOrderLabels
    , generatePricesReport
    , generateShelfsStatisticsReport
    , generateShowsSalesReport
    , generateStocksOnWarehousesReport
    , generateUnitedMarketplaceServicesReport
    , generateUnitedNettingReport
    , generateUnitedOrdersReport
    , getAllOffers
    , getBidsInfoForBusiness
    , getBidsRecommendations
    , getBusinessQuarantineOffers
    , getBusinessSettings
    , getCampaign
    , getCampaignLogins
    , getCampaignOffers
    , getCampaignQuarantineOffers
    , getCampaignRegion
    , getCampaignSettings
    , getCampaigns
    , getCampaignsByLogin
    , getCategoriesMaxSaleQuantum
    , getCategoriesTree
    , getCategoryContentParameters
    , getChatHistory
    , getChats
    , getDeliveryServices
    , getFeed
    , getFeedIndexLogs
    , getFeedbackAndCommentUpdates
    , getFeeds
    , getGoodsFeedbackComments
    , getGoodsFeedbacks
    , getGoodsStats
    , getHiddenOffers
    , getOfferCardsContentStatus
    , getOfferMappingEntries
    , getOfferMappings
    , getOfferRecommendations
    , getOffers
    , getOrder
    , getOrderBusinessBuyerInfo
    , getOrderBusinessDocumentsInfo
    , getOrderLabelsData
    , getOrders
    , getOrdersStats
    , getPrices
    , getPricesByOfferIds
    , getPromoOffers
    , getPromos
    , getQualityRatingDetails
    , getQualityRatings
    , getReportInfo
    , getReturn
    , getReturnApplication
    , getReturnPhoto
    , getReturns
    , getStocks
    , getSuggestedOfferMappingEntries
    , getSuggestedOfferMappings
    , getSuggestedPrices
    , getWarehouses
    , provideOrderItemIdentifiers
    , putBidsForBusiness
    , putBidsForCampaign
    , refreshFeed
    , searchRegionChildren
    , searchRegionsById
    , searchRegionsByName
    , sendFileToChat
    , sendMessageToChat
    , setFeedParams
    , setOrderBoxLayout
    , setOrderShipmentBoxes
    , skipGoodsFeedbacksReaction
    , updateBusinessPrices
    , updateCampaignOffers
    , updateGoodsFeedbackComment
    , updateOfferContent
    , updateOfferMappingEntries
    , updateOfferMappings
    , updateOrderItems
    , updateOrderStatus
    , updateOrderStatuses
    , updatePrices
    , updatePromoOffers
    , updateStocks
    , verifyOrderEac
    )

import Api
import Api.Data exposing (..)
import Api.Time exposing (Posix)
import Dict
import Http
import Json.Decode
import Json.Encode
import File exposing (File)

{-| Скрывает товары магазина на Маркете.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-| 
-}
addHiddenOffers : Int -> Api.Data.AddHiddenOffersRequest -> Api.Request Api.Data.EmptyApiResponse
addHiddenOffers campaignId_path addHiddenOffersRequest_body =
    Api.request
        "POST"
        "/campaigns/{campaignId}/hidden-offers"
        [ ( "campaignId", String.fromInt campaignId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeAddHiddenOffersRequest addHiddenOffersRequest_body)))
        Api.Data.emptyApiResponseDecoder


{-| Помещает товары в архив. Товары, помещенные в архив, скрыты с витрины во всех магазинах кабинета.  {% note warning \"В архив нельзя отправить товар, который хранится на складе Маркета\" %}  Вначале такой товар нужно распродать или вывезти.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-| 
-}
addOffersToArchive : Int -> Api.Data.AddOffersToArchiveRequest -> Api.Request Api.Data.AddOffersToArchiveResponse
addOffersToArchive businessId_path addOffersToArchiveRequest_body =
    Api.request
        "POST"
        "/businesses/{businessId}/offer-mappings/archive"
        [ ( "businessId", String.fromInt businessId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeAddOffersToArchiveRequest addOffersToArchiveRequest_body)))
        Api.Data.addOffersToArchiveResponseDecoder


{-| Рассчитывает стоимость услуг Маркета для товаров с заданными параметрами. Порядок товаров в запросе и ответе сохраняется, чтобы определить, для какого товара рассчитана стоимость услуги.  Обратите внимание: калькулятор осуществляет примерные расчеты. Финальная стоимость для каждого заказа зависит от предоставленных услуг.  В запросе можно указать либо параметр `campaignId`, либо `sellingProgram`. Совместное использование параметров приведет к ошибке.  |**⚙️ Лимит:** 100 запросов в минуту| |-| 
-}
calculateTariffs : Api.Data.CalculateTariffsRequest -> Api.Request Api.Data.CalculateTariffsResponse
calculateTariffs calculateTariffsRequest_body =
    Api.request
        "POST"
        "/tariffs/calculate"
        []
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeCalculateTariffsRequest calculateTariffsRequest_body)))
        Api.Data.calculateTariffsResponseDecoder


{-| Подтверждает основную цену на товары, которые попали в карантин, и удаляет их из карантина.  Основная цена задается в каталоге и действует во всех магазинах кабинета.  Товар попадает в карантин, если его цена меняется слишком резко. [Как настроить карантин](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  Чтобы увидеть список товаров, которые попали в карантин, используйте запрос [POST businesses/{businessId}/price-quarantine](getBusinessQuarantineOffers.md).  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-| 
-}
confirmBusinessPrices : Int -> Api.Data.ConfirmPricesRequest -> Api.Request Api.Data.EmptyApiResponse
confirmBusinessPrices businessId_path confirmPricesRequest_body =
    Api.request
        "POST"
        "/businesses/{businessId}/price-quarantine/confirm"
        [ ( "businessId", String.fromInt businessId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeConfirmPricesRequest confirmPricesRequest_body)))
        Api.Data.emptyApiResponseDecoder


{-| Подтверждает в заданном магазине цену на товары, которые попали в карантин, и удаляет их из карантина.  Товар попадает в карантин, если его цена меняется слишком резко. [Как настроить карантин](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  Чтобы увидеть список товаров, которые попали в карантин, используйте запрос [POST campaigns/{campaignId}/price-quarantine](getCampaignQuarantineOffers.md).  |**⚙️ Лимит:** 5000 товаров в минуту| |-| 
-}
confirmCampaignPrices : Int -> Api.Data.ConfirmPricesRequest -> Api.Request Api.Data.EmptyApiResponse
confirmCampaignPrices campaignId_path confirmPricesRequest_body =
    Api.request
        "POST"
        "/campaigns/{campaignId}/price-quarantine/confirm"
        [ ( "campaignId", String.fromInt campaignId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeConfirmPricesRequest confirmPricesRequest_body)))
        Api.Data.emptyApiResponseDecoder


{-| Создает новый чат с покупателем.  |**⚙️ Лимит:** 1000 запросов в час| |-| 
-}
createChat : Int -> Api.Data.CreateChatRequest -> Api.Request Api.Data.CreateChatResponse
createChat businessId_path createChatRequest_body =
    Api.request
        "POST"
        "/businesses/{businessId}/chats/new"
        [ ( "businessId", String.fromInt businessId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeCreateChatRequest createChatRequest_body)))
        Api.Data.createChatResponseDecoder


{-| Удаляет заданные товары из заданного магазина.  {% note warning \"Запрос удаляет товары именно из конкретного магазина\" %}  На продажи в других магазинах и на наличие товара в общем каталоге он не влияет.  {% endnote %}  Товар не получится удалить, если он хранится на складах Маркета.  |**⚙️ Лимит:** 5000 товаров в минуту| |-| 
-}
deleteCampaignOffers : Int -> Api.Data.DeleteCampaignOffersRequest -> Api.Request Api.Data.DeleteCampaignOffersResponse
deleteCampaignOffers campaignId_path deleteCampaignOffersRequest_body =
    Api.request
        "POST"
        "/campaigns/{campaignId}/offers/delete"
        [ ( "campaignId", String.fromInt campaignId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeDeleteCampaignOffersRequest deleteCampaignOffersRequest_body)))
        Api.Data.deleteCampaignOffersResponseDecoder


{-| Удаляет комментарий магазина.  |**⚙️ Лимит:** 1 000 запросов в час| |-| 
-}
deleteGoodsFeedbackComment : Int -> Api.Data.DeleteGoodsFeedbackCommentRequest -> Api.Request Api.Data.EmptyApiResponse
deleteGoodsFeedbackComment businessId_path deleteGoodsFeedbackCommentRequest_body =
    Api.request
        "POST"
        "/businesses/{businessId}/goods-feedback/comments/delete"
        [ ( "businessId", String.fromInt businessId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeDeleteGoodsFeedbackCommentRequest deleteGoodsFeedbackCommentRequest_body)))
        Api.Data.emptyApiResponseDecoder


{-| Возобновляет показ скрытых вами товаров магазина на Маркете.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-| 
-}
deleteHiddenOffers : Int -> Api.Data.DeleteHiddenOffersRequest -> Api.Request Api.Data.EmptyApiResponse
deleteHiddenOffers campaignId_path deleteHiddenOffersRequest_body =
    Api.request
        "POST"
        "/campaigns/{campaignId}/hidden-offers/delete"
        [ ( "campaignId", String.fromInt campaignId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeDeleteHiddenOffersRequest deleteHiddenOffersRequest_body)))
        Api.Data.emptyApiResponseDecoder


{-| Удаляет товары из каталога.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-| 
-}
deleteOffers : Int -> Api.Data.DeleteOffersRequest -> Api.Request Api.Data.DeleteOffersResponse
deleteOffers businessId_path deleteOffersRequest_body =
    Api.request
        "POST"
        "/businesses/{businessId}/offer-mappings/delete"
        [ ( "businessId", String.fromInt businessId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeDeleteOffersRequest deleteOffersRequest_body)))
        Api.Data.deleteOffersResponseDecoder


{-| Восстанавливает товары из архива.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 200 товаров в одном запросе| |-| 
-}
deleteOffersFromArchive : Int -> Api.Data.DeleteOffersFromArchiveRequest -> Api.Request Api.Data.DeleteOffersFromArchiveResponse
deleteOffersFromArchive businessId_path deleteOffersFromArchiveRequest_body =
    Api.request
        "POST"
        "/businesses/{businessId}/offer-mappings/unarchive"
        [ ( "businessId", String.fromInt businessId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeDeleteOffersFromArchiveRequest deleteOffersFromArchiveRequest_body)))
        Api.Data.deleteOffersFromArchiveResponseDecoder


{-| Убирает товары из акции.  Изменения начинают действовать в течение 4–6 часов.  |**⚙️ Лимит:** 10000 запросов в час| |-| 
-}
deletePromoOffers : Int -> Api.Data.DeletePromoOffersRequest -> Api.Request Api.Data.DeletePromoOffersResponse
deletePromoOffers businessId_path deletePromoOffersRequest_body =
    Api.request
        "POST"
        "/businesses/{businessId}/promos/offers/delete"
        [ ( "businessId", String.fromInt businessId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeDeletePromoOffersRequest deletePromoOffersRequest_body)))
        Api.Data.deletePromoOffersResponseDecoder


{-| Запускает генерацию **сводного отчета по бусту продаж** за заданный период. Отчет содержит информацию по всем кампаниям, созданным и через API, и в кабинете.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
-}
generateBoostConsolidatedReport : Maybe ReportFormatType -> Api.Data.GenerateBoostConsolidatedRequest -> Api.Request Api.Data.GenerateReportResponse
generateBoostConsolidatedReport format_query generateBoostConsolidatedRequest_body =
    Api.request
        "POST"
        "/reports/boost-consolidated/generate"
        []
        [ ( "format", Maybe.map Api.Data.stringFromReportFormatType format_query ) ]
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeGenerateBoostConsolidatedRequest generateBoostConsolidatedRequest_body)))
        Api.Data.generateReportResponseDecoder


{-| Запускает генерацию **отчета «Конкурентная позиция»** за заданный период. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/analytics/competitors.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  {% note info \"Значение -1 в отчете\" %}  Если в CSV-файле в столбце **POSITION** стоит -1, в этот день не было заказов с товарами в указанной категории.  {% endnote %}  |**⚙️ Лимит:** 10 запросов в час| |-| 
-}
generateCompetitorsPositionReport : Maybe ReportFormatType -> Api.Data.GenerateCompetitorsPositionReportRequest -> Api.Request Api.Data.GenerateReportResponse
generateCompetitorsPositionReport format_query generateCompetitorsPositionReportRequest_body =
    Api.request
        "POST"
        "/reports/competitors-position/generate"
        []
        [ ( "format", Maybe.map Api.Data.stringFromReportFormatType format_query ) ]
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeGenerateCompetitorsPositionReportRequest generateCompetitorsPositionReportRequest_body)))
        Api.Data.generateReportResponseDecoder


{-| Запускает генерацию **отчета по отзывам о товарах**. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/marketing/plus-reviews#stat)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
-}
generateGoodsFeedbackReport : Maybe ReportFormatType -> Api.Data.GenerateGoodsFeedbackRequest -> Api.Request Api.Data.GenerateReportResponse
generateGoodsFeedbackReport format_query generateGoodsFeedbackRequest_body =
    Api.request
        "POST"
        "/reports/goods-feedback/generate"
        []
        [ ( "format", Maybe.map Api.Data.stringFromReportFormatType format_query ) ]
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeGenerateGoodsFeedbackRequest generateGoodsFeedbackRequest_body)))
        Api.Data.generateReportResponseDecoder


{-| Запускает генерацию **отчета по реализации** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#sales-report)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
-}
generateGoodsRealizationReport : Maybe ReportFormatType -> Api.Data.GenerateGoodsRealizationReportRequest -> Api.Request Api.Data.GenerateReportResponse
generateGoodsRealizationReport format_query generateGoodsRealizationReportRequest_body =
    Api.request
        "POST"
        "/reports/goods-realization/generate"
        []
        [ ( "format", Maybe.map Api.Data.stringFromReportFormatType format_query ) ]
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeGenerateGoodsRealizationReportRequest generateGoodsRealizationReportRequest_body)))
        Api.Data.generateReportResponseDecoder


{-| Запускает генерацию PDF-файла с ярлыками для переданных заказов. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  Узнать статус генерации и получить ссылку на готовый файл можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 1000 запросов в час| |-| 
-}
generateMassOrderLabelsReport : Maybe PageFormatType -> Api.Data.GenerateMassOrderLabelsRequest -> Api.Request Api.Data.GenerateReportResponse
generateMassOrderLabelsReport format_query generateMassOrderLabelsRequest_body =
    Api.request
        "POST"
        "/reports/documents/labels/generate"
        []
        [ ( "format", Maybe.map Api.Data.stringFromPageFormatType format_query ) ]
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeGenerateMassOrderLabelsRequest generateMassOrderLabelsRequest_body)))
        Api.Data.generateReportResponseDecoder


{-| Формирует ярлык‑наклейку для коробки в заказе и возвращает ярлык в PDF‑файле.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| 
-}
generateOrderLabel : Int -> Int -> Int -> Int -> Maybe PageFormatType -> Api.Request File
generateOrderLabel campaignId_path orderId_path shipmentId_path boxId_path format_query =
    Api.request
        "GET"
        "/campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes/{boxId}/label"
        [ ( "campaignId", String.fromInt campaignId_path ), ( "orderId", String.fromInt orderId_path ), ( "shipmentId", String.fromInt shipmentId_path ), ( "boxId", String.fromInt boxId_path ) ]
        [ ( "format", Maybe.map Api.Data.stringFromPageFormatType format_query ) ]
        []
        Nothing
        File.decoder


{-| Возвращает PDF-файл с ярлыками, которые нужно наклеить на коробки перед отгрузкой. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  На вход нужно передать идентификатор заказа и один необязательный параметр, который управляет версткой PDF-файла.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| 
-}
generateOrderLabels : Int -> Int -> Maybe PageFormatType -> Api.Request File
generateOrderLabels campaignId_path orderId_path format_query =
    Api.request
        "GET"
        "/campaigns/{campaignId}/orders/{orderId}/delivery/labels"
        [ ( "campaignId", String.fromInt campaignId_path ), ( "orderId", String.fromInt orderId_path ) ]
        [ ( "format", Maybe.map Api.Data.stringFromPageFormatType format_query ) ]
        []
        Nothing
        File.decoder


{-| Запускает генерацию **отчета «Цены на рынке»**.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
-}
generatePricesReport : Maybe ReportFormatType -> Api.Data.GeneratePricesReportRequest -> Api.Request Api.Data.GenerateReportResponse
generatePricesReport format_query generatePricesReportRequest_body =
    Api.request
        "POST"
        "/reports/prices/generate"
        []
        [ ( "format", Maybe.map Api.Data.stringFromReportFormatType format_query ) ]
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeGeneratePricesReportRequest generatePricesReportRequest_body)))
        Api.Data.generateReportResponseDecoder


{-| Запускает генерацию **сводного отчета по полкам** — рекламным блокам с баннером или видео и набором товаров. Подробнее о них читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/shelf).  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
-}
generateShelfsStatisticsReport : Maybe ReportFormatType -> Api.Data.GenerateShelfsStatisticsRequest -> Api.Request Api.Data.GenerateReportResponse
generateShelfsStatisticsReport format_query generateShelfsStatisticsRequest_body =
    Api.request
        "POST"
        "/reports/shelf-statistics/generate"
        []
        [ ( "format", Maybe.map Api.Data.stringFromReportFormatType format_query ) ]
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeGenerateShelfsStatisticsRequest generateShelfsStatisticsRequest_body)))
        Api.Data.generateReportResponseDecoder


{-| Запускает генерацию **отчета «Аналитика продаж»** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/shows-sales.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 10 запросов в час| |-| 
-}
generateShowsSalesReport : Maybe ReportFormatType -> Api.Data.GenerateShowsSalesReportRequest -> Api.Request Api.Data.GenerateReportResponse
generateShowsSalesReport format_query generateShowsSalesReportRequest_body =
    Api.request
        "POST"
        "/reports/shows-sales/generate"
        []
        [ ( "format", Maybe.map Api.Data.stringFromReportFormatType format_query ) ]
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeGenerateShowsSalesReportRequest generateShowsSalesReportRequest_body)))
        Api.Data.generateReportResponseDecoder


{-| Запускает генерацию **отчета по остаткам на складах**. Отчет содержит данные:  * Для модели FBY — об остатках на складах Маркета. * Для остальных моделей — об остатках на соответствующем складе магазина.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
-}
generateStocksOnWarehousesReport : Maybe ReportFormatType -> Api.Data.GenerateStocksOnWarehousesReportRequest -> Api.Request Api.Data.GenerateReportResponse
generateStocksOnWarehousesReport format_query generateStocksOnWarehousesReportRequest_body =
    Api.request
        "POST"
        "/reports/stocks-on-warehouses/generate"
        []
        [ ( "format", Maybe.map Api.Data.stringFromReportFormatType format_query ) ]
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeGenerateStocksOnWarehousesReportRequest generateStocksOnWarehousesReportRequest_body)))
        Api.Data.generateReportResponseDecoder


{-| Запускает генерацию **отчета по стоимости услуг** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports.html)  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**               |**Какие поля нужны**             | |-----------------------------|---------------------------------| |По дате начисления услуги    |`dateFrom` и `dateTo`            | |По дате формирования акта    |`year` и `month`                 |  Заказать отчеты обоих типов одним запросом нельзя.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
-}
generateUnitedMarketplaceServicesReport : Maybe ReportFormatType -> Api.Data.GenerateUnitedMarketplaceServicesReportRequest -> Api.Request Api.Data.GenerateReportResponse
generateUnitedMarketplaceServicesReport format_query generateUnitedMarketplaceServicesReportRequest_body =
    Api.request
        "POST"
        "/reports/united-marketplace-services/generate"
        []
        [ ( "format", Maybe.map Api.Data.stringFromReportFormatType format_query ) ]
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeGenerateUnitedMarketplaceServicesReportRequest generateUnitedMarketplaceServicesReportRequest_body)))
        Api.Data.generateReportResponseDecoder


{-| Запускает генерацию **отчета по платежам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/transactions.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**           |**Какие поля нужны**                   | |-------------------------|---------------------------------------| |О платежах за период     |`dateFrom` и `dateTo`                  | |О платежном поручении    |`bankOrderId` и `bankOrderDateTime`    |  Заказать отчеты обоих типов одним запросом нельзя.  |**⚙️ Лимит:** 100 запросов в час| |-| 
-}
generateUnitedNettingReport : Maybe ReportFormatType -> Api.Data.GenerateUnitedNettingReportRequest -> Api.Request Api.Data.GenerateReportResponse
generateUnitedNettingReport format_query generateUnitedNettingReportRequest_body =
    Api.request
        "POST"
        "/reports/united-netting/generate"
        []
        [ ( "format", Maybe.map Api.Data.stringFromReportFormatType format_query ) ]
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeGenerateUnitedNettingReportRequest generateUnitedNettingReportRequest_body)))
        Api.Data.generateReportResponseDecoder


{-| Запускает генерацию **отчета по заказам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/orders.html)  {% note info \"\" %}  Это новый отчет. Раньше мы так называли генерацию детальной информации по заказам. [Как получить детальную информацию по заказам](../../reference/stats/getOrdersStats.md)  {% endnote %}  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
-}
generateUnitedOrdersReport : Maybe ReportFormatType -> Api.Data.GenerateUnitedOrdersRequest -> Api.Request Api.Data.GenerateReportResponse
generateUnitedOrdersReport format_query generateUnitedOrdersRequest_body =
    Api.request
        "POST"
        "/reports/united-orders/generate"
        []
        [ ( "format", Maybe.map Api.Data.stringFromReportFormatType format_query ) ]
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeGenerateUnitedOrdersRequest generateUnitedOrdersRequest_body)))
        Api.Data.generateReportResponseDecoder


{-| {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет максимально быстро получить информацию обо всех предложениях магазина, размещенных на Маркете. Возвращает результат в виде сегментов нефиксированного размера.  В ответе на запрос для каждого найденного предложения указывается URL и наименование этого предложения, его цена и валюта, в которой она указана, карточка модели Яндекс Маркета, с которой соотнесено предложение, а также аукционные ставки на него.  {% note info %}  Количество предложений считается по данным за последние семь дней (не включая сегодня).  Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений.  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лимит товаров — среднее количество таваров в каталоге за неделю * 25) 
-}
getAllOffers : Int -> Maybe Int -> Maybe Int -> Api.Request Api.Data.GetAllOffersResponse
getAllOffers campaignId_path feedId_query chunk_query =
    Api.request
        "GET"
        "/campaigns/{campaignId}/offers/all"
        [ ( "campaignId", String.fromInt campaignId_path ) ]
        [ ( "feedId", Maybe.map String.fromInt feedId_query ), ( "chunk", Maybe.map String.fromInt chunk_query ) ]
        []
        Nothing
        Api.Data.getAllOffersResponseDecoder


{-| Возвращает значения ставок для заданных товаров.  {% note warning \"\" %}  В ответе возвращаются значения только тех ставок, которые вы установили через запрос [PUT businesses/{businessId}/bids](../../reference/bids/putBidsForBusiness.md). Получить информацию по кампаниям, созданным в кабинете, не получится.  {% endnote %}  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-| 
-}
getBidsInfoForBusiness : Int -> Maybe String -> Maybe Int -> Maybe Api.Data.GetBidsInfoRequest -> Api.Request Api.Data.GetBidsInfoResponse
getBidsInfoForBusiness businessId_path pageToken_query limit_query getBidsInfoRequest_body =
    Api.request
        "POST"
        "/businesses/{businessId}/bids/info"
        [ ( "businessId", String.fromInt businessId_path ) ]
        [ ( "page_token", Maybe.map identity pageToken_query ), ( "limit", Maybe.map String.fromInt limit_query ) ]
        []
        (Maybe.map Http.jsonBody (Maybe.map Api.Data.encodeGetBidsInfoRequest getBidsInfoRequest_body))
        Api.Data.getBidsInfoResponseDecoder


{-| Возвращает рекомендованные ставки для заданных товаров — такие ставки обеспечивают вашим предложениям определенную долю показов, если цена не превышает рекомендованную.  Для одного товара может возвращаться одна рекомендованная ставка или несколько. Во втором случае разные ставки предназначены для достижения разной доли показов.  Если товар только добавлен в каталог, но пока не продается, рекомендованной ставки для него не будет.  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-| 
-}
getBidsRecommendations : Int -> Api.Data.GetBidsRecommendationsRequest -> Api.Request Api.Data.GetBidsRecommendationsResponse
getBidsRecommendations businessId_path getBidsRecommendationsRequest_body =
    Api.request
        "POST"
        "/businesses/{businessId}/bids/recommendations"
        [ ( "businessId", String.fromInt businessId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeGetBidsRecommendationsRequest getBidsRecommendationsRequest_body)))
        Api.Data.getBidsRecommendationsResponseDecoder


{-| Возвращает список товаров, которые находятся в карантине по **основной цене**. Основная цена задается в каталоге и действует во всех магазинах кабинета.  Проверьте цену каждого из товаров, который попал в карантин. Если ошибки нет и цена правильная, подтвердите ее с помощью запроса [POST businesses/{businessId}/price-quarantine/confirm](../../reference/business-assortment/confirmBusinessPrices.md). Если цена в самом деле ошибочная, установите верную с помощью запроса [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).  {% note info \"𝓠 Что такое карантин?\" %}  𝓐 Товар попадает в карантин, если его цена меняется слишком резко или слишком сильно отличается от рыночной. [Подробнее](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  {% endnote %}  В запросе можно использовать фильтры.  Результаты возвращаются постранично.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-| 
-}
getBusinessQuarantineOffers : Int -> Maybe String -> Maybe Int -> Api.Data.GetQuarantineOffersRequest -> Api.Request Api.Data.GetQuarantineOffersResponse
getBusinessQuarantineOffers businessId_path pageToken_query limit_query getQuarantineOffersRequest_body =
    Api.request
        "POST"
        "/businesses/{businessId}/price-quarantine"
        [ ( "businessId", String.fromInt businessId_path ) ]
        [ ( "page_token", Maybe.map identity pageToken_query ), ( "limit", Maybe.map String.fromInt limit_query ) ]
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeGetQuarantineOffersRequest getQuarantineOffersRequest_body)))
        Api.Data.getQuarantineOffersResponseDecoder


{-| Возвращает информацию о настройках кабинета, идентификатор которого указан в запросе. |**⚙️ Лимит:** 1000 запросов в час| |-| 
-}
getBusinessSettings : Int -> Api.Request Api.Data.GetBusinessSettingsResponse
getBusinessSettings businessId_path =
    Api.request
        "POST"
        "/businesses/{businessId}/settings"
        [ ( "businessId", String.fromInt businessId_path ) ]
        []
        []
        Nothing
        Api.Data.getBusinessSettingsResponseDecoder


{-| Возвращает информацию о магазине. |**⚙️ Лимит:** 1000 запросов в час| |-| 
-}
getCampaign : Int -> Api.Request Api.Data.GetCampaignResponse
getCampaign campaignId_path =
    Api.request
        "GET"
        "/campaigns/{campaignId}"
        [ ( "campaignId", String.fromInt campaignId_path ) ]
        []
        []
        Nothing
        Api.Data.getCampaignResponseDecoder


{-| Возвращает список логинов, у которых есть доступ к магазину. |**⚙️ Лимит:** 1000 запросов в час| |-| 
-}
getCampaignLogins : Int -> Api.Request Api.Data.GetCampaignLoginsResponse
getCampaignLogins campaignId_path =
    Api.request
        "GET"
        "/campaigns/{campaignId}/logins"
        [ ( "campaignId", String.fromInt campaignId_path ) ]
        []
        []
        Nothing
        Api.Data.getCampaignLoginsResponseDecoder


{-| Возвращает список товаров, которые размещены в заданном магазине. Для каждого товара указываются параметры размещения.  |**⚙️ Лимит:** 5000 товаров в минуту| |-| 
-}
getCampaignOffers : Int -> Maybe String -> Maybe Int -> Api.Data.GetCampaignOffersRequest -> Api.Request Api.Data.GetCampaignOffersResponse
getCampaignOffers campaignId_path pageToken_query limit_query getCampaignOffersRequest_body =
    Api.request
        "POST"
        "/campaigns/{campaignId}/offers"
        [ ( "campaignId", String.fromInt campaignId_path ) ]
        [ ( "page_token", Maybe.map identity pageToken_query ), ( "limit", Maybe.map String.fromInt limit_query ) ]
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeGetCampaignOffersRequest getCampaignOffersRequest_body)))
        Api.Data.getCampaignOffersResponseDecoder


{-| Возвращает список товаров, которые находятся в карантине по цене, установленной в заданном магазине.  Проверьте цену каждого из товаров, который попал в карантин. Если ошибки нет и цена правильная, подтвердите ее с помощью запроса [POST campaigns/{campaignId}/price-quarantine/confirm](../../reference/assortment/confirmCampaignPrices.md). Если цена в самом деле ошибочная, установите верную с помощью запроса [POST campaigns/{campaignId}/offer-prices/updates](../../reference/assortment/updatePrices.md).  {% note info \"𝓠 Что такое карантин?\" %}  𝓐 Товар попадает в карантин, если его цена меняется слишком резко или слишком сильно отличается от рыночной. [Подробнее](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  {% endnote %}  В запросе можно использовать фильтры.  Результаты возвращаются постранично.  |**⚙️ Лимит:** 5000 товаров в минуту| |-| 
-}
getCampaignQuarantineOffers : Int -> Maybe String -> Maybe Int -> Api.Data.GetQuarantineOffersRequest -> Api.Request Api.Data.GetQuarantineOffersResponse
getCampaignQuarantineOffers campaignId_path pageToken_query limit_query getQuarantineOffersRequest_body =
    Api.request
        "POST"
        "/campaigns/{campaignId}/price-quarantine"
        [ ( "campaignId", String.fromInt campaignId_path ) ]
        [ ( "page_token", Maybe.map identity pageToken_query ), ( "limit", Maybe.map String.fromInt limit_query ) ]
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeGetQuarantineOffersRequest getQuarantineOffersRequest_body)))
        Api.Data.getQuarantineOffersResponseDecoder


{-| {% note warning \"\" %}  Этот метод устарел. Вместо него используйте [GET campaigns/{campaignId}/settings](../../reference/campaigns/getCampaignSettings.md).  {% endnote %}  Возвращает регион, в котором находится магазин. |**⚙️ Лимит:** 5 000 запросов в час| |-| 
-}
getCampaignRegion : Int -> Api.Request Api.Data.GetCampaignRegionResponse
getCampaignRegion campaignId_path =
    Api.request
        "GET"
        "/campaigns/{campaignId}/region"
        [ ( "campaignId", String.fromInt campaignId_path ) ]
        []
        []
        Nothing
        Api.Data.getCampaignRegionResponseDecoder


{-| Возвращает информацию о настройках магазина, идентификатор которого указан в запросе. |**⚙️ Лимит:** 1000 запросов в час| |-| 
-}
getCampaignSettings : Int -> Api.Request Api.Data.GetCampaignSettingsResponse
getCampaignSettings campaignId_path =
    Api.request
        "GET"
        "/campaigns/{campaignId}/settings"
        [ ( "campaignId", String.fromInt campaignId_path ) ]
        []
        []
        Nothing
        Api.Data.getCampaignSettingsResponseDecoder


{-| Возвращает список магазинов, к которым имеет доступ пользователь — владелец авторизационного токена, использованного в запросе. Для агентских пользователей список состоит из подагентских магазинов. |**⚙️ Лимит:** 1000 запросов в час| |-| 
-}
getCampaigns : Maybe Int -> Maybe Int -> Api.Request Api.Data.GetCampaignsResponse
getCampaigns page_query pageSize_query =
    Api.request
        "GET"
        "/campaigns"
        []
        [ ( "page", Maybe.map String.fromInt page_query ), ( "pageSize", Maybe.map String.fromInt pageSize_query ) ]
        []
        Nothing
        Api.Data.getCampaignsResponseDecoder


{-| Возвращает список магазинов, к которым у пользователя с указанным логином есть доступ. |**⚙️ Лимит:** 100 запросов в час| |-| 
-}
getCampaignsByLogin : String -> Maybe Int -> Maybe Int -> Api.Request Api.Data.GetCampaignsResponse
getCampaignsByLogin login_path page_query pageSize_query =
    Api.request
        "GET"
        "/campaigns/by_login/{login}"
        [ ( "login", identity login_path ) ]
        [ ( "page", Maybe.map String.fromInt page_query ), ( "pageSize", Maybe.map String.fromInt pageSize_query ) ]
        []
        Nothing
        Api.Data.getCampaignsResponseDecoder


{-| Возвращает лимит на установку [кванта](*quantum) и минимального количества товаров в заказе, которые вы можете задать для товаров указанных категорий.  Если вы передадите значение кванта или минимального количества товаров выше установленного Маркетом ограничения, товар будет скрыт с витрины.  Подробнее о том, как продавать товары по несколько штук, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/fields/quantum).  |**⚙️ Лимит:** 1 000 запросов в час| |-| 
-}
getCategoriesMaxSaleQuantum : Api.Data.GetCategoriesMaxSaleQuantumRequest -> Api.Request Api.Data.GetCategoriesMaxSaleQuantumResponse
getCategoriesMaxSaleQuantum getCategoriesMaxSaleQuantumRequest_body =
    Api.request
        "POST"
        "/categories/max-sale-quantum"
        []
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeGetCategoriesMaxSaleQuantumRequest getCategoriesMaxSaleQuantumRequest_body)))
        Api.Data.getCategoriesMaxSaleQuantumResponseDecoder


{-| Возвращает дерево категорий Маркета.  |**⚙️ Лимит:** 1 000 запросов в час| |-| 
-}
getCategoriesTree : Maybe Api.Data.GetCategoriesRequest -> Api.Request Api.Data.GetCategoriesResponse
getCategoriesTree getCategoriesRequest_body =
    Api.request
        "POST"
        "/categories/tree"
        []
        []
        []
        (Maybe.map Http.jsonBody (Maybe.map Api.Data.encodeGetCategoriesRequest getCategoriesRequest_body))
        Api.Data.getCategoriesResponseDecoder


{-| Возвращает список характеристик с допустимыми значениями для заданной категории.  |**⚙️ Лимит:** 50 категорий в минуту | |-| 
-}
getCategoryContentParameters : Int -> Api.Request Api.Data.GetCategoryContentParametersResponse
getCategoryContentParameters categoryId_path =
    Api.request
        "POST"
        "/category/{categoryId}/parameters"
        [ ( "categoryId", String.fromInt categoryId_path ) ]
        []
        []
        Nothing
        Api.Data.getCategoryContentParametersResponseDecoder


{-| Возвращает историю сообщений в чате с покупателем.  |**⚙️ Лимит:** 10000 запросов в час| |-| 
-}
getChatHistory : Int -> Int -> Maybe String -> Maybe Int -> Api.Data.GetChatHistoryRequest -> Api.Request Api.Data.GetChatHistoryResponse
getChatHistory businessId_path chatId_query pageToken_query limit_query getChatHistoryRequest_body =
    Api.request
        "POST"
        "/businesses/{businessId}/chats/history"
        [ ( "businessId", String.fromInt businessId_path ) ]
        [ ( "chatId", Just <| String.fromInt chatId_query ), ( "page_token", Maybe.map identity pageToken_query ), ( "limit", Maybe.map String.fromInt limit_query ) ]
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeGetChatHistoryRequest getChatHistoryRequest_body)))
        Api.Data.getChatHistoryResponseDecoder


{-| Возвращает ваши чаты с покупателями.  |**⚙️ Лимит:** 10000 запросов в час| |-| 
-}
getChats : Int -> Maybe String -> Maybe Int -> Api.Data.GetChatsRequest -> Api.Request Api.Data.GetChatsResponse
getChats businessId_path pageToken_query limit_query getChatsRequest_body =
    Api.request
        "POST"
        "/businesses/{businessId}/chats"
        [ ( "businessId", String.fromInt businessId_path ) ]
        [ ( "page_token", Maybe.map identity pageToken_query ), ( "limit", Maybe.map String.fromInt limit_query ) ]
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeGetChatsRequest getChatsRequest_body)))
        Api.Data.getChatsResponseDecoder


{-| Возвращает справочник служб доставки: идентификаторы и наименования. |**⚙️ Лимит:** 5 000 запросов в час| |-| 
-}
getDeliveryServices : Api.Request Api.Data.GetDeliveryServicesResponse
getDeliveryServices =
    Api.request
        "GET"
        "/delivery/services"
        []
        []
        []
        Nothing
        Api.Data.getDeliveryServicesResponseDecoder


{-| {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает информацию о прайс-листе, размещенном на Маркете для заданного магазина. Также ресурс возвращает результаты автоматических проверок прайс-листа. |**⚙️ Лимит:** 1000 запросов в час| |-| 
-}
getFeed : Int -> Int -> Api.Request Api.Data.GetFeedResponse
getFeed campaignId_path feedId_path =
    Api.request
        "GET"
        "/campaigns/{campaignId}/feeds/{feedId}"
        [ ( "campaignId", String.fromInt campaignId_path ), ( "feedId", String.fromInt feedId_path ) ]
        []
        []
        Nothing
        Api.Data.getFeedResponseDecoder


{-| {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает отчет по индексации прайс-листа для заданного магазина. Отчет позволяет получить статистику загрузки прайс-листа и результаты его автоматических проверок.  Данные в отчете возвращаются в порядке убывания значений параметра `generationId`.  |**⚙️ Лимит:** 1 000 запросов в час| |-| 
-}
getFeedIndexLogs : Int -> Int -> Maybe Int -> Maybe Posix -> Maybe Posix -> Maybe FeedIndexLogsStatusType -> Api.Request Api.Data.GetFeedIndexLogsResponse
getFeedIndexLogs campaignId_path feedId_path limit_query publishedTimeFrom_query publishedTimeTo_query status_query =
    Api.request
        "GET"
        "/campaigns/{campaignId}/feeds/{feedId}/index-logs"
        [ ( "campaignId", String.fromInt campaignId_path ), ( "feedId", String.fromInt feedId_path ) ]
        [ ( "limit", Maybe.map String.fromInt limit_query ), ( "published_time_from", Maybe.map Api.Time.dateTimeToString publishedTimeFrom_query ), ( "published_time_to", Maybe.map Api.Time.dateTimeToString publishedTimeTo_query ), ( "status", Maybe.map Api.Data.stringFromFeedIndexLogsStatusType status_query ) ]
        []
        Nothing
        Api.Data.getFeedIndexLogsResponseDecoder


{-| {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает новые и обновленные отзывы о магазине на Маркете.  Результаты возвращаются постранично, одна страница содержит не более 20 отзывов. Выходные данные содержат идентификатор следующей страницы.  |**⚙️ Лимит:** 100 запросов в час| |-| 
-}
getFeedbackAndCommentUpdates : Int -> Maybe String -> Maybe Int -> Maybe Posix -> Api.Request Api.Data.GetFeedbackListResponse
getFeedbackAndCommentUpdates campaignId_path pageToken_query limit_query fromDate_query =
    Api.request
        "GET"
        "/campaigns/{campaignId}/feedback/updates"
        [ ( "campaignId", String.fromInt campaignId_path ) ]
        [ ( "page_token", Maybe.map identity pageToken_query ), ( "limit", Maybe.map String.fromInt limit_query ), ( "from_date", Maybe.map Api.Time.dateToString fromDate_query ) ]
        []
        Nothing
        Api.Data.getFeedbackListResponseDecoder


{-| {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает список прайс-листов, размещенных на Маркете для магазина. Также ресурс возвращает результаты автоматических проверок прайс-листов. |**⚙️ Лимит:** 1000 запросов в час| |-| 
-}
getFeeds : Int -> Api.Request Api.Data.GetFeedsResponse
getFeeds campaignId_path =
    Api.request
        "GET"
        "/campaigns/{campaignId}/feeds"
        [ ( "campaignId", String.fromInt campaignId_path ) ]
        []
        []
        Nothing
        Api.Data.getFeedsResponseDecoder


{-| Возвращает комментарии к отзыву.  Результаты возвращаются постранично, одна страница содержит не более 20 комментариев.  Комментарии расположены в порядке публикации, поэтому вы можете передавать определенный идентификатор страницы в `page_token`, если вы получали его ранее.  |**⚙️ Лимит:** 1 000 запросов в час| |-| 
-}
getGoodsFeedbackComments : Int -> Maybe String -> Maybe Int -> Api.Data.GetGoodsFeedbackCommentsRequest -> Api.Request Api.Data.GetGoodsFeedbackCommentsResponse
getGoodsFeedbackComments businessId_path pageToken_query limit_query getGoodsFeedbackCommentsRequest_body =
    Api.request
        "POST"
        "/businesses/{businessId}/goods-feedback/comments"
        [ ( "businessId", String.fromInt businessId_path ) ]
        [ ( "page_token", Maybe.map identity pageToken_query ), ( "limit", Maybe.map String.fromInt limit_query ) ]
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeGetGoodsFeedbackCommentsRequest getGoodsFeedbackCommentsRequest_body)))
        Api.Data.getGoodsFeedbackCommentsResponseDecoder


{-| Возвращает все отзывы о товарах продавца по указанным фильтрам.  Результаты возвращаются постранично, одна страница содержит не более 20 отзывов.  Отзывы расположены в порядке публикации, поэтому вы можете передавать определенный идентификатор страницы в `page_token`, если вы получали его ранее.  |**⚙️ Лимит:** 1 000 запросов в час| |-| 
-}
getGoodsFeedbacks : Int -> Maybe String -> Maybe Int -> Maybe Api.Data.GetGoodsFeedbackRequest -> Api.Request Api.Data.GetGoodsFeedbackResponse
getGoodsFeedbacks businessId_path pageToken_query limit_query getGoodsFeedbackRequest_body =
    Api.request
        "POST"
        "/businesses/{businessId}/goods-feedback"
        [ ( "businessId", String.fromInt businessId_path ) ]
        [ ( "page_token", Maybe.map identity pageToken_query ), ( "limit", Maybe.map String.fromInt limit_query ) ]
        []
        (Maybe.map Http.jsonBody (Maybe.map Api.Data.encodeGetGoodsFeedbackRequest getGoodsFeedbackRequest_body))
        Api.Data.getGoodsFeedbackResponseDecoder


{-| Возвращает подробный отчет по товарам, которые вы разместили на Маркете. С помощью отчета вы можете узнать, например, об остатках на складе, об условиях хранения ваших товаров и т. д.  |**⚙️ Лимит:** 5000 товаров в минуту| |-| 
-}
getGoodsStats : Int -> Api.Data.GetGoodsStatsRequest -> Api.Request Api.Data.GetGoodsStatsResponse
getGoodsStats campaignId_path getGoodsStatsRequest_body =
    Api.request
        "POST"
        "/campaigns/{campaignId}/stats/skus"
        [ ( "campaignId", String.fromInt campaignId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeGetGoodsStatsRequest getGoodsStatsRequest_body)))
        Api.Data.getGoodsStatsResponseDecoder


{-| Возвращает список скрытых вами товаров для заданного магазина.  В списке будут товары, скрытые любым способом — по API, с помощью YML-фида, в кабинете и так далее.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-| 
-}
getHiddenOffers : Int -> Maybe (List String) -> Maybe String -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Api.Request Api.Data.GetHiddenOffersResponse
getHiddenOffers campaignId_path offerId_query pageToken_query limit_query offset_query page_query pageSize_query =
    Api.request
        "GET"
        "/campaigns/{campaignId}/hidden-offers"
        [ ( "campaignId", String.fromInt campaignId_path ) ]
        [ ( "offer_id", Maybe.map (String.join "," << List.map identity) offerId_query ), ( "page_token", Maybe.map identity pageToken_query ), ( "limit", Maybe.map String.fromInt limit_query ), ( "offset", Maybe.map String.fromInt offset_query ), ( "page", Maybe.map String.fromInt page_query ), ( "pageSize", Maybe.map String.fromInt pageSize_query ) ]
        []
        Nothing
        Api.Data.getHiddenOffersResponseDecoder


{-| Возвращает сведения о состоянии контента для заданных товаров:  * создана ли карточка товара и в каком она статусе; * заполненность карточки в процентах; * переданные характеристики товаров; * есть ли ошибки или предупреждения, связанные с контентом; * рекомендации по заполнению карточки.  |**⚙️ Лимит:** 600 запросов в минуту| |-| 
-}
getOfferCardsContentStatus : Int -> Maybe String -> Maybe Int -> Maybe Api.Data.GetOfferCardsContentStatusRequest -> Api.Request Api.Data.GetOfferCardsContentStatusResponse
getOfferCardsContentStatus businessId_path pageToken_query limit_query getOfferCardsContentStatusRequest_body =
    Api.request
        "POST"
        "/businesses/{businessId}/offer-cards"
        [ ( "businessId", String.fromInt businessId_path ) ]
        [ ( "page_token", Maybe.map identity pageToken_query ), ( "limit", Maybe.map String.fromInt limit_query ) ]
        []
        (Maybe.map Http.jsonBody (Maybe.map Api.Data.encodeGetOfferCardsContentStatusRequest getOfferCardsContentStatusRequest_body))
        Api.Data.getOfferCardsContentStatusResponseDecoder


{-| {% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md).  {% endnote %}  Для каждого товара, который вы размещаете на Маркете, возвращается информация о карточках Маркета, к которым привязан этот товар:  * Идентификатор текущей карточки (marketSku), карточки, которая проходит модерацию и последней отклоненной карточки. * Описание товара, которое указано на карточке Маркета. Например, размер упаковки и вес товара.  Результаты возвращаются постранично. Выходные данные содержат идентификатор следующей страницы.  {% note info %}  Количество товаров в каталоге магазина считается по данным за последние семь дней (не включая сегодня).  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лимит товаров — количество товаров в каталоге магазина * 25) 
-}
getOfferMappingEntries : Int -> Maybe (List String) -> Maybe (List String) -> Maybe OfferMappingKindType -> Maybe (List OfferProcessingStatusType) -> Maybe (List OfferAvailabilityStatusType) -> Maybe (List Int) -> Maybe (List String) -> Maybe String -> Maybe Int -> Api.Request Api.Data.GetOfferMappingEntriesResponse
getOfferMappingEntries campaignId_path offerId_query shopSku_query mappingKind_query status_query availability_query categoryId_query vendor_query pageToken_query limit_query =
    Api.request
        "GET"
        "/campaigns/{campaignId}/offer-mapping-entries"
        [ ( "campaignId", String.fromInt campaignId_path ) ]
        [ ( "offer_id", Maybe.map (String.join "," << List.map identity) offerId_query ), ( "shop_sku", Maybe.map (String.join "," << List.map identity) shopSku_query ), ( "mapping_kind", Maybe.map Api.Data.stringFromOfferMappingKindType mappingKind_query ), ( "status", Maybe.map (String.join "," << List.map Api.Data.stringFromOfferProcessingStatusType) status_query ), ( "availability", Maybe.map (String.join "," << List.map Api.Data.stringFromOfferAvailabilityStatusType) availability_query ), ( "category_id", Maybe.map (String.join "," << List.map String.fromInt) categoryId_query ), ( "vendor", Maybe.map (String.join "," << List.map identity) vendor_query ), ( "page_token", Maybe.map identity pageToken_query ), ( "limit", Maybe.map String.fromInt limit_query ) ]
        []
        Nothing
        Api.Data.getOfferMappingEntriesResponseDecoder


{-| Возвращает список товаров в каталоге, их категории на Маркете и характеристики каждого товара.  Можно использовать тремя способами: * задать список интересующих SKU; * задать фильтр — в этом случае результаты возвращаются постранично; * не передавать тело запроса, чтобы получить список всех товаров в каталоге.  |**⚙️ Лимит:** 600 запросов в минуту, не более 200 товаров в одном запросе| |-| 
-}
getOfferMappings : Int -> Maybe String -> Maybe Int -> Maybe Api.Data.GetOfferMappingsRequest -> Api.Request Api.Data.GetOfferMappingsResponse
getOfferMappings businessId_path pageToken_query limit_query getOfferMappingsRequest_body =
    Api.request
        "POST"
        "/businesses/{businessId}/offer-mappings"
        [ ( "businessId", String.fromInt businessId_path ) ]
        [ ( "page_token", Maybe.map identity pageToken_query ), ( "limit", Maybe.map String.fromInt limit_query ) ]
        []
        (Maybe.map Http.jsonBody (Maybe.map Api.Data.encodeGetOfferMappingsRequest getOfferMappingsRequest_body))
        Api.Data.getOfferMappingsResponseDecoder


{-| Метод возвращает рекомендации нескольких типов.  **1. Порог для привлекательной цены. Он нужен для участия в софинансировании скидок.**  Показывает, какие **цены для участия** нужно установить, чтобы получить максимальные шансы на срабатывание скидок, софинансируемых Маркетом. [Как это устроено](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#sponsored-discounts)  **2. Оценка привлекательности цен на витрине.**  Привлекательность влияет на вероятность срабатывания скидок за счет Маркета. [Как это устроено](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#validation)  В запросе можно использовать фильтры.  Результаты возвращаются постранично.  |**⚙️ Лимит:** 100 запросов в минуту| |-| 
-}
getOfferRecommendations : Int -> Maybe String -> Maybe Int -> Api.Data.GetOfferRecommendationsRequest -> Api.Request Api.Data.GetOfferRecommendationsResponse
getOfferRecommendations businessId_path pageToken_query limit_query getOfferRecommendationsRequest_body =
    Api.request
        "POST"
        "/businesses/{businessId}/offers/recommendations"
        [ ( "businessId", String.fromInt businessId_path ) ]
        [ ( "page_token", Maybe.map identity pageToken_query ), ( "limit", Maybe.map String.fromInt limit_query ) ]
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeGetOfferRecommendationsRequest getOfferRecommendationsRequest_body)))
        Api.Data.getOfferRecommendationsResponseDecoder


{-| {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет фильтровать информацию о предложениях магазина, размещенных на Маркете, и искать предложения по заданному поисковому запросу.  Поиск предложений, размещенных на Маркете, работает по поисковому запросу аналогично поиску Маркета. Результаты возвращаются с использованием пейджера.  В ответе на запрос для каждого найденного предложения указывается URL и наименование этого предложения, его цена и валюта, в которой она указана, карточка модели Маркета, с которой соотнесено предложение, и аукционные ставки на него.  {% note info %}  Из-за особенностей поиска Маркета иногда на последних страницах пейджера фактическое количество результатов оказывается меньше количества, указанного ранее на предыдущих страницах.  В связи с этим настоятельно рекомендуется анализировать содержимое параметра pager для каждой полученной страницы.  {% endnote %}  {% note info %}  Количество предложений считается по данным за последние семь дней (не включая сегодня).  Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений.  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лисит товаров — среднее количество таваров в каталоге за неделю * 25) 
-}
getOffers : Int -> Maybe String -> Maybe Int -> Maybe String -> Maybe CurrencyType -> Maybe Bool -> Maybe Int -> Maybe Int -> Api.Request Api.Data.GetOffersResponse
getOffers campaignId_path query_query feedId_query shopCategoryId_query currency_query matched_query page_query pageSize_query =
    Api.request
        "GET"
        "/campaigns/{campaignId}/offers"
        [ ( "campaignId", String.fromInt campaignId_path ) ]
        [ ( "query", Maybe.map identity query_query ), ( "feedId", Maybe.map String.fromInt feedId_query ), ( "shopCategoryId", Maybe.map identity shopCategoryId_query ), ( "currency", Maybe.map Api.Data.stringFromCurrencyType currency_query ), ( "matched", Maybe.map (\val -> if val then "true" else "false") matched_query ), ( "page", Maybe.map String.fromInt page_query ), ( "pageSize", Maybe.map String.fromInt pageSize_query ) ]
        []
        Nothing
        Api.Data.getOffersResponseDecoder


{-| Возвращает информацию о заказе.  Получить более подробную информацию о покупателе и его номере телефона можно с помощью запроса [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| 
-}
getOrder : Int -> Int -> Api.Request Api.Data.GetOrderResponse
getOrder campaignId_path orderId_path =
    Api.request
        "GET"
        "/campaigns/{campaignId}/orders/{orderId}"
        [ ( "campaignId", String.fromInt campaignId_path ), ( "orderId", String.fromInt orderId_path ) ]
        []
        []
        Nothing
        Api.Data.getOrderResponseDecoder


{-| Возвращает информацию о покупателе по идентификатору заказа.  {% note info \"\" %}  Чтобы получить информацию о покупателе, который является физическим лицом, воспользуйтесь запросом [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).  {% endnote %}  Получить данные можно, только если заказ находится в статусе `PROCESSING`, `DELIVERY`, `PICKUP` или `DELIVERED`.  Если у вас настроена работа с push-компонентом, Маркет отправит уведомление о смене статуса заказа с помощью запроса [POST order/status](../../pushapi/reference/postOrderStatus.md).  |**⚙️ Лимит:** 3 000 запросов в час| |-| 
-}
getOrderBusinessBuyerInfo : Int -> Int -> Api.Request Api.Data.GetBusinessBuyerInfoResponse
getOrderBusinessBuyerInfo campaignId_path orderId_path =
    Api.request
        "POST"
        "/campaigns/{campaignId}/orders/{orderId}/business-buyer"
        [ ( "campaignId", String.fromInt campaignId_path ), ( "orderId", String.fromInt orderId_path ) ]
        []
        []
        Nothing
        Api.Data.getBusinessBuyerInfoResponseDecoder


{-| Возвращает информацию о документах по идентификатору заказа.  Получить данные можно после того, как заказ перейдет в статус `DELIVERED`.  Если у вас настроена работа с push-компонентом, Маркет отправит уведомление о смене статуса заказа с помощью запроса [POST order/status](../../pushapi/reference/postOrderStatus.md).  |**⚙️ Лимит:** 3 000 запросов в час| |-| 
-}
getOrderBusinessDocumentsInfo : Int -> Int -> Api.Request Api.Data.GetBusinessDocumentsInfoResponse
getOrderBusinessDocumentsInfo campaignId_path orderId_path =
    Api.request
        "POST"
        "/campaigns/{campaignId}/orders/{orderId}/documents"
        [ ( "campaignId", String.fromInt campaignId_path ), ( "orderId", String.fromInt orderId_path ) ]
        []
        []
        Nothing
        Api.Data.getBusinessDocumentsInfoResponseDecoder


{-| Возвращает информацию на ярлыках, которые клеятся на коробки в заказе.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| 
-}
getOrderLabelsData : Int -> Int -> Api.Request Api.Data.GetOrderLabelsDataResponse
getOrderLabelsData campaignId_path orderId_path =
    Api.request
        "GET"
        "/campaigns/{campaignId}/orders/{orderId}/delivery/labels/data"
        [ ( "campaignId", String.fromInt campaignId_path ), ( "orderId", String.fromInt orderId_path ) ]
        []
        []
        Nothing
        Api.Data.getOrderLabelsDataResponseDecoder


{-| Возвращает информацию о заказах. Запрос можно использовать, чтобы узнать, нет ли новых заказов.  Доступна фильтрация по нескольким характеристикам заказов:  * дате оформления;  * статусу;  * идентификаторам заказов;  * этапу обработки или причине отмены;  * типу (настоящий или тестовый);  * дате отгрузки в службу доставки;  * дате и времени обновления заказа.  Информация о заказах, доставленных или отмененных больше 30 дней назад, не возвращается. Ее можно получить с помощью запроса информации об отдельном заказе [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) (если у вас есть идентификатор заказа) или запроса отчета по заказам [POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md).  Максимальный диапазон дат за один запрос к ресурсу — 30 дней. Максимальное количество заказов в выходных данных запроса — 50.  Результаты возвращаются постранично. Для навигации по страницам используйте параметры `page_token` и `limit`.  Получить более подробную информацию о покупателе и его номере телефона можно с помощью запроса [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| 
-}
getOrders : Int -> Maybe (List Int) -> Maybe (List OrderStatusType) -> Maybe (List OrderSubstatusType) -> Maybe Posix -> Maybe Posix -> Maybe Posix -> Maybe Posix -> Maybe Posix -> Maybe Posix -> Maybe OrderDeliveryDispatchType -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe OrderBuyerType -> Maybe Int -> Maybe Int -> Maybe String -> Maybe Int -> Api.Request Api.Data.GetOrdersResponse
getOrders campaignId_path orderIds_query status_query substatus_query fromDate_query toDate_query supplierShipmentDateFrom_query supplierShipmentDateTo_query updatedAtFrom_query updatedAtTo_query dispatchType_query fake_query hasCis_query onlyWaitingForCancellationApprove_query onlyEstimatedDelivery_query buyerType_query page_query pageSize_query pageToken_query limit_query =
    Api.request
        "GET"
        "/campaigns/{campaignId}/orders"
        [ ( "campaignId", String.fromInt campaignId_path ) ]
        [ ( "orderIds", Maybe.map (String.join "," << List.map String.fromInt) orderIds_query ), ( "status", Maybe.map (String.join "," << List.map Api.Data.stringFromOrderStatusType) status_query ), ( "substatus", Maybe.map (String.join "," << List.map Api.Data.stringFromOrderSubstatusType) substatus_query ), ( "fromDate", Maybe.map Api.Time.dateToString fromDate_query ), ( "toDate", Maybe.map Api.Time.dateToString toDate_query ), ( "supplierShipmentDateFrom", Maybe.map Api.Time.dateToString supplierShipmentDateFrom_query ), ( "supplierShipmentDateTo", Maybe.map Api.Time.dateToString supplierShipmentDateTo_query ), ( "updatedAtFrom", Maybe.map Api.Time.dateTimeToString updatedAtFrom_query ), ( "updatedAtTo", Maybe.map Api.Time.dateTimeToString updatedAtTo_query ), ( "dispatchType", Maybe.map Api.Data.stringFromOrderDeliveryDispatchType dispatchType_query ), ( "fake", Maybe.map (\val -> if val then "true" else "false") fake_query ), ( "hasCis", Maybe.map (\val -> if val then "true" else "false") hasCis_query ), ( "onlyWaitingForCancellationApprove", Maybe.map (\val -> if val then "true" else "false") onlyWaitingForCancellationApprove_query ), ( "onlyEstimatedDelivery", Maybe.map (\val -> if val then "true" else "false") onlyEstimatedDelivery_query ), ( "buyerType", Maybe.map Api.Data.stringFromOrderBuyerType buyerType_query ), ( "page", Maybe.map String.fromInt page_query ), ( "pageSize", Maybe.map String.fromInt pageSize_query ), ( "page_token", Maybe.map identity pageToken_query ), ( "limit", Maybe.map String.fromInt limit_query ) ]
        []
        Nothing
        Api.Data.getOrdersResponseDecoder


{-| Возвращает информацию по заказам на Маркете, в которых есть ваши товары. С помощью нее вы можете собрать статистику по вашим заказам и узнать, например, какие из товаров чаще всего возвращаются покупателями, какие, наоборот, пользуются большим спросом, какая комиссия начисляется за заказы и т. п.  {% note info \"\" %}  Раньше генерация детальной информации по заказам называлась **Отчет по заказам**. Сейчас это новый отчет. [Подробнее об отчете](../../reference/reports/generateUnitedOrdersReport.md)  {% endnote %}  В одном запросе можно получить информацию не более чем по 200 заказам.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| 
-}
getOrdersStats : Int -> Maybe String -> Maybe Int -> Maybe Api.Data.GetOrdersStatsRequest -> Api.Request Api.Data.GetOrdersStatsResponse
getOrdersStats campaignId_path pageToken_query limit_query getOrdersStatsRequest_body =
    Api.request
        "POST"
        "/campaigns/{campaignId}/stats/orders"
        [ ( "campaignId", String.fromInt campaignId_path ) ]
        [ ( "page_token", Maybe.map identity pageToken_query ), ( "limit", Maybe.map String.fromInt limit_query ) ]
        []
        (Maybe.map Http.jsonBody (Maybe.map Api.Data.encodeGetOrdersStatsRequest getOrdersStatsRequest_body))
        Api.Data.getOrdersStatsResponseDecoder


{-| {% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST campaigns/{campaignId}/offer-prices](../../reference/assortment/getPricesByOfferIds.md).  {% endnote %}  Возвращает список цен, установленных вами на товары любым способом: например, через партнерский API или в файле с каталогом.  {% note info %}  Общее количество товаров считается по данным за последние семь дней (не включая сегодня) и не может быть выше 2 миллионов.  {% endnote %}  Способы установки цен описаны [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/assortment/operations/prices.html).  |**⚙️ Лимит:** ```(количество товаров партнера на витрине) * 25``` товаров в сутки| |-| 
-}
getPrices : Int -> Maybe String -> Maybe Int -> Maybe Bool -> Api.Request Api.Data.GetPricesResponse
getPrices campaignId_path pageToken_query limit_query archived_query =
    Api.request
        "GET"
        "/campaigns/{campaignId}/offer-prices"
        [ ( "campaignId", String.fromInt campaignId_path ) ]
        [ ( "page_token", Maybe.map identity pageToken_query ), ( "limit", Maybe.map String.fromInt limit_query ), ( "archived", Maybe.map (\val -> if val then "true" else "false") archived_query ) ]
        []
        Nothing
        Api.Data.getPricesResponseDecoder


{-| Возвращает список цен на указанные товары в магазине.  {% note warning \"Метод только для отдельных магазинов\" %}  Используйте этот метод, только если в кабинете установлены уникальные цены в отдельных магазинах.  Для просмотра базовых цен используйте [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md).  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лимит товаров — количество товаров на витрине * 25) 
-}
getPricesByOfferIds : Int -> Maybe String -> Maybe Int -> Maybe Api.Data.GetPricesByOfferIdsRequest -> Api.Request Api.Data.GetPricesByOfferIdsResponse
getPricesByOfferIds campaignId_path pageToken_query limit_query getPricesByOfferIdsRequest_body =
    Api.request
        "POST"
        "/campaigns/{campaignId}/offer-prices"
        [ ( "campaignId", String.fromInt campaignId_path ) ]
        [ ( "page_token", Maybe.map identity pageToken_query ), ( "limit", Maybe.map String.fromInt limit_query ) ]
        []
        (Maybe.map Http.jsonBody (Maybe.map Api.Data.encodeGetPricesByOfferIdsRequest getPricesByOfferIdsRequest_body))
        Api.Data.getPricesByOfferIdsResponseDecoder


{-| Возвращает список товаров, которые участвуют или могут участвовать в акции.  {% note warning %}  В параметре `limit` не передавайте значение больше 500.  {% endnote %}  |**⚙️ Лимит:** 10000 запросов в час| |-| 
-}
getPromoOffers : Int -> Maybe String -> Maybe Int -> Api.Data.GetPromoOffersRequest -> Api.Request Api.Data.GetPromoOffersResponse
getPromoOffers businessId_path pageToken_query limit_query getPromoOffersRequest_body =
    Api.request
        "POST"
        "/businesses/{businessId}/promos/offers"
        [ ( "businessId", String.fromInt businessId_path ) ]
        [ ( "page_token", Maybe.map identity pageToken_query ), ( "limit", Maybe.map String.fromInt limit_query ) ]
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeGetPromoOffersRequest getPromoOffersRequest_body)))
        Api.Data.getPromoOffersResponseDecoder


{-| Возвращает информацию об акциях Маркета.  По умолчанию возвращаются акции, в которых продавец участвует или может принять участие.  Чтобы получить текущие или завершенные акции, передайте параметр `participation`.  Типы акций, которые возвращаются в ответе:  * прямая скидка; * флеш-акция; * скидка по промокоду.  |**⚙️ Лимит:** 1000 запросов в час| |-| 
-}
getPromos : Int -> Maybe Api.Data.GetPromosRequest -> Api.Request Api.Data.GetPromosResponse
getPromos businessId_path getPromosRequest_body =
    Api.request
        "POST"
        "/businesses/{businessId}/promos"
        [ ( "businessId", String.fromInt businessId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Maybe.map Api.Data.encodeGetPromosRequest getPromosRequest_body))
        Api.Data.getPromosResponseDecoder


{-| Возвращает список заказов, которые повлияли на индекс качества магазина. Чтобы узнать значение индекса качества, выполните запрос [POST businesses/{businessId}/ratings/quality](../../reference/ratings/getQualityRatings.md).  |**⚙️ Лимит:** 100000 запросов в час| |-| 
-}
getQualityRatingDetails : Int -> Api.Request Api.Data.GetQualityRatingDetailsResponse
getQualityRatingDetails campaignId_path =
    Api.request
        "POST"
        "/campaigns/{campaignId}/ratings/quality/details"
        [ ( "campaignId", String.fromInt campaignId_path ) ]
        []
        []
        Nothing
        Api.Data.getQualityRatingDetailsResponseDecoder


{-| Возвращает значение индекса качества магазинов и его составляющие.  Подробнее об индексе качества читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/quality/score/).  |**⚙️ Лимит:** 10000 запросов в час| |-| 
-}
getQualityRatings : Int -> Api.Data.GetQualityRatingRequest -> Api.Request Api.Data.GetQualityRatingResponse
getQualityRatings businessId_path getQualityRatingRequest_body =
    Api.request
        "POST"
        "/businesses/{businessId}/ratings/quality"
        [ ( "businessId", String.fromInt businessId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeGetQualityRatingRequest getQualityRatingRequest_body)))
        Api.Data.getQualityRatingResponseDecoder


{-| Возвращает статус генерации заданного отчета и, если отчет готов, ссылку для скачивания.  Чтобы воспользоваться этим запросом, вначале нужно запустить генерацию отчета. [Инструкция](../../step-by-step/reports.md)  |**⚙️ Лимит:** 100 запросов в минуту| |-| 
-}
getReportInfo : String -> Api.Request Api.Data.GetReportInfoResponse
getReportInfo reportId_path =
    Api.request
        "GET"
        "/reports/info/{reportId}"
        [ ( "reportId", identity reportId_path ) ]
        []
        []
        Nothing
        Api.Data.getReportInfoResponseDecoder


{-| Получает информацию по одному невыкупу или возврату.  |**⚙️ Лимит:** 10 000 запросов в час| |-| 
-}
getReturn : Int -> Int -> Int -> Api.Request Api.Data.GetReturnResponse
getReturn campaignId_path orderId_path returnId_path =
    Api.request
        "GET"
        "/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}"
        [ ( "campaignId", String.fromInt campaignId_path ), ( "orderId", String.fromInt orderId_path ), ( "returnId", String.fromInt returnId_path ) ]
        []
        []
        Nothing
        Api.Data.getReturnResponseDecoder


{-| Загружает заявление покупателя на возврат товара.  |**⚙️ Лимит:** 10 000 запросов в час| |-| 
-}
getReturnApplication : Int -> Int -> Int -> Api.Request File
getReturnApplication campaignId_path orderId_path returnId_path =
    Api.request
        "GET"
        "/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/application"
        [ ( "campaignId", String.fromInt campaignId_path ), ( "orderId", String.fromInt orderId_path ), ( "returnId", String.fromInt returnId_path ) ]
        []
        []
        Nothing
        File.decoder


{-| Получает фотографии, которые покупатель приложил к заявлению на возврат товара.  |**⚙️ Лимит:** 10 000 запросов в час| |-| 
-}
getReturnPhoto : Int -> Int -> Int -> Int -> String -> Api.Request File
getReturnPhoto campaignId_path orderId_path returnId_path itemId_path imageHash_path =
    Api.request
        "GET"
        "/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/{itemId}/image/{imageHash}"
        [ ( "campaignId", String.fromInt campaignId_path ), ( "orderId", String.fromInt orderId_path ), ( "returnId", String.fromInt returnId_path ), ( "itemId", String.fromInt itemId_path ), ( "imageHash", identity imageHash_path ) ]
        []
        []
        Nothing
        File.decoder


{-| Получает список невыкупов и возвратов.  Чтобы получить информацию по одному возврату или невыкупу, выполните запрос [GET campaigns/{campaignId}/orders/{orderId}/returns/{returnId}](../../reference/orders/getReturn.md).  |**⚙️ Лимит:** 10 000 запросов в час| |-| 
-}
getReturns : Int -> Maybe String -> Maybe Int -> Maybe (List Int) -> Maybe (List RefundStatusType) -> Maybe ReturnType -> Maybe Posix -> Maybe Posix -> Maybe Posix -> Maybe Posix -> Api.Request Api.Data.GetReturnsResponse
getReturns campaignId_path pageToken_query limit_query orderIds_query statuses_query type__query fromDate_query toDate_query fromDate2_query toDate2_query =
    Api.request
        "GET"
        "/campaigns/{campaignId}/returns"
        [ ( "campaignId", String.fromInt campaignId_path ) ]
        [ ( "page_token", Maybe.map identity pageToken_query ), ( "limit", Maybe.map String.fromInt limit_query ), ( "orderIds", Maybe.map (String.join "," << List.map String.fromInt) orderIds_query ), ( "statuses", Maybe.map (String.join "," << List.map Api.Data.stringFromRefundStatusType) statuses_query ), ( "type", Maybe.map Api.Data.stringFromReturnType type__query ), ( "fromDate", Maybe.map Api.Time.dateToString fromDate_query ), ( "toDate", Maybe.map Api.Time.dateToString toDate_query ), ( "from_date", Maybe.map Api.Time.dateToString fromDate2_query ), ( "to_date", Maybe.map Api.Time.dateToString toDate2_query ) ]
        []
        Nothing
        Api.Data.getReturnsResponseDecoder


{-| Возвращает данные об остатках товаров (для всех моделей) и об [оборачиваемости](*turnover) товаров (для модели FBY).  {% note info \"По умолчанию данные по оборачивамости не возращаются\" %}  Чтобы они были в ответе, передавайте `true` в поле `withTurnover`.  {% endnote %}  |**⚙️ Лимит:** 100 000 товаров в минуту| |-|  [//]: <> (turnover: Среднее количество дней, за которое товар продается. Подробно об оборачиваемости рассказано в Справке Маркета для продавцов https://yandex.ru/support/marketplace/analytics/turnover.html.) 
-}
getStocks : Int -> Maybe String -> Maybe Int -> Maybe Api.Data.GetWarehouseStocksRequest -> Api.Request Api.Data.GetWarehouseStocksResponse
getStocks campaignId_path pageToken_query limit_query getWarehouseStocksRequest_body =
    Api.request
        "POST"
        "/campaigns/{campaignId}/offers/stocks"
        [ ( "campaignId", String.fromInt campaignId_path ) ]
        [ ( "page_token", Maybe.map identity pageToken_query ), ( "limit", Maybe.map String.fromInt limit_query ) ]
        []
        (Maybe.map Http.jsonBody (Maybe.map Api.Data.encodeGetWarehouseStocksRequest getWarehouseStocksRequest_body))
        Api.Data.getWarehouseStocksResponseDecoder


{-| {% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings/suggestions](../../reference/business-assortment/getSuggestedOfferMappings.md).  {% endnote %}  Возвращает идентификаторы карточек товаров на Маркете, рекомендованных для ваших товаров.  Каждому товару, который вы размещаете, должна соответствовать карточка товара на Маркете со своим идентификатором — SKU на Маркете. Он указывается в URL карточки товара, после «...sku=», например:  ##https://market.yandex.ru/product--yandex-kniga/484830016?sku=484830016…##  Чтобы получить для товаров рекомендованные SKU на Маркете, передайте в теле POST-запроса как можно больше информации о них: названия, производителей, штрихкоды, цены и т. д.  Полученные SKU можно передать вместе с информацией о ваших товарах с помощью запроса [POST campaigns/{campaignId}/offer-mapping-entries/updates](../../reference/offer-mappings/updateOfferMappingEntries.md).  В одном запросе можно получить не более 500 рекомендаций.  |**⚙️ Лимит:** 100 000 рекомендаций в час| |-| 
-}
getSuggestedOfferMappingEntries : Int -> Api.Data.GetSuggestedOfferMappingEntriesRequest -> Api.Request Api.Data.GetSuggestedOfferMappingEntriesResponse
getSuggestedOfferMappingEntries campaignId_path getSuggestedOfferMappingEntriesRequest_body =
    Api.request
        "POST"
        "/campaigns/{campaignId}/offer-mapping-entries/suggestions"
        [ ( "campaignId", String.fromInt campaignId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeGetSuggestedOfferMappingEntriesRequest getSuggestedOfferMappingEntriesRequest_body)))
        Api.Data.getSuggestedOfferMappingEntriesResponseDecoder


{-| Возвращает идентификаторы карточек на Маркете, которые соответствуют товарам с заданными параметрами.  Пользоваться этим запросом необязательно: он просто помогает заранее убедиться, что Маркет верно определяет карточки по предоставленным вами данным.  **Как пользоваться запросом**  1. Передайте Маркету список товаров, которые нужно проверить. 2. В ответ вы получите список SKU на Маркете с расшифровкой: названием, идентификатором модели, категорией. 3. Если расшифровки мало, вы можете открыть карточку. Для этого перейдите по ссылке вида `https://market.yandex.ru/product/<marketModelId>?sku=<marketSku>`. 4. Если карточка соответствует товару, значит его можно добавлять в каталог с теми данными, что вы указали. Если карточка определилась неправильно — проверьте данные о товаре. Возможно, их нужно уточнить или дополнить. Кроме того, на этапе добавления товара вы можете указать `marketSKU`, который ему подходит по вашему мнению.  {% note info \"𝓠 Как определить `marketSku` товара, найденного на Маркете?\" %}  𝓐 Он есть в адресе страницы товара — расположен после `sku=`.  Например, `https://market.yandex.ru/product--yandex-kniga/484830016?sku=484830016`  {% endnote %}  |**⚙️ Лимит:** 100 000 товаров в час| |-| 
-}
getSuggestedOfferMappings : Int -> Maybe Api.Data.GetSuggestedOfferMappingsRequest -> Api.Request Api.Data.GetSuggestedOfferMappingsResponse
getSuggestedOfferMappings businessId_path getSuggestedOfferMappingsRequest_body =
    Api.request
        "POST"
        "/businesses/{businessId}/offer-mappings/suggestions"
        [ ( "businessId", String.fromInt businessId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Maybe.map Api.Data.encodeGetSuggestedOfferMappingsRequest getSuggestedOfferMappingsRequest_body))
        Api.Data.getSuggestedOfferMappingsResponseDecoder


{-| {% note warning \"\" %}  Этот метод устарел. Вместо него используйте [отчет «Цены на рынке»](../../reference/reports/generatePricesReport.md).  {% endnote %}  {% note warning \"\" %}  Этот метод подходит только тем магазинам, которые устанавливают цены на товары в рублях.  {% endnote %}  Возвращает цены для продвижения товаров, которые вы размещаете на Маркете.  Товары, для которых нужно получить цены, передаются в теле POST-запроса.  Цены для продвижения зависят от цен, установленных на товары другими партнерами. Если один товар поставляют несколько партнеров, на Маркете сначала продается товар с более низкой ценой. Когда закончится товар по низкой цене, начнет продаваться товар по более высокой цене.  Выходные данные содержат для каждого товара несколько цен, соответствующих разным типам продвижения.  Установить цены на товары можно с помощью запроса [POST campaigns/{campaignId}/offer-prices/updates](../../reference/assortment/updatePrices.md) или другими способами: например, указать их в файле с каталогом. Также вы можете использовать стратегии для автоматической установки рекомендованных цен или минимальных цен на Маркете.  Подробно об автоматическом управлении ценами рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/prices.html).  |**⚙️ Лимит:** 100 000 товаров в час| |-| 
-}
getSuggestedPrices : Int -> Api.Data.SuggestPricesRequest -> Api.Request Api.Data.SuggestPricesResponse
getSuggestedPrices campaignId_path suggestPricesRequest_body =
    Api.request
        "POST"
        "/campaigns/{campaignId}/offer-prices/suggestions"
        [ ( "campaignId", String.fromInt campaignId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeSuggestPricesRequest suggestPricesRequest_body)))
        Api.Data.suggestPricesResponseDecoder


{-| Возвращает список складов и, если склады объединены, список групп складов. [Что такое группы складов и зачем они нужны](https://yandex.ru/support/marketplace/assortment/operations/stocks.html#unified-stocks)  Среди прочего запрос позволяет определить идентификатор, который нужно использовать при передаче остатков для группы складов.  |**⚙️ Лимит:** 100 запросов в минуту| |-| 
-}
getWarehouses : Int -> Api.Request Api.Data.GetWarehousesResponse
getWarehouses businessId_path =
    Api.request
        "GET"
        "/businesses/{businessId}/warehouses"
        [ ( "businessId", String.fromInt businessId_path ) ]
        []
        []
        Nothing
        Api.Data.getWarehousesResponseDecoder


{-| {% note warning \"Этот запрос только для DBS\" %}  Если вы работаете по модели FBS, пользуйтесь [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).  {% endnote %}  Передает Маркету коды маркировки для единиц товара в указанном заказе.  Принимаются коды следующих типов:  * Коды «Честного знака». * УИН для ювелирных изделий. * РНПТ и ГТД для импортных прослеживаемых товаров.  {% note warning %}  Прежде чем работать с этим методом, обязательно прочтите [статью о работе с маркируемыми товарами](https://yandex.ru/support/marketplace/orders/cz.html).  {% endnote %}  Для каждой позиции в заказе, требующей маркировки, нужно передать список кодов — по одному для каждой единицы товара. Например, если в заказе две пары тапочек и одна пара туфель, получится список из двух кодов для первой позиции и список из одного кода для второй.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| 
-}
provideOrderItemIdentifiers : Int -> Int -> Api.Data.ProvideOrderItemIdentifiersRequest -> Api.Request Api.Data.ProvideOrderItemIdentifiersResponse
provideOrderItemIdentifiers campaignId_path orderId_path provideOrderItemIdentifiersRequest_body =
    Api.request
        "PUT"
        "/campaigns/{campaignId}/orders/{orderId}/identifiers"
        [ ( "campaignId", String.fromInt campaignId_path ), ( "orderId", String.fromInt orderId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeProvideOrderItemIdentifiersRequest provideOrderItemIdentifiersRequest_body)))
        Api.Data.provideOrderItemIdentifiersResponseDecoder


{-| Запускает буст продаж — создает и включает кампанию, добавляет в нее товары и назначает на них ставки.  {% cut \"Как в кабинете выглядит кампания, созданная через API\" %}  ![](../../_images/api-boost.png)  {% endcut %}  При первом использовании запроса Маркет: создаст единую на все магазины бизнес-аккаунта кампанию, добавит в нее товары с указанными ставками, включит для них ценовую стратегию и запустит продвижение. Повторное использование запроса позволит обновить ставки на товары в этой кампании или добавить новые. Подробнее о ценовой стратегии читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html#price-strategy).  Если товара с указанным SKU нет, он будет проигнорирован. Если в будущем в каталоге появится товар с таким SKU, он автоматически будет добавлен в кампанию с указанной ставкой.  Запрос всегда работает с одной и той же созданной через API кампанией. Если в кабинете удалить ее, при следующем выполнении запроса Маркет создаст новую. Другими кампаниями управлять через API не получится. У созданной через API кампании всегда наибольший приоритет над остальными — изменить его нельзя.  Выполнение запроса включает кампанию и ценовую стратегию, если они были отключены.  Внести другие изменения в созданную через API кампанию можно в кабинете:  * выключить или включить кампанию; * изменить ее название; * выключить или включить ценовую стратегию.  Чтобы остановить продвижение отдельных товаров и удалить их из кампании, передайте для них нулевую ставку в параметре `bid`.  Подробнее о том, как работает буст продаж, читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html).  {% note info \"𝓠 Как посмотреть расходы на буст продаж?\" %}  𝓐 Фактические расходы на буст указаны в отчете по заказам ([POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md)). Сумма содержится в поле `bidFee`.  {% endnote %}  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-| 
-}
putBidsForBusiness : Int -> Api.Data.PutSkuBidsRequest -> Api.Request Api.Data.EmptyApiResponse
putBidsForBusiness businessId_path putSkuBidsRequest_body =
    Api.request
        "PUT"
        "/businesses/{businessId}/bids"
        [ ( "businessId", String.fromInt businessId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodePutSkuBidsRequest putSkuBidsRequest_body)))
        Api.Data.emptyApiResponseDecoder


{-| Запускает буст продаж в указанном магазине — создает и включает кампанию, добавляет в нее товары и назначает на них ставки.  При первом использовании запроса Маркет: создаст кампанию, добавит в нее товары с указанными ставками для заданного магазина, включит для них ценовую стратегию и запустит продвижение. Повторное использование запроса позволит обновить ставки на товары в этой кампании или добавить новые. Подробнее о ценовой стратегии читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html#price-strategy).  Если товара с указанным SKU нет, он будет проигнорирован. Если в будущем в каталоге появится товар с таким SKU, он автоматически будет добавлен в кампанию с указанной ставкой.  Запрос всегда работает с одной и той же кампанией, созданной через этот запрос или [PUT businesses/{businessId}/bids](/reference/bids/putBidsForBusiness). Если в кабинете удалить ее, при следующем выполнении запроса Маркет создаст новую. У созданной через API кампании всегда наибольший приоритет над остальными — изменить его нельзя.  Выполнение запроса включает кампанию и ценовую стратегию, если они были отключены.  Внести другие изменения в созданную через API кампанию можно в кабинете:  * выключить или включить кампанию; * изменить ее название; * выключить или включить ценовую стратегию.  Чтобы остановить продвижение отдельных товаров и удалить их из кампании, передайте для них нулевую ставку в параметре `bid`.  Подробнее о том, как работает буст продаж, читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html).  {% note info \"𝓠 Как посмотреть расходы на буст продаж?\" %}  𝓐 Фактические расходы на буст указаны в отчете по заказам ([POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md)). Сумма содержится в поле `bidFee`.  {% endnote %}  В одном запросе может быть максимум 1500 товаров.  |**⚙️ Лимит:** 1000 запросов в минуту| |-| 
-}
putBidsForCampaign : Int -> Api.Data.PutSkuBidsRequest -> Api.Request Api.Data.EmptyApiResponse
putBidsForCampaign campaignId_path putSkuBidsRequest_body =
    Api.request
        "PUT"
        "/campaigns/{campaignId}/bids"
        [ ( "campaignId", String.fromInt campaignId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodePutSkuBidsRequest putSkuBidsRequest_body)))
        Api.Data.emptyApiResponseDecoder


{-| {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет сообщить, что магазин обновил прайс-лист. После этого Маркет начнет обновление данных на сервисе. 1. Магазин обновляет прайс-лист, ссылку на который он указал в кабинете. 2. Магазин отправляет Маркету запрос методом `POST campaigns/{campaignId}/feeds/{feedId}/refresh`. 3. Маркет начинает обновление данных магазина на сервисе.  {% note alert %}  Запрос работает только для включенных магазинов. Если магазин выключен, данные на Маркете не обновятся, даже если HTTP-код — `200 OK`. Проверить статус магазина можно с помощью базовых запросов или на странице бизнес-аккаунта.  {% endnote %}  |**⚙️ Лимит:** 3 запроса в час для одного прайс-листа| |-| 
-}
refreshFeed : Int -> Int -> Api.Request Api.Data.EmptyApiResponse
refreshFeed campaignId_path feedId_path =
    Api.request
        "POST"
        "/campaigns/{campaignId}/feeds/{feedId}/refresh"
        [ ( "campaignId", String.fromInt campaignId_path ), ( "feedId", String.fromInt feedId_path ) ]
        []
        []
        Nothing
        Api.Data.emptyApiResponseDecoder


{-| Возвращает информацию о регионах, являющихся дочерними по отношению к региону, идентификатор которого указан в запросе.  Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-| 
-}
searchRegionChildren : Int -> Maybe Int -> Maybe Int -> Api.Request Api.Data.GetRegionWithChildrenResponse
searchRegionChildren regionId_path page_query pageSize_query =
    Api.request
        "GET"
        "/regions/{regionId}/children"
        [ ( "regionId", String.fromInt regionId_path ) ]
        [ ( "page", Maybe.map String.fromInt page_query ), ( "pageSize", Maybe.map String.fromInt pageSize_query ) ]
        []
        Nothing
        Api.Data.getRegionWithChildrenResponseDecoder


{-| Возвращает информацию о регионе.  Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-| 
-}
searchRegionsById : Int -> Api.Request Api.Data.GetRegionsResponse
searchRegionsById regionId_path =
    Api.request
        "GET"
        "/regions/{regionId}"
        [ ( "regionId", String.fromInt regionId_path ) ]
        []
        []
        Nothing
        Api.Data.getRegionsResponseDecoder


{-| Возвращает информацию о регионе, удовлетворяющем заданным в запросе условиям поиска.  Если найдено несколько регионов, удовлетворяющих условиям поиска, возвращается информация по каждому найденному региону (но не более десяти регионов) для возможности определения нужного региона по родительским регионам.  Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-| 
-}
searchRegionsByName : String -> Maybe String -> Maybe Int -> Api.Request Api.Data.GetRegionsResponse
searchRegionsByName name_query pageToken_query limit_query =
    Api.request
        "GET"
        "/regions"
        []
        [ ( "name", Just <| identity name_query ), ( "page_token", Maybe.map identity pageToken_query ), ( "limit", Maybe.map String.fromInt limit_query ) ]
        []
        Nothing
        Api.Data.getRegionsResponseDecoder


{-| Отправляет файл в чат с покупателем.  |**⚙️ Лимит:** 1000 запросов в час| |-| 
-}
sendFileToChat : Int -> Int -> File -> Api.Request Api.Data.EmptyApiResponse
sendFileToChat businessId_path chatId_query file =
    Api.request
        "POST"
        "/businesses/{businessId}/chats/file/send"
        [ ( "businessId", String.fromInt businessId_path ) ]
        [ ( "chatId", Just <| String.fromInt chatId_query ) ]
        []
        (Just <| Http.multipartBody <| List.filterMap identity [ Just <| Http.filePart "file" file ])
        Api.Data.emptyApiResponseDecoder


{-| Отправляет сообщение в чат с покупателем.  |**⚙️ Лимит:** 1000 запросов в час| |-| 
-}
sendMessageToChat : Int -> Int -> Api.Data.SendMessageToChatRequest -> Api.Request Api.Data.EmptyApiResponse
sendMessageToChat businessId_path chatId_query sendMessageToChatRequest_body =
    Api.request
        "POST"
        "/businesses/{businessId}/chats/message"
        [ ( "businessId", String.fromInt businessId_path ) ]
        [ ( "chatId", Just <| String.fromInt chatId_query ) ]
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeSendMessageToChatRequest sendMessageToChatRequest_body)))
        Api.Data.emptyApiResponseDecoder


{-| {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет магазину изменить параметры прайс-листа.  Чтобы отредактировать параметр прайс-листа, передайте в теле запроса: `name` (название параметра) и `value` (значение параметра).  Чтобы отменить установленное значение, передайте в теле запроса: `name` (название параметра) и `delete=true` (удалить значение).  |**⚙️ Лимит:** 3 запроса в час для одного прайс-листа| |-| 
-}
setFeedParams : Int -> Int -> Api.Data.SetFeedParamsRequest -> Api.Request Api.Data.EmptyApiResponse
setFeedParams campaignId_path feedId_path setFeedParamsRequest_body =
    Api.request
        "POST"
        "/campaigns/{campaignId}/feeds/{feedId}/params"
        [ ( "campaignId", String.fromInt campaignId_path ), ( "feedId", String.fromInt feedId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeSetFeedParamsRequest setFeedParamsRequest_body)))
        Api.Data.emptyApiResponseDecoder


{-| {% note tip \"Подходит и для DBS\" %}  Запрос предназначен для работы с FBS-заказами, но вы можете использовать его для обработки DBS-заказов, если это удобно.  {% endnote %}  Позволяет выполнить три операции:  * передать Маркету информацию о распределении товаров по коробкам; * передать Маркету коды маркировки для товаров; * удалить товар из заказа, если его не оказалось на складе.  Если нужно что-то поправить в переданных данных, просто повторите запрос — это можно делать сколько угодно раз до перевода заказа в статус **Готов к отгрузке**. ⚠️ Если вы меняете раскладку уже после печати и расклейки ярлыков, не забудье перепечатать их и наклеить заново.  ## Как передать информацию о распределении товаров  В этом запросе вам нужно передать Маркету список коробок и указать, какие именно товары лежат в каждой из них. Коробки могут быть двух типов:  * **Содержащие товары целиком.** Такая коробка может содержать сколько угодно единиц любых товаров.  * **Содержащие часть товара.** Такие коробки содержат по одной части одного товара. Например, одна содержит внешний блок кондиционера, а другая — внутренний блок.  ⚠️ Одна коробка не может содержать и товары целиком, и части товаров.  ## Как передавать коды маркировки  Если в заказе есть товары, подлежащие маркировке, в запросе нужно передать соответствующие уникальные коды. [Что такое маркировка?](https://yandex.ru/support/marketplace/orders/cz.html)  Принимаются коды следующих типов:  * Коды «Честного знака». * УИН для ювелирных изделий. * РНПТ и ГТД для импортных прослеживаемых товаров.  Для каждой позиции в заказе, требующей маркировки, нужно передать список кодов — по одному для каждой единицы товара. Например, если в заказе две пары тапочек и одна пара туфель, получится список из двух кодов для первой позиции и список из одного кода для второй.  Если товар едет в нескольких коробках, код маркировки нужно передать для каждой из них.  ## Как удалить товар из заказа  Чтобы удалить товар из заказа:  1. Добавьте в запрос `allowRemove: true`. 2. Передайте распределение по коробкам без товара, который нужно удалить.  {% note warning \"Удаление нельзя отменить\" %}  Эта операция необратима: покупатель сразу получит уведомление, а состав заказа изменится.  {% endnote %}  Чтобы удалить позицию целиком, не передавайте соответствующий `OrderBoxLayoutItemDTO`. Чтобы уменьшить количество товара, передайте уменьшенное значение в поле `fullCount`.  Нельзя удалить или уменьшить количество товара, если он:  * добавлен по акции; * составляет 99% стоимости заказа; * единственный товар в заказе.  Если вы не можете отгрузить такой товар, отмените заказ. Для этого отправьте запрос методом [PUT campaigns/{campaignId}/orders/{orderId}/status](../../reference/orders/updateOrderStatus.md) и передайте статус заказа `CANCELLED` с причиной отмены `SHOP_FAILED`.  {% note info \"Увеличить заказ нельзя\" %}  С помощью запроса нельзя увеличить количество одинаковых товаров, добавить новые товары в заказ или заменить один товар другим.  {% endnote %}  ## Примеры  {% cut \"Товар умещается в коробку\" %}  Вот как будет выглядеть запрос, если в одной коробке едут:    * три единицы одного товара, требующего маркировки;   * одна единица другого товара, не требущего маркировки.    ```json   {       \"boxes\": [           {               \"items\": [                   {                       \"id\": 123456,                       \"fullCount\": 3,                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           },                           {                               \"cis\": \"010304109478gftJ14545762!\\u001dhGt264\"                           },                           {                               \"cis\": \"010304109478fRs28323ks23!\\u001dhet201\"                           }                       ]                   },                   {                       \"id\": 654321,                       \"fullCount\": 1                   }               ]           }       ]   }   ```  {% endcut %}  {% cut \"Товар едет в разных коробках\" %}  Вот как будет выглядеть запрос, если товар едет в двух коробках:    ```json   {       \"boxes\": [           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 1,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           },           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 2,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           }       ]   }   ```  {% endcut %}  {% cut \"Одинаковые товары, где каждый едет в нескольких коробках\" %}  Вот как будет выглядеть запрос, если каждый из двух одинаковых товаров едет в двух коробках:    ```json   {       \"boxes\": [           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 1,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           },           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 2,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           },           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 1,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           },           {               \"items\": [                   {                       \"id\": 123456,                       \"partialCount\": {                           \"current\": 2,                           \"total\": 2                       },                       \"instances\": [                           {                               \"cis\": \"01030410947874432155Qbag!\\u001d93Zjqw\"                           }                       ]                   }               ]           }       ]   }   ```  {% endcut %}  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| 
-}
setOrderBoxLayout : Int -> Int -> Api.Data.SetOrderBoxLayoutRequest -> Api.Request Api.Data.SetOrderBoxLayoutResponse
setOrderBoxLayout campaignId_path orderId_path setOrderBoxLayoutRequest_body =
    Api.request
        "PUT"
        "/campaigns/{campaignId}/orders/{orderId}/boxes"
        [ ( "campaignId", String.fromInt campaignId_path ), ( "orderId", String.fromInt orderId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeSetOrderBoxLayoutRequest setOrderBoxLayoutRequest_body)))
        Api.Data.setOrderBoxLayoutResponseDecoder


{-| {% note warning \"Этот запрос только для DBS\" %}  Если вы работаете по модели FBS, пользуйтесь [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).  {% endnote %}  Отгружаемый Маркету заказ может не влезть в одну коробку или упаковку — в этом случае получается, что он занимает несколько грузовых мест.  Количество грузовых мест нужно обязательно передавать Маркету, если оно не равно 1. Это делается перед переводом его в статус **Готов к отгрузке**. Подробно о том, что в какой момент нужно передавать, рассказано в [пошаговой инструкции](../../step-by-step/fbs.md).  Метод устроен немного нестандартно: количество задается длиной массива пустых объектов.  Раньше метод требовал передачи большего количества данных. Запросы, оформленные по старому образцу, работают, но лучше делать по-новому.  {% cut \"Как было раньше\" %}  Структура тела PUT-запроса:  ``` {   \"boxes\":   [     {       \"fulfilmentId\": \"{string}\",       \"weight\": {int64},       \"width\": {int64},       \"height\": {int64},       \"depth\": {int64},       \"items\":       [         {           \"id\": {int64},           \"count\": {int32}         },         ...       ]     },     ...   ] } ``` | **Параметр**  | **Тип**  | **Значение**  | | ----------- | ----------- | ----------- | | `boxes`       |           | Список грузовых мест.       |  **Параметры, вложенные в `boxes`** | **Параметр**  | **Тип**  | **Значение**  | | ----------- | ----------- | ----------- | | `fulfilmentId`       |  String   | Идентификатор грузового места в информационной системе магазина. Сформируйте идентификатор по шаблону: `номер заказа на Маркете-номер грузового места`. Например, `7206821‑1, 7206821‑2` и т. д. | | `weight`       | Int64        | Масса брутто грузового места (суммарная масса упаковки и содержимого) в граммах. | | `width`       | Int64   | Ширина грузового места в сантиметрах.       | | `height`       | Int64   | Высота грузового места в сантиметрах.       | | `depth`       | Int64   | Глубина грузового места в сантиметрах.        | | `items`       | Int64   | Список товаров в грузовом месте.       |  **Параметры, вложенные в `items`** | **Параметр**  | **Тип**  | **Значение**  | | ----------- | ----------- | ----------- | | `id`       | Int64     | Идентификатор товара в рамках заказа.   | | `count`    | Int32     | Количество единиц товара в грузовом месте.       |  {% endcut %}  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| 
-}
setOrderShipmentBoxes : Int -> Int -> Int -> Api.Data.SetOrderShipmentBoxesRequest -> Api.Request Api.Data.SetOrderShipmentBoxesResponse
setOrderShipmentBoxes campaignId_path orderId_path shipmentId_path setOrderShipmentBoxesRequest_body =
    Api.request
        "PUT"
        "/campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes"
        [ ( "campaignId", String.fromInt campaignId_path ), ( "orderId", String.fromInt orderId_path ), ( "shipmentId", String.fromInt shipmentId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeSetOrderShipmentBoxesRequest setOrderShipmentBoxesRequest_body)))
        Api.Data.setOrderShipmentBoxesResponseDecoder


{-| Пропускает отзывы — они больше не будут возвращаться в методе получения всех отзывов [POST businesses/{businessId}/goods-feedback](../../reference/goods-feedback/getGoodsFeedbacks.md).  |**⚙️ Лимит:** 1 000 запросов в час| |-| 
-}
skipGoodsFeedbacksReaction : Int -> Api.Data.SkipGoodsFeedbackReactionRequest -> Api.Request Api.Data.EmptyApiResponse
skipGoodsFeedbacksReaction businessId_path skipGoodsFeedbackReactionRequest_body =
    Api.request
        "POST"
        "/businesses/{businessId}/goods-feedback/skip-reaction"
        [ ( "businessId", String.fromInt businessId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeSkipGoodsFeedbackReactionRequest skipGoodsFeedbackReactionRequest_body)))
        Api.Data.emptyApiResponseDecoder


{-| Устанавливает [базовые цены](*default-price). Чтобы получить рекомендации Маркета, касающиеся цен, выполните запрос [POST businesses/{businessId}/offers/recommendations](../../reference/business-assortment/getOfferRecommendations.md).  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-| 
-}
updateBusinessPrices : Int -> Api.Data.UpdateBusinessPricesRequest -> Api.Request Api.Data.EmptyApiResponse
updateBusinessPrices businessId_path updateBusinessPricesRequest_body =
    Api.request
        "POST"
        "/businesses/{businessId}/offer-prices/updates"
        [ ( "businessId", String.fromInt businessId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeUpdateBusinessPricesRequest updateBusinessPricesRequest_body)))
        Api.Data.emptyApiResponseDecoder


{-| Изменяет параметры продажи товаров в конкретном магазине: доступность товара, условия доставки и самовывоза, применяемую ставку НДС.  |**⚙️ Лимит:** 5000 товаров в минуту| |-| 
-}
updateCampaignOffers : Int -> Api.Data.UpdateCampaignOffersRequest -> Api.Request Api.Data.EmptyApiResponse
updateCampaignOffers campaignId_path updateCampaignOffersRequest_body =
    Api.request
        "POST"
        "/campaigns/{campaignId}/offers/update"
        [ ( "campaignId", String.fromInt campaignId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeUpdateCampaignOffersRequest updateCampaignOffersRequest_body)))
        Api.Data.emptyApiResponseDecoder


{-| Добавляет новый комментарий магазина или изменяет комментарий, который магазин оставлял ранее.  Для создания комментария к отзыву передайте только идентификатор отзыва `feedbackId`.  Чтобы добавить комментарий к другому комментарию, передайте:  * `feedbackId` — идентификатор отзыва; * `comment.parentId` — идентификатор родительского комментария.  Чтобы изменить комментарий, передайте:  * `feedbackId`— идентификатор отзыва; * `comment.id` — идентификатор комментария, который нужно изменить.  Если передать одновременно `comment.parentId` и `comment.id`, будет изменен существующий комментарий.  |**⚙️ Лимит:** 1 000 запросов в час| |-| 
-}
updateGoodsFeedbackComment : Int -> Api.Data.UpdateGoodsFeedbackCommentRequest -> Api.Request Api.Data.UpdateGoodsFeedbackCommentResponse
updateGoodsFeedbackComment businessId_path updateGoodsFeedbackCommentRequest_body =
    Api.request
        "POST"
        "/businesses/{businessId}/goods-feedback/comments/update"
        [ ( "businessId", String.fromInt businessId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeUpdateGoodsFeedbackCommentRequest updateGoodsFeedbackCommentRequest_body)))
        Api.Data.updateGoodsFeedbackCommentResponseDecoder


{-| Редактирует характеристики товара, которые специфичны для категории, к которой он относится.  {% note warning \"Здесь только то, что относится к конкретной категории\" %}  Если вам нужно изменить основные параметры товара (название, описание, изображения, видео, производитель, штрихкод), воспользуйтесь запросом [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).  {% endnote %}  Чтобы удалить характеристики, которые заданы в параметрах с типом `string`, передайте пустое значение.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-| 
-}
updateOfferContent : Int -> Api.Data.UpdateOfferContentRequest -> Api.Request Api.Data.UpdateOfferContentResponse
updateOfferContent businessId_path updateOfferContentRequest_body =
    Api.request
        "POST"
        "/businesses/{businessId}/offer-cards/update"
        [ ( "businessId", String.fromInt businessId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeUpdateOfferContentRequest updateOfferContentRequest_body)))
        Api.Data.updateOfferContentResponseDecoder


{-| {% note warning \"\" %}  Этот метод устарел. Вместо него используйте [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).  {% endnote %}  Добавляет товары, указанные в запросе, в ваш каталог товаров и редактирует уже имеющиеся товары.  Информацию о товарах нужно передать в теле POST-запроса.  У каждого товара должен быть ваш SKU — уникальный код, который вы используете для идентификации товара:  * Чтобы добавить в каталог новый товар, укажите в параметре `shopSku` ваш SKU, которого еще нет в каталоге. * Чтобы отредактировать товар из каталога, укажите в параметре `shopSku` ваш SKU этого товара в каталоге.  В обоих случаях в запросе нужно передать полное описание товара, даже если вы хотите изменить только несколько характеристик.  Если вы знаете, какой карточке товара на Маркете соответствует ваш товар, укажите ее идентификатор (SKU на Маркете) во входном параметре mapping. Получить SKU на Маркете рекомендованной карточки товара можно с помощью запроса [POST campaigns/{campaignId}/offer-mapping-entries/suggestions](../../reference/offer-mappings/getSuggestedOfferMappingEntries.md) или через кабинет. Если SKU на Маркете не указан, сотрудники Маркета сами подберут или создадут подходящую карточку товара, либо у него появится статус `NEED_CONTENT` (нужно найти карточку или создать ее самостоятельно) в выходных данных запроса [GET campaigns/{campaignId}/offer-mapping-entries](../../reference/offer-mappings/getOfferMappingEntries.md).  Перед публикацией товары проходят модерацию. Если в одном из отправленных товаров найдена ошибка, ответ на запрос будет иметь HTTP-код 400 Bad Request, и ни один из товаров не отправится на модерацию. При этом если вы не передадите все обязательные параметры для какого‑либо товара, после модерации у него появится статус `NEED_INFO` (в описании товара не хватает информации) в выходных данных запроса [GET campaigns/{campaignId}/offer-mapping-entries](../../reference/offer-mappings/getOfferMappingEntries.md).  В одном запросе можно добавить не более 500 товаров.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5 000 товаров в минуту| |-| 
-}
updateOfferMappingEntries : Int -> Api.Data.UpdateOfferMappingEntryRequest -> Api.Request Api.Data.EmptyApiResponse
updateOfferMappingEntries campaignId_path updateOfferMappingEntryRequest_body =
    Api.request
        "POST"
        "/campaigns/{campaignId}/offer-mapping-entries/updates"
        [ ( "campaignId", String.fromInt campaignId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeUpdateOfferMappingEntryRequest updateOfferMappingEntryRequest_body)))
        Api.Data.emptyApiResponseDecoder


{-| Добавляет товары в каталог, передает их категории на Маркете и характеристики, необходимые для этих категории. Также редактирует информацию об уже имеющихся товарах.  Список категорий Маркета можно получить с помощью запроса [POST categories/tree](../../reference/categories/getCategoriesTree.md), а характеристики товаров по категориям с помощью [POST category/{categoryId}/parameters](../../reference/content/getCategoryContentParameters.md).  Чтобы **добавить новый товар**, передайте его с новым идентификатором, который раньше никогда не использовался в каталоге. Старайтесь сразу передать как можно больше информации — она потребуется Маркету для подбора подходящей карточки или создания новой. Если известно, какой карточке на Маркете соответствует товар, можно сразу указать идентификатор этой карточки (**SKU на Маркете**) в поле `marketSKU`.  Для **новых товаров** обязательно укажите параметры: `offerId`, `name`, `marketCategoryId` или `category`, `pictures`, `vendor`, `description`.  Чтобы **отредактировать информацию о товаре**, передайте новые данные, указав в `offerId` соответствующий **ваш SKU**. Поля, в которых ничего не меняется, можно не передавать.  Чтобы **удалить характеристики**, которые заданы в параметрах с типом `string`, передайте пустое значение.  Параметр `offerId` должен быть **уникальным** для всех товаров, которые вы передаете.  {% note warning \"Правила использования SKU\" %}  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  {% endnote %}  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-| 
-}
updateOfferMappings : Int -> Api.Data.UpdateOfferMappingsRequest -> Api.Request Api.Data.UpdateOfferMappingsResponse
updateOfferMappings businessId_path updateOfferMappingsRequest_body =
    Api.request
        "POST"
        "/businesses/{businessId}/offer-mappings/update"
        [ ( "businessId", String.fromInt businessId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeUpdateOfferMappingsRequest updateOfferMappingsRequest_body)))
        Api.Data.updateOfferMappingsResponseDecoder


{-| {% note warning \"Этот запрос только для DBS\" %}  Если вы работаете по модели FBS, пользуйтесь [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).  {% endnote %}  Изменяет состав заказа, если позволяет выбранная служба доставки, в случаях:  * покупатель уменьшил количество товара; * магазин не может поставить все товары в заказе.  Для этого заказ должен находится в статусе `\"status\": \"PROCESSING\"` этапа обработки `\"substatus\": \"STARTED\"`. После передачи статуса `\"substatus\": \"READY_TO_SHIP\"` изменить состав невозможно.  Если одинаковых товаров несколько, для уменьшения количества передайте обновленное значение в атрибуте `count` параметра `item`.  Чтобы полностью удалить товар из заказа:  * передайте значение `0`; или * не передавайте параметр `item`.  Нельзя удалить или уменьшить количество товара, если он:  * добавлен по акции; * составляет 99% стоимости заказа; * единственный товар в заказе.  Если необходимо удалить такой товар, отмените заказ. Для этого отправьте запрос методом [PUT campaigns/{campaignId}/orders/{orderId}/status](../../reference/orders/updateOrderStatus.md) и передайте статус заказа `CANCELLED` с причиной отмены `SHOP_FAILED`.  {% note info \"Увеличить заказ нельзя\" %}  С помощью запроса нельзя увеличить количество одинаковых товаров, добавить новые товары в заказ или заменить один товар другим.  {% endnote %}  **Возврат денег покупателю**  Если покупатель оплатил товар при оформлении, Маркет вернет ему деньги за удаленные из заказа товары в течение двух дней:  * при оплате банковской картой — с момента, когда магазин переведет заказ в статус `SHIPPED`;  * при оплате через Apple Pay или Google Pay — с момента, когда магазин удалит товар из заказа.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| 
-}
updateOrderItems : Int -> Int -> Api.Data.UpdateOrderItemRequest -> Api.Request ()
updateOrderItems campaignId_path orderId_path updateOrderItemRequest_body =
    Api.request
        "PUT"
        "/campaigns/{campaignId}/orders/{orderId}/items"
        [ ( "campaignId", String.fromInt campaignId_path ), ( "orderId", String.fromInt orderId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeUpdateOrderItemRequest updateOrderItemRequest_body)))
        (Json.Decode.succeed ())


{-| Изменяет статус заказа. Возможные изменения статусов:  * Если магазин подтвердил и подготовил заказ к отправке, то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"PROCESSING\"` и этап обработки `\"substatus\": \"READY_TO_SHIP\"`. * Если магазин подтвердил заказ, но не может его выполнить (например, товар числится в базе, но отсутствует на складе или нет нужного цвета), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`. * Если магазин подготовил заказ к отгрузке, но не может его выполнить (например, последний товар был поврежден или оказался с браком), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"READY_TO_SHIP\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| 
-}
updateOrderStatus : Int -> Int -> Api.Data.UpdateOrderStatusRequest -> Api.Request Api.Data.UpdateOrderStatusResponse
updateOrderStatus campaignId_path orderId_path updateOrderStatusRequest_body =
    Api.request
        "PUT"
        "/campaigns/{campaignId}/orders/{orderId}/status"
        [ ( "campaignId", String.fromInt campaignId_path ), ( "orderId", String.fromInt orderId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeUpdateOrderStatusRequest updateOrderStatusRequest_body)))
        Api.Data.updateOrderStatusResponseDecoder


{-| Изменяет статусы нескольких заказов.  Возможные изменения статусов:  * Если магазин подтвердил и подготовил заказ к отправке, то заказ из статуса `\"status\": \"PROCESSING\"`и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"PROCESSING\"` и этап обработки `\"substatus\": \"READY_TO_SHIP\"`. * Если магазин подтвердил заказ, но не может его выполнить (например, товар числится в базе, но отсутствует на складе или нет нужного цвета), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"STARTED\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`. * Если магазин подготовил заказ к отгрузке, но не может его выполнить (например, последний товар был поврежден или оказался с браком), то заказ из статуса `\"status\": \"PROCESSING\"` и этапа обработки `\"substatus\": \"READY_TO_SHIP\"` нужно перевести в статус `\"status\": \"CANCELLED\"` с причиной отмены заказа `\"substatus\": \"SHOP_FAILED\"`.  Максимальное количество заказов, у которых можно изменить статус в одном запросе, — 30.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| 
-}
updateOrderStatuses : Int -> Api.Data.UpdateOrderStatusesRequest -> Api.Request Api.Data.UpdateOrderStatusesResponse
updateOrderStatuses campaignId_path updateOrderStatusesRequest_body =
    Api.request
        "POST"
        "/campaigns/{campaignId}/orders/status-update"
        [ ( "campaignId", String.fromInt campaignId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeUpdateOrderStatusesRequest updateOrderStatusesRequest_body)))
        Api.Data.updateOrderStatusesResponseDecoder


{-| Устанавливает цены на товары в магазине. Чтобы получить рекомендации Маркета, касающиеся цен, выполните запрос [POST businesses/{businessId}/offers/recommendations](../../reference/business-assortment/getOfferRecommendations.md).  {% note warning \"Метод только для отдельных магазинов\" %}  Используйте этот метод, только если в кабинете установлены уникальные цены в отдельных магазинах.  Для управления базовыми ценами используйте [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).  {% endnote %}  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-| 
-}
updatePrices : Int -> Api.Data.UpdatePricesRequest -> Api.Request Api.Data.EmptyApiResponse
updatePrices campaignId_path updatePricesRequest_body =
    Api.request
        "POST"
        "/campaigns/{campaignId}/offer-prices/updates"
        [ ( "campaignId", String.fromInt campaignId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeUpdatePricesRequest updatePricesRequest_body)))
        Api.Data.emptyApiResponseDecoder


{-| Добавляет товары в акцию или изменяет цены на товары, которые участвуют в акции.  Изменения начинают действовать в течение 4–6 часов.  |**⚙️ Лимит:** 10000 запросов в час| |-| 
-}
updatePromoOffers : Int -> Api.Data.UpdatePromoOffersRequest -> Api.Request Api.Data.UpdatePromoOffersResponse
updatePromoOffers businessId_path updatePromoOffersRequest_body =
    Api.request
        "POST"
        "/businesses/{businessId}/promos/offers/update"
        [ ( "businessId", String.fromInt businessId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeUpdatePromoOffersRequest updatePromoOffersRequest_body)))
        Api.Data.updatePromoOffersResponseDecoder


{-| Передает данные об остатках товаров на витрине.  Обязательно указывайте SKU **в точности** так, как он указан в каталоге. Например, _557722_ и _0557722_ — это два разных SKU.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 100 000 товаров в минуту| |-| 
-}
updateStocks : Int -> Api.Data.UpdateStocksRequest -> Api.Request Api.Data.EmptyApiResponse
updateStocks campaignId_path updateStocksRequest_body =
    Api.request
        "PUT"
        "/campaigns/{campaignId}/offers/stocks"
        [ ( "campaignId", String.fromInt campaignId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeUpdateStocksRequest updateStocksRequest_body)))
        Api.Data.emptyApiResponseDecoder


{-| Отправляет Маркету код подтверждения для его проверки.  Код подтверждает передачу заказа или невыкупа:  * курьеру — курьер должен назвать магазину код; * магазину — магазин называет код курьеру.  Если магазин получает невыкупленный заказ, то ему нужно назвать курьеру код из кабинета или приложения.  Если у магазина настроена работа с кодами подтверждения, в запросах [POST order/status](../../pushapi/reference/postOrderStatus.md), [PUT campaigns/{campaignId}/orders/{orderId}/status](../../reference/orders/updateOrderStatus.md), [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md), [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) в параметре `delivery`, вложенном в `order` будет возвращаться параметр `eacType` с типом `Enum` — тип кода подтверждения для передачи заказа.  Возможные значения: `MERCHANT_TO_COURIER` — магазин называет код курьеру, `COURIER_TO_MERCHANT` — курьер называет код магазину.  Параметр `eacType` возвращается при статусах заказа `COURIER_FOUND`, `COURIER_ARRIVED_TO_SENDER` и `DELIVERY_SERVICE_UNDELIVERED`. Если заказ в других статусах, параметр может отсутствовать.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| 
-}
verifyOrderEac : Int -> Int -> Api.Data.VerifyOrderEacRequest -> Api.Request Api.Data.VerifyOrderEacResponse
verifyOrderEac campaignId_path orderId_path verifyOrderEacRequest_body =
    Api.request
        "PUT"
        "/campaigns/{campaignId}/orders/{orderId}/verifyEac"
        [ ( "campaignId", String.fromInt campaignId_path ), ( "orderId", String.fromInt orderId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeVerifyOrderEacRequest verifyOrderEacRequest_body)))
        Api.Data.verifyOrderEacResponseDecoder

