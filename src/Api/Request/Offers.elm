{-
   Партнерский API Маркета
   API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

   The version of the OpenAPI document: LATEST

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Request.Offers exposing
    ( deleteCampaignOffers
    , getAllOffers
    , getCampaignOffers
    , getOfferRecommendations
    , getOffers
    , updateCampaignOffers
    )

import Api
import Api.Data exposing (..)
import Dict
import Http
import Json.Decode
import Json.Encode

{-| Удаляет заданные товары из заданного магазина.  {% note warning \"Запрос удаляет товары именно из конкретного магазина\" %}  На продажи в других магазинах и на наличие товара в общем каталоге он не влияет.  {% endnote %}  Товар не получится удалить, если он хранится на складах Маркета.  |**⚙️ Лимит:** 5000 товаров в минуту| |-| 
-}
deleteCampaignOffers : Int -> Api.Data.DeleteCampaignOffersRequest -> Api.Request Api.Data.DeleteCampaignOffersResponse
deleteCampaignOffers campaignId_path deleteCampaignOffersRequest_body =
    Api.request
        "POST"
        "/campaigns/{campaignId}/offers/delete"
        [ ( "campaignId", String.fromInt campaignId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeDeleteCampaignOffersRequest deleteCampaignOffersRequest_body)))
        Api.Data.deleteCampaignOffersResponseDecoder


{-| {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет максимально быстро получить информацию обо всех предложениях магазина, размещенных на Маркете. Возвращает результат в виде сегментов нефиксированного размера.  В ответе на запрос для каждого найденного предложения указывается URL и наименование этого предложения, его цена и валюта, в которой она указана, карточка модели Яндекс Маркета, с которой соотнесено предложение, а также аукционные ставки на него.  {% note info %}  Количество предложений считается по данным за последние семь дней (не включая сегодня).  Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений.  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лимит товаров — среднее количество таваров в каталоге за неделю * 25) 
-}
getAllOffers : Int -> Maybe Int -> Maybe Int -> Api.Request Api.Data.GetAllOffersResponse
getAllOffers campaignId_path feedId_query chunk_query =
    Api.request
        "GET"
        "/campaigns/{campaignId}/offers/all"
        [ ( "campaignId", String.fromInt campaignId_path ) ]
        [ ( "feedId", Maybe.map String.fromInt feedId_query ), ( "chunk", Maybe.map String.fromInt chunk_query ) ]
        []
        Nothing
        Api.Data.getAllOffersResponseDecoder


{-| Возвращает список товаров, которые размещены в заданном магазине. Для каждого товара указываются параметры размещения.  |**⚙️ Лимит:** 5000 товаров в минуту| |-| 
-}
getCampaignOffers : Int -> Maybe String -> Maybe Int -> Api.Data.GetCampaignOffersRequest -> Api.Request Api.Data.GetCampaignOffersResponse
getCampaignOffers campaignId_path pageToken_query limit_query getCampaignOffersRequest_body =
    Api.request
        "POST"
        "/campaigns/{campaignId}/offers"
        [ ( "campaignId", String.fromInt campaignId_path ) ]
        [ ( "page_token", Maybe.map identity pageToken_query ), ( "limit", Maybe.map String.fromInt limit_query ) ]
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeGetCampaignOffersRequest getCampaignOffersRequest_body)))
        Api.Data.getCampaignOffersResponseDecoder


{-| Метод возвращает рекомендации нескольких типов.  **1. Порог для привлекательной цены. Он нужен для участия в софинансировании скидок.**  Показывает, какие **цены для участия** нужно установить, чтобы получить максимальные шансы на срабатывание скидок, софинансируемых Маркетом. [Как это устроено](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#sponsored-discounts)  **2. Оценка привлекательности цен на витрине.**  Привлекательность влияет на вероятность срабатывания скидок за счет Маркета. [Как это устроено](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#validation)  В запросе можно использовать фильтры.  Результаты возвращаются постранично.  |**⚙️ Лимит:** 100 запросов в минуту| |-| 
-}
getOfferRecommendations : Int -> Maybe String -> Maybe Int -> Api.Data.GetOfferRecommendationsRequest -> Api.Request Api.Data.GetOfferRecommendationsResponse
getOfferRecommendations businessId_path pageToken_query limit_query getOfferRecommendationsRequest_body =
    Api.request
        "POST"
        "/businesses/{businessId}/offers/recommendations"
        [ ( "businessId", String.fromInt businessId_path ) ]
        [ ( "page_token", Maybe.map identity pageToken_query ), ( "limit", Maybe.map String.fromInt limit_query ) ]
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeGetOfferRecommendationsRequest getOfferRecommendationsRequest_body)))
        Api.Data.getOfferRecommendationsResponseDecoder


{-| {% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Позволяет фильтровать информацию о предложениях магазина, размещенных на Маркете, и искать предложения по заданному поисковому запросу.  Поиск предложений, размещенных на Маркете, работает по поисковому запросу аналогично поиску Маркета. Результаты возвращаются с использованием пейджера.  В ответе на запрос для каждого найденного предложения указывается URL и наименование этого предложения, его цена и валюта, в которой она указана, карточка модели Маркета, с которой соотнесено предложение, и аукционные ставки на него.  {% note info %}  Из-за особенностей поиска Маркета иногда на последних страницах пейджера фактическое количество результатов оказывается меньше количества, указанного ранее на предыдущих страницах.  В связи с этим настоятельно рекомендуется анализировать содержимое параметра pager для каждой полученной страницы.  {% endnote %}  {% note info %}  Количество предложений считается по данным за последние семь дней (не включая сегодня).  Для новых магазинов, еще не разместивших предложения, ограничение равно 0 и пересчитывается на следующий день после размещения первых предложений.  {% endnote %}  |**⚙️ Лимит:** рассчитывается по [формуле](*rule)| |-|  [//]: <> (rule: суточный лисит товаров — среднее количество таваров в каталоге за неделю * 25) 
-}
getOffers : Int -> Maybe String -> Maybe Int -> Maybe String -> Maybe CurrencyType -> Maybe Bool -> Maybe Int -> Maybe Int -> Api.Request Api.Data.GetOffersResponse
getOffers campaignId_path query_query feedId_query shopCategoryId_query currency_query matched_query page_query pageSize_query =
    Api.request
        "GET"
        "/campaigns/{campaignId}/offers"
        [ ( "campaignId", String.fromInt campaignId_path ) ]
        [ ( "query", Maybe.map identity query_query ), ( "feedId", Maybe.map String.fromInt feedId_query ), ( "shopCategoryId", Maybe.map identity shopCategoryId_query ), ( "currency", Maybe.map Api.Data.stringFromCurrencyType currency_query ), ( "matched", Maybe.map (\val -> if val then "true" else "false") matched_query ), ( "page", Maybe.map String.fromInt page_query ), ( "pageSize", Maybe.map String.fromInt pageSize_query ) ]
        []
        Nothing
        Api.Data.getOffersResponseDecoder


{-| Изменяет параметры продажи товаров в конкретном магазине: доступность товара, условия доставки и самовывоза, применяемую ставку НДС.  |**⚙️ Лимит:** 5000 товаров в минуту| |-| 
-}
updateCampaignOffers : Int -> Api.Data.UpdateCampaignOffersRequest -> Api.Request Api.Data.EmptyApiResponse
updateCampaignOffers campaignId_path updateCampaignOffersRequest_body =
    Api.request
        "POST"
        "/campaigns/{campaignId}/offers/update"
        [ ( "campaignId", String.fromInt campaignId_path ) ]
        []
        []
        (Maybe.map Http.jsonBody (Just (Api.Data.encodeUpdateCampaignOffersRequest updateCampaignOffersRequest_body)))
        Api.Data.emptyApiResponseDecoder

