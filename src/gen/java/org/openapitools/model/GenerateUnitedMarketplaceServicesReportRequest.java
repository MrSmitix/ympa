/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.openapitools.model.PlacementType;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * Данные, необходимые для генерации отчета: идентификатор магазина, период, за который нужен отчет, а также фильтры. 
 */
@ApiModel(description = "Данные, необходимые для генерации отчета: идентификатор магазина, период, за который нужен отчет, а также фильтры. ")
@JsonPropertyOrder({
  GenerateUnitedMarketplaceServicesReportRequest.JSON_PROPERTY_BUSINESS_ID,
  GenerateUnitedMarketplaceServicesReportRequest.JSON_PROPERTY_DATE_TIME_FROM,
  GenerateUnitedMarketplaceServicesReportRequest.JSON_PROPERTY_DATE_TIME_TO,
  GenerateUnitedMarketplaceServicesReportRequest.JSON_PROPERTY_DATE_FROM,
  GenerateUnitedMarketplaceServicesReportRequest.JSON_PROPERTY_DATE_TO,
  GenerateUnitedMarketplaceServicesReportRequest.JSON_PROPERTY_YEAR_FROM,
  GenerateUnitedMarketplaceServicesReportRequest.JSON_PROPERTY_MONTH_FROM,
  GenerateUnitedMarketplaceServicesReportRequest.JSON_PROPERTY_YEAR_TO,
  GenerateUnitedMarketplaceServicesReportRequest.JSON_PROPERTY_MONTH_TO,
  GenerateUnitedMarketplaceServicesReportRequest.JSON_PROPERTY_PLACEMENT_PROGRAMS,
  GenerateUnitedMarketplaceServicesReportRequest.JSON_PROPERTY_INNS,
  GenerateUnitedMarketplaceServicesReportRequest.JSON_PROPERTY_CAMPAIGN_IDS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2024-09-09T22:24:17.175492804Z[Etc/UTC]", comments = "Generator version: 7.8.0")
public class GenerateUnitedMarketplaceServicesReportRequest   {
  public static final String JSON_PROPERTY_BUSINESS_ID = "businessId";
  @JsonProperty(JSON_PROPERTY_BUSINESS_ID)
  private Long businessId;

  public static final String JSON_PROPERTY_DATE_TIME_FROM = "dateTimeFrom";
  @JsonProperty(JSON_PROPERTY_DATE_TIME_FROM)
  private Date dateTimeFrom;

  public static final String JSON_PROPERTY_DATE_TIME_TO = "dateTimeTo";
  @JsonProperty(JSON_PROPERTY_DATE_TIME_TO)
  private Date dateTimeTo;

  public static final String JSON_PROPERTY_DATE_FROM = "dateFrom";
  @JsonProperty(JSON_PROPERTY_DATE_FROM)
  private Date dateFrom;

  public static final String JSON_PROPERTY_DATE_TO = "dateTo";
  @JsonProperty(JSON_PROPERTY_DATE_TO)
  private Date dateTo;

  public static final String JSON_PROPERTY_YEAR_FROM = "yearFrom";
  @JsonProperty(JSON_PROPERTY_YEAR_FROM)
  private Integer yearFrom;

  public static final String JSON_PROPERTY_MONTH_FROM = "monthFrom";
  @JsonProperty(JSON_PROPERTY_MONTH_FROM)
  private Integer monthFrom;

  public static final String JSON_PROPERTY_YEAR_TO = "yearTo";
  @JsonProperty(JSON_PROPERTY_YEAR_TO)
  private Integer yearTo;

  public static final String JSON_PROPERTY_MONTH_TO = "monthTo";
  @JsonProperty(JSON_PROPERTY_MONTH_TO)
  private Integer monthTo;

  public static final String JSON_PROPERTY_PLACEMENT_PROGRAMS = "placementPrograms";
  @JsonProperty(JSON_PROPERTY_PLACEMENT_PROGRAMS)
  private List<PlacementType> placementPrograms;

  public static final String JSON_PROPERTY_INNS = "inns";
  @JsonProperty(JSON_PROPERTY_INNS)
  private List<String> inns;

  public static final String JSON_PROPERTY_CAMPAIGN_IDS = "campaignIds";
  @JsonProperty(JSON_PROPERTY_CAMPAIGN_IDS)
  private List<Long> campaignIds;

  public GenerateUnitedMarketplaceServicesReportRequest businessId(Long businessId) {
    this.businessId = businessId;
    return this;
  }

  /**
   * Идентификатор бизнеса.
   * @return businessId
   **/
  @JsonProperty(value = "businessId")
  @ApiModelProperty(required = true, value = "Идентификатор бизнеса.")
  @NotNull 
  public Long getBusinessId() {
    return businessId;
  }

  public void setBusinessId(Long businessId) {
    this.businessId = businessId;
  }

  public GenerateUnitedMarketplaceServicesReportRequest dateTimeFrom(Date dateTimeFrom) {
    this.dateTimeFrom = dateTimeFrom;
    return this;
  }

  /**
   * {% note warning \&quot;\&quot; %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Начало периода, включительно. 
   * @return dateTimeFrom
   **/
  @JsonProperty(value = "dateTimeFrom")
  @ApiModelProperty(value = "{% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Начало периода, включительно. ")
  
  public Date getDateTimeFrom() {
    return dateTimeFrom;
  }

  public void setDateTimeFrom(Date dateTimeFrom) {
    this.dateTimeFrom = dateTimeFrom;
  }

  public GenerateUnitedMarketplaceServicesReportRequest dateTimeTo(Date dateTimeTo) {
    this.dateTimeTo = dateTimeTo;
    return this;
  }

  /**
   * {% note warning \&quot;\&quot; %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Конец периода, включительно. Максимальный период — 1 год. 
   * @return dateTimeTo
   **/
  @JsonProperty(value = "dateTimeTo")
  @ApiModelProperty(value = "{% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Конец периода, включительно. Максимальный период — 1 год. ")
  
  public Date getDateTimeTo() {
    return dateTimeTo;
  }

  public void setDateTimeTo(Date dateTimeTo) {
    this.dateTimeTo = dateTimeTo;
  }

  public GenerateUnitedMarketplaceServicesReportRequest dateFrom(Date dateFrom) {
    this.dateFrom = dateFrom;
    return this;
  }

  /**
   * Начало периода, включительно.
   * @return dateFrom
   **/
  @JsonProperty(value = "dateFrom")
  @ApiModelProperty(value = "Начало периода, включительно.")
  
  public Date getDateFrom() {
    return dateFrom;
  }

  public void setDateFrom(Date dateFrom) {
    this.dateFrom = dateFrom;
  }

  public GenerateUnitedMarketplaceServicesReportRequest dateTo(Date dateTo) {
    this.dateTo = dateTo;
    return this;
  }

  /**
   * Конец периода, включительно. Максимальный период — 1 год.
   * @return dateTo
   **/
  @JsonProperty(value = "dateTo")
  @ApiModelProperty(value = "Конец периода, включительно. Максимальный период — 1 год.")
  
  public Date getDateTo() {
    return dateTo;
  }

  public void setDateTo(Date dateTo) {
    this.dateTo = dateTo;
  }

  public GenerateUnitedMarketplaceServicesReportRequest yearFrom(Integer yearFrom) {
    this.yearFrom = yearFrom;
    return this;
  }

  /**
   * Начальный год формирования акта.
   * @return yearFrom
   **/
  @JsonProperty(value = "yearFrom")
  @ApiModelProperty(value = "Начальный год формирования акта.")
  
  public Integer getYearFrom() {
    return yearFrom;
  }

  public void setYearFrom(Integer yearFrom) {
    this.yearFrom = yearFrom;
  }

  public GenerateUnitedMarketplaceServicesReportRequest monthFrom(Integer monthFrom) {
    this.monthFrom = monthFrom;
    return this;
  }

  /**
   * Начальный номер месяца формирования акта.
   * minimum: 1
   * maximum: 12
   * @return monthFrom
   **/
  @JsonProperty(value = "monthFrom")
  @ApiModelProperty(value = "Начальный номер месяца формирования акта.")
   @Min(1) @Max(12)
  public Integer getMonthFrom() {
    return monthFrom;
  }

  public void setMonthFrom(Integer monthFrom) {
    this.monthFrom = monthFrom;
  }

  public GenerateUnitedMarketplaceServicesReportRequest yearTo(Integer yearTo) {
    this.yearTo = yearTo;
    return this;
  }

  /**
   * Конечный год формирования акта.
   * @return yearTo
   **/
  @JsonProperty(value = "yearTo")
  @ApiModelProperty(value = "Конечный год формирования акта.")
  
  public Integer getYearTo() {
    return yearTo;
  }

  public void setYearTo(Integer yearTo) {
    this.yearTo = yearTo;
  }

  public GenerateUnitedMarketplaceServicesReportRequest monthTo(Integer monthTo) {
    this.monthTo = monthTo;
    return this;
  }

  /**
   * Конечный номер месяца формирования акта.
   * minimum: 1
   * maximum: 12
   * @return monthTo
   **/
  @JsonProperty(value = "monthTo")
  @ApiModelProperty(value = "Конечный номер месяца формирования акта.")
   @Min(1) @Max(12)
  public Integer getMonthTo() {
    return monthTo;
  }

  public void setMonthTo(Integer monthTo) {
    this.monthTo = monthTo;
  }

  public GenerateUnitedMarketplaceServicesReportRequest placementPrograms(List<PlacementType> placementPrograms) {
    this.placementPrograms = placementPrograms;
    return this;
  }

  public GenerateUnitedMarketplaceServicesReportRequest addPlacementProgramsItem(PlacementType placementProgramsItem) {
    if (this.placementPrograms == null) {
      this.placementPrograms = new ArrayList<>();
    }
    this.placementPrograms.add(placementProgramsItem);
    return this;
  }

  /**
   * Список моделей, которые нужны в отчете. 
   * @return placementPrograms
   **/
  @JsonProperty(value = "placementPrograms")
  @ApiModelProperty(value = "Список моделей, которые нужны в отчете. ")
  
  public List<PlacementType> getPlacementPrograms() {
    return placementPrograms;
  }

  public void setPlacementPrograms(List<PlacementType> placementPrograms) {
    this.placementPrograms = placementPrograms;
  }

  public GenerateUnitedMarketplaceServicesReportRequest inns(List<String> inns) {
    this.inns = inns;
    return this;
  }

  public GenerateUnitedMarketplaceServicesReportRequest addInnsItem(String innsItem) {
    if (this.inns == null) {
      this.inns = new ArrayList<>();
    }
    this.inns.add(innsItem);
    return this;
  }

  /**
   * Список ИНН, которые нужны в отчете.
   * @return inns
   **/
  @JsonProperty(value = "inns")
  @ApiModelProperty(value = "Список ИНН, которые нужны в отчете.")
  
  public List<String> getInns() {
    return inns;
  }

  public void setInns(List<String> inns) {
    this.inns = inns;
  }

  public GenerateUnitedMarketplaceServicesReportRequest campaignIds(List<Long> campaignIds) {
    this.campaignIds = campaignIds;
    return this;
  }

  public GenerateUnitedMarketplaceServicesReportRequest addCampaignIdsItem(Long campaignIdsItem) {
    if (this.campaignIds == null) {
      this.campaignIds = new ArrayList<>();
    }
    this.campaignIds.add(campaignIdsItem);
    return this;
  }

  /**
   * Список магазинов, которые нужны в отчете.
   * @return campaignIds
   **/
  @JsonProperty(value = "campaignIds")
  @ApiModelProperty(value = "Список магазинов, которые нужны в отчете.")
  
  public List<Long> getCampaignIds() {
    return campaignIds;
  }

  public void setCampaignIds(List<Long> campaignIds) {
    this.campaignIds = campaignIds;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GenerateUnitedMarketplaceServicesReportRequest generateUnitedMarketplaceServicesReportRequest = (GenerateUnitedMarketplaceServicesReportRequest) o;
    return Objects.equals(this.businessId, generateUnitedMarketplaceServicesReportRequest.businessId) &&
        Objects.equals(this.dateTimeFrom, generateUnitedMarketplaceServicesReportRequest.dateTimeFrom) &&
        Objects.equals(this.dateTimeTo, generateUnitedMarketplaceServicesReportRequest.dateTimeTo) &&
        Objects.equals(this.dateFrom, generateUnitedMarketplaceServicesReportRequest.dateFrom) &&
        Objects.equals(this.dateTo, generateUnitedMarketplaceServicesReportRequest.dateTo) &&
        Objects.equals(this.yearFrom, generateUnitedMarketplaceServicesReportRequest.yearFrom) &&
        Objects.equals(this.monthFrom, generateUnitedMarketplaceServicesReportRequest.monthFrom) &&
        Objects.equals(this.yearTo, generateUnitedMarketplaceServicesReportRequest.yearTo) &&
        Objects.equals(this.monthTo, generateUnitedMarketplaceServicesReportRequest.monthTo) &&
        Objects.equals(this.placementPrograms, generateUnitedMarketplaceServicesReportRequest.placementPrograms) &&
        Objects.equals(this.inns, generateUnitedMarketplaceServicesReportRequest.inns) &&
        Objects.equals(this.campaignIds, generateUnitedMarketplaceServicesReportRequest.campaignIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(businessId, dateTimeFrom, dateTimeTo, dateFrom, dateTo, yearFrom, monthFrom, yearTo, monthTo, placementPrograms, inns, campaignIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GenerateUnitedMarketplaceServicesReportRequest {\n");
    
    sb.append("    businessId: ").append(toIndentedString(businessId)).append("\n");
    sb.append("    dateTimeFrom: ").append(toIndentedString(dateTimeFrom)).append("\n");
    sb.append("    dateTimeTo: ").append(toIndentedString(dateTimeTo)).append("\n");
    sb.append("    dateFrom: ").append(toIndentedString(dateFrom)).append("\n");
    sb.append("    dateTo: ").append(toIndentedString(dateTo)).append("\n");
    sb.append("    yearFrom: ").append(toIndentedString(yearFrom)).append("\n");
    sb.append("    monthFrom: ").append(toIndentedString(monthFrom)).append("\n");
    sb.append("    yearTo: ").append(toIndentedString(yearTo)).append("\n");
    sb.append("    monthTo: ").append(toIndentedString(monthTo)).append("\n");
    sb.append("    placementPrograms: ").append(toIndentedString(placementPrograms)).append("\n");
    sb.append("    inns: ").append(toIndentedString(inns)).append("\n");
    sb.append("    campaignIds: ").append(toIndentedString(campaignIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

