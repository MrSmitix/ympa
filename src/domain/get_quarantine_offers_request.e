note
 description:"[
		Партнерский API Маркета
 		API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
  		The version of the OpenAPI document: LATEST
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class GET_QUARANTINE_OFFERS_REQUEST




feature --Access

    offer_ids: detachable LIST [STRING_32]
      -- Идентификаторы товаров, информация о которых нужна. <br><br> ⚠️ Не используйте это поле одновременно с фильтрами по статусам карточек, категориям, брендам или тегам. Если вы хотите воспользоваться фильтрами, оставьте поле пустым. 
    card_statuses: detachable LIST [OFFER_CARD_STATUS_TYPE]
      -- Фильтр по статусам карточек.  [Что такое карточка товара](https://yandex.ru/support/marketplace/assortment/content/index.html) 
    category_ids: detachable LIST [INTEGER_32]
      -- Фильтр по категориям на Маркете.
    vendor_names: detachable LIST [STRING_32]
      -- Фильтр по брендам.
    tags: detachable LIST [STRING_32]
      -- Фильтр по тегам.

feature -- Change Element

    set_offer_ids (a_name: like offer_ids)
        -- Set 'offer_ids' with 'a_name'.
      do
        offer_ids := a_name
      ensure
        offer_ids_set: offer_ids = a_name
      end

    set_card_statuses (a_name: like card_statuses)
        -- Set 'card_statuses' with 'a_name'.
      do
        card_statuses := a_name
      ensure
        card_statuses_set: card_statuses = a_name
      end

    set_category_ids (a_name: like category_ids)
        -- Set 'category_ids' with 'a_name'.
      do
        category_ids := a_name
      ensure
        category_ids_set: category_ids = a_name
      end

    set_vendor_names (a_name: like vendor_names)
        -- Set 'vendor_names' with 'a_name'.
      do
        vendor_names := a_name
      ensure
        vendor_names_set: vendor_names = a_name
      end

    set_tags (a_name: like tags)
        -- Set 'tags' with 'a_name'.
      do
        tags := a_name
      ensure
        tags_set: tags = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass GET_QUARANTINE_OFFERS_REQUEST%N")
        if attached offer_ids as l_offer_ids then
          across l_offer_ids as ic loop
            Result.append ("%N offer_ids:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached card_statuses as l_card_statuses then
          across l_card_statuses as ic loop
            Result.append ("%N card_statuses:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached category_ids as l_category_ids then
          across l_category_ids as ic loop
            Result.append ("%N category_ids:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached vendor_names as l_vendor_names then
          across l_vendor_names as ic loop
            Result.append ("%N vendor_names:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached tags as l_tags then
          across l_tags as ic loop
            Result.append ("%N tags:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
      end
end

