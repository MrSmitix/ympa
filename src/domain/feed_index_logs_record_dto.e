note
 description:"[
		Партнерский API Маркета
 		API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
  		The version of the OpenAPI document: LATEST
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class FEED_INDEX_LOGS_RECORD_DTO




feature --Access

    download_time: detachable DATE_TIME
      -- Дата и время загрузки прайс-листа.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`. 
    file_time: detachable DATE_TIME
      -- Дата и время, которые магазин указал в прайс-листе.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`. 
    generation_id: INTEGER_64
      -- Идентификатор индексации.
    index_type: detachable FEED_INDEX_LOGS_INDEX_TYPE
      
    published_time: detachable DATE_TIME
      -- Дата и время публикации предложений из прайс-листа на Яндекс Маркете.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`. 
    status: detachable FEED_INDEX_LOGS_STATUS_TYPE
      
    error: detachable FEED_INDEX_LOGS_ERROR_DTO
      
    offers: detachable FEED_INDEX_LOGS_OFFERS_DTO
      

feature -- Change Element

    set_download_time (a_name: like download_time)
        -- Set 'download_time' with 'a_name'.
      do
        download_time := a_name
      ensure
        download_time_set: download_time = a_name
      end

    set_file_time (a_name: like file_time)
        -- Set 'file_time' with 'a_name'.
      do
        file_time := a_name
      ensure
        file_time_set: file_time = a_name
      end

    set_generation_id (a_name: like generation_id)
        -- Set 'generation_id' with 'a_name'.
      do
        generation_id := a_name
      ensure
        generation_id_set: generation_id = a_name
      end

    set_index_type (a_name: like index_type)
        -- Set 'index_type' with 'a_name'.
      do
        index_type := a_name
      ensure
        index_type_set: index_type = a_name
      end

    set_published_time (a_name: like published_time)
        -- Set 'published_time' with 'a_name'.
      do
        published_time := a_name
      ensure
        published_time_set: published_time = a_name
      end

    set_status (a_name: like status)
        -- Set 'status' with 'a_name'.
      do
        status := a_name
      ensure
        status_set: status = a_name
      end

    set_error (a_name: like error)
        -- Set 'error' with 'a_name'.
      do
        error := a_name
      ensure
        error_set: error = a_name
      end

    set_offers (a_name: like offers)
        -- Set 'offers' with 'a_name'.
      do
        offers := a_name
      ensure
        offers_set: offers = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass FEED_INDEX_LOGS_RECORD_DTO%N")
        if attached download_time as l_download_time then
          Result.append ("%Ndownload_time:")
          Result.append (l_download_time.out)
          Result.append ("%N")
        end
        if attached file_time as l_file_time then
          Result.append ("%Nfile_time:")
          Result.append (l_file_time.out)
          Result.append ("%N")
        end
        if attached generation_id as l_generation_id then
          Result.append ("%Ngeneration_id:")
          Result.append (l_generation_id.out)
          Result.append ("%N")
        end
        if attached index_type as l_index_type then
          Result.append ("%Nindex_type:")
          Result.append (l_index_type.out)
          Result.append ("%N")
        end
        if attached published_time as l_published_time then
          Result.append ("%Npublished_time:")
          Result.append (l_published_time.out)
          Result.append ("%N")
        end
        if attached status as l_status then
          Result.append ("%Nstatus:")
          Result.append (l_status.out)
          Result.append ("%N")
        end
        if attached error as l_error then
          Result.append ("%Nerror:")
          Result.append (l_error.out)
          Result.append ("%N")
        end
        if attached offers as l_offers then
          Result.append ("%Noffers:")
          Result.append (l_offers.out)
          Result.append ("%N")
        end
      end
end

