note
 description:"[
		Партнерский API Маркета
 		API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
  		The version of the OpenAPI document: LATEST
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class GET_PROMO_DTO




feature --Access

    id: detachable STRING_32
      -- Идентификатор акции.
    name: detachable STRING_32
      -- Название акции.
    period: detachable PROMO_PERIOD_DTO
      
    participating: BOOLEAN
      -- Участвует или участвовал ли продавец в этой акции.  Для текущих и будущих акций возвращается со значением `true`, если в акции есть товары, которые были добавлены вручную. Если товары не участвуют в акции или добавлены в нее автоматически, параметр возвращается со значением `false`.  Для прошедших акций всегда возвращается со значением `true`.  Об автоматическом и ручном добавлении товаров в акцию читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/index). 
    assortment_info: detachable GET_PROMO_ASSORTMENT_INFO_DTO
      
    mechanics_info: detachable GET_PROMO_MECHANICS_INFO_DTO
      
    bestseller_info: detachable GET_PROMO_BESTSELLER_INFO_DTO
      
    channels: detachable LIST [CHANNEL_TYPE]
      -- Список каналов продвижения товаров.
    constraints: detachable GET_PROMO_CONSTRAINTS_DTO
      

feature -- Change Element

    set_id (a_name: like id)
        -- Set 'id' with 'a_name'.
      do
        id := a_name
      ensure
        id_set: id = a_name
      end

    set_name (a_name: like name)
        -- Set 'name' with 'a_name'.
      do
        name := a_name
      ensure
        name_set: name = a_name
      end

    set_period (a_name: like period)
        -- Set 'period' with 'a_name'.
      do
        period := a_name
      ensure
        period_set: period = a_name
      end

    set_participating (a_name: like participating)
        -- Set 'participating' with 'a_name'.
      do
        participating := a_name
      ensure
        participating_set: participating = a_name
      end

    set_assortment_info (a_name: like assortment_info)
        -- Set 'assortment_info' with 'a_name'.
      do
        assortment_info := a_name
      ensure
        assortment_info_set: assortment_info = a_name
      end

    set_mechanics_info (a_name: like mechanics_info)
        -- Set 'mechanics_info' with 'a_name'.
      do
        mechanics_info := a_name
      ensure
        mechanics_info_set: mechanics_info = a_name
      end

    set_bestseller_info (a_name: like bestseller_info)
        -- Set 'bestseller_info' with 'a_name'.
      do
        bestseller_info := a_name
      ensure
        bestseller_info_set: bestseller_info = a_name
      end

    set_channels (a_name: like channels)
        -- Set 'channels' with 'a_name'.
      do
        channels := a_name
      ensure
        channels_set: channels = a_name
      end

    set_constraints (a_name: like constraints)
        -- Set 'constraints' with 'a_name'.
      do
        constraints := a_name
      ensure
        constraints_set: constraints = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass GET_PROMO_DTO%N")
        if attached id as l_id then
          Result.append ("%Nid:")
          Result.append (l_id.out)
          Result.append ("%N")
        end
        if attached name as l_name then
          Result.append ("%Nname:")
          Result.append (l_name.out)
          Result.append ("%N")
        end
        if attached period as l_period then
          Result.append ("%Nperiod:")
          Result.append (l_period.out)
          Result.append ("%N")
        end
        if attached participating as l_participating then
          Result.append ("%Nparticipating:")
          Result.append (l_participating.out)
          Result.append ("%N")
        end
        if attached assortment_info as l_assortment_info then
          Result.append ("%Nassortment_info:")
          Result.append (l_assortment_info.out)
          Result.append ("%N")
        end
        if attached mechanics_info as l_mechanics_info then
          Result.append ("%Nmechanics_info:")
          Result.append (l_mechanics_info.out)
          Result.append ("%N")
        end
        if attached bestseller_info as l_bestseller_info then
          Result.append ("%Nbestseller_info:")
          Result.append (l_bestseller_info.out)
          Result.append ("%N")
        end
        if attached channels as l_channels then
          across l_channels as ic loop
            Result.append ("%N channels:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached constraints as l_constraints then
          Result.append ("%Nconstraints:")
          Result.append (l_constraints.out)
          Result.append ("%N")
        end
      end
end

