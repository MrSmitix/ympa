note
 description:"[
		Партнерский API Маркета
 		API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
  		The version of the OpenAPI document: LATEST
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class WAREHOUSE_OFFER_DTO




feature --Access

    offer_id: detachable STRING_32
      -- Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
    turnover_summary: detachable TURNOVER_DTO
      
    stocks: detachable LIST [WAREHOUSE_STOCK_DTO]
      -- Информация об остатках.
    updated_at: detachable DATE_TIME
      -- Дата и время последнего обновления информации об остатках.  Формат даты и времени: ISO 8601 со смещением относительно UTC. Например, `2023-11-21T00:42:42+03:00`. 

feature -- Change Element

    set_offer_id (a_name: like offer_id)
        -- Set 'offer_id' with 'a_name'.
      do
        offer_id := a_name
      ensure
        offer_id_set: offer_id = a_name
      end

    set_turnover_summary (a_name: like turnover_summary)
        -- Set 'turnover_summary' with 'a_name'.
      do
        turnover_summary := a_name
      ensure
        turnover_summary_set: turnover_summary = a_name
      end

    set_stocks (a_name: like stocks)
        -- Set 'stocks' with 'a_name'.
      do
        stocks := a_name
      ensure
        stocks_set: stocks = a_name
      end

    set_updated_at (a_name: like updated_at)
        -- Set 'updated_at' with 'a_name'.
      do
        updated_at := a_name
      ensure
        updated_at_set: updated_at = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass WAREHOUSE_OFFER_DTO%N")
        if attached offer_id as l_offer_id then
          Result.append ("%Noffer_id:")
          Result.append (l_offer_id.out)
          Result.append ("%N")
        end
        if attached turnover_summary as l_turnover_summary then
          Result.append ("%Nturnover_summary:")
          Result.append (l_turnover_summary.out)
          Result.append ("%N")
        end
        if attached stocks as l_stocks then
          across l_stocks as ic loop
            Result.append ("%N stocks:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached updated_at as l_updated_at then
          Result.append ("%Nupdated_at:")
          Result.append (l_updated_at.out)
          Result.append ("%N")
        end
      end
end

