note
 description:"[
		Партнерский API Маркета
 		API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
  		The version of the OpenAPI document: LATEST
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class OFFER_DTO




feature --Access

    price: REAL_32
      -- Цена предложения.  До версии 2.0 партнерского API у параметра был тип String. 
    feed_id: INTEGER_64
      -- Идентификатор прайс-листа, содержащего предложение.  Параметр доступен начиная с версии 2.0 партнерского API. 
    id: detachable STRING_32
      -- Идентификатор предложения из прайс-листа.  Параметр выводится, если в прайс-листе задан уникальный идентификатор. Если в прайс-листе содержится несколько предложений с одинаковыми идентификаторами, параметр `id` указывается только для первого из них, для остальных параметры `id` и `feedId` не выводятся.  Параметр доступен начиная с версии 2.0 партнерского API. 
    shop_category_id: detachable STRING_32
      -- Идентификатор категории предложения, указанный магазином в прайс-листе.  Параметр выводится только для предложений, у которых указана категория в прайс-листе.  Параметр доступен начиная с версии 2.0 партнерского API. 
    market_category_id: INTEGER_32
      -- Идентификатор категории предложения в дереве категорий Маркета. Параметр доступен начиная с версии 2.0 партнерского API. 
    pre_discount_price: REAL_32
      -- Цена предложения без скидки.
    discount: INTEGER_32
      -- Скидка на предложение в процентах.
    cut_price: BOOLEAN
      -- Является ли предложение уцененным:  * `true` — да. * `false` — нет.  Параметр доступен начиная с версии 2.58 партнерского API. 
    url: detachable STRING_32
      -- URL-адрес предложения на сайте магазина.
    model_id: INTEGER_64
      -- Идентификатор модели Маркета, с которой соотнесено предложение.  Если предложение не соотнесено ни с какой карточкой модели, то параметр `modelid` содержит значение `0`.  {% note info %}  Идентификатор модели присутствует в URL карточки модели в виде значения параметра `product`. Например: `https://market.yandex.ru/product/13584121`.  {% endnote %} 
    name: detachable STRING_32
      -- Наименование предложения.
    currency: detachable CURRENCY_TYPE
      
    bid: REAL_32
      -- {% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Ставка на клик. 
    cbid: REAL_32
      -- {% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Ставка на клик. 
    fee: REAL_32
      -- {% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Процент комиссии на товар при продаже по CPA. 
    blocked: BOOLEAN
      -- Признак блокировки предложения. Возможные значения: * `false` — предложение активно, параметр не выводится. * `true` — предложение заблокировано. Параметр выводится, если предложение заблокировано и не попадает в выдачу Маркета. Это может произойти из-за отключения магазина. 

feature -- Change Element

    set_price (a_name: like price)
        -- Set 'price' with 'a_name'.
      do
        price := a_name
      ensure
        price_set: price = a_name
      end

    set_feed_id (a_name: like feed_id)
        -- Set 'feed_id' with 'a_name'.
      do
        feed_id := a_name
      ensure
        feed_id_set: feed_id = a_name
      end

    set_id (a_name: like id)
        -- Set 'id' with 'a_name'.
      do
        id := a_name
      ensure
        id_set: id = a_name
      end

    set_shop_category_id (a_name: like shop_category_id)
        -- Set 'shop_category_id' with 'a_name'.
      do
        shop_category_id := a_name
      ensure
        shop_category_id_set: shop_category_id = a_name
      end

    set_market_category_id (a_name: like market_category_id)
        -- Set 'market_category_id' with 'a_name'.
      do
        market_category_id := a_name
      ensure
        market_category_id_set: market_category_id = a_name
      end

    set_pre_discount_price (a_name: like pre_discount_price)
        -- Set 'pre_discount_price' with 'a_name'.
      do
        pre_discount_price := a_name
      ensure
        pre_discount_price_set: pre_discount_price = a_name
      end

    set_discount (a_name: like discount)
        -- Set 'discount' with 'a_name'.
      do
        discount := a_name
      ensure
        discount_set: discount = a_name
      end

    set_cut_price (a_name: like cut_price)
        -- Set 'cut_price' with 'a_name'.
      do
        cut_price := a_name
      ensure
        cut_price_set: cut_price = a_name
      end

    set_url (a_name: like url)
        -- Set 'url' with 'a_name'.
      do
        url := a_name
      ensure
        url_set: url = a_name
      end

    set_model_id (a_name: like model_id)
        -- Set 'model_id' with 'a_name'.
      do
        model_id := a_name
      ensure
        model_id_set: model_id = a_name
      end

    set_name (a_name: like name)
        -- Set 'name' with 'a_name'.
      do
        name := a_name
      ensure
        name_set: name = a_name
      end

    set_currency (a_name: like currency)
        -- Set 'currency' with 'a_name'.
      do
        currency := a_name
      ensure
        currency_set: currency = a_name
      end

    set_bid (a_name: like bid)
        -- Set 'bid' with 'a_name'.
      do
        bid := a_name
      ensure
        bid_set: bid = a_name
      end

    set_cbid (a_name: like cbid)
        -- Set 'cbid' with 'a_name'.
      do
        cbid := a_name
      ensure
        cbid_set: cbid = a_name
      end

    set_fee (a_name: like fee)
        -- Set 'fee' with 'a_name'.
      do
        fee := a_name
      ensure
        fee_set: fee = a_name
      end

    set_blocked (a_name: like blocked)
        -- Set 'blocked' with 'a_name'.
      do
        blocked := a_name
      ensure
        blocked_set: blocked = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass OFFER_DTO%N")
        if attached price as l_price then
          Result.append ("%Nprice:")
          Result.append (l_price.out)
          Result.append ("%N")
        end
        if attached feed_id as l_feed_id then
          Result.append ("%Nfeed_id:")
          Result.append (l_feed_id.out)
          Result.append ("%N")
        end
        if attached id as l_id then
          Result.append ("%Nid:")
          Result.append (l_id.out)
          Result.append ("%N")
        end
        if attached shop_category_id as l_shop_category_id then
          Result.append ("%Nshop_category_id:")
          Result.append (l_shop_category_id.out)
          Result.append ("%N")
        end
        if attached market_category_id as l_market_category_id then
          Result.append ("%Nmarket_category_id:")
          Result.append (l_market_category_id.out)
          Result.append ("%N")
        end
        if attached pre_discount_price as l_pre_discount_price then
          Result.append ("%Npre_discount_price:")
          Result.append (l_pre_discount_price.out)
          Result.append ("%N")
        end
        if attached discount as l_discount then
          Result.append ("%Ndiscount:")
          Result.append (l_discount.out)
          Result.append ("%N")
        end
        if attached cut_price as l_cut_price then
          Result.append ("%Ncut_price:")
          Result.append (l_cut_price.out)
          Result.append ("%N")
        end
        if attached url as l_url then
          Result.append ("%Nurl:")
          Result.append (l_url.out)
          Result.append ("%N")
        end
        if attached model_id as l_model_id then
          Result.append ("%Nmodel_id:")
          Result.append (l_model_id.out)
          Result.append ("%N")
        end
        if attached name as l_name then
          Result.append ("%Nname:")
          Result.append (l_name.out)
          Result.append ("%N")
        end
        if attached currency as l_currency then
          Result.append ("%Ncurrency:")
          Result.append (l_currency.out)
          Result.append ("%N")
        end
        if attached bid as l_bid then
          Result.append ("%Nbid:")
          Result.append (l_bid.out)
          Result.append ("%N")
        end
        if attached cbid as l_cbid then
          Result.append ("%Ncbid:")
          Result.append (l_cbid.out)
          Result.append ("%N")
        end
        if attached fee as l_fee then
          Result.append ("%Nfee:")
          Result.append (l_fee.out)
          Result.append ("%N")
        end
        if attached blocked as l_blocked then
          Result.append ("%Nblocked:")
          Result.append (l_blocked.out)
          Result.append ("%N")
        end
      end
end

