note
 description:"[
		Партнерский API Маркета
 		API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
  		The version of the OpenAPI document: LATEST
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class FEEDBACK_COMMENT_DTO




feature --Access

    id: INTEGER_64
      -- Идентификатор ответа.
    parent_id: INTEGER_64
      -- Идентификатор родительского ответа.
    body: detachable STRING_32
      -- Текст ответа.
    created_at: detachable DATE_TIME
      -- Дата и время создания ответа.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:00:00+03:00`. 
    updated_at: detachable DATE_TIME
      -- Дата и время изменения ответа.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:00:00+03:00`. 
    author: detachable FEEDBACK_COMMENT_AUTHOR_DTO
      
    children: detachable LIST [FEEDBACK_COMMENT_DTO]
      -- Дочерние ответы.

feature -- Change Element

    set_id (a_name: like id)
        -- Set 'id' with 'a_name'.
      do
        id := a_name
      ensure
        id_set: id = a_name
      end

    set_parent_id (a_name: like parent_id)
        -- Set 'parent_id' with 'a_name'.
      do
        parent_id := a_name
      ensure
        parent_id_set: parent_id = a_name
      end

    set_body (a_name: like body)
        -- Set 'body' with 'a_name'.
      do
        body := a_name
      ensure
        body_set: body = a_name
      end

    set_created_at (a_name: like created_at)
        -- Set 'created_at' with 'a_name'.
      do
        created_at := a_name
      ensure
        created_at_set: created_at = a_name
      end

    set_updated_at (a_name: like updated_at)
        -- Set 'updated_at' with 'a_name'.
      do
        updated_at := a_name
      ensure
        updated_at_set: updated_at = a_name
      end

    set_author (a_name: like author)
        -- Set 'author' with 'a_name'.
      do
        author := a_name
      ensure
        author_set: author = a_name
      end

    set_children (a_name: like children)
        -- Set 'children' with 'a_name'.
      do
        children := a_name
      ensure
        children_set: children = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass FEEDBACK_COMMENT_DTO%N")
        if attached id as l_id then
          Result.append ("%Nid:")
          Result.append (l_id.out)
          Result.append ("%N")
        end
        if attached parent_id as l_parent_id then
          Result.append ("%Nparent_id:")
          Result.append (l_parent_id.out)
          Result.append ("%N")
        end
        if attached body as l_body then
          Result.append ("%Nbody:")
          Result.append (l_body.out)
          Result.append ("%N")
        end
        if attached created_at as l_created_at then
          Result.append ("%Ncreated_at:")
          Result.append (l_created_at.out)
          Result.append ("%N")
        end
        if attached updated_at as l_updated_at then
          Result.append ("%Nupdated_at:")
          Result.append (l_updated_at.out)
          Result.append ("%N")
        end
        if attached author as l_author then
          Result.append ("%Nauthor:")
          Result.append (l_author.out)
          Result.append ("%N")
        end
        if attached children as l_children then
          across l_children as ic loop
            Result.append ("%N children:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
      end
end

