note
 description:"[
		Партнерский API Маркета
 		API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
  		The version of the OpenAPI document: LATEST
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class CAMPAIGN_SETTINGS_SCHEDULE_DTO




feature --Access

    available_on_holidays: BOOLEAN
      -- Признак работы службы доставки в государственные праздники. Возможные значения. * `false` — служба доставки не работает в праздничные дни. * `true` — служба доставки работает в праздничные дни. 
    custom_holidays: detachable LIST [STRING_32]
      -- Список дней, в которые служба доставки не работает. Дни магазин указал в кабинете продавца на Маркете.
    custom_working_days: detachable LIST [STRING_32]
      -- Список выходных и праздничных дней, в которые служба доставки работает. Дни магазин указал в кабинете продавца на Маркете.
    period: detachable CAMPAIGN_SETTINGS_TIME_PERIOD_DTO
      
    total_holidays: detachable LIST [STRING_32]
      -- Итоговый список нерабочих дней службы доставки. Список рассчитывается с учетом выходных, нерабочих дней и государственных праздников. Информацию по ним магазин указывает в кабинете продавца на Маркете.
    weekly_holidays: detachable LIST [INTEGER_32]
      -- Список выходных дней недели и государственных праздников.

feature -- Change Element

    set_available_on_holidays (a_name: like available_on_holidays)
        -- Set 'available_on_holidays' with 'a_name'.
      do
        available_on_holidays := a_name
      ensure
        available_on_holidays_set: available_on_holidays = a_name
      end

    set_custom_holidays (a_name: like custom_holidays)
        -- Set 'custom_holidays' with 'a_name'.
      do
        custom_holidays := a_name
      ensure
        custom_holidays_set: custom_holidays = a_name
      end

    set_custom_working_days (a_name: like custom_working_days)
        -- Set 'custom_working_days' with 'a_name'.
      do
        custom_working_days := a_name
      ensure
        custom_working_days_set: custom_working_days = a_name
      end

    set_period (a_name: like period)
        -- Set 'period' with 'a_name'.
      do
        period := a_name
      ensure
        period_set: period = a_name
      end

    set_total_holidays (a_name: like total_holidays)
        -- Set 'total_holidays' with 'a_name'.
      do
        total_holidays := a_name
      ensure
        total_holidays_set: total_holidays = a_name
      end

    set_weekly_holidays (a_name: like weekly_holidays)
        -- Set 'weekly_holidays' with 'a_name'.
      do
        weekly_holidays := a_name
      ensure
        weekly_holidays_set: weekly_holidays = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass CAMPAIGN_SETTINGS_SCHEDULE_DTO%N")
        if attached available_on_holidays as l_available_on_holidays then
          Result.append ("%Navailable_on_holidays:")
          Result.append (l_available_on_holidays.out)
          Result.append ("%N")
        end
        if attached custom_holidays as l_custom_holidays then
          across l_custom_holidays as ic loop
            Result.append ("%N custom_holidays:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached custom_working_days as l_custom_working_days then
          across l_custom_working_days as ic loop
            Result.append ("%N custom_working_days:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached period as l_period then
          Result.append ("%Nperiod:")
          Result.append (l_period.out)
          Result.append ("%N")
        end
        if attached total_holidays as l_total_holidays then
          across l_total_holidays as ic loop
            Result.append ("%N total_holidays:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached weekly_holidays as l_weekly_holidays then
          across l_weekly_holidays as ic loop
            Result.append ("%N weekly_holidays:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
      end
end

