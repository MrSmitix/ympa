note
 description:"[
		Партнерский API Маркета
 		API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
  		The version of the OpenAPI document: LATEST
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class SEARCH_MODELS_RESPONSE




feature --Access

    models: detachable LIST [MODEL_DTO]
      -- Список моделей товаров.
    currency: detachable CURRENCY_TYPE
      
    region_id: INTEGER_64
      -- Идентификатор региона, для которого выводится информация о предложениях модели (доставляемых в этот регион).  Информацию о регионе по идентификатору можно получить с помощью запроса [GET regions/{regionId}](../../reference/regions/searchRegionsById.md). 
    pager: detachable FLIPPING_PAGER_DTO
      

feature -- Change Element

    set_models (a_name: like models)
        -- Set 'models' with 'a_name'.
      do
        models := a_name
      ensure
        models_set: models = a_name
      end

    set_currency (a_name: like currency)
        -- Set 'currency' with 'a_name'.
      do
        currency := a_name
      ensure
        currency_set: currency = a_name
      end

    set_region_id (a_name: like region_id)
        -- Set 'region_id' with 'a_name'.
      do
        region_id := a_name
      ensure
        region_id_set: region_id = a_name
      end

    set_pager (a_name: like pager)
        -- Set 'pager' with 'a_name'.
      do
        pager := a_name
      ensure
        pager_set: pager = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass SEARCH_MODELS_RESPONSE%N")
        if attached models as l_models then
          across l_models as ic loop
            Result.append ("%N models:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached currency as l_currency then
          Result.append ("%Ncurrency:")
          Result.append (l_currency.out)
          Result.append ("%N")
        end
        if attached region_id as l_region_id then
          Result.append ("%Nregion_id:")
          Result.append (l_region_id.out)
          Result.append ("%N")
        end
        if attached pager as l_pager then
          Result.append ("%Npager:")
          Result.append (l_pager.out)
          Result.append ("%N")
        end
      end
end

