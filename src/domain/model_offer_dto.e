note
 description:"[
		Партнерский API Маркета
 		API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
  		The version of the OpenAPI document: LATEST
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class MODEL_OFFER_DTO




feature --Access

    discount: INTEGER_32
      -- Скидка на предложение в процентах.
    name: detachable STRING_32
      -- Наименование предложения.
    pos: INTEGER_32
      -- Позиция предложения в выдаче Маркета на карточке модели.
    pre_discount_price: REAL_32
      -- Цена предложения без скидки магазина.
    price: REAL_32
      -- Цена предложения без скидки, которую получает покупатель при оплате через Yandex Pay.
    region_id: INTEGER_64
      -- Идентификатор региона предложения (регион, откуда доставляется товар).  Сначала показываются предложения, доставляемые из региона, указанного в запросе в параметре `regionId`. Предложения, доставляемые из других регионов, показываются после них. 
    shipping_cost: REAL_32
      -- Стоимость доставки товара в регион:  * `0` — доставка осуществляется бесплатно. * `-1` — магазин не осуществляет доставку этого товара (самовывоз).  Если стоимость доставки неизвестна, параметр не выводится. 
    shop_name: detachable STRING_32
      -- Название магазина (в том виде, в котором отображается на Маркете).
    shop_rating: INTEGER_32
      -- Рейтинг магазина.  Возможные значения: * `-1` — у магазинов, недавно появившихся на Маркете, рейтинг появляется не сразу. До момента появления рейтинга для таких магазинов возвращается значение `-1`. * `1`. * `2`. * `3`. * `4`. * `5`. 
    in_stock: INTEGER_32
      -- {% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %} 

feature -- Change Element

    set_discount (a_name: like discount)
        -- Set 'discount' with 'a_name'.
      do
        discount := a_name
      ensure
        discount_set: discount = a_name
      end

    set_name (a_name: like name)
        -- Set 'name' with 'a_name'.
      do
        name := a_name
      ensure
        name_set: name = a_name
      end

    set_pos (a_name: like pos)
        -- Set 'pos' with 'a_name'.
      do
        pos := a_name
      ensure
        pos_set: pos = a_name
      end

    set_pre_discount_price (a_name: like pre_discount_price)
        -- Set 'pre_discount_price' with 'a_name'.
      do
        pre_discount_price := a_name
      ensure
        pre_discount_price_set: pre_discount_price = a_name
      end

    set_price (a_name: like price)
        -- Set 'price' with 'a_name'.
      do
        price := a_name
      ensure
        price_set: price = a_name
      end

    set_region_id (a_name: like region_id)
        -- Set 'region_id' with 'a_name'.
      do
        region_id := a_name
      ensure
        region_id_set: region_id = a_name
      end

    set_shipping_cost (a_name: like shipping_cost)
        -- Set 'shipping_cost' with 'a_name'.
      do
        shipping_cost := a_name
      ensure
        shipping_cost_set: shipping_cost = a_name
      end

    set_shop_name (a_name: like shop_name)
        -- Set 'shop_name' with 'a_name'.
      do
        shop_name := a_name
      ensure
        shop_name_set: shop_name = a_name
      end

    set_shop_rating (a_name: like shop_rating)
        -- Set 'shop_rating' with 'a_name'.
      do
        shop_rating := a_name
      ensure
        shop_rating_set: shop_rating = a_name
      end

    set_in_stock (a_name: like in_stock)
        -- Set 'in_stock' with 'a_name'.
      do
        in_stock := a_name
      ensure
        in_stock_set: in_stock = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass MODEL_OFFER_DTO%N")
        if attached discount as l_discount then
          Result.append ("%Ndiscount:")
          Result.append (l_discount.out)
          Result.append ("%N")
        end
        if attached name as l_name then
          Result.append ("%Nname:")
          Result.append (l_name.out)
          Result.append ("%N")
        end
        if attached pos as l_pos then
          Result.append ("%Npos:")
          Result.append (l_pos.out)
          Result.append ("%N")
        end
        if attached pre_discount_price as l_pre_discount_price then
          Result.append ("%Npre_discount_price:")
          Result.append (l_pre_discount_price.out)
          Result.append ("%N")
        end
        if attached price as l_price then
          Result.append ("%Nprice:")
          Result.append (l_price.out)
          Result.append ("%N")
        end
        if attached region_id as l_region_id then
          Result.append ("%Nregion_id:")
          Result.append (l_region_id.out)
          Result.append ("%N")
        end
        if attached shipping_cost as l_shipping_cost then
          Result.append ("%Nshipping_cost:")
          Result.append (l_shipping_cost.out)
          Result.append ("%N")
        end
        if attached shop_name as l_shop_name then
          Result.append ("%Nshop_name:")
          Result.append (l_shop_name.out)
          Result.append ("%N")
        end
        if attached shop_rating as l_shop_rating then
          Result.append ("%Nshop_rating:")
          Result.append (l_shop_rating.out)
          Result.append ("%N")
        end
        if attached in_stock as l_in_stock then
          Result.append ("%Nin_stock:")
          Result.append (l_in_stock.out)
          Result.append ("%N")
        end
      end
end

