note
 description:"[
		Партнерский API Маркета
 		API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
  		The version of the OpenAPI document: LATEST
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class GENERATE_GOODS_MOVEMENT_REPORT_REQUEST




feature --Access

    campaign_id: INTEGER_64
      -- Идентификатор кампании.
    date_from: detachable DATE
      -- Начало периода, включительно.
    date_to: detachable DATE
      -- Конец периода, включительно.
    shop_sku: detachable STRING_32
      -- Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 

feature -- Change Element

    set_campaign_id (a_name: like campaign_id)
        -- Set 'campaign_id' with 'a_name'.
      do
        campaign_id := a_name
      ensure
        campaign_id_set: campaign_id = a_name
      end

    set_date_from (a_name: like date_from)
        -- Set 'date_from' with 'a_name'.
      do
        date_from := a_name
      ensure
        date_from_set: date_from = a_name
      end

    set_date_to (a_name: like date_to)
        -- Set 'date_to' with 'a_name'.
      do
        date_to := a_name
      ensure
        date_to_set: date_to = a_name
      end

    set_shop_sku (a_name: like shop_sku)
        -- Set 'shop_sku' with 'a_name'.
      do
        shop_sku := a_name
      ensure
        shop_sku_set: shop_sku = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass GENERATE_GOODS_MOVEMENT_REPORT_REQUEST%N")
        if attached campaign_id as l_campaign_id then
          Result.append ("%Ncampaign_id:")
          Result.append (l_campaign_id.out)
          Result.append ("%N")
        end
        if attached date_from as l_date_from then
          Result.append ("%Ndate_from:")
          Result.append (l_date_from.out)
          Result.append ("%N")
        end
        if attached date_to as l_date_to then
          Result.append ("%Ndate_to:")
          Result.append (l_date_to.out)
          Result.append ("%N")
        end
        if attached shop_sku as l_shop_sku then
          Result.append ("%Nshop_sku:")
          Result.append (l_shop_sku.out)
          Result.append ("%N")
        end
      end
end

