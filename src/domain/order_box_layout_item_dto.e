note
 description:"[
		Партнерский API Маркета
 		API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
  		The version of the OpenAPI document: LATEST
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class ORDER_BOX_LAYOUT_ITEM_DTO




feature --Access

    id: INTEGER_64
      -- Идентификатор товара в заказе.  {% cut \"Где его взять\" %}  Идентификатор приходит в ответе на запрос [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) и в запросе Маркета [POST order/accept](../../pushapi/reference/orderAccept.md) — параметр `id` в `items`.  {% endcut %}   
    full_count: INTEGER_32
      -- Количество единиц товара в коробке.  Используйте это поле, если в коробке поедут целые товары, не разделенные на части. Не используйте это поле одновременно с `partialCount`. 
    partial_count: detachable ORDER_BOX_LAYOUT_PARTIAL_COUNT_DTO
      
    instances: detachable LIST [BRIEF_ORDER_ITEM_INSTANCE_DTO]
      -- Переданные вами коды маркировки.

feature -- Change Element

    set_id (a_name: like id)
        -- Set 'id' with 'a_name'.
      do
        id := a_name
      ensure
        id_set: id = a_name
      end

    set_full_count (a_name: like full_count)
        -- Set 'full_count' with 'a_name'.
      do
        full_count := a_name
      ensure
        full_count_set: full_count = a_name
      end

    set_partial_count (a_name: like partial_count)
        -- Set 'partial_count' with 'a_name'.
      do
        partial_count := a_name
      ensure
        partial_count_set: partial_count = a_name
      end

    set_instances (a_name: like instances)
        -- Set 'instances' with 'a_name'.
      do
        instances := a_name
      ensure
        instances_set: instances = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass ORDER_BOX_LAYOUT_ITEM_DTO%N")
        if attached id as l_id then
          Result.append ("%Nid:")
          Result.append (l_id.out)
          Result.append ("%N")
        end
        if attached full_count as l_full_count then
          Result.append ("%Nfull_count:")
          Result.append (l_full_count.out)
          Result.append ("%N")
        end
        if attached partial_count as l_partial_count then
          Result.append ("%Npartial_count:")
          Result.append (l_partial_count.out)
          Result.append ("%N")
        end
        if attached instances as l_instances then
          across l_instances as ic loop
            Result.append ("%N instances:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
      end
end

