note
 description:"[
		Партнерский API Маркета
 		API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
  		The version of the OpenAPI document: LATEST
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class ENRICHED_MODEL_DTO




feature --Access

    id: INTEGER_64
      -- Идентификатор модели товара.
    name: detachable STRING_32
      -- Название модели товара.
    prices: detachable MODEL_PRICE_DTO
      
    offers: detachable LIST [MODEL_OFFER_DTO]
      -- Список первых десяти предложений, расположенных на карточке модели.  В ответе на запрос возвращаются предложения различных магазинов. Если есть несколько предложений от одного магазина, в ответе отображается только одно, наиболее релевантное из них. 
    offline_offers: INTEGER_32
      -- Суммарное количество предложений в розничных магазинах в регионе. Учитываются все предложения от каждого магазина.
    online_offers: INTEGER_32
      -- Суммарное количество предложений в интернет-магазинах в регионе. Учитываются все предложения от каждого магазина.

feature -- Change Element

    set_id (a_name: like id)
        -- Set 'id' with 'a_name'.
      do
        id := a_name
      ensure
        id_set: id = a_name
      end

    set_name (a_name: like name)
        -- Set 'name' with 'a_name'.
      do
        name := a_name
      ensure
        name_set: name = a_name
      end

    set_prices (a_name: like prices)
        -- Set 'prices' with 'a_name'.
      do
        prices := a_name
      ensure
        prices_set: prices = a_name
      end

    set_offers (a_name: like offers)
        -- Set 'offers' with 'a_name'.
      do
        offers := a_name
      ensure
        offers_set: offers = a_name
      end

    set_offline_offers (a_name: like offline_offers)
        -- Set 'offline_offers' with 'a_name'.
      do
        offline_offers := a_name
      ensure
        offline_offers_set: offline_offers = a_name
      end

    set_online_offers (a_name: like online_offers)
        -- Set 'online_offers' with 'a_name'.
      do
        online_offers := a_name
      ensure
        online_offers_set: online_offers = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass ENRICHED_MODEL_DTO%N")
        if attached id as l_id then
          Result.append ("%Nid:")
          Result.append (l_id.out)
          Result.append ("%N")
        end
        if attached name as l_name then
          Result.append ("%Nname:")
          Result.append (l_name.out)
          Result.append ("%N")
        end
        if attached prices as l_prices then
          Result.append ("%Nprices:")
          Result.append (l_prices.out)
          Result.append ("%N")
        end
        if attached offers as l_offers then
          across l_offers as ic loop
            Result.append ("%N offers:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached offline_offers as l_offline_offers then
          Result.append ("%Noffline_offers:")
          Result.append (l_offline_offers.out)
          Result.append ("%N")
        end
        if attached online_offers as l_online_offers then
          Result.append ("%Nonline_offers:")
          Result.append (l_online_offers.out)
          Result.append ("%N")
        end
      end
end

