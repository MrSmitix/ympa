note
 description:"[
		Партнерский API Маркета
 		API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
  		The version of the OpenAPI document: LATEST
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class ORDER_DELIVERY_DTO




feature --Access

    id: detachable STRING_32
      -- Идентификатор доставки, присвоенный магазином.  Указывается, только если магазин передал данный идентификатор в ответе на запрос методом [POST cart](../../pushapi/reference/cart.md). 
    type: detachable ORDER_DELIVERY_TYPE
      
    service_name: detachable STRING_32
      -- Наименование службы доставки.
    price: REAL_32
      -- {% note warning \"\" %}  Этот параметр устарел. Стоимость доставки смотрите в параметре `deliveryTotal`.  {% endnote %}  Стоимость доставки в валюте заказа. 
    delivery_partner_type: detachable ORDER_DELIVERY_PARTNER_TYPE
      
    courier: detachable ORDER_COURIER_DTO
      
    dates: detachable ORDER_DELIVERY_DATES_DTO
      
    region: detachable REGION_DTO
      
    address: detachable ORDER_DELIVERY_ADDRESS_DTO
      
    vat: detachable ORDER_VAT_TYPE
      
    delivery_service_id: INTEGER_64
      -- Идентификатор службы доставки.
    lift_type: detachable ORDER_LIFT_TYPE
      
    lift_price: REAL_32
      -- Стоимость подъема на этаж.
    outlet_code: detachable STRING_32
      -- Идентификатор пункта самовывоза, присвоенный магазином.
    outlet_storage_limit_date: detachable STRING_32
      -- Формат даты: `ДД-ММ-ГГГГ`. 
    dispatch_type: detachable ORDER_DELIVERY_DISPATCH_TYPE
      
    tracks: detachable LIST [ORDER_TRACK_DTO]
      -- Информация для отслеживания перемещений посылки.
    shipments: detachable LIST [ORDER_SHIPMENT_DTO]
      -- Информация о посылках.
    estimated: BOOLEAN
      -- Приблизительная ли дата доставки.
    eac_type: detachable ORDER_DELIVERY_EAC_TYPE
      
    eac_code: detachable STRING_32
      -- Код подтверждения ЭАПП (для типа `MERCHANT_TO_COURIER`). 

feature -- Change Element

    set_id (a_name: like id)
        -- Set 'id' with 'a_name'.
      do
        id := a_name
      ensure
        id_set: id = a_name
      end

    set_type (a_name: like type)
        -- Set 'type' with 'a_name'.
      do
        type := a_name
      ensure
        type_set: type = a_name
      end

    set_service_name (a_name: like service_name)
        -- Set 'service_name' with 'a_name'.
      do
        service_name := a_name
      ensure
        service_name_set: service_name = a_name
      end

    set_price (a_name: like price)
        -- Set 'price' with 'a_name'.
      do
        price := a_name
      ensure
        price_set: price = a_name
      end

    set_delivery_partner_type (a_name: like delivery_partner_type)
        -- Set 'delivery_partner_type' with 'a_name'.
      do
        delivery_partner_type := a_name
      ensure
        delivery_partner_type_set: delivery_partner_type = a_name
      end

    set_courier (a_name: like courier)
        -- Set 'courier' with 'a_name'.
      do
        courier := a_name
      ensure
        courier_set: courier = a_name
      end

    set_dates (a_name: like dates)
        -- Set 'dates' with 'a_name'.
      do
        dates := a_name
      ensure
        dates_set: dates = a_name
      end

    set_region (a_name: like region)
        -- Set 'region' with 'a_name'.
      do
        region := a_name
      ensure
        region_set: region = a_name
      end

    set_address (a_name: like address)
        -- Set 'address' with 'a_name'.
      do
        address := a_name
      ensure
        address_set: address = a_name
      end

    set_vat (a_name: like vat)
        -- Set 'vat' with 'a_name'.
      do
        vat := a_name
      ensure
        vat_set: vat = a_name
      end

    set_delivery_service_id (a_name: like delivery_service_id)
        -- Set 'delivery_service_id' with 'a_name'.
      do
        delivery_service_id := a_name
      ensure
        delivery_service_id_set: delivery_service_id = a_name
      end

    set_lift_type (a_name: like lift_type)
        -- Set 'lift_type' with 'a_name'.
      do
        lift_type := a_name
      ensure
        lift_type_set: lift_type = a_name
      end

    set_lift_price (a_name: like lift_price)
        -- Set 'lift_price' with 'a_name'.
      do
        lift_price := a_name
      ensure
        lift_price_set: lift_price = a_name
      end

    set_outlet_code (a_name: like outlet_code)
        -- Set 'outlet_code' with 'a_name'.
      do
        outlet_code := a_name
      ensure
        outlet_code_set: outlet_code = a_name
      end

    set_outlet_storage_limit_date (a_name: like outlet_storage_limit_date)
        -- Set 'outlet_storage_limit_date' with 'a_name'.
      do
        outlet_storage_limit_date := a_name
      ensure
        outlet_storage_limit_date_set: outlet_storage_limit_date = a_name
      end

    set_dispatch_type (a_name: like dispatch_type)
        -- Set 'dispatch_type' with 'a_name'.
      do
        dispatch_type := a_name
      ensure
        dispatch_type_set: dispatch_type = a_name
      end

    set_tracks (a_name: like tracks)
        -- Set 'tracks' with 'a_name'.
      do
        tracks := a_name
      ensure
        tracks_set: tracks = a_name
      end

    set_shipments (a_name: like shipments)
        -- Set 'shipments' with 'a_name'.
      do
        shipments := a_name
      ensure
        shipments_set: shipments = a_name
      end

    set_estimated (a_name: like estimated)
        -- Set 'estimated' with 'a_name'.
      do
        estimated := a_name
      ensure
        estimated_set: estimated = a_name
      end

    set_eac_type (a_name: like eac_type)
        -- Set 'eac_type' with 'a_name'.
      do
        eac_type := a_name
      ensure
        eac_type_set: eac_type = a_name
      end

    set_eac_code (a_name: like eac_code)
        -- Set 'eac_code' with 'a_name'.
      do
        eac_code := a_name
      ensure
        eac_code_set: eac_code = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass ORDER_DELIVERY_DTO%N")
        if attached id as l_id then
          Result.append ("%Nid:")
          Result.append (l_id.out)
          Result.append ("%N")
        end
        if attached type as l_type then
          Result.append ("%Ntype:")
          Result.append (l_type.out)
          Result.append ("%N")
        end
        if attached service_name as l_service_name then
          Result.append ("%Nservice_name:")
          Result.append (l_service_name.out)
          Result.append ("%N")
        end
        if attached price as l_price then
          Result.append ("%Nprice:")
          Result.append (l_price.out)
          Result.append ("%N")
        end
        if attached delivery_partner_type as l_delivery_partner_type then
          Result.append ("%Ndelivery_partner_type:")
          Result.append (l_delivery_partner_type.out)
          Result.append ("%N")
        end
        if attached courier as l_courier then
          Result.append ("%Ncourier:")
          Result.append (l_courier.out)
          Result.append ("%N")
        end
        if attached dates as l_dates then
          Result.append ("%Ndates:")
          Result.append (l_dates.out)
          Result.append ("%N")
        end
        if attached region as l_region then
          Result.append ("%Nregion:")
          Result.append (l_region.out)
          Result.append ("%N")
        end
        if attached address as l_address then
          Result.append ("%Naddress:")
          Result.append (l_address.out)
          Result.append ("%N")
        end
        if attached vat as l_vat then
          Result.append ("%Nvat:")
          Result.append (l_vat.out)
          Result.append ("%N")
        end
        if attached delivery_service_id as l_delivery_service_id then
          Result.append ("%Ndelivery_service_id:")
          Result.append (l_delivery_service_id.out)
          Result.append ("%N")
        end
        if attached lift_type as l_lift_type then
          Result.append ("%Nlift_type:")
          Result.append (l_lift_type.out)
          Result.append ("%N")
        end
        if attached lift_price as l_lift_price then
          Result.append ("%Nlift_price:")
          Result.append (l_lift_price.out)
          Result.append ("%N")
        end
        if attached outlet_code as l_outlet_code then
          Result.append ("%Noutlet_code:")
          Result.append (l_outlet_code.out)
          Result.append ("%N")
        end
        if attached outlet_storage_limit_date as l_outlet_storage_limit_date then
          Result.append ("%Noutlet_storage_limit_date:")
          Result.append (l_outlet_storage_limit_date.out)
          Result.append ("%N")
        end
        if attached dispatch_type as l_dispatch_type then
          Result.append ("%Ndispatch_type:")
          Result.append (l_dispatch_type.out)
          Result.append ("%N")
        end
        if attached tracks as l_tracks then
          across l_tracks as ic loop
            Result.append ("%N tracks:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached shipments as l_shipments then
          across l_shipments as ic loop
            Result.append ("%N shipments:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached estimated as l_estimated then
          Result.append ("%Nestimated:")
          Result.append (l_estimated.out)
          Result.append ("%N")
        end
        if attached eac_type as l_eac_type then
          Result.append ("%Neac_type:")
          Result.append (l_eac_type.out)
          Result.append ("%N")
        end
        if attached eac_code as l_eac_code then
          Result.append ("%Neac_code:")
          Result.append (l_eac_code.out)
          Result.append ("%N")
        end
      end
end

