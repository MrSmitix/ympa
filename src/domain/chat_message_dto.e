note
 description:"[
		Партнерский API Маркета
 		API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
  		The version of the OpenAPI document: LATEST
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class CHAT_MESSAGE_DTO




feature --Access

    message_id: INTEGER_64
      -- Идентификатор сообщения.
    created_at: detachable DATE_TIME
      -- Дата и время создания сообщения.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:00:00+03:00`. 
    sender: detachable CHAT_MESSAGE_SENDER_TYPE
      
    message: detachable STRING_32
      -- Текст сообщения.  Необязательный параметр, если возвращается параметр `payload`. 
    payload: detachable LIST [CHAT_MESSAGE_PAYLOAD_DTO]
      -- Информация о приложенных к сообщению файлах.  Необязательный параметр, если возвращается параметр `message`. 

feature -- Change Element

    set_message_id (a_name: like message_id)
        -- Set 'message_id' with 'a_name'.
      do
        message_id := a_name
      ensure
        message_id_set: message_id = a_name
      end

    set_created_at (a_name: like created_at)
        -- Set 'created_at' with 'a_name'.
      do
        created_at := a_name
      ensure
        created_at_set: created_at = a_name
      end

    set_sender (a_name: like sender)
        -- Set 'sender' with 'a_name'.
      do
        sender := a_name
      ensure
        sender_set: sender = a_name
      end

    set_message (a_name: like message)
        -- Set 'message' with 'a_name'.
      do
        message := a_name
      ensure
        message_set: message = a_name
      end

    set_payload (a_name: like payload)
        -- Set 'payload' with 'a_name'.
      do
        payload := a_name
      ensure
        payload_set: payload = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass CHAT_MESSAGE_DTO%N")
        if attached message_id as l_message_id then
          Result.append ("%Nmessage_id:")
          Result.append (l_message_id.out)
          Result.append ("%N")
        end
        if attached created_at as l_created_at then
          Result.append ("%Ncreated_at:")
          Result.append (l_created_at.out)
          Result.append ("%N")
        end
        if attached sender as l_sender then
          Result.append ("%Nsender:")
          Result.append (l_sender.out)
          Result.append ("%N")
        end
        if attached message as l_message then
          Result.append ("%Nmessage:")
          Result.append (l_message.out)
          Result.append ("%N")
        end
        if attached payload as l_payload then
          across l_payload as ic loop
            Result.append ("%N payload:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
      end
end

