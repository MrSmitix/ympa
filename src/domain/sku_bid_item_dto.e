note
 description:"[
		Партнерский API Маркета
 		API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
  		The version of the OpenAPI document: LATEST
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class SKU_BID_ITEM_DTO




feature --Access

    sku: detachable STRING_32
      -- Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
    bid: INTEGER_32
      -- Значение ставки.

feature -- Change Element

    set_sku (a_name: like sku)
        -- Set 'sku' with 'a_name'.
      do
        sku := a_name
      ensure
        sku_set: sku = a_name
      end

    set_bid (a_name: like bid)
        -- Set 'bid' with 'a_name'.
      do
        bid := a_name
      ensure
        bid_set: bid = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass SKU_BID_ITEM_DTO%N")
        if attached sku as l_sku then
          Result.append ("%Nsku:")
          Result.append (l_sku.out)
          Result.append ("%N")
        end
        if attached bid as l_bid then
          Result.append ("%Nbid:")
          Result.append (l_bid.out)
          Result.append ("%N")
        end
      end
end

