note
 description:"[
		Партнерский API Маркета
 		API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
  		The version of the OpenAPI document: LATEST
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class ORDERS_STATS_ORDER_DTO




feature --Access

    id: INTEGER_64
      -- Идентификатор заказа.
    creation_date: detachable DATE
      -- Дата создания заказа.  Формат даты: `ГГГГ-ММ-ДД`. 
    status_update_date: detachable DATE_TIME
      -- Дата и время, когда статус заказа был изменен в последний раз.  Формат даты и времени: ISO 8601. Например, `2017-11-21T00:00:00`. Часовой пояс — UTC+03:00 (Москва). 
    status: detachable ORDER_STATS_STATUS_TYPE
      
    partner_order_id: detachable STRING_32
      -- Идентификатор заказа в информационной системе магазина.
    payment_type: detachable ORDERS_STATS_ORDER_PAYMENT_TYPE
      
    fake: BOOLEAN
      -- Тип заказа:  * `false` — настоящий заказ покупателя.  * `true` — [тестовый](../../pushapi/concepts/sandbox.md) заказ Маркета. 
    delivery_region: detachable ORDERS_STATS_DELIVERY_REGION_DTO
      
    items: detachable LIST [ORDERS_STATS_ITEM_DTO]
      -- Список товаров в заказе после возможных изменений.
    initial_items: detachable LIST [ORDERS_STATS_ITEM_DTO]
      -- Список товаров в заказе до изменений.
    payments: detachable LIST [ORDERS_STATS_PAYMENT_DTO]
      -- Информация о денежных переводах по заказу.
    commissions: detachable LIST [ORDERS_STATS_COMMISSION_DTO]
      -- Информация о комиссиях за заказ.

feature -- Change Element

    set_id (a_name: like id)
        -- Set 'id' with 'a_name'.
      do
        id := a_name
      ensure
        id_set: id = a_name
      end

    set_creation_date (a_name: like creation_date)
        -- Set 'creation_date' with 'a_name'.
      do
        creation_date := a_name
      ensure
        creation_date_set: creation_date = a_name
      end

    set_status_update_date (a_name: like status_update_date)
        -- Set 'status_update_date' with 'a_name'.
      do
        status_update_date := a_name
      ensure
        status_update_date_set: status_update_date = a_name
      end

    set_status (a_name: like status)
        -- Set 'status' with 'a_name'.
      do
        status := a_name
      ensure
        status_set: status = a_name
      end

    set_partner_order_id (a_name: like partner_order_id)
        -- Set 'partner_order_id' with 'a_name'.
      do
        partner_order_id := a_name
      ensure
        partner_order_id_set: partner_order_id = a_name
      end

    set_payment_type (a_name: like payment_type)
        -- Set 'payment_type' with 'a_name'.
      do
        payment_type := a_name
      ensure
        payment_type_set: payment_type = a_name
      end

    set_fake (a_name: like fake)
        -- Set 'fake' with 'a_name'.
      do
        fake := a_name
      ensure
        fake_set: fake = a_name
      end

    set_delivery_region (a_name: like delivery_region)
        -- Set 'delivery_region' with 'a_name'.
      do
        delivery_region := a_name
      ensure
        delivery_region_set: delivery_region = a_name
      end

    set_items (a_name: like items)
        -- Set 'items' with 'a_name'.
      do
        items := a_name
      ensure
        items_set: items = a_name
      end

    set_initial_items (a_name: like initial_items)
        -- Set 'initial_items' with 'a_name'.
      do
        initial_items := a_name
      ensure
        initial_items_set: initial_items = a_name
      end

    set_payments (a_name: like payments)
        -- Set 'payments' with 'a_name'.
      do
        payments := a_name
      ensure
        payments_set: payments = a_name
      end

    set_commissions (a_name: like commissions)
        -- Set 'commissions' with 'a_name'.
      do
        commissions := a_name
      ensure
        commissions_set: commissions = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass ORDERS_STATS_ORDER_DTO%N")
        if attached id as l_id then
          Result.append ("%Nid:")
          Result.append (l_id.out)
          Result.append ("%N")
        end
        if attached creation_date as l_creation_date then
          Result.append ("%Ncreation_date:")
          Result.append (l_creation_date.out)
          Result.append ("%N")
        end
        if attached status_update_date as l_status_update_date then
          Result.append ("%Nstatus_update_date:")
          Result.append (l_status_update_date.out)
          Result.append ("%N")
        end
        if attached status as l_status then
          Result.append ("%Nstatus:")
          Result.append (l_status.out)
          Result.append ("%N")
        end
        if attached partner_order_id as l_partner_order_id then
          Result.append ("%Npartner_order_id:")
          Result.append (l_partner_order_id.out)
          Result.append ("%N")
        end
        if attached payment_type as l_payment_type then
          Result.append ("%Npayment_type:")
          Result.append (l_payment_type.out)
          Result.append ("%N")
        end
        if attached fake as l_fake then
          Result.append ("%Nfake:")
          Result.append (l_fake.out)
          Result.append ("%N")
        end
        if attached delivery_region as l_delivery_region then
          Result.append ("%Ndelivery_region:")
          Result.append (l_delivery_region.out)
          Result.append ("%N")
        end
        if attached items as l_items then
          across l_items as ic loop
            Result.append ("%N items:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached initial_items as l_initial_items then
          across l_initial_items as ic loop
            Result.append ("%N initial_items:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached payments as l_payments then
          across l_payments as ic loop
            Result.append ("%N payments:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached commissions as l_commissions then
          across l_commissions as ic loop
            Result.append ("%N commissions:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
      end
end

