note
 description:"[
		Партнерский API Маркета
 		API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
  		The version of the OpenAPI document: LATEST
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class GOODS_FEEDBACK_COMMENT_DTO




feature --Access

    id: INTEGER_64
      -- Идентификатор комментария к отзыву. 
    text: detachable STRING_32
      -- Текст комментария.
    can_modify: BOOLEAN
      -- Может ли продавец изменять комментарий или удалять его.
    parent_id: INTEGER_64
      -- Идентификатор комментария к отзыву. 
    author: detachable GOODS_FEEDBACK_COMMENT_AUTHOR_DTO
      
    status: detachable GOODS_FEEDBACK_COMMENT_STATUS_TYPE
      

feature -- Change Element

    set_id (a_name: like id)
        -- Set 'id' with 'a_name'.
      do
        id := a_name
      ensure
        id_set: id = a_name
      end

    set_text (a_name: like text)
        -- Set 'text' with 'a_name'.
      do
        text := a_name
      ensure
        text_set: text = a_name
      end

    set_can_modify (a_name: like can_modify)
        -- Set 'can_modify' with 'a_name'.
      do
        can_modify := a_name
      ensure
        can_modify_set: can_modify = a_name
      end

    set_parent_id (a_name: like parent_id)
        -- Set 'parent_id' with 'a_name'.
      do
        parent_id := a_name
      ensure
        parent_id_set: parent_id = a_name
      end

    set_author (a_name: like author)
        -- Set 'author' with 'a_name'.
      do
        author := a_name
      ensure
        author_set: author = a_name
      end

    set_status (a_name: like status)
        -- Set 'status' with 'a_name'.
      do
        status := a_name
      ensure
        status_set: status = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass GOODS_FEEDBACK_COMMENT_DTO%N")
        if attached id as l_id then
          Result.append ("%Nid:")
          Result.append (l_id.out)
          Result.append ("%N")
        end
        if attached text as l_text then
          Result.append ("%Ntext:")
          Result.append (l_text.out)
          Result.append ("%N")
        end
        if attached can_modify as l_can_modify then
          Result.append ("%Ncan_modify:")
          Result.append (l_can_modify.out)
          Result.append ("%N")
        end
        if attached parent_id as l_parent_id then
          Result.append ("%Nparent_id:")
          Result.append (l_parent_id.out)
          Result.append ("%N")
        end
        if attached author as l_author then
          Result.append ("%Nauthor:")
          Result.append (l_author.out)
          Result.append ("%N")
        end
        if attached status as l_status then
          Result.append ("%Nstatus:")
          Result.append (l_status.out)
          Result.append ("%N")
        end
      end
end

