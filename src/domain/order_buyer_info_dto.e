note
 description:"[
		Партнерский API Маркета
 		API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
  		The version of the OpenAPI document: LATEST
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class ORDER_BUYER_INFO_DTO




feature --Access

    id: detachable STRING_32
      -- Идентификатор покупателя.
    last_name: detachable STRING_32
      -- Фамилия покупателя.
    first_name: detachable STRING_32
      -- Имя покупателя.
    middle_name: detachable STRING_32
      -- Отчество покупателя.
    type: detachable ORDER_BUYER_TYPE
      
    phone: detachable STRING_32
      -- Подменный номер телефона покупателя. Подробнее о таких номерах читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/orders/dbs/call#fake-number).  Формат номера: `+<код_страны><код_региона><номер_телефона>`. 

feature -- Change Element

    set_id (a_name: like id)
        -- Set 'id' with 'a_name'.
      do
        id := a_name
      ensure
        id_set: id = a_name
      end

    set_last_name (a_name: like last_name)
        -- Set 'last_name' with 'a_name'.
      do
        last_name := a_name
      ensure
        last_name_set: last_name = a_name
      end

    set_first_name (a_name: like first_name)
        -- Set 'first_name' with 'a_name'.
      do
        first_name := a_name
      ensure
        first_name_set: first_name = a_name
      end

    set_middle_name (a_name: like middle_name)
        -- Set 'middle_name' with 'a_name'.
      do
        middle_name := a_name
      ensure
        middle_name_set: middle_name = a_name
      end

    set_type (a_name: like type)
        -- Set 'type' with 'a_name'.
      do
        type := a_name
      ensure
        type_set: type = a_name
      end

    set_phone (a_name: like phone)
        -- Set 'phone' with 'a_name'.
      do
        phone := a_name
      ensure
        phone_set: phone = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass ORDER_BUYER_INFO_DTO%N")
        if attached id as l_id then
          Result.append ("%Nid:")
          Result.append (l_id.out)
          Result.append ("%N")
        end
        if attached last_name as l_last_name then
          Result.append ("%Nlast_name:")
          Result.append (l_last_name.out)
          Result.append ("%N")
        end
        if attached first_name as l_first_name then
          Result.append ("%Nfirst_name:")
          Result.append (l_first_name.out)
          Result.append ("%N")
        end
        if attached middle_name as l_middle_name then
          Result.append ("%Nmiddle_name:")
          Result.append (l_middle_name.out)
          Result.append ("%N")
        end
        if attached type as l_type then
          Result.append ("%Ntype:")
          Result.append (l_type.out)
          Result.append ("%N")
        end
        if attached phone as l_phone then
          Result.append ("%Nphone:")
          Result.append (l_phone.out)
          Result.append ("%N")
        end
      end
end

