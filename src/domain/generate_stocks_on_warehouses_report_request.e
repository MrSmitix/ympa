note
 description:"[
		Партнерский API Маркета
 		API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
  		The version of the OpenAPI document: LATEST
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class GENERATE_STOCKS_ON_WAREHOUSES_REPORT_REQUEST




feature --Access

    campaign_id: INTEGER_64
      -- Идентификатор магазина.
    warehouse_ids: detachable LIST [INTEGER_64]
      -- Фильтр по идентификаторам складов (только модель FBY). Чтобы узнать идентификатор, воспользуйтесь запросом [GET warehouses](../../reference/warehouses/getFulfillmentWarehouses.md).
    report_date: detachable DATE
      -- Фильтр по дате (для модели FBY). В отчет попадут данные за **предшествующий** дате день.
    category_ids: detachable LIST [INTEGER_64]
      -- Фильтр по категориям на Маркете (кроме модели FBY).
    has_stocks: BOOLEAN
      -- Фильтр по наличию остатков (кроме модели FBY).

feature -- Change Element

    set_campaign_id (a_name: like campaign_id)
        -- Set 'campaign_id' with 'a_name'.
      do
        campaign_id := a_name
      ensure
        campaign_id_set: campaign_id = a_name
      end

    set_warehouse_ids (a_name: like warehouse_ids)
        -- Set 'warehouse_ids' with 'a_name'.
      do
        warehouse_ids := a_name
      ensure
        warehouse_ids_set: warehouse_ids = a_name
      end

    set_report_date (a_name: like report_date)
        -- Set 'report_date' with 'a_name'.
      do
        report_date := a_name
      ensure
        report_date_set: report_date = a_name
      end

    set_category_ids (a_name: like category_ids)
        -- Set 'category_ids' with 'a_name'.
      do
        category_ids := a_name
      ensure
        category_ids_set: category_ids = a_name
      end

    set_has_stocks (a_name: like has_stocks)
        -- Set 'has_stocks' with 'a_name'.
      do
        has_stocks := a_name
      ensure
        has_stocks_set: has_stocks = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass GENERATE_STOCKS_ON_WAREHOUSES_REPORT_REQUEST%N")
        if attached campaign_id as l_campaign_id then
          Result.append ("%Ncampaign_id:")
          Result.append (l_campaign_id.out)
          Result.append ("%N")
        end
        if attached warehouse_ids as l_warehouse_ids then
          across l_warehouse_ids as ic loop
            Result.append ("%N warehouse_ids:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached report_date as l_report_date then
          Result.append ("%Nreport_date:")
          Result.append (l_report_date.out)
          Result.append ("%N")
        end
        if attached category_ids as l_category_ids then
          across l_category_ids as ic loop
            Result.append ("%N category_ids:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached has_stocks as l_has_stocks then
          Result.append ("%Nhas_stocks:")
          Result.append (l_has_stocks.out)
          Result.append ("%N")
        end
      end
end

