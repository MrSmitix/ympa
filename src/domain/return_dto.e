note
 description:"[
		Партнерский API Маркета
 		API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
  		The version of the OpenAPI document: LATEST
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class RETURN_DTO




feature --Access

    id: INTEGER_64
      -- Идентификатор возврата.
    order_id: INTEGER_64
      -- Номер заказа.
    creation_date: detachable DATE_TIME
      -- Дата создания возврата клиентом.
    update_date: detachable DATE_TIME
      -- Дата обновления возврата.
    refund_status: detachable REFUND_STATUS_TYPE
      
    logistic_pickup_point: detachable LOGISTIC_PICKUP_POINT_DTO
      
    shipment_recipient_type: detachable RECIPIENT_TYPE
      
    shipment_status: detachable RETURN_SHIPMENT_STATUS_TYPE
      
    refund_amount: INTEGER_64
      -- Сумма возврата.
    items: detachable LIST [RETURN_ITEM_DTO]
      -- Список товаров в возврате.
    return_type: detachable RETURN_TYPE
      
    fast_return: BOOLEAN
      -- Используется ли опция **Быстрый возврат денег за дешевый брак**. 

feature -- Change Element

    set_id (a_name: like id)
        -- Set 'id' with 'a_name'.
      do
        id := a_name
      ensure
        id_set: id = a_name
      end

    set_order_id (a_name: like order_id)
        -- Set 'order_id' with 'a_name'.
      do
        order_id := a_name
      ensure
        order_id_set: order_id = a_name
      end

    set_creation_date (a_name: like creation_date)
        -- Set 'creation_date' with 'a_name'.
      do
        creation_date := a_name
      ensure
        creation_date_set: creation_date = a_name
      end

    set_update_date (a_name: like update_date)
        -- Set 'update_date' with 'a_name'.
      do
        update_date := a_name
      ensure
        update_date_set: update_date = a_name
      end

    set_refund_status (a_name: like refund_status)
        -- Set 'refund_status' with 'a_name'.
      do
        refund_status := a_name
      ensure
        refund_status_set: refund_status = a_name
      end

    set_logistic_pickup_point (a_name: like logistic_pickup_point)
        -- Set 'logistic_pickup_point' with 'a_name'.
      do
        logistic_pickup_point := a_name
      ensure
        logistic_pickup_point_set: logistic_pickup_point = a_name
      end

    set_shipment_recipient_type (a_name: like shipment_recipient_type)
        -- Set 'shipment_recipient_type' with 'a_name'.
      do
        shipment_recipient_type := a_name
      ensure
        shipment_recipient_type_set: shipment_recipient_type = a_name
      end

    set_shipment_status (a_name: like shipment_status)
        -- Set 'shipment_status' with 'a_name'.
      do
        shipment_status := a_name
      ensure
        shipment_status_set: shipment_status = a_name
      end

    set_refund_amount (a_name: like refund_amount)
        -- Set 'refund_amount' with 'a_name'.
      do
        refund_amount := a_name
      ensure
        refund_amount_set: refund_amount = a_name
      end

    set_items (a_name: like items)
        -- Set 'items' with 'a_name'.
      do
        items := a_name
      ensure
        items_set: items = a_name
      end

    set_return_type (a_name: like return_type)
        -- Set 'return_type' with 'a_name'.
      do
        return_type := a_name
      ensure
        return_type_set: return_type = a_name
      end

    set_fast_return (a_name: like fast_return)
        -- Set 'fast_return' with 'a_name'.
      do
        fast_return := a_name
      ensure
        fast_return_set: fast_return = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass RETURN_DTO%N")
        if attached id as l_id then
          Result.append ("%Nid:")
          Result.append (l_id.out)
          Result.append ("%N")
        end
        if attached order_id as l_order_id then
          Result.append ("%Norder_id:")
          Result.append (l_order_id.out)
          Result.append ("%N")
        end
        if attached creation_date as l_creation_date then
          Result.append ("%Ncreation_date:")
          Result.append (l_creation_date.out)
          Result.append ("%N")
        end
        if attached update_date as l_update_date then
          Result.append ("%Nupdate_date:")
          Result.append (l_update_date.out)
          Result.append ("%N")
        end
        if attached refund_status as l_refund_status then
          Result.append ("%Nrefund_status:")
          Result.append (l_refund_status.out)
          Result.append ("%N")
        end
        if attached logistic_pickup_point as l_logistic_pickup_point then
          Result.append ("%Nlogistic_pickup_point:")
          Result.append (l_logistic_pickup_point.out)
          Result.append ("%N")
        end
        if attached shipment_recipient_type as l_shipment_recipient_type then
          Result.append ("%Nshipment_recipient_type:")
          Result.append (l_shipment_recipient_type.out)
          Result.append ("%N")
        end
        if attached shipment_status as l_shipment_status then
          Result.append ("%Nshipment_status:")
          Result.append (l_shipment_status.out)
          Result.append ("%N")
        end
        if attached refund_amount as l_refund_amount then
          Result.append ("%Nrefund_amount:")
          Result.append (l_refund_amount.out)
          Result.append ("%N")
        end
        if attached items as l_items then
          across l_items as ic loop
            Result.append ("%N items:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached return_type as l_return_type then
          Result.append ("%Nreturn_type:")
          Result.append (l_return_type.out)
          Result.append ("%N")
        end
        if attached fast_return as l_fast_return then
          Result.append ("%Nfast_return:")
          Result.append (l_fast_return.out)
          Result.append ("%N")
        end
      end
end

