note
 description:"[
		Партнерский API Маркета
 		API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
  		The version of the OpenAPI document: LATEST
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class WAREHOUSE_GROUP_DTO




feature --Access

    name: detachable STRING_32
      -- Название группы складов.
    main_warehouse: detachable WAREHOUSE_DTO
      
    warehouses: detachable LIST [WAREHOUSE_DTO]
      -- Список складов, входящих в группу.

feature -- Change Element

    set_name (a_name: like name)
        -- Set 'name' with 'a_name'.
      do
        name := a_name
      ensure
        name_set: name = a_name
      end

    set_main_warehouse (a_name: like main_warehouse)
        -- Set 'main_warehouse' with 'a_name'.
      do
        main_warehouse := a_name
      ensure
        main_warehouse_set: main_warehouse = a_name
      end

    set_warehouses (a_name: like warehouses)
        -- Set 'warehouses' with 'a_name'.
      do
        warehouses := a_name
      ensure
        warehouses_set: warehouses = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass WAREHOUSE_GROUP_DTO%N")
        if attached name as l_name then
          Result.append ("%Nname:")
          Result.append (l_name.out)
          Result.append ("%N")
        end
        if attached main_warehouse as l_main_warehouse then
          Result.append ("%Nmain_warehouse:")
          Result.append (l_main_warehouse.out)
          Result.append ("%N")
        end
        if attached warehouses as l_warehouses then
          across l_warehouses as ic loop
            Result.append ("%N warehouses:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
      end
end

