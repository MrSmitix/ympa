note
 description:"[
		Партнерский API Маркета
 		API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
  		The version of the OpenAPI document: LATEST
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class LOGISTIC_PICKUP_POINT_DTO




feature --Access

    id: INTEGER_64
      -- Идентификатор пункта вывоза.
    name: detachable STRING_32
      -- Название пункта вывоза.
    address: detachable PICKUP_ADDRESS_DTO
      
    instruction: detachable STRING_32
      -- Дополнительные инструкции к вывозу.
    type: detachable LOGISTIC_POINT_TYPE
      
    logistic_partner_id: INTEGER_64
      -- Идентификатор логистического партнера, к которому относится логистическая точка.

feature -- Change Element

    set_id (a_name: like id)
        -- Set 'id' with 'a_name'.
      do
        id := a_name
      ensure
        id_set: id = a_name
      end

    set_name (a_name: like name)
        -- Set 'name' with 'a_name'.
      do
        name := a_name
      ensure
        name_set: name = a_name
      end

    set_address (a_name: like address)
        -- Set 'address' with 'a_name'.
      do
        address := a_name
      ensure
        address_set: address = a_name
      end

    set_instruction (a_name: like instruction)
        -- Set 'instruction' with 'a_name'.
      do
        instruction := a_name
      ensure
        instruction_set: instruction = a_name
      end

    set_type (a_name: like type)
        -- Set 'type' with 'a_name'.
      do
        type := a_name
      ensure
        type_set: type = a_name
      end

    set_logistic_partner_id (a_name: like logistic_partner_id)
        -- Set 'logistic_partner_id' with 'a_name'.
      do
        logistic_partner_id := a_name
      ensure
        logistic_partner_id_set: logistic_partner_id = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass LOGISTIC_PICKUP_POINT_DTO%N")
        if attached id as l_id then
          Result.append ("%Nid:")
          Result.append (l_id.out)
          Result.append ("%N")
        end
        if attached name as l_name then
          Result.append ("%Nname:")
          Result.append (l_name.out)
          Result.append ("%N")
        end
        if attached address as l_address then
          Result.append ("%Naddress:")
          Result.append (l_address.out)
          Result.append ("%N")
        end
        if attached instruction as l_instruction then
          Result.append ("%Ninstruction:")
          Result.append (l_instruction.out)
          Result.append ("%N")
        end
        if attached type as l_type then
          Result.append ("%Ntype:")
          Result.append (l_type.out)
          Result.append ("%N")
        end
        if attached logistic_partner_id as l_logistic_partner_id then
          Result.append ("%Nlogistic_partner_id:")
          Result.append (l_logistic_partner_id.out)
          Result.append ("%N")
        end
      end
end

