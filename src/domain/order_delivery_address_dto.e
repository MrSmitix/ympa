note
 description:"[
		Партнерский API Маркета
 		API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
  		The version of the OpenAPI document: LATEST
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class ORDER_DELIVERY_ADDRESS_DTO




feature --Access

    country: detachable STRING_32
      -- Страна.  Обязательный параметр. 
    postcode: detachable STRING_32
      -- Почтовый индекс.  Указывается, если выбрана доставка почтой (`delivery type=POST`). 
    city: detachable STRING_32
      -- Город или населенный пункт.  Обязательный параметр. 
    district: detachable STRING_32
      -- Район.
    subway: detachable STRING_32
      -- Станция метро.
    street: detachable STRING_32
      -- Улица.  Обязательный параметр. 
    house: detachable STRING_32
      -- Дом или владение.  Обязательный параметр. 
    block: detachable STRING_32
      -- Корпус или строение.
    entrance: detachable STRING_32
      -- Подъезд.
    entryphone: detachable STRING_32
      -- Код домофона.
    floor: detachable STRING_32
      -- Этаж.
    apartment: detachable STRING_32
      -- Квартира или офис.
    phone: detachable STRING_32
      -- Телефон получателя заказа.  Обязательный параметр. 
    recipient: detachable STRING_32
      -- Фамилия, имя и отчество получателя заказа.  Обязательный параметр. 
    gps: detachable GPS_DTO
      

feature -- Change Element

    set_country (a_name: like country)
        -- Set 'country' with 'a_name'.
      do
        country := a_name
      ensure
        country_set: country = a_name
      end

    set_postcode (a_name: like postcode)
        -- Set 'postcode' with 'a_name'.
      do
        postcode := a_name
      ensure
        postcode_set: postcode = a_name
      end

    set_city (a_name: like city)
        -- Set 'city' with 'a_name'.
      do
        city := a_name
      ensure
        city_set: city = a_name
      end

    set_district (a_name: like district)
        -- Set 'district' with 'a_name'.
      do
        district := a_name
      ensure
        district_set: district = a_name
      end

    set_subway (a_name: like subway)
        -- Set 'subway' with 'a_name'.
      do
        subway := a_name
      ensure
        subway_set: subway = a_name
      end

    set_street (a_name: like street)
        -- Set 'street' with 'a_name'.
      do
        street := a_name
      ensure
        street_set: street = a_name
      end

    set_house (a_name: like house)
        -- Set 'house' with 'a_name'.
      do
        house := a_name
      ensure
        house_set: house = a_name
      end

    set_block (a_name: like block)
        -- Set 'block' with 'a_name'.
      do
        block := a_name
      ensure
        block_set: block = a_name
      end

    set_entrance (a_name: like entrance)
        -- Set 'entrance' with 'a_name'.
      do
        entrance := a_name
      ensure
        entrance_set: entrance = a_name
      end

    set_entryphone (a_name: like entryphone)
        -- Set 'entryphone' with 'a_name'.
      do
        entryphone := a_name
      ensure
        entryphone_set: entryphone = a_name
      end

    set_floor (a_name: like floor)
        -- Set 'floor' with 'a_name'.
      do
        floor := a_name
      ensure
        floor_set: floor = a_name
      end

    set_apartment (a_name: like apartment)
        -- Set 'apartment' with 'a_name'.
      do
        apartment := a_name
      ensure
        apartment_set: apartment = a_name
      end

    set_phone (a_name: like phone)
        -- Set 'phone' with 'a_name'.
      do
        phone := a_name
      ensure
        phone_set: phone = a_name
      end

    set_recipient (a_name: like recipient)
        -- Set 'recipient' with 'a_name'.
      do
        recipient := a_name
      ensure
        recipient_set: recipient = a_name
      end

    set_gps (a_name: like gps)
        -- Set 'gps' with 'a_name'.
      do
        gps := a_name
      ensure
        gps_set: gps = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass ORDER_DELIVERY_ADDRESS_DTO%N")
        if attached country as l_country then
          Result.append ("%Ncountry:")
          Result.append (l_country.out)
          Result.append ("%N")
        end
        if attached postcode as l_postcode then
          Result.append ("%Npostcode:")
          Result.append (l_postcode.out)
          Result.append ("%N")
        end
        if attached city as l_city then
          Result.append ("%Ncity:")
          Result.append (l_city.out)
          Result.append ("%N")
        end
        if attached district as l_district then
          Result.append ("%Ndistrict:")
          Result.append (l_district.out)
          Result.append ("%N")
        end
        if attached subway as l_subway then
          Result.append ("%Nsubway:")
          Result.append (l_subway.out)
          Result.append ("%N")
        end
        if attached street as l_street then
          Result.append ("%Nstreet:")
          Result.append (l_street.out)
          Result.append ("%N")
        end
        if attached house as l_house then
          Result.append ("%Nhouse:")
          Result.append (l_house.out)
          Result.append ("%N")
        end
        if attached block as l_block then
          Result.append ("%Nblock:")
          Result.append (l_block.out)
          Result.append ("%N")
        end
        if attached entrance as l_entrance then
          Result.append ("%Nentrance:")
          Result.append (l_entrance.out)
          Result.append ("%N")
        end
        if attached entryphone as l_entryphone then
          Result.append ("%Nentryphone:")
          Result.append (l_entryphone.out)
          Result.append ("%N")
        end
        if attached floor as l_floor then
          Result.append ("%Nfloor:")
          Result.append (l_floor.out)
          Result.append ("%N")
        end
        if attached apartment as l_apartment then
          Result.append ("%Napartment:")
          Result.append (l_apartment.out)
          Result.append ("%N")
        end
        if attached phone as l_phone then
          Result.append ("%Nphone:")
          Result.append (l_phone.out)
          Result.append ("%N")
        end
        if attached recipient as l_recipient then
          Result.append ("%Nrecipient:")
          Result.append (l_recipient.out)
          Result.append ("%N")
        end
        if attached gps as l_gps then
          Result.append ("%Ngps:")
          Result.append (l_gps.out)
          Result.append ("%N")
        end
      end
end

