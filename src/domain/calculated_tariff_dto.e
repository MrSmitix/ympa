note
 description:"[
		Партнерский API Маркета
 		API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
  		The version of the OpenAPI document: LATEST
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class CALCULATED_TARIFF_DTO




feature --Access

    type: detachable CALCULATED_TARIFF_TYPE
      
    amount: REAL_32
      -- Стоимость услуги в рублях.
    parameters: detachable LIST [TARIFF_PARAMETER_DTO]
      -- Параметры расчета тарифа.

feature -- Change Element

    set_type (a_name: like type)
        -- Set 'type' with 'a_name'.
      do
        type := a_name
      ensure
        type_set: type = a_name
      end

    set_amount (a_name: like amount)
        -- Set 'amount' with 'a_name'.
      do
        amount := a_name
      ensure
        amount_set: amount = a_name
      end

    set_parameters (a_name: like parameters)
        -- Set 'parameters' with 'a_name'.
      do
        parameters := a_name
      ensure
        parameters_set: parameters = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass CALCULATED_TARIFF_DTO%N")
        if attached type as l_type then
          Result.append ("%Ntype:")
          Result.append (l_type.out)
          Result.append ("%N")
        end
        if attached amount as l_amount then
          Result.append ("%Namount:")
          Result.append (l_amount.out)
          Result.append ("%N")
        end
        if attached parameters as l_parameters then
          across l_parameters as ic loop
            Result.append ("%N parameters:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
      end
end

