note
 description:"[
		Партнерский API Маркета
 		API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
  		The version of the OpenAPI document: LATEST
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class QUANTUM_DTO




feature --Access

    min_quantity: INTEGER_32
      -- Минимальное количество единиц товара в заказе. Например, если указать 10, покупатель сможет добавить в корзину не меньше 10 единиц.  ⚠️ Если количество товара на складе меньше заданного, ограничение не сработает и покупатель сможет его заказать. 
    step_quantity: INTEGER_32
      -- На сколько единиц покупатель сможет увеличить количество товара в корзине.  Например, если задать 5, покупатель сможет добавить к заказу только 5, 10, 15, ... единиц товара.  ⚠️ Если количество товара на складе не дотягивает до кванта, ограничение не сработает и покупатель сможет заказать количество, не кратное кванту. 

feature -- Change Element

    set_min_quantity (a_name: like min_quantity)
        -- Set 'min_quantity' with 'a_name'.
      do
        min_quantity := a_name
      ensure
        min_quantity_set: min_quantity = a_name
      end

    set_step_quantity (a_name: like step_quantity)
        -- Set 'step_quantity' with 'a_name'.
      do
        step_quantity := a_name
      ensure
        step_quantity_set: step_quantity = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass QUANTUM_DTO%N")
        if attached min_quantity as l_min_quantity then
          Result.append ("%Nmin_quantity:")
          Result.append (l_min_quantity.out)
          Result.append ("%N")
        end
        if attached step_quantity as l_step_quantity then
          Result.append ("%Nstep_quantity:")
          Result.append (l_step_quantity.out)
          Result.append ("%N")
        end
      end
end

