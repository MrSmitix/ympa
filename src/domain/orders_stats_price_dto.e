note
 description:"[
		Партнерский API Маркета
 		API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
  		The version of the OpenAPI document: LATEST
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class ORDERS_STATS_PRICE_DTO




feature --Access

    type: detachable ORDERS_STATS_PRICE_TYPE
      
    cost_per_item: REAL_32
      -- Цена или скидка на единицу товара в заказе. Указана в рублях. Точность — два знака после запятой. 
    total: REAL_32
      -- Суммарная цена или скидка на все единицы товара в заказе. Указана в рублях. Точность — два знака после запятой. 

feature -- Change Element

    set_type (a_name: like type)
        -- Set 'type' with 'a_name'.
      do
        type := a_name
      ensure
        type_set: type = a_name
      end

    set_cost_per_item (a_name: like cost_per_item)
        -- Set 'cost_per_item' with 'a_name'.
      do
        cost_per_item := a_name
      ensure
        cost_per_item_set: cost_per_item = a_name
      end

    set_total (a_name: like total)
        -- Set 'total' with 'a_name'.
      do
        total := a_name
      ensure
        total_set: total = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass ORDERS_STATS_PRICE_DTO%N")
        if attached type as l_type then
          Result.append ("%Ntype:")
          Result.append (l_type.out)
          Result.append ("%N")
        end
        if attached cost_per_item as l_cost_per_item then
          Result.append ("%Ncost_per_item:")
          Result.append (l_cost_per_item.out)
          Result.append ("%N")
        end
        if attached total as l_total then
          Result.append ("%Ntotal:")
          Result.append (l_total.out)
          Result.append ("%N")
        end
      end
end

