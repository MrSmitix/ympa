note
 description:"[
		Партнерский API Маркета
 		API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
  		The version of the OpenAPI document: LATEST
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class FEEDBACK_GRADES_DTO




feature --Access

    average: REAL_32
      -- Общая оценка, указанная в отзыве: от `1` («Ужасный магазин») до `5` («Отличный магазин»).
    agree_count: INTEGER_64
      -- Количество пользователей, считающих отзыв полезным.
    reject_count: INTEGER_64
      -- Количество пользователей, считающих отзыв бесполезным.
    factors: detachable LIST [FEEDBACK_FACTOR_DTO]
      -- Информация об оценках по параметрам, указанных в отзыве.  При создании отзыва автору предлагается поставить оценки магазину по нескольким параметрам: например, за скорость обработки заказа или удобство самовывоза. Набор параметров зависит от того, какой способ покупки (параметр `delivery`) указал автор. 

feature -- Change Element

    set_average (a_name: like average)
        -- Set 'average' with 'a_name'.
      do
        average := a_name
      ensure
        average_set: average = a_name
      end

    set_agree_count (a_name: like agree_count)
        -- Set 'agree_count' with 'a_name'.
      do
        agree_count := a_name
      ensure
        agree_count_set: agree_count = a_name
      end

    set_reject_count (a_name: like reject_count)
        -- Set 'reject_count' with 'a_name'.
      do
        reject_count := a_name
      ensure
        reject_count_set: reject_count = a_name
      end

    set_factors (a_name: like factors)
        -- Set 'factors' with 'a_name'.
      do
        factors := a_name
      ensure
        factors_set: factors = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass FEEDBACK_GRADES_DTO%N")
        if attached average as l_average then
          Result.append ("%Naverage:")
          Result.append (l_average.out)
          Result.append ("%N")
        end
        if attached agree_count as l_agree_count then
          Result.append ("%Nagree_count:")
          Result.append (l_agree_count.out)
          Result.append ("%N")
        end
        if attached reject_count as l_reject_count then
          Result.append ("%Nreject_count:")
          Result.append (l_reject_count.out)
          Result.append ("%N")
        end
        if attached factors as l_factors then
          across l_factors as ic loop
            Result.append ("%N factors:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
      end
end

