note
 description:"[
		Партнерский API Маркета
 		API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
  		The version of the OpenAPI document: LATEST
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class GET_CHATS_REQUEST




feature --Access

    order_ids: detachable LIST [INTEGER_64]
      -- Фильтр по идентификаторам заказов на Маркете.
    types: detachable LIST [CHAT_TYPE]
      -- Фильтр по типам чатов.
    statuses: detachable LIST [CHAT_STATUS_TYPE]
      -- Фильтр по статусам чатов.

feature -- Change Element

    set_order_ids (a_name: like order_ids)
        -- Set 'order_ids' with 'a_name'.
      do
        order_ids := a_name
      ensure
        order_ids_set: order_ids = a_name
      end

    set_types (a_name: like types)
        -- Set 'types' with 'a_name'.
      do
        types := a_name
      ensure
        types_set: types = a_name
      end

    set_statuses (a_name: like statuses)
        -- Set 'statuses' with 'a_name'.
      do
        statuses := a_name
      ensure
        statuses_set: statuses = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass GET_CHATS_REQUEST%N")
        if attached order_ids as l_order_ids then
          across l_order_ids as ic loop
            Result.append ("%N order_ids:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached types as l_types then
          across l_types as ic loop
            Result.append ("%N types:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached statuses as l_statuses then
          across l_statuses as ic loop
            Result.append ("%N statuses:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
      end
end

