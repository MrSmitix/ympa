note
 description:"[
		Партнерский API Маркета
 		API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
  		The version of the OpenAPI document: LATEST
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class CAMPAIGN_SETTINGS_DTO




feature --Access

    country_region: INTEGER_64
      -- Идентификатор региона, в котором находится магазин.
    shop_name: detachable STRING_32
      -- Наименование магазина на Яндекс Маркете. Если наименование отсутствует, значение параметра выводится — `null`. 
    show_in_context: BOOLEAN
      -- Признак размещения магазина на сайтах партнеров Яндекс Дистрибуции. Возможные значения: * `false` — магазин не размещен на сайтах партнеров Яндекс Дистрибуции. * `true` — магазин размещен на сайтах партнеров Яндекс Дистрибуции. 
    show_in_premium: BOOLEAN
      -- Признак показа предложений магазина в рекламном блоке над результатами поиска (cпецразмещение). Возможные значения: * `false` — предложения не показываются в блоке cпецразмещения. * `true` — предложения показываются в блоке cпецразмещения. 
    use_open_stat: BOOLEAN
      -- Признак использования внешней интернет-статистики. Возможные значения: * `false` — внешняя интернет-статистика не используется. * `true` — внешняя интернет-статистика используется. 
    local_region: detachable CAMPAIGN_SETTINGS_LOCAL_REGION_DTO
      

feature -- Change Element

    set_country_region (a_name: like country_region)
        -- Set 'country_region' with 'a_name'.
      do
        country_region := a_name
      ensure
        country_region_set: country_region = a_name
      end

    set_shop_name (a_name: like shop_name)
        -- Set 'shop_name' with 'a_name'.
      do
        shop_name := a_name
      ensure
        shop_name_set: shop_name = a_name
      end

    set_show_in_context (a_name: like show_in_context)
        -- Set 'show_in_context' with 'a_name'.
      do
        show_in_context := a_name
      ensure
        show_in_context_set: show_in_context = a_name
      end

    set_show_in_premium (a_name: like show_in_premium)
        -- Set 'show_in_premium' with 'a_name'.
      do
        show_in_premium := a_name
      ensure
        show_in_premium_set: show_in_premium = a_name
      end

    set_use_open_stat (a_name: like use_open_stat)
        -- Set 'use_open_stat' with 'a_name'.
      do
        use_open_stat := a_name
      ensure
        use_open_stat_set: use_open_stat = a_name
      end

    set_local_region (a_name: like local_region)
        -- Set 'local_region' with 'a_name'.
      do
        local_region := a_name
      ensure
        local_region_set: local_region = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass CAMPAIGN_SETTINGS_DTO%N")
        if attached country_region as l_country_region then
          Result.append ("%Ncountry_region:")
          Result.append (l_country_region.out)
          Result.append ("%N")
        end
        if attached shop_name as l_shop_name then
          Result.append ("%Nshop_name:")
          Result.append (l_shop_name.out)
          Result.append ("%N")
        end
        if attached show_in_context as l_show_in_context then
          Result.append ("%Nshow_in_context:")
          Result.append (l_show_in_context.out)
          Result.append ("%N")
        end
        if attached show_in_premium as l_show_in_premium then
          Result.append ("%Nshow_in_premium:")
          Result.append (l_show_in_premium.out)
          Result.append ("%N")
        end
        if attached use_open_stat as l_use_open_stat then
          Result.append ("%Nuse_open_stat:")
          Result.append (l_use_open_stat.out)
          Result.append ("%N")
        end
        if attached local_region as l_local_region then
          Result.append ("%Nlocal_region:")
          Result.append (l_local_region.out)
          Result.append ("%N")
        end
      end
end

