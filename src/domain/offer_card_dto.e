note
 description:"[
		Партнерский API Маркета
 		API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
  		The version of the OpenAPI document: LATEST
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class OFFER_CARD_DTO




feature --Access

    offer_id: detachable STRING_32
      -- Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
    mapping: detachable GET_MAPPING_DTO
      
    parameter_values: detachable LIST [PARAMETER_VALUE_DTO]
      -- Список характеристик с их значениями. 
    card_status: detachable OFFER_CARD_STATUS_TYPE
      
    content_rating: INTEGER_32
      -- Процент заполненности карточки.
    recommendations: detachable LIST [OFFER_CARD_RECOMMENDATION_DTO]
      -- Список рекомендаций к заполнению карточки.  Рекомендации Маркета помогают заполнять карточку так, чтобы покупателям было проще найти ваш товар и решиться на покупку. 
    errors: detachable LIST [OFFER_ERROR_DTO]
      -- Ошибки в контенте, препятствующие размещению товара на витрине.
    warnings: detachable LIST [OFFER_ERROR_DTO]
      -- Связанные с контентом предупреждения, не препятствующие размещению товара на витрине.

feature -- Change Element

    set_offer_id (a_name: like offer_id)
        -- Set 'offer_id' with 'a_name'.
      do
        offer_id := a_name
      ensure
        offer_id_set: offer_id = a_name
      end

    set_mapping (a_name: like mapping)
        -- Set 'mapping' with 'a_name'.
      do
        mapping := a_name
      ensure
        mapping_set: mapping = a_name
      end

    set_parameter_values (a_name: like parameter_values)
        -- Set 'parameter_values' with 'a_name'.
      do
        parameter_values := a_name
      ensure
        parameter_values_set: parameter_values = a_name
      end

    set_card_status (a_name: like card_status)
        -- Set 'card_status' with 'a_name'.
      do
        card_status := a_name
      ensure
        card_status_set: card_status = a_name
      end

    set_content_rating (a_name: like content_rating)
        -- Set 'content_rating' with 'a_name'.
      do
        content_rating := a_name
      ensure
        content_rating_set: content_rating = a_name
      end

    set_recommendations (a_name: like recommendations)
        -- Set 'recommendations' with 'a_name'.
      do
        recommendations := a_name
      ensure
        recommendations_set: recommendations = a_name
      end

    set_errors (a_name: like errors)
        -- Set 'errors' with 'a_name'.
      do
        errors := a_name
      ensure
        errors_set: errors = a_name
      end

    set_warnings (a_name: like warnings)
        -- Set 'warnings' with 'a_name'.
      do
        warnings := a_name
      ensure
        warnings_set: warnings = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass OFFER_CARD_DTO%N")
        if attached offer_id as l_offer_id then
          Result.append ("%Noffer_id:")
          Result.append (l_offer_id.out)
          Result.append ("%N")
        end
        if attached mapping as l_mapping then
          Result.append ("%Nmapping:")
          Result.append (l_mapping.out)
          Result.append ("%N")
        end
        if attached parameter_values as l_parameter_values then
          across l_parameter_values as ic loop
            Result.append ("%N parameter_values:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached card_status as l_card_status then
          Result.append ("%Ncard_status:")
          Result.append (l_card_status.out)
          Result.append ("%N")
        end
        if attached content_rating as l_content_rating then
          Result.append ("%Ncontent_rating:")
          Result.append (l_content_rating.out)
          Result.append ("%N")
        end
        if attached recommendations as l_recommendations then
          across l_recommendations as ic loop
            Result.append ("%N recommendations:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached errors as l_errors then
          across l_errors as ic loop
            Result.append ("%N errors:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached warnings as l_warnings then
          across l_warnings as ic loop
            Result.append ("%N warnings:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
      end
end

