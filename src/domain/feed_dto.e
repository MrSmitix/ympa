note
 description:"[
		Партнерский API Маркета
 		API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
  		The version of the OpenAPI document: LATEST
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class FEED_DTO




feature --Access

    id: INTEGER_64
      -- Идентификатор прайс-листа.
    login: detachable STRING_32
      -- Логин для авторизации при скачивании прайс-листа. Параметр выводится при размещении прайс-листа на сайте магазина и в случае ограничения доступа к нему. 
    name: detachable STRING_32
      -- Имя файла, содержащего прайс-лист. Параметр выводится при размещении прайс-листа на сервере Маркета. 
    password: detachable STRING_32
      -- Пароль для авторизации при скачивании прайс-листа. Параметр выводится при размещении прайс-листа на сайте магазина и в случае ограничения доступа к нему. 
    upload_date: detachable DATE_TIME
      -- Дата загрузки прайс-листа на Маркет.  Формат даты: `ДД-ММ-ГГГГ`.  Параметр выводится при размещении прайс-листа на сервере Маркета. 
    url: detachable STRING_32
      -- URL прайс-листа. Параметр выводится при размещении прайс-листа на сайте магазина. 
    content: detachable FEED_CONTENT_DTO
      
    download: detachable FEED_DOWNLOAD_DTO
      
    placement: detachable FEED_PLACEMENT_DTO
      
    publication: detachable FEED_PUBLICATION_DTO
      

feature -- Change Element

    set_id (a_name: like id)
        -- Set 'id' with 'a_name'.
      do
        id := a_name
      ensure
        id_set: id = a_name
      end

    set_login (a_name: like login)
        -- Set 'login' with 'a_name'.
      do
        login := a_name
      ensure
        login_set: login = a_name
      end

    set_name (a_name: like name)
        -- Set 'name' with 'a_name'.
      do
        name := a_name
      ensure
        name_set: name = a_name
      end

    set_password (a_name: like password)
        -- Set 'password' with 'a_name'.
      do
        password := a_name
      ensure
        password_set: password = a_name
      end

    set_upload_date (a_name: like upload_date)
        -- Set 'upload_date' with 'a_name'.
      do
        upload_date := a_name
      ensure
        upload_date_set: upload_date = a_name
      end

    set_url (a_name: like url)
        -- Set 'url' with 'a_name'.
      do
        url := a_name
      ensure
        url_set: url = a_name
      end

    set_content (a_name: like content)
        -- Set 'content' with 'a_name'.
      do
        content := a_name
      ensure
        content_set: content = a_name
      end

    set_download (a_name: like download)
        -- Set 'download' with 'a_name'.
      do
        download := a_name
      ensure
        download_set: download = a_name
      end

    set_placement (a_name: like placement)
        -- Set 'placement' with 'a_name'.
      do
        placement := a_name
      ensure
        placement_set: placement = a_name
      end

    set_publication (a_name: like publication)
        -- Set 'publication' with 'a_name'.
      do
        publication := a_name
      ensure
        publication_set: publication = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass FEED_DTO%N")
        if attached id as l_id then
          Result.append ("%Nid:")
          Result.append (l_id.out)
          Result.append ("%N")
        end
        if attached login as l_login then
          Result.append ("%Nlogin:")
          Result.append (l_login.out)
          Result.append ("%N")
        end
        if attached name as l_name then
          Result.append ("%Nname:")
          Result.append (l_name.out)
          Result.append ("%N")
        end
        if attached password as l_password then
          Result.append ("%Npassword:")
          Result.append (l_password.out)
          Result.append ("%N")
        end
        if attached upload_date as l_upload_date then
          Result.append ("%Nupload_date:")
          Result.append (l_upload_date.out)
          Result.append ("%N")
        end
        if attached url as l_url then
          Result.append ("%Nurl:")
          Result.append (l_url.out)
          Result.append ("%N")
        end
        if attached content as l_content then
          Result.append ("%Ncontent:")
          Result.append (l_content.out)
          Result.append ("%N")
        end
        if attached download as l_download then
          Result.append ("%Ndownload:")
          Result.append (l_download.out)
          Result.append ("%N")
        end
        if attached placement as l_placement then
          Result.append ("%Nplacement:")
          Result.append (l_placement.out)
          Result.append ("%N")
        end
        if attached publication as l_publication then
          Result.append ("%Npublication:")
          Result.append (l_publication.out)
          Result.append ("%N")
        end
      end
end

