note
 description:"[
		Партнерский API Маркета
 		API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
  		The version of the OpenAPI document: LATEST
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class GET_MAPPING_DTO




feature --Access

    market_sku: INTEGER_64
      -- SKU на Маркете.
    market_sku_name: detachable STRING_32
      -- Название карточки товара.  Может отсутствовать в ответе, если товар еще не привязан к карточке. 
    market_model_id: INTEGER_64
      -- Идентификатор модели на Маркете.  Может отсутствовать в ответе, если товар еще не привязан к карточке. 
    market_model_name: detachable STRING_32
      -- Название модели на Маркете.  Может отсутствовать в ответе, если товар еще не привязан к карточке. 
    market_category_id: INTEGER_64
      -- Идентификатор категории на Маркете, в которую попал товар.  Может отсутствовать в ответе, если Маркет еще не определил категорию товара. 
    market_category_name: detachable STRING_32
      -- Название категории карточки на Маркете.  Может отсутствовать в ответе, если Маркет еще не определил категорию товара. 

feature -- Change Element

    set_market_sku (a_name: like market_sku)
        -- Set 'market_sku' with 'a_name'.
      do
        market_sku := a_name
      ensure
        market_sku_set: market_sku = a_name
      end

    set_market_sku_name (a_name: like market_sku_name)
        -- Set 'market_sku_name' with 'a_name'.
      do
        market_sku_name := a_name
      ensure
        market_sku_name_set: market_sku_name = a_name
      end

    set_market_model_id (a_name: like market_model_id)
        -- Set 'market_model_id' with 'a_name'.
      do
        market_model_id := a_name
      ensure
        market_model_id_set: market_model_id = a_name
      end

    set_market_model_name (a_name: like market_model_name)
        -- Set 'market_model_name' with 'a_name'.
      do
        market_model_name := a_name
      ensure
        market_model_name_set: market_model_name = a_name
      end

    set_market_category_id (a_name: like market_category_id)
        -- Set 'market_category_id' with 'a_name'.
      do
        market_category_id := a_name
      ensure
        market_category_id_set: market_category_id = a_name
      end

    set_market_category_name (a_name: like market_category_name)
        -- Set 'market_category_name' with 'a_name'.
      do
        market_category_name := a_name
      ensure
        market_category_name_set: market_category_name = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass GET_MAPPING_DTO%N")
        if attached market_sku as l_market_sku then
          Result.append ("%Nmarket_sku:")
          Result.append (l_market_sku.out)
          Result.append ("%N")
        end
        if attached market_sku_name as l_market_sku_name then
          Result.append ("%Nmarket_sku_name:")
          Result.append (l_market_sku_name.out)
          Result.append ("%N")
        end
        if attached market_model_id as l_market_model_id then
          Result.append ("%Nmarket_model_id:")
          Result.append (l_market_model_id.out)
          Result.append ("%N")
        end
        if attached market_model_name as l_market_model_name then
          Result.append ("%Nmarket_model_name:")
          Result.append (l_market_model_name.out)
          Result.append ("%N")
        end
        if attached market_category_id as l_market_category_id then
          Result.append ("%Nmarket_category_id:")
          Result.append (l_market_category_id.out)
          Result.append ("%N")
        end
        if attached market_category_name as l_market_category_name then
          Result.append ("%Nmarket_category_name:")
          Result.append (l_market_category_name.out)
          Result.append ("%N")
        end
      end
end

