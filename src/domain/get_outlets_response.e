note
 description:"[
		Партнерский API Маркета
 		API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
  		The version of the OpenAPI document: LATEST
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class GET_OUTLETS_RESPONSE




feature --Access

    outlets: detachable LIST [FULL_OUTLET_DTO]
      -- Информация о точках продаж.
    paging: detachable SCROLLING_PAGER_DTO
      
    pager: detachable FLIPPING_PAGER_DTO
      

feature -- Change Element

    set_outlets (a_name: like outlets)
        -- Set 'outlets' with 'a_name'.
      do
        outlets := a_name
      ensure
        outlets_set: outlets = a_name
      end

    set_paging (a_name: like paging)
        -- Set 'paging' with 'a_name'.
      do
        paging := a_name
      ensure
        paging_set: paging = a_name
      end

    set_pager (a_name: like pager)
        -- Set 'pager' with 'a_name'.
      do
        pager := a_name
      ensure
        pager_set: pager = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass GET_OUTLETS_RESPONSE%N")
        if attached outlets as l_outlets then
          across l_outlets as ic loop
            Result.append ("%N outlets:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached paging as l_paging then
          Result.append ("%Npaging:")
          Result.append (l_paging.out)
          Result.append ("%N")
        end
        if attached pager as l_pager then
          Result.append ("%Npager:")
          Result.append (l_pager.out)
          Result.append ("%N")
        end
      end
end

