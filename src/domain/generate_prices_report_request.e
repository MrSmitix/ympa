note
 description:"[
		Партнерский API Маркета
 		API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
  		The version of the OpenAPI document: LATEST
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class GENERATE_PRICES_REPORT_REQUEST




feature --Access

    business_id: INTEGER_64
      -- Идентификатор бизнеса.  В большинстве случаев обязателен. Не указывается, если задан `campaignId`. 
    campaign_id: INTEGER_64
      -- Идентификатор кампании.  Как правило, не используется. Передавайте только если в кабинете есть магазины с уникальными ценами и вы хотите получить отчет для них. В этом случае передавать `businessId` не нужно. 
    category_ids: detachable LIST [INTEGER_64]
      -- Фильтр по категориям на Маркете.
    creation_date_from: detachable DATE
      -- Фильтр по времени появления предложения — начало периода.  Формат даты: `ДД-ММ-ГГГГ`. 
    creation_date_to: detachable DATE
      -- Фильтр по времени появления предложения — окончание периода.  Формат даты: `ДД-ММ-ГГГГ`. 

feature -- Change Element

    set_business_id (a_name: like business_id)
        -- Set 'business_id' with 'a_name'.
      do
        business_id := a_name
      ensure
        business_id_set: business_id = a_name
      end

    set_campaign_id (a_name: like campaign_id)
        -- Set 'campaign_id' with 'a_name'.
      do
        campaign_id := a_name
      ensure
        campaign_id_set: campaign_id = a_name
      end

    set_category_ids (a_name: like category_ids)
        -- Set 'category_ids' with 'a_name'.
      do
        category_ids := a_name
      ensure
        category_ids_set: category_ids = a_name
      end

    set_creation_date_from (a_name: like creation_date_from)
        -- Set 'creation_date_from' with 'a_name'.
      do
        creation_date_from := a_name
      ensure
        creation_date_from_set: creation_date_from = a_name
      end

    set_creation_date_to (a_name: like creation_date_to)
        -- Set 'creation_date_to' with 'a_name'.
      do
        creation_date_to := a_name
      ensure
        creation_date_to_set: creation_date_to = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass GENERATE_PRICES_REPORT_REQUEST%N")
        if attached business_id as l_business_id then
          Result.append ("%Nbusiness_id:")
          Result.append (l_business_id.out)
          Result.append ("%N")
        end
        if attached campaign_id as l_campaign_id then
          Result.append ("%Ncampaign_id:")
          Result.append (l_campaign_id.out)
          Result.append ("%N")
        end
        if attached category_ids as l_category_ids then
          across l_category_ids as ic loop
            Result.append ("%N category_ids:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached creation_date_from as l_creation_date_from then
          Result.append ("%Ncreation_date_from:")
          Result.append (l_creation_date_from.out)
          Result.append ("%N")
        end
        if attached creation_date_to as l_creation_date_to then
          Result.append ("%Ncreation_date_to:")
          Result.append (l_creation_date_to.out)
          Result.append ("%N")
        end
      end
end

