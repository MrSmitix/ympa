/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiClientDataErrorResponse from '../model/ApiClientDataErrorResponse';
import ApiForbiddenErrorResponse from '../model/ApiForbiddenErrorResponse';
import ApiLimitErrorResponse from '../model/ApiLimitErrorResponse';
import ApiNotFoundErrorResponse from '../model/ApiNotFoundErrorResponse';
import ApiServerErrorResponse from '../model/ApiServerErrorResponse';
import ApiUnauthorizedErrorResponse from '../model/ApiUnauthorizedErrorResponse';
import DeletePromoOffersRequest from '../model/DeletePromoOffersRequest';
import DeletePromoOffersResponse from '../model/DeletePromoOffersResponse';
import GetPromoOffersRequest from '../model/GetPromoOffersRequest';
import GetPromoOffersResponse from '../model/GetPromoOffersResponse';
import GetPromosRequest from '../model/GetPromosRequest';
import GetPromosResponse from '../model/GetPromosResponse';
import UpdatePromoOffersRequest from '../model/UpdatePromoOffersRequest';
import UpdatePromoOffersResponse from '../model/UpdatePromoOffersResponse';

/**
* Promos service.
* @module api/PromosApi
* @version LATEST
*/
export default class PromosApi {

    /**
    * Constructs a new PromosApi. 
    * @alias module:api/PromosApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the deletePromoOffers operation.
     * @callback module:api/PromosApi~deletePromoOffersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeletePromoOffersResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Удаление товаров из акции
     * Убирает товары из акции.  Изменения начинают действовать в течение 4–6 часов.  |**⚙️ Лимит:** 10000 запросов в час| |-| 
     * @param {Number} businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
     * @param {module:model/DeletePromoOffersRequest} deletePromoOffersRequest 
     * @param {module:api/PromosApi~deletePromoOffersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeletePromoOffersResponse}
     */
    deletePromoOffers(businessId, deletePromoOffersRequest, callback) {
      let postBody = deletePromoOffersRequest;
      // verify the required parameter 'businessId' is set
      if (businessId === undefined || businessId === null) {
        throw new Error("Missing the required parameter 'businessId' when calling deletePromoOffers");
      }
      // verify the required parameter 'deletePromoOffersRequest' is set
      if (deletePromoOffersRequest === undefined || deletePromoOffersRequest === null) {
        throw new Error("Missing the required parameter 'deletePromoOffersRequest' when calling deletePromoOffers");
      }

      let pathParams = {
        'businessId': businessId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DeletePromoOffersResponse;
      return this.apiClient.callApi(
        '/businesses/{businessId}/promos/offers/delete', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPromoOffers operation.
     * @callback module:api/PromosApi~getPromoOffersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetPromoOffersResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Получение списка товаров, которые участвуют или могут участвовать в акции
     * Возвращает список товаров, которые участвуют или могут участвовать в акции.  {% note warning %}  В параметре `limit` не передавайте значение больше 500.  {% endnote %}  |**⚙️ Лимит:** 10000 запросов в час| |-| 
     * @param {Number} businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
     * @param {module:model/GetPromoOffersRequest} getPromoOffersRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [pageToken] Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. 
     * @param {Number} [limit] Количество значений на одной странице. 
     * @param {module:api/PromosApi~getPromoOffersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetPromoOffersResponse}
     */
    getPromoOffers(businessId, getPromoOffersRequest, opts, callback) {
      opts = opts || {};
      let postBody = getPromoOffersRequest;
      // verify the required parameter 'businessId' is set
      if (businessId === undefined || businessId === null) {
        throw new Error("Missing the required parameter 'businessId' when calling getPromoOffers");
      }
      // verify the required parameter 'getPromoOffersRequest' is set
      if (getPromoOffersRequest === undefined || getPromoOffersRequest === null) {
        throw new Error("Missing the required parameter 'getPromoOffersRequest' when calling getPromoOffers");
      }

      let pathParams = {
        'businessId': businessId
      };
      let queryParams = {
        'page_token': opts['pageToken'],
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetPromoOffersResponse;
      return this.apiClient.callApi(
        '/businesses/{businessId}/promos/offers', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPromos operation.
     * @callback module:api/PromosApi~getPromosCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetPromosResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Получение списка акций
     * Возвращает информацию об акциях Маркета.  По умолчанию возвращаются акции, в которых продавец участвует или может принять участие.  Чтобы получить текущие или завершенные акции, передайте параметр `participation`.  Типы акций, которые возвращаются в ответе:  * прямая скидка; * флеш-акция; * скидка по промокоду.  |**⚙️ Лимит:** 1000 запросов в час| |-| 
     * @param {Number} businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
     * @param {Object} opts Optional parameters
     * @param {module:model/GetPromosRequest} [getPromosRequest] 
     * @param {module:api/PromosApi~getPromosCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetPromosResponse}
     */
    getPromos(businessId, opts, callback) {
      opts = opts || {};
      let postBody = opts['getPromosRequest'];
      // verify the required parameter 'businessId' is set
      if (businessId === undefined || businessId === null) {
        throw new Error("Missing the required parameter 'businessId' when calling getPromos");
      }

      let pathParams = {
        'businessId': businessId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetPromosResponse;
      return this.apiClient.callApi(
        '/businesses/{businessId}/promos', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updatePromoOffers operation.
     * @callback module:api/PromosApi~updatePromoOffersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdatePromoOffersResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Добавление товаров в акцию или изменение их цен
     * Добавляет товары в акцию или изменяет цены на товары, которые участвуют в акции.  Изменения начинают действовать в течение 4–6 часов.  |**⚙️ Лимит:** 10000 запросов в час| |-| 
     * @param {Number} businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
     * @param {module:model/UpdatePromoOffersRequest} updatePromoOffersRequest 
     * @param {module:api/PromosApi~updatePromoOffersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdatePromoOffersResponse}
     */
    updatePromoOffers(businessId, updatePromoOffersRequest, callback) {
      let postBody = updatePromoOffersRequest;
      // verify the required parameter 'businessId' is set
      if (businessId === undefined || businessId === null) {
        throw new Error("Missing the required parameter 'businessId' when calling updatePromoOffers");
      }
      // verify the required parameter 'updatePromoOffersRequest' is set
      if (updatePromoOffersRequest === undefined || updatePromoOffersRequest === null) {
        throw new Error("Missing the required parameter 'updatePromoOffersRequest' when calling updatePromoOffers");
      }

      let pathParams = {
        'businessId': businessId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdatePromoOffersResponse;
      return this.apiClient.callApi(
        '/businesses/{businessId}/promos/offers/update', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
