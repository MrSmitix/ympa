note
 description:"[
		Партнерский API Маркета
 		API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
  		The version of the OpenAPI document: LATEST
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"

class
	ORDERLABELS_API

inherit

    API_I


feature -- API Access


	generate_order_label (campaign_id: INTEGER_64; order_id: INTEGER_64; shipment_id: INTEGER_64; box_id: INTEGER_64; format: detachable PAGE_FORMAT_TYPE): detachable FILE
			-- Готовый ярлык‑наклейка для коробки в заказе
			-- Формирует ярлык‑наклейку для коробки в заказе и возвращает ярлык в PDF‑файле.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| 
			-- 
			-- argument: campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)  (required)
			-- 
			-- argument: order_id Идентификатор заказа. (required)
			-- 
			-- argument: shipment_id Идентификатор грузоместа. (required)
			-- 
			-- argument: box_id Идентификатор коробки. (required)
			-- 
			-- argument: format Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A6. (optional, default to null)
			-- 
			-- 
			-- Result FILE
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes/{boxId}/label"
			l_path.replace_substring_all ("{"+"campaignId"+"}", api_client.url_encode (campaign_id.out))
			l_path.replace_substring_all ("{"+"orderId"+"}", api_client.url_encode (order_id.out))
			l_path.replace_substring_all ("{"+"shipmentId"+"}", api_client.url_encode (shipment_id.out))
			l_path.replace_substring_all ("{"+"boxId"+"}", api_client.url_encode (box_id.out))
			l_request.fill_query_params(api_client.parameter_to_tuple("", "format", format));


			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<"application/pdf", "application/json">>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<"OAuth">>)
			l_response := api_client.call_api (l_path, "Get", l_request, Void, agent deserializer)
			if l_response.has_error then
				last_error := l_response.error
			elseif attached { FILE } l_response.data ({ FILE }) as l_data then
				Result := l_data
			else
				create last_error.make ("Unknown error: Status response [ " + l_response.status.out + "]")
			end
		end

	generate_order_labels (campaign_id: INTEGER_64; order_id: INTEGER_64; format: detachable PAGE_FORMAT_TYPE): detachable FILE
			-- Готовые ярлыки‑наклейки на все коробки в одном заказе
			-- Возвращает PDF-файл с ярлыками, которые нужно наклеить на коробки перед отгрузкой. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  На вход нужно передать идентификатор заказа и один необязательный параметр, который управляет версткой PDF-файла.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| 
			-- 
			-- argument: campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)  (required)
			-- 
			-- argument: order_id Идентификатор заказа. (required)
			-- 
			-- argument: format Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A6. (optional, default to null)
			-- 
			-- 
			-- Result FILE
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/campaigns/{campaignId}/orders/{orderId}/delivery/labels"
			l_path.replace_substring_all ("{"+"campaignId"+"}", api_client.url_encode (campaign_id.out))
			l_path.replace_substring_all ("{"+"orderId"+"}", api_client.url_encode (order_id.out))
			l_request.fill_query_params(api_client.parameter_to_tuple("", "format", format));


			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<"application/pdf", "application/json">>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<"OAuth">>)
			l_response := api_client.call_api (l_path, "Get", l_request, Void, agent deserializer)
			if l_response.has_error then
				last_error := l_response.error
			elseif attached { FILE } l_response.data ({ FILE }) as l_data then
				Result := l_data
			else
				create last_error.make ("Unknown error: Status response [ " + l_response.status.out + "]")
			end
		end

	order_labels_data (campaign_id: INTEGER_64; order_id: INTEGER_64): detachable GET_ORDER_LABELS_DATA_RESPONSE
			-- Данные для самостоятельного изготовления ярлыков
			-- Возвращает информацию на ярлыках, которые клеятся на коробки в заказе.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| 
			-- 
			-- argument: campaign_id Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)  (required)
			-- 
			-- argument: order_id Идентификатор заказа. (required)
			-- 
			-- 
			-- Result GET_ORDER_LABELS_DATA_RESPONSE
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/campaigns/{campaignId}/orders/{orderId}/delivery/labels/data"
			l_path.replace_substring_all ("{"+"campaignId"+"}", api_client.url_encode (campaign_id.out))
			l_path.replace_substring_all ("{"+"orderId"+"}", api_client.url_encode (order_id.out))


			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<"application/json">>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<"OAuth">>)
			l_response := api_client.call_api (l_path, "Get", l_request, Void, agent deserializer)
			if l_response.has_error then
				last_error := l_response.error
			elseif attached { GET_ORDER_LABELS_DATA_RESPONSE } l_response.data ({ GET_ORDER_LABELS_DATA_RESPONSE }) as l_data then
				Result := l_data
			else
				create last_error.make ("Unknown error: Status response [ " + l_response.status.out + "]")
			end
		end


end
