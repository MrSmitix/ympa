/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */



import ApiClient from "../ApiClient";
import ApiClientDataErrorResponse from '../model/ApiClientDataErrorResponse';
import ApiForbiddenErrorResponse from '../model/ApiForbiddenErrorResponse';
import ApiLimitErrorResponse from '../model/ApiLimitErrorResponse';
import ApiNotFoundErrorResponse from '../model/ApiNotFoundErrorResponse';
import ApiServerErrorResponse from '../model/ApiServerErrorResponse';
import ApiUnauthorizedErrorResponse from '../model/ApiUnauthorizedErrorResponse';
import GetCategoriesMaxSaleQuantumRequest from '../model/GetCategoriesMaxSaleQuantumRequest';
import GetCategoriesMaxSaleQuantumResponse from '../model/GetCategoriesMaxSaleQuantumResponse';
import GetCategoriesRequest from '../model/GetCategoriesRequest';
import GetCategoriesResponse from '../model/GetCategoriesResponse';

/**
* Categories service.
* @module api/CategoriesApi
* @version LATEST
*/
export default class CategoriesApi extends ApiClient {

    /**
    * Constructs a new CategoriesApi. 
    * @alias module:api/CategoriesApi
    * @class
    */
    constructor(baseURL = 'https://api.partner.market.yandex.ru') {
      super(baseURL);
    }


    /**
     * Лимит на установку кванта продажи и минимального количества товаров в заказе
     * Возвращает лимит на установку [кванта](*quantum) и минимального количества товаров в заказе, которые вы можете задать для товаров указанных категорий.  Если вы передадите значение кванта или минимального количества товаров выше установленного Маркетом ограничения, товар будет скрыт с витрины.  Подробнее о том, как продавать товары по несколько штук, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/fields/quantum).  |**⚙️ Лимит:** 1 000 запросов в час| |-| 
     * @param {module:model/GetCategoriesMaxSaleQuantumRequest} getCategoriesMaxSaleQuantumRequest 
     * @param requestInit Dynamic configuration. @see {@link https://github.com/apollographql/apollo-server/pull/1277}
     * @return {Promise<module:model/GetCategoriesMaxSaleQuantumResponse>}
     */
    async getCategoriesMaxSaleQuantum(getCategoriesMaxSaleQuantumRequest, requestInit) {
      let postBody = getCategoriesMaxSaleQuantumRequest;
      // verify the required parameter 'getCategoriesMaxSaleQuantumRequest' is set
      if (getCategoriesMaxSaleQuantumRequest === undefined || getCategoriesMaxSaleQuantumRequest === null) {
        throw new Error("Missing the required parameter 'getCategoriesMaxSaleQuantumRequest' when calling getCategoriesMaxSaleQuantum");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'User-Agent': 'OpenAPI-Generator/LATEST/Javascript',
      };
      let formParams = {
      };

      let authNames = ['OAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetCategoriesMaxSaleQuantumResponse;

      return this.callApi(
        '/categories/max-sale-quantum', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, requestInit
      );
    }

    /**
     * Дерево категорий
     * Возвращает дерево категорий Маркета.  |**⚙️ Лимит:** 1 000 запросов в час| |-| 
     * @param {Object} opts Optional parameters
     * @param {module:model/GetCategoriesRequest} opts.getCategoriesRequest 
     * @param requestInit Dynamic configuration. @see {@link https://github.com/apollographql/apollo-server/pull/1277}
     * @return {Promise<module:model/GetCategoriesResponse>}
     */
    async getCategoriesTree(opts, requestInit) {
      opts = opts || {};
      let postBody = opts['getCategoriesRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'User-Agent': 'OpenAPI-Generator/LATEST/Javascript',
      };
      let formParams = {
      };

      let authNames = ['OAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetCategoriesResponse;

      return this.callApi(
        '/categories/tree', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, requestInit
      );
    }


}
