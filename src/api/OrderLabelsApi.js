/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiClientDataErrorResponse from '../model/ApiClientDataErrorResponse';
import ApiForbiddenErrorResponse from '../model/ApiForbiddenErrorResponse';
import ApiLimitErrorResponse from '../model/ApiLimitErrorResponse';
import ApiNotFoundErrorResponse from '../model/ApiNotFoundErrorResponse';
import ApiServerErrorResponse from '../model/ApiServerErrorResponse';
import ApiUnauthorizedErrorResponse from '../model/ApiUnauthorizedErrorResponse';
import GetOrderLabelsDataResponse from '../model/GetOrderLabelsDataResponse';
import PageFormatType from '../model/PageFormatType';

/**
* OrderLabels service.
* @module api/OrderLabelsApi
* @version LATEST
*/
export default class OrderLabelsApi {

    /**
    * Constructs a new OrderLabelsApi. 
    * @alias module:api/OrderLabelsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the generateOrderLabel operation.
     * @callback module:api/OrderLabelsApi~generateOrderLabelCallback
     * @param {String} error Error message, if any.
     * @param {File} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Готовый ярлык‑наклейка для коробки в заказе
     * Формирует ярлык‑наклейку для коробки в заказе и возвращает ярлык в PDF‑файле.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| 
     * @param {Number} campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
     * @param {Number} orderId Идентификатор заказа.
     * @param {Number} shipmentId Идентификатор грузоместа.
     * @param {Number} boxId Идентификатор коробки.
     * @param {Object} opts Optional parameters
     * @param {module:model/PageFormatType} [format] Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A6.
     * @param {module:api/OrderLabelsApi~generateOrderLabelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link File}
     */
    generateOrderLabel(campaignId, orderId, shipmentId, boxId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'campaignId' is set
      if (campaignId === undefined || campaignId === null) {
        throw new Error("Missing the required parameter 'campaignId' when calling generateOrderLabel");
      }
      // verify the required parameter 'orderId' is set
      if (orderId === undefined || orderId === null) {
        throw new Error("Missing the required parameter 'orderId' when calling generateOrderLabel");
      }
      // verify the required parameter 'shipmentId' is set
      if (shipmentId === undefined || shipmentId === null) {
        throw new Error("Missing the required parameter 'shipmentId' when calling generateOrderLabel");
      }
      // verify the required parameter 'boxId' is set
      if (boxId === undefined || boxId === null) {
        throw new Error("Missing the required parameter 'boxId' when calling generateOrderLabel");
      }

      let pathParams = {
        'campaignId': campaignId,
        'orderId': orderId,
        'shipmentId': shipmentId,
        'boxId': boxId
      };
      let queryParams = {
        'format': opts['format']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth'];
      let contentTypes = [];
      let accepts = ['application/pdf', 'application/json'];
      let returnType = File;
      return this.apiClient.callApi(
        '/campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes/{boxId}/label', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the generateOrderLabels operation.
     * @callback module:api/OrderLabelsApi~generateOrderLabelsCallback
     * @param {String} error Error message, if any.
     * @param {File} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Готовые ярлыки‑наклейки на все коробки в одном заказе
     * Возвращает PDF-файл с ярлыками, которые нужно наклеить на коробки перед отгрузкой. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  На вход нужно передать идентификатор заказа и один необязательный параметр, который управляет версткой PDF-файла.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| 
     * @param {Number} campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
     * @param {Number} orderId Идентификатор заказа.
     * @param {Object} opts Optional parameters
     * @param {module:model/PageFormatType} [format] Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A6.
     * @param {module:api/OrderLabelsApi~generateOrderLabelsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link File}
     */
    generateOrderLabels(campaignId, orderId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'campaignId' is set
      if (campaignId === undefined || campaignId === null) {
        throw new Error("Missing the required parameter 'campaignId' when calling generateOrderLabels");
      }
      // verify the required parameter 'orderId' is set
      if (orderId === undefined || orderId === null) {
        throw new Error("Missing the required parameter 'orderId' when calling generateOrderLabels");
      }

      let pathParams = {
        'campaignId': campaignId,
        'orderId': orderId
      };
      let queryParams = {
        'format': opts['format']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth'];
      let contentTypes = [];
      let accepts = ['application/pdf', 'application/json'];
      let returnType = File;
      return this.apiClient.callApi(
        '/campaigns/{campaignId}/orders/{orderId}/delivery/labels', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrderLabelsData operation.
     * @callback module:api/OrderLabelsApi~getOrderLabelsDataCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetOrderLabelsDataResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Данные для самостоятельного изготовления ярлыков
     * Возвращает информацию на ярлыках, которые клеятся на коробки в заказе.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| 
     * @param {Number} campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
     * @param {Number} orderId Идентификатор заказа.
     * @param {module:api/OrderLabelsApi~getOrderLabelsDataCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetOrderLabelsDataResponse}
     */
    getOrderLabelsData(campaignId, orderId, callback) {
      let postBody = null;
      // verify the required parameter 'campaignId' is set
      if (campaignId === undefined || campaignId === null) {
        throw new Error("Missing the required parameter 'campaignId' when calling getOrderLabelsData");
      }
      // verify the required parameter 'orderId' is set
      if (orderId === undefined || orderId === null) {
        throw new Error("Missing the required parameter 'orderId' when calling getOrderLabelsData");
      }

      let pathParams = {
        'campaignId': campaignId,
        'orderId': orderId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetOrderLabelsDataResponse;
      return this.apiClient.callApi(
        '/campaigns/{campaignId}/orders/{orderId}/delivery/labels/data', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
