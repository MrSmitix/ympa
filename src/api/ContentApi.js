/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiClientDataErrorResponse from '../model/ApiClientDataErrorResponse';
import ApiForbiddenErrorResponse from '../model/ApiForbiddenErrorResponse';
import ApiLimitErrorResponse from '../model/ApiLimitErrorResponse';
import ApiLockedErrorResponse from '../model/ApiLockedErrorResponse';
import ApiNotFoundErrorResponse from '../model/ApiNotFoundErrorResponse';
import ApiServerErrorResponse from '../model/ApiServerErrorResponse';
import ApiUnauthorizedErrorResponse from '../model/ApiUnauthorizedErrorResponse';
import GetCategoryContentParametersResponse from '../model/GetCategoryContentParametersResponse';
import GetOfferCardsContentStatusRequest from '../model/GetOfferCardsContentStatusRequest';
import GetOfferCardsContentStatusResponse from '../model/GetOfferCardsContentStatusResponse';
import UpdateOfferContentRequest from '../model/UpdateOfferContentRequest';
import UpdateOfferContentResponse from '../model/UpdateOfferContentResponse';

/**
* Content service.
* @module api/ContentApi
* @version LATEST
*/
export default class ContentApi {

    /**
    * Constructs a new ContentApi. 
    * @alias module:api/ContentApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getCategoryContentParameters operation.
     * @callback module:api/ContentApi~getCategoryContentParametersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetCategoryContentParametersResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Списки характеристик товаров по категориям
     * Возвращает список характеристик с допустимыми значениями для заданной категории.  |**⚙️ Лимит:** 50 категорий в минуту | |-| 
     * @param {Number} categoryId Идентификатор категории на Маркете.  Чтобы узнать идентификатор категории, к которой относится интересующий вас товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md). 
     * @param {module:api/ContentApi~getCategoryContentParametersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetCategoryContentParametersResponse}
     */
    getCategoryContentParameters(categoryId, callback) {
      let postBody = null;
      // verify the required parameter 'categoryId' is set
      if (categoryId === undefined || categoryId === null) {
        throw new Error("Missing the required parameter 'categoryId' when calling getCategoryContentParameters");
      }

      let pathParams = {
        'categoryId': categoryId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetCategoryContentParametersResponse;
      return this.apiClient.callApi(
        '/category/{categoryId}/parameters', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOfferCardsContentStatus operation.
     * @callback module:api/ContentApi~getOfferCardsContentStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetOfferCardsContentStatusResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Получение информации о заполненности карточек магазина
     * Возвращает сведения о состоянии контента для заданных товаров:  * создана ли карточка товара и в каком она статусе; * заполненность карточки в процентах; * переданные характеристики товаров; * есть ли ошибки или предупреждения, связанные с контентом; * рекомендации по заполнению карточки.  |**⚙️ Лимит:** 600 запросов в минуту| |-| 
     * @param {Number} businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
     * @param {Object} opts Optional parameters
     * @param {String} [pageToken] Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. 
     * @param {Number} [limit] Количество значений на одной странице. 
     * @param {module:model/GetOfferCardsContentStatusRequest} [getOfferCardsContentStatusRequest] 
     * @param {module:api/ContentApi~getOfferCardsContentStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetOfferCardsContentStatusResponse}
     */
    getOfferCardsContentStatus(businessId, opts, callback) {
      opts = opts || {};
      let postBody = opts['getOfferCardsContentStatusRequest'];
      // verify the required parameter 'businessId' is set
      if (businessId === undefined || businessId === null) {
        throw new Error("Missing the required parameter 'businessId' when calling getOfferCardsContentStatus");
      }

      let pathParams = {
        'businessId': businessId
      };
      let queryParams = {
        'page_token': opts['pageToken'],
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetOfferCardsContentStatusResponse;
      return this.apiClient.callApi(
        '/businesses/{businessId}/offer-cards', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateOfferContent operation.
     * @callback module:api/ContentApi~updateOfferContentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateOfferContentResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Редактирование категорийных характеристик товара
     * Редактирует характеристики товара, которые специфичны для категории, к которой он относится.  {% note warning \"Здесь только то, что относится к конкретной категории\" %}  Если вам нужно изменить основные параметры товара (название, описание, изображения, видео, производитель, штрихкод), воспользуйтесь запросом [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).  {% endnote %}  Чтобы удалить характеристики, которые заданы в параметрах с типом `string`, передайте пустое значение.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-| 
     * @param {Number} businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
     * @param {module:model/UpdateOfferContentRequest} updateOfferContentRequest 
     * @param {module:api/ContentApi~updateOfferContentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateOfferContentResponse}
     */
    updateOfferContent(businessId, updateOfferContentRequest, callback) {
      let postBody = updateOfferContentRequest;
      // verify the required parameter 'businessId' is set
      if (businessId === undefined || businessId === null) {
        throw new Error("Missing the required parameter 'businessId' when calling updateOfferContent");
      }
      // verify the required parameter 'updateOfferContentRequest' is set
      if (updateOfferContentRequest === undefined || updateOfferContentRequest === null) {
        throw new Error("Missing the required parameter 'updateOfferContentRequest' when calling updateOfferContent");
      }

      let pathParams = {
        'businessId': businessId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateOfferContentResponse;
      return this.apiClient.callApi(
        '/businesses/{businessId}/offer-cards/update', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
