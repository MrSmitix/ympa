/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiClientDataErrorResponse from '../model/ApiClientDataErrorResponse';
import ApiForbiddenErrorResponse from '../model/ApiForbiddenErrorResponse';
import ApiLimitErrorResponse from '../model/ApiLimitErrorResponse';
import ApiNotFoundErrorResponse from '../model/ApiNotFoundErrorResponse';
import ApiServerErrorResponse from '../model/ApiServerErrorResponse';
import ApiUnauthorizedErrorResponse from '../model/ApiUnauthorizedErrorResponse';
import GetCampaignLoginsResponse from '../model/GetCampaignLoginsResponse';
import GetCampaignRegionResponse from '../model/GetCampaignRegionResponse';
import GetCampaignResponse from '../model/GetCampaignResponse';
import GetCampaignSettingsResponse from '../model/GetCampaignSettingsResponse';
import GetCampaignsResponse from '../model/GetCampaignsResponse';

/**
* Campaigns service.
* @module api/CampaignsApi
* @version LATEST
*/
export default class CampaignsApi {

    /**
    * Constructs a new CampaignsApi. 
    * @alias module:api/CampaignsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getCampaign operation.
     * @callback module:api/CampaignsApi~getCampaignCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetCampaignResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Информация о магазине
     * Возвращает информацию о магазине. |**⚙️ Лимит:** 1000 запросов в час| |-| 
     * @param {Number} campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
     * @param {module:api/CampaignsApi~getCampaignCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetCampaignResponse}
     */
    getCampaign(campaignId, callback) {
      let postBody = null;
      // verify the required parameter 'campaignId' is set
      if (campaignId === undefined || campaignId === null) {
        throw new Error("Missing the required parameter 'campaignId' when calling getCampaign");
      }

      let pathParams = {
        'campaignId': campaignId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetCampaignResponse;
      return this.apiClient.callApi(
        '/campaigns/{campaignId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCampaignLogins operation.
     * @callback module:api/CampaignsApi~getCampaignLoginsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetCampaignLoginsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Логины, связанные с магазином
     * Возвращает список логинов, у которых есть доступ к магазину. |**⚙️ Лимит:** 1000 запросов в час| |-| 
     * @param {Number} campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
     * @param {module:api/CampaignsApi~getCampaignLoginsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetCampaignLoginsResponse}
     */
    getCampaignLogins(campaignId, callback) {
      let postBody = null;
      // verify the required parameter 'campaignId' is set
      if (campaignId === undefined || campaignId === null) {
        throw new Error("Missing the required parameter 'campaignId' when calling getCampaignLogins");
      }

      let pathParams = {
        'campaignId': campaignId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetCampaignLoginsResponse;
      return this.apiClient.callApi(
        '/campaigns/{campaignId}/logins', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCampaignRegion operation.
     * @callback module:api/CampaignsApi~getCampaignRegionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetCampaignRegionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Регион магазина
     * {% note warning \"\" %}  Этот метод устарел. Вместо него используйте [GET campaigns/{campaignId}/settings](../../reference/campaigns/getCampaignSettings.md).  {% endnote %}  Возвращает регион, в котором находится магазин. |**⚙️ Лимит:** 5 000 запросов в час| |-| 
     * @param {Number} campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
     * @param {module:api/CampaignsApi~getCampaignRegionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetCampaignRegionResponse}
     */
    getCampaignRegion(campaignId, callback) {
      let postBody = null;
      // verify the required parameter 'campaignId' is set
      if (campaignId === undefined || campaignId === null) {
        throw new Error("Missing the required parameter 'campaignId' when calling getCampaignRegion");
      }

      let pathParams = {
        'campaignId': campaignId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetCampaignRegionResponse;
      return this.apiClient.callApi(
        '/campaigns/{campaignId}/region', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCampaignSettings operation.
     * @callback module:api/CampaignsApi~getCampaignSettingsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetCampaignSettingsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Настройки магазина
     * Возвращает информацию о настройках магазина, идентификатор которого указан в запросе. |**⚙️ Лимит:** 1000 запросов в час| |-| 
     * @param {Number} campaignId Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
     * @param {module:api/CampaignsApi~getCampaignSettingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetCampaignSettingsResponse}
     */
    getCampaignSettings(campaignId, callback) {
      let postBody = null;
      // verify the required parameter 'campaignId' is set
      if (campaignId === undefined || campaignId === null) {
        throw new Error("Missing the required parameter 'campaignId' when calling getCampaignSettings");
      }

      let pathParams = {
        'campaignId': campaignId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetCampaignSettingsResponse;
      return this.apiClient.callApi(
        '/campaigns/{campaignId}/settings', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCampaigns operation.
     * @callback module:api/CampaignsApi~getCampaignsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetCampaignsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Список магазинов пользователя
     * Возвращает список магазинов, к которым имеет доступ пользователь — владелец авторизационного токена, использованного в запросе. Для агентских пользователей список состоит из подагентских магазинов. |**⚙️ Лимит:** 1000 запросов в час| |-| 
     * @param {Object} opts Optional parameters
     * @param {Number} [page = 1)] Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. 
     * @param {Number} [pageSize] Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. 
     * @param {module:api/CampaignsApi~getCampaignsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetCampaignsResponse}
     */
    getCampaigns(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page': opts['page'],
        'pageSize': opts['pageSize']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetCampaignsResponse;
      return this.apiClient.callApi(
        '/campaigns', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCampaignsByLogin operation.
     * @callback module:api/CampaignsApi~getCampaignsByLoginCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetCampaignsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Магазины, доступные логину
     * Возвращает список магазинов, к которым у пользователя с указанным логином есть доступ. |**⚙️ Лимит:** 100 запросов в час| |-| 
     * @param {String} login Логин пользователя.
     * @param {Object} opts Optional parameters
     * @param {Number} [page = 1)] Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. 
     * @param {Number} [pageSize] Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. 
     * @param {module:api/CampaignsApi~getCampaignsByLoginCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetCampaignsResponse}
     */
    getCampaignsByLogin(login, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'login' is set
      if (login === undefined || login === null) {
        throw new Error("Missing the required parameter 'login' when calling getCampaignsByLogin");
      }

      let pathParams = {
        'login': login
      };
      let queryParams = {
        'page': opts['page'],
        'pageSize': opts['pageSize']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetCampaignsResponse;
      return this.apiClient.callApi(
        '/campaigns/by_login/{login}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
