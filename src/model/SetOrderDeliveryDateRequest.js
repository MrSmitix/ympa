/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OrderDeliveryDateDTO from './OrderDeliveryDateDTO';
import OrderDeliveryDateReasonType from './OrderDeliveryDateReasonType';

/**
 * The SetOrderDeliveryDateRequest model module.
 * @module model/SetOrderDeliveryDateRequest
 * @version LATEST
 */
class SetOrderDeliveryDateRequest {
    /**
     * Constructs a new <code>SetOrderDeliveryDateRequest</code>.
     * @alias module:model/SetOrderDeliveryDateRequest
     * @param dates {module:model/OrderDeliveryDateDTO} 
     * @param reason {module:model/OrderDeliveryDateReasonType} 
     */
    constructor(dates, reason) { 
        
        SetOrderDeliveryDateRequest.initialize(this, dates, reason);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, dates, reason) { 
        obj['dates'] = dates;
        obj['reason'] = reason;
    }

    /**
     * Constructs a <code>SetOrderDeliveryDateRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SetOrderDeliveryDateRequest} obj Optional instance to populate.
     * @return {module:model/SetOrderDeliveryDateRequest} The populated <code>SetOrderDeliveryDateRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SetOrderDeliveryDateRequest();

            if (data.hasOwnProperty('dates')) {
                obj['dates'] = OrderDeliveryDateDTO.constructFromObject(data['dates']);
            }
            if (data.hasOwnProperty('reason')) {
                obj['reason'] = OrderDeliveryDateReasonType.constructFromObject(data['reason']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SetOrderDeliveryDateRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SetOrderDeliveryDateRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SetOrderDeliveryDateRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `dates`
        if (data['dates']) { // data not null
          OrderDeliveryDateDTO.validateJSON(data['dates']);
        }

        return true;
    }


}

SetOrderDeliveryDateRequest.RequiredProperties = ["dates", "reason"];

/**
 * @member {module:model/OrderDeliveryDateDTO} dates
 */
SetOrderDeliveryDateRequest.prototype['dates'] = undefined;

/**
 * @member {module:model/OrderDeliveryDateReasonType} reason
 */
SetOrderDeliveryDateRequest.prototype['reason'] = undefined;






export default SetOrderDeliveryDateRequest;

