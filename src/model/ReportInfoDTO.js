/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ReportStatusType from './ReportStatusType';
import ReportSubStatusType from './ReportSubStatusType';

/**
 * The ReportInfoDTO model module.
 * @module model/ReportInfoDTO
 * @version LATEST
 */
class ReportInfoDTO {
    /**
     * @member {module:model/ReportStatusType} status
     * @type {module:model/ReportStatusType}
     */
    status;
    /**
     * @member {module:model/ReportSubStatusType} subStatus
     * @type {module:model/ReportSubStatusType}
     */
    subStatus;
    /**
     * @member {Date} generationRequestedAt
     * @type {Date}
     */
    generationRequestedAt;
    /**
     * @member {Date} generationFinishedAt
     * @type {Date}
     */
    generationFinishedAt;
    /**
     * @member {String} file
     * @type {String}
     */
    file;
    /**
     * @member {Number} estimatedGenerationTime
     * @type {Number}
     */
    estimatedGenerationTime;

    

    /**
     * Constructs a new <code>ReportInfoDTO</code>.
     * Статус генерации и ссылка на готовый отчет.
     * @alias module:model/ReportInfoDTO
     * @param status {module:model/ReportStatusType} 
     * @param generationRequestedAt {Date} Дата и время запроса на генерацию.
     */
    constructor(status, generationRequestedAt) { 
        
        ReportInfoDTO.initialize(this, status, generationRequestedAt);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, status, generationRequestedAt) { 
        obj['status'] = status;
        obj['generationRequestedAt'] = generationRequestedAt;
    }

    /**
     * Constructs a <code>ReportInfoDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReportInfoDTO} obj Optional instance to populate.
     * @return {module:model/ReportInfoDTO} The populated <code>ReportInfoDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReportInfoDTO();

            if (data.hasOwnProperty('status')) {
                obj['status'] = ReportStatusType.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('subStatus')) {
                obj['subStatus'] = ReportSubStatusType.constructFromObject(data['subStatus']);
            }
            if (data.hasOwnProperty('generationRequestedAt')) {
                obj['generationRequestedAt'] = ApiClient.convertToType(data['generationRequestedAt'], 'Date');
            }
            if (data.hasOwnProperty('generationFinishedAt')) {
                obj['generationFinishedAt'] = ApiClient.convertToType(data['generationFinishedAt'], 'Date');
            }
            if (data.hasOwnProperty('file')) {
                obj['file'] = ApiClient.convertToType(data['file'], 'String');
            }
            if (data.hasOwnProperty('estimatedGenerationTime')) {
                obj['estimatedGenerationTime'] = ApiClient.convertToType(data['estimatedGenerationTime'], 'Number');
            }
        }
        return obj;
    }
}



export default ReportInfoDTO;

