/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GenerateGoodsRealizationReportRequest model module.
 * @module model/GenerateGoodsRealizationReportRequest
 * @version LATEST
 */
class GenerateGoodsRealizationReportRequest {
    /**
     * @member {Number} campaignId
     * @type {Number}
     */
    campaignId;
    /**
     * @member {Number} year
     * @type {Number}
     */
    year;
    /**
     * @member {Number} month
     * @type {Number}
     */
    month;

    

    /**
     * Constructs a new <code>GenerateGoodsRealizationReportRequest</code>.
     * Данные, необходимые для генерации отчета: идентификатор магазина и период, за который нужен отчет. 
     * @alias module:model/GenerateGoodsRealizationReportRequest
     * @param campaignId {Number} Идентификатор кампании.
     * @param year {Number} Год.
     * @param month {Number} Номер месяца.
     */
    constructor(campaignId, year, month) { 
        
        GenerateGoodsRealizationReportRequest.initialize(this, campaignId, year, month);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, campaignId, year, month) { 
        obj['campaignId'] = campaignId;
        obj['year'] = year;
        obj['month'] = month;
    }

    /**
     * Constructs a <code>GenerateGoodsRealizationReportRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GenerateGoodsRealizationReportRequest} obj Optional instance to populate.
     * @return {module:model/GenerateGoodsRealizationReportRequest} The populated <code>GenerateGoodsRealizationReportRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GenerateGoodsRealizationReportRequest();

            if (data.hasOwnProperty('campaignId')) {
                obj['campaignId'] = ApiClient.convertToType(data['campaignId'], 'Number');
            }
            if (data.hasOwnProperty('year')) {
                obj['year'] = ApiClient.convertToType(data['year'], 'Number');
            }
            if (data.hasOwnProperty('month')) {
                obj['month'] = ApiClient.convertToType(data['month'], 'Number');
            }
        }
        return obj;
    }
}



export default GenerateGoodsRealizationReportRequest;

