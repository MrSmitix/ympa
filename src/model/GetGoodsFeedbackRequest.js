/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FeedbackReactionStatusType from './FeedbackReactionStatusType';

/**
 * The GetGoodsFeedbackRequest model module.
 * @module model/GetGoodsFeedbackRequest
 * @version LATEST
 */
class GetGoodsFeedbackRequest {
    /**
     * Constructs a new <code>GetGoodsFeedbackRequest</code>.
     * Фильтр запроса отзывов в кабинете. 
     * @alias module:model/GetGoodsFeedbackRequest
     */
    constructor() { 
        
        GetGoodsFeedbackRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetGoodsFeedbackRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetGoodsFeedbackRequest} obj Optional instance to populate.
     * @return {module:model/GetGoodsFeedbackRequest} The populated <code>GetGoodsFeedbackRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetGoodsFeedbackRequest();

            if (data.hasOwnProperty('dateTimeFrom')) {
                obj['dateTimeFrom'] = ApiClient.convertToType(data['dateTimeFrom'], 'Date');
            }
            if (data.hasOwnProperty('dateTimeTo')) {
                obj['dateTimeTo'] = ApiClient.convertToType(data['dateTimeTo'], 'Date');
            }
            if (data.hasOwnProperty('reactionStatus')) {
                obj['reactionStatus'] = FeedbackReactionStatusType.constructFromObject(data['reactionStatus']);
            }
            if (data.hasOwnProperty('ratingValues')) {
                obj['ratingValues'] = ApiClient.convertToType(data['ratingValues'], ['Number']);
            }
            if (data.hasOwnProperty('modelIds')) {
                obj['modelIds'] = ApiClient.convertToType(data['modelIds'], ['Number']);
            }
            if (data.hasOwnProperty('paid')) {
                obj['paid'] = ApiClient.convertToType(data['paid'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetGoodsFeedbackRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetGoodsFeedbackRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['ratingValues'])) {
            throw new Error("Expected the field `ratingValues` to be an array in the JSON data but got " + data['ratingValues']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['modelIds'])) {
            throw new Error("Expected the field `modelIds` to be an array in the JSON data but got " + data['modelIds']);
        }

        return true;
    }


}



/**
 * Начало периода. Не включительно.  Если параметр не указан, возвращается информация за 6 месяцев до указанной в `dateTimeTo` даты. 
 * @member {Date} dateTimeFrom
 */
GetGoodsFeedbackRequest.prototype['dateTimeFrom'] = undefined;

/**
 * Конец периода. Не включительно.  Если параметр не указан, используется текущая дата. 
 * @member {Date} dateTimeTo
 */
GetGoodsFeedbackRequest.prototype['dateTimeTo'] = undefined;

/**
 * @member {module:model/FeedbackReactionStatusType} reactionStatus
 */
GetGoodsFeedbackRequest.prototype['reactionStatus'] = undefined;

/**
 * Оценка товара.
 * @member {Array.<Number>} ratingValues
 */
GetGoodsFeedbackRequest.prototype['ratingValues'] = undefined;

/**
 * Фильтр по идентификатору модели товара.  Получить идентификатор модели можно с помощью одного из запросов:  * [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md);  * [POST businesses/{businessId}/offer-cards](../../reference/content/getOfferCardsContentStatus.md);  * [POST models](../../reference/models/getModels.md). 
 * @member {Array.<Number>} modelIds
 */
GetGoodsFeedbackRequest.prototype['modelIds'] = undefined;

/**
 * Фильтр отзывов за баллы Плюса.
 * @member {Boolean} paid
 */
GetGoodsFeedbackRequest.prototype['paid'] = undefined;






export default GetGoodsFeedbackRequest;

