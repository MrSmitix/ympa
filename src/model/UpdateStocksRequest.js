/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UpdateStockDTO from './UpdateStockDTO';

/**
 * The UpdateStocksRequest model module.
 * @module model/UpdateStocksRequest
 * @version LATEST
 */
class UpdateStocksRequest {
    /**
     * Constructs a new <code>UpdateStocksRequest</code>.
     * Запрос на изменение информации по остаткам товаров.
     * @alias module:model/UpdateStocksRequest
     * @param skus {Array.<module:model/UpdateStockDTO>} Данные об остатках товаров. 
     */
    constructor(skus) { 
        
        UpdateStocksRequest.initialize(this, skus);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, skus) { 
        obj['skus'] = skus;
    }

    /**
     * Constructs a <code>UpdateStocksRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateStocksRequest} obj Optional instance to populate.
     * @return {module:model/UpdateStocksRequest} The populated <code>UpdateStocksRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateStocksRequest();

            if (data.hasOwnProperty('skus')) {
                obj['skus'] = ApiClient.convertToType(data['skus'], [UpdateStockDTO]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateStocksRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateStocksRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateStocksRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['skus']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['skus'])) {
                throw new Error("Expected the field `skus` to be an array in the JSON data but got " + data['skus']);
            }
            // validate the optional field `skus` (array)
            for (const item of data['skus']) {
                UpdateStockDTO.validateJSON(item);
            };
        }

        return true;
    }


}

UpdateStocksRequest.RequiredProperties = ["skus"];

/**
 * Данные об остатках товаров. 
 * @member {Array.<module:model/UpdateStockDTO>} skus
 */
UpdateStocksRequest.prototype['skus'] = undefined;






export default UpdateStocksRequest;

