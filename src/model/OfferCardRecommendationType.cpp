/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "ympa_cpp_restsdk_client/model/OfferCardRecommendationType.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {


namespace
{
using EnumUnderlyingType = utility::string_t;

OfferCardRecommendationType::eOfferCardRecommendationType toEnum(const EnumUnderlyingType& val)
{
    if (val == utility::conversions::to_string_t(U("HAS_VIDEO")))
        return OfferCardRecommendationType::eOfferCardRecommendationType::OfferCardRecommendationType_HAS_VIDEO;
    if (val == utility::conversions::to_string_t(U("RECOGNIZED_VENDOR")))
        return OfferCardRecommendationType::eOfferCardRecommendationType::OfferCardRecommendationType_RECOGNIZED_VENDOR;
    if (val == utility::conversions::to_string_t(U("MAIN")))
        return OfferCardRecommendationType::eOfferCardRecommendationType::OfferCardRecommendationType_MAIN;
    if (val == utility::conversions::to_string_t(U("ADDITIONAL")))
        return OfferCardRecommendationType::eOfferCardRecommendationType::OfferCardRecommendationType_ADDITIONAL;
    if (val == utility::conversions::to_string_t(U("DISTINCTIVE")))
        return OfferCardRecommendationType::eOfferCardRecommendationType::OfferCardRecommendationType_DISTINCTIVE;
    if (val == utility::conversions::to_string_t(U("FILTERABLE")))
        return OfferCardRecommendationType::eOfferCardRecommendationType::OfferCardRecommendationType_FILTERABLE;
    if (val == utility::conversions::to_string_t(U("PICTURE_COUNT")))
        return OfferCardRecommendationType::eOfferCardRecommendationType::OfferCardRecommendationType_PICTURE_COUNT;
    if (val == utility::conversions::to_string_t(U("HAS_DESCRIPTION")))
        return OfferCardRecommendationType::eOfferCardRecommendationType::OfferCardRecommendationType_HAS_DESCRIPTION;
    if (val == utility::conversions::to_string_t(U("HAS_BARCODE")))
        return OfferCardRecommendationType::eOfferCardRecommendationType::OfferCardRecommendationType_HAS_BARCODE;
    if (val == utility::conversions::to_string_t(U("FIRST_PICTURE_SIZE")))
        return OfferCardRecommendationType::eOfferCardRecommendationType::OfferCardRecommendationType_FIRST_PICTURE_SIZE;
    if (val == utility::conversions::to_string_t(U("TITLE_LENGTH")))
        return OfferCardRecommendationType::eOfferCardRecommendationType::OfferCardRecommendationType_TITLE_LENGTH;
    if (val == utility::conversions::to_string_t(U("DESCRIPTION_LENGTH")))
        return OfferCardRecommendationType::eOfferCardRecommendationType::OfferCardRecommendationType_DESCRIPTION_LENGTH;
    if (val == utility::conversions::to_string_t(U("AVERAGE_PICTURE_SIZE")))
        return OfferCardRecommendationType::eOfferCardRecommendationType::OfferCardRecommendationType_AVERAGE_PICTURE_SIZE;
    if (val == utility::conversions::to_string_t(U("FIRST_VIDEO_SIZE")))
        return OfferCardRecommendationType::eOfferCardRecommendationType::OfferCardRecommendationType_FIRST_VIDEO_SIZE;
    if (val == utility::conversions::to_string_t(U("FIRST_VIDEO_LENGTH")))
        return OfferCardRecommendationType::eOfferCardRecommendationType::OfferCardRecommendationType_FIRST_VIDEO_LENGTH;
    if (val == utility::conversions::to_string_t(U("AVERAGE_VIDEO_SIZE")))
        return OfferCardRecommendationType::eOfferCardRecommendationType::OfferCardRecommendationType_AVERAGE_VIDEO_SIZE;
    if (val == utility::conversions::to_string_t(U("VIDEO_COUNT")))
        return OfferCardRecommendationType::eOfferCardRecommendationType::OfferCardRecommendationType_VIDEO_COUNT;
    return {};
}

EnumUnderlyingType fromEnum(OfferCardRecommendationType::eOfferCardRecommendationType e)
{
    switch (e)
    {
    case OfferCardRecommendationType::eOfferCardRecommendationType::OfferCardRecommendationType_HAS_VIDEO:
        return U("HAS_VIDEO");
    case OfferCardRecommendationType::eOfferCardRecommendationType::OfferCardRecommendationType_RECOGNIZED_VENDOR:
        return U("RECOGNIZED_VENDOR");
    case OfferCardRecommendationType::eOfferCardRecommendationType::OfferCardRecommendationType_MAIN:
        return U("MAIN");
    case OfferCardRecommendationType::eOfferCardRecommendationType::OfferCardRecommendationType_ADDITIONAL:
        return U("ADDITIONAL");
    case OfferCardRecommendationType::eOfferCardRecommendationType::OfferCardRecommendationType_DISTINCTIVE:
        return U("DISTINCTIVE");
    case OfferCardRecommendationType::eOfferCardRecommendationType::OfferCardRecommendationType_FILTERABLE:
        return U("FILTERABLE");
    case OfferCardRecommendationType::eOfferCardRecommendationType::OfferCardRecommendationType_PICTURE_COUNT:
        return U("PICTURE_COUNT");
    case OfferCardRecommendationType::eOfferCardRecommendationType::OfferCardRecommendationType_HAS_DESCRIPTION:
        return U("HAS_DESCRIPTION");
    case OfferCardRecommendationType::eOfferCardRecommendationType::OfferCardRecommendationType_HAS_BARCODE:
        return U("HAS_BARCODE");
    case OfferCardRecommendationType::eOfferCardRecommendationType::OfferCardRecommendationType_FIRST_PICTURE_SIZE:
        return U("FIRST_PICTURE_SIZE");
    case OfferCardRecommendationType::eOfferCardRecommendationType::OfferCardRecommendationType_TITLE_LENGTH:
        return U("TITLE_LENGTH");
    case OfferCardRecommendationType::eOfferCardRecommendationType::OfferCardRecommendationType_DESCRIPTION_LENGTH:
        return U("DESCRIPTION_LENGTH");
    case OfferCardRecommendationType::eOfferCardRecommendationType::OfferCardRecommendationType_AVERAGE_PICTURE_SIZE:
        return U("AVERAGE_PICTURE_SIZE");
    case OfferCardRecommendationType::eOfferCardRecommendationType::OfferCardRecommendationType_FIRST_VIDEO_SIZE:
        return U("FIRST_VIDEO_SIZE");
    case OfferCardRecommendationType::eOfferCardRecommendationType::OfferCardRecommendationType_FIRST_VIDEO_LENGTH:
        return U("FIRST_VIDEO_LENGTH");
    case OfferCardRecommendationType::eOfferCardRecommendationType::OfferCardRecommendationType_AVERAGE_VIDEO_SIZE:
        return U("AVERAGE_VIDEO_SIZE");
    case OfferCardRecommendationType::eOfferCardRecommendationType::OfferCardRecommendationType_VIDEO_COUNT:
        return U("VIDEO_COUNT");
    default:
        break;
    }
    return {};
}
}

OfferCardRecommendationType::OfferCardRecommendationType()
{
}

OfferCardRecommendationType::~OfferCardRecommendationType()
{
}

void OfferCardRecommendationType::validate()
{
    // TODO: implement validation
}

web::json::value OfferCardRecommendationType::toJson() const
{
    auto val = fromEnum(m_value);
    return web::json::value(val);
}

bool OfferCardRecommendationType::fromJson(const web::json::value& val)
{
    m_value = toEnum(val.as_string());
    return true;
}

void OfferCardRecommendationType::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if (!namePrefix.empty() && namePrefix.back() != U('.'))
    {
        namePrefix.push_back(U('.'));
    }

    auto e = fromEnum(m_value);
    multipart->add(ModelBase::toHttpContent(namePrefix, e));
}

bool OfferCardRecommendationType::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    bool ok = true;
    utility::string_t namePrefix = prefix;
    if (!namePrefix.empty() && namePrefix.back() != U('.'))
    {
        namePrefix.push_back(U('.'));
    }
    {
        EnumUnderlyingType e;
        ok = ModelBase::fromHttpContent(multipart->getContent(namePrefix), e);
        if (ok)
        {
            auto v = toEnum(e);
            setValue(v);
        }
    }
    return ok;
}

OfferCardRecommendationType::eOfferCardRecommendationType OfferCardRecommendationType::getValue() const
{
   return m_value;
}

void OfferCardRecommendationType::setValue(OfferCardRecommendationType::eOfferCardRecommendationType const value)
{
   m_value = value;
}


}
}
}
}


