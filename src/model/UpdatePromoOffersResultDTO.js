/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RejectedPromoOfferUpdateDTO from './RejectedPromoOfferUpdateDTO';
import WarningPromoOfferUpdateDTO from './WarningPromoOfferUpdateDTO';

/**
 * The UpdatePromoOffersResultDTO model module.
 * @module model/UpdatePromoOffersResultDTO
 * @version LATEST
 */
class UpdatePromoOffersResultDTO {
    /**
     * Constructs a new <code>UpdatePromoOffersResultDTO</code>.
     * Ошибки и предупреждения, которые появились при добавлении товаров в акцию.
     * @alias module:model/UpdatePromoOffersResultDTO
     */
    constructor() { 
        
        UpdatePromoOffersResultDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdatePromoOffersResultDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdatePromoOffersResultDTO} obj Optional instance to populate.
     * @return {module:model/UpdatePromoOffersResultDTO} The populated <code>UpdatePromoOffersResultDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdatePromoOffersResultDTO();

            if (data.hasOwnProperty('rejectedOffers')) {
                obj['rejectedOffers'] = ApiClient.convertToType(data['rejectedOffers'], [RejectedPromoOfferUpdateDTO]);
            }
            if (data.hasOwnProperty('warningOffers')) {
                obj['warningOffers'] = ApiClient.convertToType(data['warningOffers'], [WarningPromoOfferUpdateDTO]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdatePromoOffersResultDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdatePromoOffersResultDTO</code>.
     */
    static validateJSON(data) {
        if (data['rejectedOffers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['rejectedOffers'])) {
                throw new Error("Expected the field `rejectedOffers` to be an array in the JSON data but got " + data['rejectedOffers']);
            }
            // validate the optional field `rejectedOffers` (array)
            for (const item of data['rejectedOffers']) {
                RejectedPromoOfferUpdateDTO.validateJSON(item);
            };
        }
        if (data['warningOffers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['warningOffers'])) {
                throw new Error("Expected the field `warningOffers` to be an array in the JSON data but got " + data['warningOffers']);
            }
            // validate the optional field `warningOffers` (array)
            for (const item of data['warningOffers']) {
                WarningPromoOfferUpdateDTO.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Изменения, которые были отклонены.  Возвращается, только если есть отклоненные изменения. 
 * @member {Array.<module:model/RejectedPromoOfferUpdateDTO>} rejectedOffers
 */
UpdatePromoOffersResultDTO.prototype['rejectedOffers'] = undefined;

/**
 * Изменения, по которым есть предупреждения. Они информируют о возможных проблемах. Информация о товарах обновится.  Возвращается, только если есть предупреждения. 
 * @member {Array.<module:model/WarningPromoOfferUpdateDTO>} warningOffers
 */
UpdatePromoOffersResultDTO.prototype['warningOffers'] = undefined;






export default UpdatePromoOffersResultDTO;

