/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ModelOfferDTO model module.
 * @module model/ModelOfferDTO
 * @version LATEST
 */
class ModelOfferDTO {
    /**
     * @member {Number} discount
     * @type {Number}
     */
    discount;
    /**
     * @member {String} name
     * @type {String}
     */
    name;
    /**
     * @member {Number} pos
     * @type {Number}
     */
    pos;
    /**
     * @member {Number} preDiscountPrice
     * @type {Number}
     */
    preDiscountPrice;
    /**
     * @member {Number} price
     * @type {Number}
     */
    price;
    /**
     * @member {Number} regionId
     * @type {Number}
     */
    regionId;
    /**
     * @member {Number} shippingCost
     * @type {Number}
     */
    shippingCost;
    /**
     * @member {String} shopName
     * @type {String}
     */
    shopName;
    /**
     * @member {Number} shopRating
     * @type {Number}
     */
    shopRating;
    /**
     * @member {Number} inStock
     * @type {Number}
     */
    inStock;

    

    /**
     * Constructs a new <code>ModelOfferDTO</code>.
     * Информация о предложении.
     * @alias module:model/ModelOfferDTO
     */
    constructor() { 
        
        ModelOfferDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ModelOfferDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ModelOfferDTO} obj Optional instance to populate.
     * @return {module:model/ModelOfferDTO} The populated <code>ModelOfferDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ModelOfferDTO();

            if (data.hasOwnProperty('discount')) {
                obj['discount'] = ApiClient.convertToType(data['discount'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('pos')) {
                obj['pos'] = ApiClient.convertToType(data['pos'], 'Number');
            }
            if (data.hasOwnProperty('preDiscountPrice')) {
                obj['preDiscountPrice'] = ApiClient.convertToType(data['preDiscountPrice'], 'Number');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
            if (data.hasOwnProperty('regionId')) {
                obj['regionId'] = ApiClient.convertToType(data['regionId'], 'Number');
            }
            if (data.hasOwnProperty('shippingCost')) {
                obj['shippingCost'] = ApiClient.convertToType(data['shippingCost'], 'Number');
            }
            if (data.hasOwnProperty('shopName')) {
                obj['shopName'] = ApiClient.convertToType(data['shopName'], 'String');
            }
            if (data.hasOwnProperty('shopRating')) {
                obj['shopRating'] = ApiClient.convertToType(data['shopRating'], 'Number');
            }
            if (data.hasOwnProperty('inStock')) {
                obj['inStock'] = ApiClient.convertToType(data['inStock'], 'Number');
            }
        }
        return obj;
    }
}



export default ModelOfferDTO;

