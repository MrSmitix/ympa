/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GeneratePricesReportRequest model module.
 * @module model/GeneratePricesReportRequest
 * @version LATEST
 */
class GeneratePricesReportRequest {
    /**
     * Constructs a new <code>GeneratePricesReportRequest</code>.
     * Данные, необходимые для генерации отчета.
     * @alias module:model/GeneratePricesReportRequest
     */
    constructor() { 
        
        GeneratePricesReportRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GeneratePricesReportRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GeneratePricesReportRequest} obj Optional instance to populate.
     * @return {module:model/GeneratePricesReportRequest} The populated <code>GeneratePricesReportRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GeneratePricesReportRequest();

            if (data.hasOwnProperty('businessId')) {
                obj['businessId'] = ApiClient.convertToType(data['businessId'], 'Number');
            }
            if (data.hasOwnProperty('campaignId')) {
                obj['campaignId'] = ApiClient.convertToType(data['campaignId'], 'Number');
            }
            if (data.hasOwnProperty('categoryIds')) {
                obj['categoryIds'] = ApiClient.convertToType(data['categoryIds'], ['Number']);
            }
            if (data.hasOwnProperty('creationDateFrom')) {
                obj['creationDateFrom'] = ApiClient.convertToType(data['creationDateFrom'], 'Date');
            }
            if (data.hasOwnProperty('creationDateTo')) {
                obj['creationDateTo'] = ApiClient.convertToType(data['creationDateTo'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GeneratePricesReportRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GeneratePricesReportRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['categoryIds'])) {
            throw new Error("Expected the field `categoryIds` to be an array in the JSON data but got " + data['categoryIds']);
        }

        return true;
    }


}



/**
 * Идентификатор бизнеса.  В большинстве случаев обязателен. Не указывается, если задан `campaignId`. 
 * @member {Number} businessId
 */
GeneratePricesReportRequest.prototype['businessId'] = undefined;

/**
 * Идентификатор кампании.  Как правило, не используется. Передавайте только если в кабинете есть магазины с уникальными ценами и вы хотите получить отчет для них. В этом случае передавать `businessId` не нужно. 
 * @member {Number} campaignId
 */
GeneratePricesReportRequest.prototype['campaignId'] = undefined;

/**
 * Фильтр по категориям на Маркете.
 * @member {Array.<Number>} categoryIds
 */
GeneratePricesReportRequest.prototype['categoryIds'] = undefined;

/**
 * Фильтр по времени появления предложения — начало периода.  Формат даты: `ДД-ММ-ГГГГ`. 
 * @member {Date} creationDateFrom
 */
GeneratePricesReportRequest.prototype['creationDateFrom'] = undefined;

/**
 * Фильтр по времени появления предложения — окончание периода.  Формат даты: `ДД-ММ-ГГГГ`. 
 * @member {Date} creationDateTo
 */
GeneratePricesReportRequest.prototype['creationDateTo'] = undefined;






export default GeneratePricesReportRequest;

