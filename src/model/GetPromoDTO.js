/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChannelType from './ChannelType';
import GetPromoAssortmentInfoDTO from './GetPromoAssortmentInfoDTO';
import GetPromoBestsellerInfoDTO from './GetPromoBestsellerInfoDTO';
import GetPromoConstraintsDTO from './GetPromoConstraintsDTO';
import GetPromoMechanicsInfoDTO from './GetPromoMechanicsInfoDTO';
import PromoPeriodDTO from './PromoPeriodDTO';

/**
 * The GetPromoDTO model module.
 * @module model/GetPromoDTO
 * @version LATEST
 */
class GetPromoDTO {
    /**
     * @member {String} id
     * @type {String}
     */
    id;
    /**
     * @member {String} name
     * @type {String}
     */
    name;
    /**
     * @member {module:model/PromoPeriodDTO} period
     * @type {module:model/PromoPeriodDTO}
     */
    period;
    /**
     * @member {Boolean} participating
     * @type {Boolean}
     */
    participating;
    /**
     * @member {module:model/GetPromoAssortmentInfoDTO} assortmentInfo
     * @type {module:model/GetPromoAssortmentInfoDTO}
     */
    assortmentInfo;
    /**
     * @member {module:model/GetPromoMechanicsInfoDTO} mechanicsInfo
     * @type {module:model/GetPromoMechanicsInfoDTO}
     */
    mechanicsInfo;
    /**
     * @member {module:model/GetPromoBestsellerInfoDTO} bestsellerInfo
     * @type {module:model/GetPromoBestsellerInfoDTO}
     */
    bestsellerInfo;
    /**
     * @member {Array.<module:model/ChannelType>} channels
     * @type {Array.<module:model/ChannelType>}
     */
    channels;
    /**
     * @member {module:model/GetPromoConstraintsDTO} constraints
     * @type {module:model/GetPromoConstraintsDTO}
     */
    constraints;

    

    /**
     * Constructs a new <code>GetPromoDTO</code>.
     * Информация об акции.
     * @alias module:model/GetPromoDTO
     * @param id {String} Идентификатор акции.
     * @param name {String} Название акции.
     * @param period {module:model/PromoPeriodDTO} 
     * @param participating {Boolean} Участвует или участвовал ли продавец в этой акции.  Для текущих и будущих акций возвращается со значением `true`, если в акции есть товары, которые были добавлены вручную. Если товары не участвуют в акции или добавлены в нее автоматически, параметр возвращается со значением `false`.  Для прошедших акций всегда возвращается со значением `true`.  Об автоматическом и ручном добавлении товаров в акцию читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/index). 
     * @param assortmentInfo {module:model/GetPromoAssortmentInfoDTO} 
     * @param mechanicsInfo {module:model/GetPromoMechanicsInfoDTO} 
     * @param bestsellerInfo {module:model/GetPromoBestsellerInfoDTO} 
     */
    constructor(id, name, period, participating, assortmentInfo, mechanicsInfo, bestsellerInfo) { 
        
        GetPromoDTO.initialize(this, id, name, period, participating, assortmentInfo, mechanicsInfo, bestsellerInfo);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, name, period, participating, assortmentInfo, mechanicsInfo, bestsellerInfo) { 
        obj['id'] = id;
        obj['name'] = name;
        obj['period'] = period;
        obj['participating'] = participating;
        obj['assortmentInfo'] = assortmentInfo;
        obj['mechanicsInfo'] = mechanicsInfo;
        obj['bestsellerInfo'] = bestsellerInfo;
    }

    /**
     * Constructs a <code>GetPromoDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetPromoDTO} obj Optional instance to populate.
     * @return {module:model/GetPromoDTO} The populated <code>GetPromoDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetPromoDTO();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('period')) {
                obj['period'] = PromoPeriodDTO.constructFromObject(data['period']);
            }
            if (data.hasOwnProperty('participating')) {
                obj['participating'] = ApiClient.convertToType(data['participating'], 'Boolean');
            }
            if (data.hasOwnProperty('assortmentInfo')) {
                obj['assortmentInfo'] = GetPromoAssortmentInfoDTO.constructFromObject(data['assortmentInfo']);
            }
            if (data.hasOwnProperty('mechanicsInfo')) {
                obj['mechanicsInfo'] = GetPromoMechanicsInfoDTO.constructFromObject(data['mechanicsInfo']);
            }
            if (data.hasOwnProperty('bestsellerInfo')) {
                obj['bestsellerInfo'] = GetPromoBestsellerInfoDTO.constructFromObject(data['bestsellerInfo']);
            }
            if (data.hasOwnProperty('channels')) {
                obj['channels'] = ApiClient.convertToType(data['channels'], [ChannelType]);
            }
            if (data.hasOwnProperty('constraints')) {
                obj['constraints'] = GetPromoConstraintsDTO.constructFromObject(data['constraints']);
            }
        }
        return obj;
    }
}



export default GetPromoDTO;

