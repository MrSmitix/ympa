/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CurrencyType from './CurrencyType';
import PriceDTO from './PriceDTO';
import UpdateTimeDTO from './UpdateTimeDTO';

/**
 * The GetPriceWithVatDTO model module.
 * @module model/GetPriceWithVatDTO
 * @version LATEST
 */
class GetPriceWithVatDTO {
    /**
     * @member {Number} value
     * @type {Number}
     */
    value;
    /**
     * @member {Number} discountBase
     * @type {Number}
     */
    discountBase;
    /**
     * @member {module:model/CurrencyType} currencyId
     * @type {module:model/CurrencyType}
     */
    currencyId;
    /**
     * @member {Number} vat
     * @type {Number}
     */
    vat;
    /**
     * @member {Date} updatedAt
     * @type {Date}
     */
    updatedAt;

    /**
     * @member {Number} value
     * @type {Number}
     */
    #value;
    /**
     * @member {Number} discountBase
     * @type {Number}
     */
    #discountBase;
    /**
     * @member {module:model/CurrencyType} currencyId
     * @type {module:model/CurrencyType}
     */
    #currencyId;
    /**
     * @member {Number} vat
     * @type {Number}
     */
    #vat;
    /**
     * @member {Date} updatedAt
     * @type {Date}
     */
    #updatedAt;
    

    /**
     * Constructs a new <code>GetPriceWithVatDTO</code>.
     * Цена с указанием ставки НДС и времени последнего обновления.
     * @alias module:model/GetPriceWithVatDTO
     * @implements module:model/PriceDTO
     * @implements module:model/UpdateTimeDTO
     * @param updatedAt {Date} Время последнего обновления.
     */
    constructor(updatedAt) { 
        PriceDTO.initialize(this);UpdateTimeDTO.initialize(this, updatedAt);
        GetPriceWithVatDTO.initialize(this, updatedAt);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, updatedAt) { 
        obj['updatedAt'] = updatedAt;
    }

    /**
     * Constructs a <code>GetPriceWithVatDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetPriceWithVatDTO} obj Optional instance to populate.
     * @return {module:model/GetPriceWithVatDTO} The populated <code>GetPriceWithVatDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetPriceWithVatDTO();
            PriceDTO.constructFromObject(data, obj);
            UpdateTimeDTO.constructFromObject(data, obj);

            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Number');
            }
            if (data.hasOwnProperty('discountBase')) {
                obj['discountBase'] = ApiClient.convertToType(data['discountBase'], 'Number');
            }
            if (data.hasOwnProperty('currencyId')) {
                obj['currencyId'] = CurrencyType.constructFromObject(data['currencyId']);
            }
            if (data.hasOwnProperty('vat')) {
                obj['vat'] = ApiClient.convertToType(data['vat'], 'Number');
            }
            if (data.hasOwnProperty('updatedAt')) {
                obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'Date');
            }
        }
        return obj;
    }
}



export default GetPriceWithVatDTO;

