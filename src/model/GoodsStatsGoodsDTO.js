/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoodsStatsWarehouseDTO from './GoodsStatsWarehouseDTO';
import GoodsStatsWeightDimensionsDTO from './GoodsStatsWeightDimensionsDTO';
import TariffDTO from './TariffDTO';

/**
 * The GoodsStatsGoodsDTO model module.
 * @module model/GoodsStatsGoodsDTO
 * @version LATEST
 */
class GoodsStatsGoodsDTO {
    /**
     * @member {String} shopSku
     * @type {String}
     */
    shopSku;
    /**
     * @member {Number} marketSku
     * @type {Number}
     */
    marketSku;
    /**
     * @member {String} name
     * @type {String}
     */
    name;
    /**
     * @member {Number} price
     * @type {Number}
     */
    price;
    /**
     * @member {Number} categoryId
     * @type {Number}
     */
    categoryId;
    /**
     * @member {String} categoryName
     * @type {String}
     */
    categoryName;
    /**
     * @member {module:model/GoodsStatsWeightDimensionsDTO} weightDimensions
     * @type {module:model/GoodsStatsWeightDimensionsDTO}
     */
    weightDimensions;
    /**
     * @member {Array.<module:model/GoodsStatsWarehouseDTO>} warehouses
     * @type {Array.<module:model/GoodsStatsWarehouseDTO>}
     */
    warehouses;
    /**
     * @member {Array.<module:model/TariffDTO>} tariffs
     * @type {Array.<module:model/TariffDTO>}
     */
    tariffs;
    /**
     * @member {Array.<String>} pictures
     * @type {Array.<String>}
     */
    pictures;

    

    /**
     * Constructs a new <code>GoodsStatsGoodsDTO</code>.
     * Информация о товаре.
     * @alias module:model/GoodsStatsGoodsDTO
     */
    constructor() { 
        
        GoodsStatsGoodsDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoodsStatsGoodsDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoodsStatsGoodsDTO} obj Optional instance to populate.
     * @return {module:model/GoodsStatsGoodsDTO} The populated <code>GoodsStatsGoodsDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoodsStatsGoodsDTO();

            if (data.hasOwnProperty('shopSku')) {
                obj['shopSku'] = ApiClient.convertToType(data['shopSku'], 'String');
            }
            if (data.hasOwnProperty('marketSku')) {
                obj['marketSku'] = ApiClient.convertToType(data['marketSku'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
            if (data.hasOwnProperty('categoryId')) {
                obj['categoryId'] = ApiClient.convertToType(data['categoryId'], 'Number');
            }
            if (data.hasOwnProperty('categoryName')) {
                obj['categoryName'] = ApiClient.convertToType(data['categoryName'], 'String');
            }
            if (data.hasOwnProperty('weightDimensions')) {
                obj['weightDimensions'] = GoodsStatsWeightDimensionsDTO.constructFromObject(data['weightDimensions']);
            }
            if (data.hasOwnProperty('warehouses')) {
                obj['warehouses'] = ApiClient.convertToType(data['warehouses'], [GoodsStatsWarehouseDTO]);
            }
            if (data.hasOwnProperty('tariffs')) {
                obj['tariffs'] = ApiClient.convertToType(data['tariffs'], [TariffDTO]);
            }
            if (data.hasOwnProperty('pictures')) {
                obj['pictures'] = ApiClient.convertToType(data['pictures'], ['String']);
            }
        }
        return obj;
    }
}



export default GoodsStatsGoodsDTO;

