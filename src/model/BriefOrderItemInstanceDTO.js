/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BriefOrderItemInstanceDTO model module.
 * @module model/BriefOrderItemInstanceDTO
 * @version LATEST
 */
class BriefOrderItemInstanceDTO {
    /**
     * @member {String} cis
     * @type {String}
     */
    cis;
    /**
     * @member {String} uin
     * @type {String}
     */
    uin;
    /**
     * @member {String} rnpt
     * @type {String}
     */
    rnpt;
    /**
     * @member {String} gtd
     * @type {String}
     */
    gtd;

    

    /**
     * Constructs a new <code>BriefOrderItemInstanceDTO</code>.
     * Идентификатор единицы товара.  Заполните только одно поле в зависимости от того, в какой системе маркирован товар.  Подробно о работе с маркируемыми товарами рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/cz.html). 
     * @alias module:model/BriefOrderItemInstanceDTO
     */
    constructor() { 
        
        BriefOrderItemInstanceDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BriefOrderItemInstanceDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BriefOrderItemInstanceDTO} obj Optional instance to populate.
     * @return {module:model/BriefOrderItemInstanceDTO} The populated <code>BriefOrderItemInstanceDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BriefOrderItemInstanceDTO();

            if (data.hasOwnProperty('cis')) {
                obj['cis'] = ApiClient.convertToType(data['cis'], 'String');
            }
            if (data.hasOwnProperty('uin')) {
                obj['uin'] = ApiClient.convertToType(data['uin'], 'String');
            }
            if (data.hasOwnProperty('rnpt')) {
                obj['rnpt'] = ApiClient.convertToType(data['rnpt'], 'String');
            }
            if (data.hasOwnProperty('gtd')) {
                obj['gtd'] = ApiClient.convertToType(data['gtd'], 'String');
            }
        }
        return obj;
    }
}



export default BriefOrderItemInstanceDTO;

