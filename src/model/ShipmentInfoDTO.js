/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BaseShipmentDTO from './BaseShipmentDTO';
import DeliveryServiceDTO from './DeliveryServiceDTO';
import PalletsCountDTO from './PalletsCountDTO';
import PartnerShipmentWarehouseDTO from './PartnerShipmentWarehouseDTO';
import ShipmentStatusType from './ShipmentStatusType';
import ShipmentType from './ShipmentType';

/**
 * The ShipmentInfoDTO model module.
 * @module model/ShipmentInfoDTO
 * @version LATEST
 */
class ShipmentInfoDTO {
    /**
     * @member {Number} id
     * @type {Number}
     */
    id;
    /**
     * @member {Date} planIntervalFrom
     * @type {Date}
     */
    planIntervalFrom;
    /**
     * @member {Date} planIntervalTo
     * @type {Date}
     */
    planIntervalTo;
    /**
     * @member {module:model/ShipmentType} shipmentType
     * @type {module:model/ShipmentType}
     */
    shipmentType;
    /**
     * @member {module:model/PartnerShipmentWarehouseDTO} warehouse
     * @type {module:model/PartnerShipmentWarehouseDTO}
     */
    warehouse;
    /**
     * @member {module:model/PartnerShipmentWarehouseDTO} warehouseTo
     * @type {module:model/PartnerShipmentWarehouseDTO}
     */
    warehouseTo;
    /**
     * @member {String} externalId
     * @type {String}
     */
    externalId;
    /**
     * @member {module:model/DeliveryServiceDTO} deliveryService
     * @type {module:model/DeliveryServiceDTO}
     */
    deliveryService;
    /**
     * @member {module:model/PalletsCountDTO} palletsCount
     * @type {module:model/PalletsCountDTO}
     */
    palletsCount;
    /**
     * @member {Array.<Number>} orderIds
     * @type {Array.<Number>}
     */
    orderIds;
    /**
     * @member {Number} draftCount
     * @type {Number}
     */
    draftCount;
    /**
     * @member {Number} plannedCount
     * @type {Number}
     */
    plannedCount;
    /**
     * @member {Number} factCount
     * @type {Number}
     */
    factCount;
    /**
     * @member {module:model/ShipmentStatusType} status
     * @type {module:model/ShipmentStatusType}
     */
    status;
    /**
     * @member {String} statusDescription
     * @type {String}
     */
    statusDescription;
    /**
     * @member {Date} statusUpdateTime
     * @type {Date}
     */
    statusUpdateTime;

    /**
     * @member {Number} id
     * @type {Number}
     */
    #id;
    /**
     * @member {Date} planIntervalFrom
     * @type {Date}
     */
    #planIntervalFrom;
    /**
     * @member {Date} planIntervalTo
     * @type {Date}
     */
    #planIntervalTo;
    /**
     * @member {module:model/ShipmentType} shipmentType
     * @type {module:model/ShipmentType}
     */
    #shipmentType;
    /**
     * @member {module:model/PartnerShipmentWarehouseDTO} warehouse
     * @type {module:model/PartnerShipmentWarehouseDTO}
     */
    #warehouse;
    /**
     * @member {module:model/PartnerShipmentWarehouseDTO} warehouseTo
     * @type {module:model/PartnerShipmentWarehouseDTO}
     */
    #warehouseTo;
    /**
     * @member {String} externalId
     * @type {String}
     */
    #externalId;
    /**
     * @member {module:model/DeliveryServiceDTO} deliveryService
     * @type {module:model/DeliveryServiceDTO}
     */
    #deliveryService;
    /**
     * @member {module:model/PalletsCountDTO} palletsCount
     * @type {module:model/PalletsCountDTO}
     */
    #palletsCount;
    /**
     * @member {Array.<Number>} orderIds
     * @type {Array.<Number>}
     */
    #orderIds;
    /**
     * @member {Number} draftCount
     * @type {Number}
     */
    #draftCount;
    /**
     * @member {Number} plannedCount
     * @type {Number}
     */
    #plannedCount;
    /**
     * @member {Number} factCount
     * @type {Number}
     */
    #factCount;
    

    /**
     * Constructs a new <code>ShipmentInfoDTO</code>.
     * Список с информацией об отгрузках.
     * @alias module:model/ShipmentInfoDTO
     * @implements module:model/BaseShipmentDTO
     * @param orderIds {Array.<Number>} Идентификаторы заказов в отгрузке.
     */
    constructor(orderIds) { 
        BaseShipmentDTO.initialize(this, orderIds);
        ShipmentInfoDTO.initialize(this, orderIds);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, orderIds) { 
        obj['orderIds'] = orderIds;
    }

    /**
     * Constructs a <code>ShipmentInfoDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ShipmentInfoDTO} obj Optional instance to populate.
     * @return {module:model/ShipmentInfoDTO} The populated <code>ShipmentInfoDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ShipmentInfoDTO();
            BaseShipmentDTO.constructFromObject(data, obj);

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('planIntervalFrom')) {
                obj['planIntervalFrom'] = ApiClient.convertToType(data['planIntervalFrom'], 'Date');
            }
            if (data.hasOwnProperty('planIntervalTo')) {
                obj['planIntervalTo'] = ApiClient.convertToType(data['planIntervalTo'], 'Date');
            }
            if (data.hasOwnProperty('shipmentType')) {
                obj['shipmentType'] = ShipmentType.constructFromObject(data['shipmentType']);
            }
            if (data.hasOwnProperty('warehouse')) {
                obj['warehouse'] = PartnerShipmentWarehouseDTO.constructFromObject(data['warehouse']);
            }
            if (data.hasOwnProperty('warehouseTo')) {
                obj['warehouseTo'] = PartnerShipmentWarehouseDTO.constructFromObject(data['warehouseTo']);
            }
            if (data.hasOwnProperty('externalId')) {
                obj['externalId'] = ApiClient.convertToType(data['externalId'], 'String');
            }
            if (data.hasOwnProperty('deliveryService')) {
                obj['deliveryService'] = DeliveryServiceDTO.constructFromObject(data['deliveryService']);
            }
            if (data.hasOwnProperty('palletsCount')) {
                obj['palletsCount'] = PalletsCountDTO.constructFromObject(data['palletsCount']);
            }
            if (data.hasOwnProperty('orderIds')) {
                obj['orderIds'] = ApiClient.convertToType(data['orderIds'], ['Number']);
            }
            if (data.hasOwnProperty('draftCount')) {
                obj['draftCount'] = ApiClient.convertToType(data['draftCount'], 'Number');
            }
            if (data.hasOwnProperty('plannedCount')) {
                obj['plannedCount'] = ApiClient.convertToType(data['plannedCount'], 'Number');
            }
            if (data.hasOwnProperty('factCount')) {
                obj['factCount'] = ApiClient.convertToType(data['factCount'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ShipmentStatusType.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('statusDescription')) {
                obj['statusDescription'] = ApiClient.convertToType(data['statusDescription'], 'String');
            }
            if (data.hasOwnProperty('statusUpdateTime')) {
                obj['statusUpdateTime'] = ApiClient.convertToType(data['statusUpdateTime'], 'Date');
            }
        }
        return obj;
    }
}



export default ShipmentInfoDTO;

