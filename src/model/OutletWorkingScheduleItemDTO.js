/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DayOfWeekType from './DayOfWeekType';

/**
 * The OutletWorkingScheduleItemDTO model module.
 * @module model/OutletWorkingScheduleItemDTO
 * @version LATEST
 */
class OutletWorkingScheduleItemDTO {
    /**
     * @member {module:model/DayOfWeekType} startDay
     * @type {module:model/DayOfWeekType}
     */
    startDay;
    /**
     * @member {module:model/DayOfWeekType} endDay
     * @type {module:model/DayOfWeekType}
     */
    endDay;
    /**
     * @member {String} startTime
     * @type {String}
     */
    startTime;
    /**
     * @member {String} endTime
     * @type {String}
     */
    endTime;

    

    /**
     * Constructs a new <code>OutletWorkingScheduleItemDTO</code>.
     * Расписание работы точки продаж.
     * @alias module:model/OutletWorkingScheduleItemDTO
     * @param startDay {module:model/DayOfWeekType} 
     * @param endDay {module:model/DayOfWeekType} 
     * @param startTime {String} Точка продаж работает c указанного часа.  Формат: `ЧЧ:ММ`. 
     * @param endTime {String} Точка продаж работает до указанного часа.  Формат: `ЧЧ:ММ`. 
     */
    constructor(startDay, endDay, startTime, endTime) { 
        
        OutletWorkingScheduleItemDTO.initialize(this, startDay, endDay, startTime, endTime);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, startDay, endDay, startTime, endTime) { 
        obj['startDay'] = startDay;
        obj['endDay'] = endDay;
        obj['startTime'] = startTime;
        obj['endTime'] = endTime;
    }

    /**
     * Constructs a <code>OutletWorkingScheduleItemDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OutletWorkingScheduleItemDTO} obj Optional instance to populate.
     * @return {module:model/OutletWorkingScheduleItemDTO} The populated <code>OutletWorkingScheduleItemDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OutletWorkingScheduleItemDTO();

            if (data.hasOwnProperty('startDay')) {
                obj['startDay'] = DayOfWeekType.constructFromObject(data['startDay']);
            }
            if (data.hasOwnProperty('endDay')) {
                obj['endDay'] = DayOfWeekType.constructFromObject(data['endDay']);
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'String');
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'String');
            }
        }
        return obj;
    }
}



export default OutletWorkingScheduleItemDTO;

