/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FulfillmentWarehouseDTO from './FulfillmentWarehouseDTO';

/**
 * The FulfillmentWarehousesDTO model module.
 * @module model/FulfillmentWarehousesDTO
 * @version LATEST
 */
class FulfillmentWarehousesDTO {
    /**
     * Constructs a new <code>FulfillmentWarehousesDTO</code>.
     * Список складов Маркета (FBY).
     * @alias module:model/FulfillmentWarehousesDTO
     * @param warehouses {Array.<module:model/FulfillmentWarehouseDTO>} Список складов Маркета (FBY).
     */
    constructor(warehouses) { 
        
        FulfillmentWarehousesDTO.initialize(this, warehouses);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, warehouses) { 
        obj['warehouses'] = warehouses;
    }

    /**
     * Constructs a <code>FulfillmentWarehousesDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FulfillmentWarehousesDTO} obj Optional instance to populate.
     * @return {module:model/FulfillmentWarehousesDTO} The populated <code>FulfillmentWarehousesDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FulfillmentWarehousesDTO();

            if (data.hasOwnProperty('warehouses')) {
                obj['warehouses'] = ApiClient.convertToType(data['warehouses'], [FulfillmentWarehouseDTO]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FulfillmentWarehousesDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FulfillmentWarehousesDTO</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FulfillmentWarehousesDTO.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['warehouses']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['warehouses'])) {
                throw new Error("Expected the field `warehouses` to be an array in the JSON data but got " + data['warehouses']);
            }
            // validate the optional field `warehouses` (array)
            for (const item of data['warehouses']) {
                FulfillmentWarehouseDTO.validateJSON(item);
            };
        }

        return true;
    }


}

FulfillmentWarehousesDTO.RequiredProperties = ["warehouses"];

/**
 * Список складов Маркета (FBY).
 * @member {Array.<module:model/FulfillmentWarehouseDTO>} warehouses
 */
FulfillmentWarehousesDTO.prototype['warehouses'] = undefined;






export default FulfillmentWarehousesDTO;

