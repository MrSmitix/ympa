/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OrdersStatsDetailsDTO from './OrdersStatsDetailsDTO';
import OrdersStatsPriceDTO from './OrdersStatsPriceDTO';
import OrdersStatsWarehouseDTO from './OrdersStatsWarehouseDTO';

/**
 * The OrdersStatsItemDTO model module.
 * @module model/OrdersStatsItemDTO
 * @version LATEST
 */
class OrdersStatsItemDTO {
    /**
     * @member {String} offerName
     * @type {String}
     */
    offerName;
    /**
     * @member {Number} marketSku
     * @type {Number}
     */
    marketSku;
    /**
     * @member {String} shopSku
     * @type {String}
     */
    shopSku;
    /**
     * @member {Number} count
     * @type {Number}
     */
    count;
    /**
     * @member {Array.<module:model/OrdersStatsPriceDTO>} prices
     * @type {Array.<module:model/OrdersStatsPriceDTO>}
     */
    prices;
    /**
     * @member {module:model/OrdersStatsWarehouseDTO} warehouse
     * @type {module:model/OrdersStatsWarehouseDTO}
     */
    warehouse;
    /**
     * @member {Array.<module:model/OrdersStatsDetailsDTO>} details
     * @type {Array.<module:model/OrdersStatsDetailsDTO>}
     */
    details;
    /**
     * @member {Array.<String>} cisList
     * @type {Array.<String>}
     */
    cisList;
    /**
     * @member {Number} initialCount
     * @type {Number}
     */
    initialCount;
    /**
     * @member {Number} bidFee
     * @type {Number}
     */
    bidFee;
    /**
     * @member {Number} cofinanceThreshold
     * @type {Number}
     */
    cofinanceThreshold;
    /**
     * @member {Number} cofinanceValue
     * @type {Number}
     */
    cofinanceValue;

    

    /**
     * Constructs a new <code>OrdersStatsItemDTO</code>.
     * Список товаров в заказе после возможных изменений.  В ходе обработки заказа Маркет может удалить из него единицы товаров — при проблемах на складе или по инициативе пользователя.  * Если из заказа удалены все единицы товара, его не будет в списке &#x60;items&#x60; — только в списке &#x60;initialItems&#x60;.  * Если в заказе осталась хотя бы одна единица товара, он будет и в списке &#x60;items&#x60; (с уменьшенным количеством единиц &#x60;count&#x60;), и в списке &#x60;initialItems&#x60; (с первоначальным количеством единиц &#x60;initialCount&#x60;). 
     * @alias module:model/OrdersStatsItemDTO
     */
    constructor() { 
        
        OrdersStatsItemDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrdersStatsItemDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrdersStatsItemDTO} obj Optional instance to populate.
     * @return {module:model/OrdersStatsItemDTO} The populated <code>OrdersStatsItemDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrdersStatsItemDTO();

            if (data.hasOwnProperty('offerName')) {
                obj['offerName'] = ApiClient.convertToType(data['offerName'], 'String');
            }
            if (data.hasOwnProperty('marketSku')) {
                obj['marketSku'] = ApiClient.convertToType(data['marketSku'], 'Number');
            }
            if (data.hasOwnProperty('shopSku')) {
                obj['shopSku'] = ApiClient.convertToType(data['shopSku'], 'String');
            }
            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
            if (data.hasOwnProperty('prices')) {
                obj['prices'] = ApiClient.convertToType(data['prices'], [OrdersStatsPriceDTO]);
            }
            if (data.hasOwnProperty('warehouse')) {
                obj['warehouse'] = OrdersStatsWarehouseDTO.constructFromObject(data['warehouse']);
            }
            if (data.hasOwnProperty('details')) {
                obj['details'] = ApiClient.convertToType(data['details'], [OrdersStatsDetailsDTO]);
            }
            if (data.hasOwnProperty('cisList')) {
                obj['cisList'] = ApiClient.convertToType(data['cisList'], ['String']);
            }
            if (data.hasOwnProperty('initialCount')) {
                obj['initialCount'] = ApiClient.convertToType(data['initialCount'], 'Number');
            }
            if (data.hasOwnProperty('bidFee')) {
                obj['bidFee'] = ApiClient.convertToType(data['bidFee'], 'Number');
            }
            if (data.hasOwnProperty('cofinanceThreshold')) {
                obj['cofinanceThreshold'] = ApiClient.convertToType(data['cofinanceThreshold'], 'Number');
            }
            if (data.hasOwnProperty('cofinanceValue')) {
                obj['cofinanceValue'] = ApiClient.convertToType(data['cofinanceValue'], 'Number');
            }
        }
        return obj;
    }
}



export default OrdersStatsItemDTO;

