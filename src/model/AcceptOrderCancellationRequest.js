/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OrderCancellationReasonType from './OrderCancellationReasonType';

/**
 * The AcceptOrderCancellationRequest model module.
 * @module model/AcceptOrderCancellationRequest
 * @version LATEST
 */
class AcceptOrderCancellationRequest {
    /**
     * Constructs a new <code>AcceptOrderCancellationRequest</code>.
     * @alias module:model/AcceptOrderCancellationRequest
     * @param accepted {Boolean} Решение об отмене заказа:  * `true` — заказ отменяется, служба доставки узнала об отмене до передачи заказа покупателю. * `false` — заказ не отменяется, так как он уже доставлен покупателю курьером или передан в пункт выдачи заказов. 
     */
    constructor(accepted) { 
        
        AcceptOrderCancellationRequest.initialize(this, accepted);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accepted) { 
        obj['accepted'] = accepted;
    }

    /**
     * Constructs a <code>AcceptOrderCancellationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AcceptOrderCancellationRequest} obj Optional instance to populate.
     * @return {module:model/AcceptOrderCancellationRequest} The populated <code>AcceptOrderCancellationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AcceptOrderCancellationRequest();

            if (data.hasOwnProperty('accepted')) {
                obj['accepted'] = ApiClient.convertToType(data['accepted'], 'Boolean');
            }
            if (data.hasOwnProperty('reason')) {
                obj['reason'] = OrderCancellationReasonType.constructFromObject(data['reason']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AcceptOrderCancellationRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AcceptOrderCancellationRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AcceptOrderCancellationRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

AcceptOrderCancellationRequest.RequiredProperties = ["accepted"];

/**
 * Решение об отмене заказа:  * `true` — заказ отменяется, служба доставки узнала об отмене до передачи заказа покупателю. * `false` — заказ не отменяется, так как он уже доставлен покупателю курьером или передан в пункт выдачи заказов. 
 * @member {Boolean} accepted
 */
AcceptOrderCancellationRequest.prototype['accepted'] = undefined;

/**
 * @member {module:model/OrderCancellationReasonType} reason
 */
AcceptOrderCancellationRequest.prototype['reason'] = undefined;






export default AcceptOrderCancellationRequest;

