/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LicenseCheckStatusType from './LicenseCheckStatusType';
import LicenseType from './LicenseType';
import OutletLicenseDTO from './OutletLicenseDTO';

/**
 * The FullOutletLicenseDTO model module.
 * @module model/FullOutletLicenseDTO
 * @version LATEST
 */
class FullOutletLicenseDTO {
    /**
     * @member {Number} id
     * @type {Number}
     */
    id;
    /**
     * @member {Number} outletId
     * @type {Number}
     */
    outletId;
    /**
     * @member {module:model/LicenseType} licenseType
     * @type {module:model/LicenseType}
     */
    licenseType;
    /**
     * @member {String} number
     * @type {String}
     */
    number;
    /**
     * @member {Date} dateOfIssue
     * @type {Date}
     */
    dateOfIssue;
    /**
     * @member {Date} dateOfExpiry
     * @type {Date}
     */
    dateOfExpiry;
    /**
     * @member {module:model/LicenseCheckStatusType} checkStatus
     * @type {module:model/LicenseCheckStatusType}
     */
    checkStatus;
    /**
     * @member {String} checkComment
     * @type {String}
     */
    checkComment;

    /**
     * @member {Number} id
     * @type {Number}
     */
    #id;
    /**
     * @member {Number} outletId
     * @type {Number}
     */
    #outletId;
    /**
     * @member {module:model/LicenseType} licenseType
     * @type {module:model/LicenseType}
     */
    #licenseType;
    /**
     * @member {String} number
     * @type {String}
     */
    #number;
    /**
     * @member {Date} dateOfIssue
     * @type {Date}
     */
    #dateOfIssue;
    /**
     * @member {Date} dateOfExpiry
     * @type {Date}
     */
    #dateOfExpiry;
    

    /**
     * Constructs a new <code>FullOutletLicenseDTO</code>.
     * Информация о лицензии.
     * @alias module:model/FullOutletLicenseDTO
     * @implements module:model/OutletLicenseDTO
     */
    constructor() { 
        OutletLicenseDTO.initialize(this);
        FullOutletLicenseDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FullOutletLicenseDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FullOutletLicenseDTO} obj Optional instance to populate.
     * @return {module:model/FullOutletLicenseDTO} The populated <code>FullOutletLicenseDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FullOutletLicenseDTO();
            OutletLicenseDTO.constructFromObject(data, obj);

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('outletId')) {
                obj['outletId'] = ApiClient.convertToType(data['outletId'], 'Number');
            }
            if (data.hasOwnProperty('licenseType')) {
                obj['licenseType'] = LicenseType.constructFromObject(data['licenseType']);
            }
            if (data.hasOwnProperty('number')) {
                obj['number'] = ApiClient.convertToType(data['number'], 'String');
            }
            if (data.hasOwnProperty('dateOfIssue')) {
                obj['dateOfIssue'] = ApiClient.convertToType(data['dateOfIssue'], 'Date');
            }
            if (data.hasOwnProperty('dateOfExpiry')) {
                obj['dateOfExpiry'] = ApiClient.convertToType(data['dateOfExpiry'], 'Date');
            }
            if (data.hasOwnProperty('checkStatus')) {
                obj['checkStatus'] = LicenseCheckStatusType.constructFromObject(data['checkStatus']);
            }
            if (data.hasOwnProperty('checkComment')) {
                obj['checkComment'] = ApiClient.convertToType(data['checkComment'], 'String');
            }
        }
        return obj;
    }
}



export default FullOutletLicenseDTO;

