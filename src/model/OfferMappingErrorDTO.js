/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OfferMappingErrorType from './OfferMappingErrorType';

/**
 * The OfferMappingErrorDTO model module.
 * @module model/OfferMappingErrorDTO
 * @version LATEST
 */
class OfferMappingErrorDTO {
    /**
     * @member {module:model/OfferMappingErrorType} type
     * @type {module:model/OfferMappingErrorType}
     */
    type;
    /**
     * @member {Number} parameterId
     * @type {Number}
     */
    parameterId;
    /**
     * @member {String} message
     * @type {String}
     */
    message;

    

    /**
     * Constructs a new <code>OfferMappingErrorDTO</code>.
     * Текст ошибки.
     * @alias module:model/OfferMappingErrorDTO
     * @param type {module:model/OfferMappingErrorType} 
     * @param message {String} Текст ошибки.
     */
    constructor(type, message) { 
        
        OfferMappingErrorDTO.initialize(this, type, message);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type, message) { 
        obj['type'] = type;
        obj['message'] = message;
    }

    /**
     * Constructs a <code>OfferMappingErrorDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OfferMappingErrorDTO} obj Optional instance to populate.
     * @return {module:model/OfferMappingErrorDTO} The populated <code>OfferMappingErrorDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OfferMappingErrorDTO();

            if (data.hasOwnProperty('type')) {
                obj['type'] = OfferMappingErrorType.constructFromObject(data['type']);
            }
            if (data.hasOwnProperty('parameterId')) {
                obj['parameterId'] = ApiClient.convertToType(data['parameterId'], 'Number');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
        }
        return obj;
    }
}



export default OfferMappingErrorDTO;

