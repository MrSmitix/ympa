/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CampaignSettingsLocalRegionDTO from './CampaignSettingsLocalRegionDTO';

/**
 * The CampaignSettingsDTO model module.
 * @module model/CampaignSettingsDTO
 * @version LATEST
 */
class CampaignSettingsDTO {
    /**
     * Constructs a new <code>CampaignSettingsDTO</code>.
     * Настройки магазина.
     * @alias module:model/CampaignSettingsDTO
     */
    constructor() { 
        
        CampaignSettingsDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CampaignSettingsDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CampaignSettingsDTO} obj Optional instance to populate.
     * @return {module:model/CampaignSettingsDTO} The populated <code>CampaignSettingsDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CampaignSettingsDTO();

            if (data.hasOwnProperty('countryRegion')) {
                obj['countryRegion'] = ApiClient.convertToType(data['countryRegion'], 'Number');
            }
            if (data.hasOwnProperty('shopName')) {
                obj['shopName'] = ApiClient.convertToType(data['shopName'], 'String');
            }
            if (data.hasOwnProperty('showInContext')) {
                obj['showInContext'] = ApiClient.convertToType(data['showInContext'], 'Boolean');
            }
            if (data.hasOwnProperty('showInPremium')) {
                obj['showInPremium'] = ApiClient.convertToType(data['showInPremium'], 'Boolean');
            }
            if (data.hasOwnProperty('useOpenStat')) {
                obj['useOpenStat'] = ApiClient.convertToType(data['useOpenStat'], 'Boolean');
            }
            if (data.hasOwnProperty('localRegion')) {
                obj['localRegion'] = CampaignSettingsLocalRegionDTO.constructFromObject(data['localRegion']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CampaignSettingsDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CampaignSettingsDTO</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['shopName'] && !(typeof data['shopName'] === 'string' || data['shopName'] instanceof String)) {
            throw new Error("Expected the field `shopName` to be a primitive type in the JSON string but got " + data['shopName']);
        }
        // validate the optional field `localRegion`
        if (data['localRegion']) { // data not null
          CampaignSettingsLocalRegionDTO.validateJSON(data['localRegion']);
        }

        return true;
    }


}



/**
 * Идентификатор региона, в котором находится магазин.
 * @member {Number} countryRegion
 */
CampaignSettingsDTO.prototype['countryRegion'] = undefined;

/**
 * Наименование магазина на Яндекс Маркете. Если наименование отсутствует, значение параметра выводится — `null`. 
 * @member {String} shopName
 */
CampaignSettingsDTO.prototype['shopName'] = undefined;

/**
 * Признак размещения магазина на сайтах партнеров Яндекс Дистрибуции. Возможные значения: * `false` — магазин не размещен на сайтах партнеров Яндекс Дистрибуции. * `true` — магазин размещен на сайтах партнеров Яндекс Дистрибуции. 
 * @member {Boolean} showInContext
 */
CampaignSettingsDTO.prototype['showInContext'] = undefined;

/**
 * Признак показа предложений магазина в рекламном блоке над результатами поиска (cпецразмещение). Возможные значения: * `false` — предложения не показываются в блоке cпецразмещения. * `true` — предложения показываются в блоке cпецразмещения. 
 * @member {Boolean} showInPremium
 */
CampaignSettingsDTO.prototype['showInPremium'] = undefined;

/**
 * Признак использования внешней интернет-статистики. Возможные значения: * `false` — внешняя интернет-статистика не используется. * `true` — внешняя интернет-статистика используется. 
 * @member {Boolean} useOpenStat
 */
CampaignSettingsDTO.prototype['useOpenStat'] = undefined;

/**
 * @member {module:model/CampaignSettingsLocalRegionDTO} localRegion
 */
CampaignSettingsDTO.prototype['localRegion'] = undefined;






export default CampaignSettingsDTO;

