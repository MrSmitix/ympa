/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OrderStatusType from './OrderStatusType';
import OrderSubstatusType from './OrderSubstatusType';
import OrderUpdateStatusType from './OrderUpdateStatusType';

/**
 * The UpdateOrderStatusDTO model module.
 * @module model/UpdateOrderStatusDTO
 * @version LATEST
 */
class UpdateOrderStatusDTO {
    /**
     * Constructs a new <code>UpdateOrderStatusDTO</code>.
     * Список заказов.
     * @alias module:model/UpdateOrderStatusDTO
     */
    constructor() { 
        
        UpdateOrderStatusDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateOrderStatusDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateOrderStatusDTO} obj Optional instance to populate.
     * @return {module:model/UpdateOrderStatusDTO} The populated <code>UpdateOrderStatusDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateOrderStatusDTO();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = OrderStatusType.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('substatus')) {
                obj['substatus'] = OrderSubstatusType.constructFromObject(data['substatus']);
            }
            if (data.hasOwnProperty('updateStatus')) {
                obj['updateStatus'] = OrderUpdateStatusType.constructFromObject(data['updateStatus']);
            }
            if (data.hasOwnProperty('errorDetails')) {
                obj['errorDetails'] = ApiClient.convertToType(data['errorDetails'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateOrderStatusDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateOrderStatusDTO</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['errorDetails'] && !(typeof data['errorDetails'] === 'string' || data['errorDetails'] instanceof String)) {
            throw new Error("Expected the field `errorDetails` to be a primitive type in the JSON string but got " + data['errorDetails']);
        }

        return true;
    }


}



/**
 * Идентификатор заказа.
 * @member {Number} id
 */
UpdateOrderStatusDTO.prototype['id'] = undefined;

/**
 * @member {module:model/OrderStatusType} status
 */
UpdateOrderStatusDTO.prototype['status'] = undefined;

/**
 * @member {module:model/OrderSubstatusType} substatus
 */
UpdateOrderStatusDTO.prototype['substatus'] = undefined;

/**
 * @member {module:model/OrderUpdateStatusType} updateStatus
 */
UpdateOrderStatusDTO.prototype['updateStatus'] = undefined;

/**
 * Ошибка при изменении статуса заказа. Содержит описание ошибки и идентификатор заказа.  Возвращается, если параметр `updateStatus` принимает значение `ERROR`. 
 * @member {String} errorDetails
 */
UpdateOrderStatusDTO.prototype['errorDetails'] = undefined;






export default UpdateOrderStatusDTO;

