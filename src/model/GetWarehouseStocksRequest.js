/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetWarehouseStocksRequest model module.
 * @module model/GetWarehouseStocksRequest
 * @version LATEST
 */
class GetWarehouseStocksRequest {
    /**
     * Constructs a new <code>GetWarehouseStocksRequest</code>.
     * Фильтры для запроса остатков. 
     * @alias module:model/GetWarehouseStocksRequest
     */
    constructor() { 
        
        GetWarehouseStocksRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetWarehouseStocksRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetWarehouseStocksRequest} obj Optional instance to populate.
     * @return {module:model/GetWarehouseStocksRequest} The populated <code>GetWarehouseStocksRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetWarehouseStocksRequest();

            if (data.hasOwnProperty('withTurnover')) {
                obj['withTurnover'] = ApiClient.convertToType(data['withTurnover'], 'Boolean');
            }
            if (data.hasOwnProperty('archived')) {
                obj['archived'] = ApiClient.convertToType(data['archived'], 'Boolean');
            }
            if (data.hasOwnProperty('offerIds')) {
                obj['offerIds'] = ApiClient.convertToType(data['offerIds'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetWarehouseStocksRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetWarehouseStocksRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['offerIds'])) {
            throw new Error("Expected the field `offerIds` to be an array in the JSON data but got " + data['offerIds']);
        }

        return true;
    }


}



/**
 * **Только для модели FBY**  Возвращать ли информацию по оборачиваемости.  Значение по умолчанию — `false`. Если информация нужна, передайте значение `true`. 
 * @member {Boolean} withTurnover
 * @default false
 */
GetWarehouseStocksRequest.prototype['withTurnover'] = false;

/**
 * Фильтр по нахождению в архиве.  Передайте `true`, чтобы получить информацию об остатках товаров, которые находятся в архиве. Если фильтр не заполнен или передано `false`, в ответе возвращается информация о товарах, которые не находятся в архиве. 
 * @member {Boolean} archived
 */
GetWarehouseStocksRequest.prototype['archived'] = undefined;

/**
 * Фильтр по вашим SKU товаров.  Возвращается информация об остатках всех переданных SKU, включая товары в архиве.  {% note warning \"Такой список возвращается только целиком\" %}  Если вы запрашиваете информацию по конкретным SKU, не заполняйте:  * `page_token` * `limit` * `archived`  {% endnote %}    
 * @member {Array.<String>} offerIds
 */
GetWarehouseStocksRequest.prototype['offerIds'] = undefined;






export default GetWarehouseStocksRequest;

