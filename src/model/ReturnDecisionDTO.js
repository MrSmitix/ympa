/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ReturnDecisionReasonType from './ReturnDecisionReasonType';
import ReturnDecisionSubreasonType from './ReturnDecisionSubreasonType';
import ReturnDecisionType from './ReturnDecisionType';

/**
 * The ReturnDecisionDTO model module.
 * @module model/ReturnDecisionDTO
 * @version LATEST
 */
class ReturnDecisionDTO {
    /**
     * @member {Number} returnItemId
     * @type {Number}
     */
    returnItemId;
    /**
     * @member {Number} count
     * @type {Number}
     */
    count;
    /**
     * @member {String} comment
     * @type {String}
     */
    comment;
    /**
     * @member {module:model/ReturnDecisionReasonType} reasonType
     * @type {module:model/ReturnDecisionReasonType}
     */
    reasonType;
    /**
     * @member {module:model/ReturnDecisionSubreasonType} subreasonType
     * @type {module:model/ReturnDecisionSubreasonType}
     */
    subreasonType;
    /**
     * @member {module:model/ReturnDecisionType} decisionType
     * @type {module:model/ReturnDecisionType}
     */
    decisionType;
    /**
     * @member {Number} refundAmount
     * @type {Number}
     */
    refundAmount;
    /**
     * @member {Number} partnerCompensation
     * @type {Number}
     */
    partnerCompensation;
    /**
     * @member {Array.<String>} images
     * @type {Array.<String>}
     */
    images;

    

    /**
     * Constructs a new <code>ReturnDecisionDTO</code>.
     * Решения по возвратам.
     * @alias module:model/ReturnDecisionDTO
     */
    constructor() { 
        
        ReturnDecisionDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReturnDecisionDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReturnDecisionDTO} obj Optional instance to populate.
     * @return {module:model/ReturnDecisionDTO} The populated <code>ReturnDecisionDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReturnDecisionDTO();

            if (data.hasOwnProperty('returnItemId')) {
                obj['returnItemId'] = ApiClient.convertToType(data['returnItemId'], 'Number');
            }
            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
            if (data.hasOwnProperty('comment')) {
                obj['comment'] = ApiClient.convertToType(data['comment'], 'String');
            }
            if (data.hasOwnProperty('reasonType')) {
                obj['reasonType'] = ReturnDecisionReasonType.constructFromObject(data['reasonType']);
            }
            if (data.hasOwnProperty('subreasonType')) {
                obj['subreasonType'] = ReturnDecisionSubreasonType.constructFromObject(data['subreasonType']);
            }
            if (data.hasOwnProperty('decisionType')) {
                obj['decisionType'] = ReturnDecisionType.constructFromObject(data['decisionType']);
            }
            if (data.hasOwnProperty('refundAmount')) {
                obj['refundAmount'] = ApiClient.convertToType(data['refundAmount'], 'Number');
            }
            if (data.hasOwnProperty('partnerCompensation')) {
                obj['partnerCompensation'] = ApiClient.convertToType(data['partnerCompensation'], 'Number');
            }
            if (data.hasOwnProperty('images')) {
                obj['images'] = ApiClient.convertToType(data['images'], ['String']);
            }
        }
        return obj;
    }
}



export default ReturnDecisionDTO;

