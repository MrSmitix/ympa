/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetPromoAssortmentInfoDTO model module.
 * @module model/GetPromoAssortmentInfoDTO
 * @version LATEST
 */
class GetPromoAssortmentInfoDTO {
    /**
     * Constructs a new <code>GetPromoAssortmentInfoDTO</code>.
     * Информация о товарах в акции.
     * @alias module:model/GetPromoAssortmentInfoDTO
     * @param activeOffers {Number} Количество товаров, которые участвуют или участвовали в акции.  Учитываются только товары, которые были добавлены вручную.  Об автоматическом и ручном добавлении товаров в акцию читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/index). 
     */
    constructor(activeOffers) { 
        
        GetPromoAssortmentInfoDTO.initialize(this, activeOffers);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, activeOffers) { 
        obj['activeOffers'] = activeOffers;
    }

    /**
     * Constructs a <code>GetPromoAssortmentInfoDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetPromoAssortmentInfoDTO} obj Optional instance to populate.
     * @return {module:model/GetPromoAssortmentInfoDTO} The populated <code>GetPromoAssortmentInfoDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetPromoAssortmentInfoDTO();

            if (data.hasOwnProperty('activeOffers')) {
                obj['activeOffers'] = ApiClient.convertToType(data['activeOffers'], 'Number');
            }
            if (data.hasOwnProperty('potentialOffers')) {
                obj['potentialOffers'] = ApiClient.convertToType(data['potentialOffers'], 'Number');
            }
            if (data.hasOwnProperty('processing')) {
                obj['processing'] = ApiClient.convertToType(data['processing'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetPromoAssortmentInfoDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetPromoAssortmentInfoDTO</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetPromoAssortmentInfoDTO.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

GetPromoAssortmentInfoDTO.RequiredProperties = ["activeOffers"];

/**
 * Количество товаров, которые участвуют или участвовали в акции.  Учитываются только товары, которые были добавлены вручную.  Об автоматическом и ручном добавлении товаров в акцию читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/index). 
 * @member {Number} activeOffers
 */
GetPromoAssortmentInfoDTO.prototype['activeOffers'] = undefined;

/**
 * Количество доступных товаров в акции.  Параметр возвращается только для текущих и будущих акций. 
 * @member {Number} potentialOffers
 */
GetPromoAssortmentInfoDTO.prototype['potentialOffers'] = undefined;

/**
 * Есть ли изменения в ассортименте, которые еще не применились. Сохранение изменений занимает некоторое время.  Параметр возвращается только для текущих и будущих акций. 
 * @member {Boolean} processing
 */
GetPromoAssortmentInfoDTO.prototype['processing'] = undefined;






export default GetPromoAssortmentInfoDTO;

