/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OrderParcelBoxDTO from './OrderParcelBoxDTO';
import OrderTrackDTO from './OrderTrackDTO';

/**
 * The OrderShipmentDTO model module.
 * @module model/OrderShipmentDTO
 * @version LATEST
 */
class OrderShipmentDTO {
    /**
     * @member {Number} id
     * @type {Number}
     */
    id;
    /**
     * @member {String} shipmentDate
     * @type {String}
     */
    shipmentDate;
    /**
     * @member {String} shipmentTime
     * @type {String}
     */
    shipmentTime;
    /**
     * @member {Array.<module:model/OrderTrackDTO>} tracks
     * @type {Array.<module:model/OrderTrackDTO>}
     */
    tracks;
    /**
     * @member {Array.<module:model/OrderParcelBoxDTO>} boxes
     * @type {Array.<module:model/OrderParcelBoxDTO>}
     */
    boxes;

    

    /**
     * Constructs a new <code>OrderShipmentDTO</code>.
     * Список посылок.  В параметре может указываться несколько посылок. 
     * @alias module:model/OrderShipmentDTO
     */
    constructor() { 
        
        OrderShipmentDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrderShipmentDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderShipmentDTO} obj Optional instance to populate.
     * @return {module:model/OrderShipmentDTO} The populated <code>OrderShipmentDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderShipmentDTO();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('shipmentDate')) {
                obj['shipmentDate'] = ApiClient.convertToType(data['shipmentDate'], 'String');
            }
            if (data.hasOwnProperty('shipmentTime')) {
                obj['shipmentTime'] = ApiClient.convertToType(data['shipmentTime'], 'String');
            }
            if (data.hasOwnProperty('tracks')) {
                obj['tracks'] = ApiClient.convertToType(data['tracks'], [OrderTrackDTO]);
            }
            if (data.hasOwnProperty('boxes')) {
                obj['boxes'] = ApiClient.convertToType(data['boxes'], [OrderParcelBoxDTO]);
            }
        }
        return obj;
    }
}



export default OrderShipmentDTO;

