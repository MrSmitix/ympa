/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OfferPriceByOfferIdsResponseDTO from './OfferPriceByOfferIdsResponseDTO';
import ScrollingPagerDTO from './ScrollingPagerDTO';

/**
 * The OfferPriceByOfferIdsListResponseDTO model module.
 * @module model/OfferPriceByOfferIdsListResponseDTO
 * @version LATEST
 */
class OfferPriceByOfferIdsListResponseDTO {
    /**
     * Constructs a new <code>OfferPriceByOfferIdsListResponseDTO</code>.
     * Список цен.
     * @alias module:model/OfferPriceByOfferIdsListResponseDTO
     * @param offers {Array.<module:model/OfferPriceByOfferIdsResponseDTO>} Страница списка цен.
     */
    constructor(offers) { 
        
        OfferPriceByOfferIdsListResponseDTO.initialize(this, offers);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, offers) { 
        obj['offers'] = offers;
    }

    /**
     * Constructs a <code>OfferPriceByOfferIdsListResponseDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OfferPriceByOfferIdsListResponseDTO} obj Optional instance to populate.
     * @return {module:model/OfferPriceByOfferIdsListResponseDTO} The populated <code>OfferPriceByOfferIdsListResponseDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OfferPriceByOfferIdsListResponseDTO();

            if (data.hasOwnProperty('offers')) {
                obj['offers'] = ApiClient.convertToType(data['offers'], [OfferPriceByOfferIdsResponseDTO]);
            }
            if (data.hasOwnProperty('paging')) {
                obj['paging'] = ScrollingPagerDTO.constructFromObject(data['paging']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OfferPriceByOfferIdsListResponseDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OfferPriceByOfferIdsListResponseDTO</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of OfferPriceByOfferIdsListResponseDTO.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['offers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['offers'])) {
                throw new Error("Expected the field `offers` to be an array in the JSON data but got " + data['offers']);
            }
            // validate the optional field `offers` (array)
            for (const item of data['offers']) {
                OfferPriceByOfferIdsResponseDTO.validateJSON(item);
            };
        }
        // validate the optional field `paging`
        if (data['paging']) { // data not null
          ScrollingPagerDTO.validateJSON(data['paging']);
        }

        return true;
    }


}

OfferPriceByOfferIdsListResponseDTO.RequiredProperties = ["offers"];

/**
 * Страница списка цен.
 * @member {Array.<module:model/OfferPriceByOfferIdsResponseDTO>} offers
 */
OfferPriceByOfferIdsListResponseDTO.prototype['offers'] = undefined;

/**
 * @member {module:model/ScrollingPagerDTO} paging
 */
OfferPriceByOfferIdsListResponseDTO.prototype['paging'] = undefined;






export default OfferPriceByOfferIdsListResponseDTO;

