/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PaymentFrequencyType from './PaymentFrequencyType';
import SellingProgramType from './SellingProgramType';

/**
 * The CalculateTariffsParametersDTO model module.
 * @module model/CalculateTariffsParametersDTO
 * @version LATEST
 */
class CalculateTariffsParametersDTO {
    /**
     * Constructs a new <code>CalculateTariffsParametersDTO</code>.
     * Параметры для расчета стоимости услуг.
     * @alias module:model/CalculateTariffsParametersDTO
     */
    constructor() { 
        
        CalculateTariffsParametersDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CalculateTariffsParametersDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CalculateTariffsParametersDTO} obj Optional instance to populate.
     * @return {module:model/CalculateTariffsParametersDTO} The populated <code>CalculateTariffsParametersDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CalculateTariffsParametersDTO();

            if (data.hasOwnProperty('campaignId')) {
                obj['campaignId'] = ApiClient.convertToType(data['campaignId'], 'Number');
            }
            if (data.hasOwnProperty('sellingProgram')) {
                obj['sellingProgram'] = SellingProgramType.constructFromObject(data['sellingProgram']);
            }
            if (data.hasOwnProperty('frequency')) {
                obj['frequency'] = PaymentFrequencyType.constructFromObject(data['frequency']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CalculateTariffsParametersDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CalculateTariffsParametersDTO</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Идентификатор кампании. У пользователя, который выполняет запрос, должен быть доступ к этой кампании.  Используйте параметр `campaignId`, если уже завершили подключение магазина на Маркете. Иначе вернется пустой список.  Обязательный параметр, если не указан параметр `sellingProgram`. Совместное использование параметров приведет к ошибке. 
 * @member {Number} campaignId
 */
CalculateTariffsParametersDTO.prototype['campaignId'] = undefined;

/**
 * @member {module:model/SellingProgramType} sellingProgram
 */
CalculateTariffsParametersDTO.prototype['sellingProgram'] = undefined;

/**
 * @member {module:model/PaymentFrequencyType} frequency
 */
CalculateTariffsParametersDTO.prototype['frequency'] = undefined;






export default CalculateTariffsParametersDTO;

