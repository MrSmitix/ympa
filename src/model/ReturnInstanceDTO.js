/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ReturnInstanceStatusType from './ReturnInstanceStatusType';
import ReturnInstanceStockType from './ReturnInstanceStockType';

/**
 * The ReturnInstanceDTO model module.
 * @module model/ReturnInstanceDTO
 * @version LATEST
 */
class ReturnInstanceDTO {
    /**
     * Constructs a new <code>ReturnInstanceDTO</code>.
     * Логистическая информация по возврату.
     * @alias module:model/ReturnInstanceDTO
     */
    constructor() { 
        
        ReturnInstanceDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReturnInstanceDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReturnInstanceDTO} obj Optional instance to populate.
     * @return {module:model/ReturnInstanceDTO} The populated <code>ReturnInstanceDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReturnInstanceDTO();

            if (data.hasOwnProperty('stockType')) {
                obj['stockType'] = ReturnInstanceStockType.constructFromObject(data['stockType']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ReturnInstanceStatusType.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('cis')) {
                obj['cis'] = ApiClient.convertToType(data['cis'], 'String');
            }
            if (data.hasOwnProperty('imei')) {
                obj['imei'] = ApiClient.convertToType(data['imei'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReturnInstanceDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReturnInstanceDTO</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['cis'] && !(typeof data['cis'] === 'string' || data['cis'] instanceof String)) {
            throw new Error("Expected the field `cis` to be a primitive type in the JSON string but got " + data['cis']);
        }
        // ensure the json data is a string
        if (data['imei'] && !(typeof data['imei'] === 'string' || data['imei'] instanceof String)) {
            throw new Error("Expected the field `imei` to be a primitive type in the JSON string but got " + data['imei']);
        }

        return true;
    }


}



/**
 * @member {module:model/ReturnInstanceStockType} stockType
 */
ReturnInstanceDTO.prototype['stockType'] = undefined;

/**
 * @member {module:model/ReturnInstanceStatusType} status
 */
ReturnInstanceDTO.prototype['status'] = undefined;

/**
 * Код идентификации единицы товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/).
 * @member {String} cis
 */
ReturnInstanceDTO.prototype['cis'] = undefined;

/**
 * Международный идентификатор мобильного оборудования.
 * @member {String} imei
 */
ReturnInstanceDTO.prototype['imei'] = undefined;






export default ReturnInstanceDTO;

