/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OrderItemDetailDTO from './OrderItemDetailDTO';
import OrderItemInstanceDTO from './OrderItemInstanceDTO';
import OrderItemInstanceType from './OrderItemInstanceType';
import OrderItemPromoDTO from './OrderItemPromoDTO';
import OrderItemSubsidyDTO from './OrderItemSubsidyDTO';
import OrderVatType from './OrderVatType';

/**
 * The OrderItemDTO model module.
 * @module model/OrderItemDTO
 * @version LATEST
 */
class OrderItemDTO {
    /**
     * @member {Number} id
     * @type {Number}
     */
    id;
    /**
     * @member {String} offerId
     * @type {String}
     */
    offerId;
    /**
     * @member {String} offerName
     * @type {String}
     */
    offerName;
    /**
     * @member {Number} price
     * @type {Number}
     */
    price;
    /**
     * @member {Number} buyerPrice
     * @type {Number}
     */
    buyerPrice;
    /**
     * @member {Number} buyerPriceBeforeDiscount
     * @type {Number}
     */
    buyerPriceBeforeDiscount;
    /**
     * @member {Number} priceBeforeDiscount
     * @type {Number}
     */
    priceBeforeDiscount;
    /**
     * @member {Number} count
     * @type {Number}
     */
    count;
    /**
     * @member {module:model/OrderVatType} vat
     * @type {module:model/OrderVatType}
     */
    vat;
    /**
     * @member {String} shopSku
     * @type {String}
     */
    shopSku;
    /**
     * @member {Number} subsidy
     * @type {Number}
     */
    subsidy;
    /**
     * @member {String} partnerWarehouseId
     * @type {String}
     */
    partnerWarehouseId;
    /**
     * @member {Array.<module:model/OrderItemPromoDTO>} promos
     * @type {Array.<module:model/OrderItemPromoDTO>}
     */
    promos;
    /**
     * @member {Array.<module:model/OrderItemInstanceDTO>} instances
     * @type {Array.<module:model/OrderItemInstanceDTO>}
     */
    instances;
    /**
     * @member {Array.<module:model/OrderItemDetailDTO>} details
     * @type {Array.<module:model/OrderItemDetailDTO>}
     */
    details;
    /**
     * @member {Array.<module:model/OrderItemSubsidyDTO>} subsidies
     * @type {Array.<module:model/OrderItemSubsidyDTO>}
     */
    subsidies;
    /**
     * @member {Array.<module:model/OrderItemInstanceType>} requiredInstanceTypes
     * @type {Array.<module:model/OrderItemInstanceType>}
     */
    requiredInstanceTypes;

    

    /**
     * Constructs a new <code>OrderItemDTO</code>.
     * Список товаров в заказе.
     * @alias module:model/OrderItemDTO
     */
    constructor() { 
        
        OrderItemDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrderItemDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderItemDTO} obj Optional instance to populate.
     * @return {module:model/OrderItemDTO} The populated <code>OrderItemDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderItemDTO();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('offerId')) {
                obj['offerId'] = ApiClient.convertToType(data['offerId'], 'String');
            }
            if (data.hasOwnProperty('offerName')) {
                obj['offerName'] = ApiClient.convertToType(data['offerName'], 'String');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
            if (data.hasOwnProperty('buyerPrice')) {
                obj['buyerPrice'] = ApiClient.convertToType(data['buyerPrice'], 'Number');
            }
            if (data.hasOwnProperty('buyerPriceBeforeDiscount')) {
                obj['buyerPriceBeforeDiscount'] = ApiClient.convertToType(data['buyerPriceBeforeDiscount'], 'Number');
            }
            if (data.hasOwnProperty('priceBeforeDiscount')) {
                obj['priceBeforeDiscount'] = ApiClient.convertToType(data['priceBeforeDiscount'], 'Number');
            }
            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
            if (data.hasOwnProperty('vat')) {
                obj['vat'] = OrderVatType.constructFromObject(data['vat']);
            }
            if (data.hasOwnProperty('shopSku')) {
                obj['shopSku'] = ApiClient.convertToType(data['shopSku'], 'String');
            }
            if (data.hasOwnProperty('subsidy')) {
                obj['subsidy'] = ApiClient.convertToType(data['subsidy'], 'Number');
            }
            if (data.hasOwnProperty('partnerWarehouseId')) {
                obj['partnerWarehouseId'] = ApiClient.convertToType(data['partnerWarehouseId'], 'String');
            }
            if (data.hasOwnProperty('promos')) {
                obj['promos'] = ApiClient.convertToType(data['promos'], [OrderItemPromoDTO]);
            }
            if (data.hasOwnProperty('instances')) {
                obj['instances'] = ApiClient.convertToType(data['instances'], [OrderItemInstanceDTO]);
            }
            if (data.hasOwnProperty('details')) {
                obj['details'] = ApiClient.convertToType(data['details'], [OrderItemDetailDTO]);
            }
            if (data.hasOwnProperty('subsidies')) {
                obj['subsidies'] = ApiClient.convertToType(data['subsidies'], [OrderItemSubsidyDTO]);
            }
            if (data.hasOwnProperty('requiredInstanceTypes')) {
                obj['requiredInstanceTypes'] = ApiClient.convertToType(data['requiredInstanceTypes'], [OrderItemInstanceType]);
            }
        }
        return obj;
    }
}



export default OrderItemDTO;

