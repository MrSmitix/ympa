/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PriceQuarantineVerdictParameterDTO from './PriceQuarantineVerdictParameterDTO';
import PriceQuarantineVerdictType from './PriceQuarantineVerdictType';

/**
 * The PriceQuarantineVerdictDTO model module.
 * @module model/PriceQuarantineVerdictDTO
 * @version LATEST
 */
class PriceQuarantineVerdictDTO {
    /**
     * Constructs a new <code>PriceQuarantineVerdictDTO</code>.
     * Причина попадания товара в карантин.
     * @alias module:model/PriceQuarantineVerdictDTO
     * @param params {Array.<module:model/PriceQuarantineVerdictParameterDTO>} Цена, из-за которой товар попал в карантин, и значения для сравнения. Конкретный набор параметров зависит от типа карантина.
     */
    constructor(params) { 
        
        PriceQuarantineVerdictDTO.initialize(this, params);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, params) { 
        obj['params'] = params;
    }

    /**
     * Constructs a <code>PriceQuarantineVerdictDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PriceQuarantineVerdictDTO} obj Optional instance to populate.
     * @return {module:model/PriceQuarantineVerdictDTO} The populated <code>PriceQuarantineVerdictDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PriceQuarantineVerdictDTO();

            if (data.hasOwnProperty('type')) {
                obj['type'] = PriceQuarantineVerdictType.constructFromObject(data['type']);
            }
            if (data.hasOwnProperty('params')) {
                obj['params'] = ApiClient.convertToType(data['params'], [PriceQuarantineVerdictParameterDTO]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PriceQuarantineVerdictDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PriceQuarantineVerdictDTO</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PriceQuarantineVerdictDTO.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['params']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['params'])) {
                throw new Error("Expected the field `params` to be an array in the JSON data but got " + data['params']);
            }
            // validate the optional field `params` (array)
            for (const item of data['params']) {
                PriceQuarantineVerdictParameterDTO.validateJSON(item);
            };
        }

        return true;
    }


}

PriceQuarantineVerdictDTO.RequiredProperties = ["params"];

/**
 * @member {module:model/PriceQuarantineVerdictType} type
 */
PriceQuarantineVerdictDTO.prototype['type'] = undefined;

/**
 * Цена, из-за которой товар попал в карантин, и значения для сравнения. Конкретный набор параметров зависит от типа карантина.
 * @member {Array.<module:model/PriceQuarantineVerdictParameterDTO>} params
 */
PriceQuarantineVerdictDTO.prototype['params'] = undefined;






export default PriceQuarantineVerdictDTO;

