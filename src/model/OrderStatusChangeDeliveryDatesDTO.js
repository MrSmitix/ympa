/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OrderStatusChangeDeliveryDatesDTO model module.
 * @module model/OrderStatusChangeDeliveryDatesDTO
 * @version LATEST
 */
class OrderStatusChangeDeliveryDatesDTO {
    /**
     * Constructs a new <code>OrderStatusChangeDeliveryDatesDTO</code>.
     * Диапазон дат доставки.
     * @alias module:model/OrderStatusChangeDeliveryDatesDTO
     */
    constructor() { 
        
        OrderStatusChangeDeliveryDatesDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrderStatusChangeDeliveryDatesDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderStatusChangeDeliveryDatesDTO} obj Optional instance to populate.
     * @return {module:model/OrderStatusChangeDeliveryDatesDTO} The populated <code>OrderStatusChangeDeliveryDatesDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderStatusChangeDeliveryDatesDTO();

            if (data.hasOwnProperty('realDeliveryDate')) {
                obj['realDeliveryDate'] = ApiClient.convertToType(data['realDeliveryDate'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrderStatusChangeDeliveryDatesDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrderStatusChangeDeliveryDatesDTO</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * **Только для модели DBS**  Фактическая дата доставки. <br><br> Когда передавать параметр `realDeliveryDate`:  * Не передавайте параметр, если:   * переводите заказ в любой статус, кроме `PICKUP` или `DELIVERED`;   * меняете статус заказа на `PICKUP` или `DELIVERED` в день доставки — будет указана дата выполнения запроса. * Передавайте дату доставки, если переводите заказ в статус `PICKUP` или `DELIVERED` не в день доставки. Нельзя указывать дату доставки в будущем.    {% note warning \"Индекс качества\" %}    Передача статуса после установленного срока снижает индекс качества. О сроках читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/quality/tech#dbs).    {% endnote %}      
 * @member {Date} realDeliveryDate
 */
OrderStatusChangeDeliveryDatesDTO.prototype['realDeliveryDate'] = undefined;






export default OrderStatusChangeDeliveryDatesDTO;

