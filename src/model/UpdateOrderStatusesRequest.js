/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OrderStateDTO from './OrderStateDTO';

/**
 * The UpdateOrderStatusesRequest model module.
 * @module model/UpdateOrderStatusesRequest
 * @version LATEST
 */
class UpdateOrderStatusesRequest {
    /**
     * Constructs a new <code>UpdateOrderStatusesRequest</code>.
     * Список заказов.
     * @alias module:model/UpdateOrderStatusesRequest
     * @param orders {Array.<module:model/OrderStateDTO>} Список заказов.
     */
    constructor(orders) { 
        
        UpdateOrderStatusesRequest.initialize(this, orders);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, orders) { 
        obj['orders'] = orders;
    }

    /**
     * Constructs a <code>UpdateOrderStatusesRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateOrderStatusesRequest} obj Optional instance to populate.
     * @return {module:model/UpdateOrderStatusesRequest} The populated <code>UpdateOrderStatusesRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateOrderStatusesRequest();

            if (data.hasOwnProperty('orders')) {
                obj['orders'] = ApiClient.convertToType(data['orders'], [OrderStateDTO]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateOrderStatusesRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateOrderStatusesRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateOrderStatusesRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['orders']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['orders'])) {
                throw new Error("Expected the field `orders` to be an array in the JSON data but got " + data['orders']);
            }
            // validate the optional field `orders` (array)
            for (const item of data['orders']) {
                OrderStateDTO.validateJSON(item);
            };
        }

        return true;
    }


}

UpdateOrderStatusesRequest.RequiredProperties = ["orders"];

/**
 * Список заказов.
 * @member {Array.<module:model/OrderStateDTO>} orders
 */
UpdateOrderStatusesRequest.prototype['orders'] = undefined;






export default UpdateOrderStatusesRequest;

