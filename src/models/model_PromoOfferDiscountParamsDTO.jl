# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""PromoOfferDiscountParamsDTO
Параметры товара в акции с типом &#x60;DIRECT_DISCOUNT&#x60; или &#x60;BLUE_FLASH&#x60;.

    PromoOfferDiscountParamsDTO(;
        price=nothing,
        promoPrice=nothing,
        maxPromoPrice=nothing,
    )

    - price::Int64 : Зачеркнутая цена — та, по которой товар продавался до акции.  Указывается в рублях.  Возвращается, только если товар участвует в акции. 
    - promoPrice::Int64 : Цена по акции — та, по которой вы хотите продавать товар.  Указывается в рублях.  Возвращается, только если товар участвует в акции. 
    - maxPromoPrice::Int64 : Максимально возможная цена для участия в акции.  Указывается в рублях.  Возвращается для всех товаров. 
"""
Base.@kwdef mutable struct PromoOfferDiscountParamsDTO <: OpenAPI.APIModel
    price::Union{Nothing, Int64} = nothing
    promoPrice::Union{Nothing, Int64} = nothing
    maxPromoPrice::Union{Nothing, Int64} = nothing

    function PromoOfferDiscountParamsDTO(price, promoPrice, maxPromoPrice, )
        OpenAPI.validate_property(PromoOfferDiscountParamsDTO, Symbol("price"), price)
        OpenAPI.validate_property(PromoOfferDiscountParamsDTO, Symbol("promoPrice"), promoPrice)
        OpenAPI.validate_property(PromoOfferDiscountParamsDTO, Symbol("maxPromoPrice"), maxPromoPrice)
        return new(price, promoPrice, maxPromoPrice, )
    end
end # type PromoOfferDiscountParamsDTO

const _property_types_PromoOfferDiscountParamsDTO = Dict{Symbol,String}(Symbol("price")=>"Int64", Symbol("promoPrice")=>"Int64", Symbol("maxPromoPrice")=>"Int64", )
OpenAPI.property_type(::Type{ PromoOfferDiscountParamsDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PromoOfferDiscountParamsDTO[name]))}

function check_required(o::PromoOfferDiscountParamsDTO)
    o.maxPromoPrice === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ PromoOfferDiscountParamsDTO }, name::Symbol, val)
    if name === Symbol("price")
        OpenAPI.validate_param(name, "PromoOfferDiscountParamsDTO", :format, val, "int64")
    end
    if name === Symbol("promoPrice")
        OpenAPI.validate_param(name, "PromoOfferDiscountParamsDTO", :format, val, "int64")
    end
    if name === Symbol("maxPromoPrice")
        OpenAPI.validate_param(name, "PromoOfferDiscountParamsDTO", :format, val, "int64")
    end
end
