/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// OrderLiftType : Тип подъема заказа на этаж:  * `NOT_NEEDED` — не требуется.  * `MANUAL` — ручной.  * `ELEVATOR` — лифт.  * `CARGO_ELEVATOR` — грузовой лифт.  * `FREE` — любой из перечисленных выше, если включена опция бесплатного подъема.  * `UNKNOWN` — неизвестный тип. 
/// Тип подъема заказа на этаж:  * `NOT_NEEDED` — не требуется.  * `MANUAL` — ручной.  * `ELEVATOR` — лифт.  * `CARGO_ELEVATOR` — грузовой лифт.  * `FREE` — любой из перечисленных выше, если включена опция бесплатного подъема.  * `UNKNOWN` — неизвестный тип. 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum OrderLiftType {
    #[serde(rename = "NOT_NEEDED")]
    NotNeeded,
    #[serde(rename = "MANUAL")]
    Manual,
    #[serde(rename = "ELEVATOR")]
    Elevator,
    #[serde(rename = "CARGO_ELEVATOR")]
    CargoElevator,
    #[serde(rename = "FREE")]
    Free,
    #[serde(rename = "UNKNOWN")]
    Unknown,

}

impl std::fmt::Display for OrderLiftType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::NotNeeded => write!(f, "NOT_NEEDED"),
            Self::Manual => write!(f, "MANUAL"),
            Self::Elevator => write!(f, "ELEVATOR"),
            Self::CargoElevator => write!(f, "CARGO_ELEVATOR"),
            Self::Free => write!(f, "FREE"),
            Self::Unknown => write!(f, "UNKNOWN"),
        }
    }
}

impl Default for OrderLiftType {
    fn default() -> OrderLiftType {
        Self::NotNeeded
    }
}

