# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""GetPriceDTO
Цена с указанием времени последнего обновления.

    GetPriceDTO(;
        value=nothing,
        currencyId=nothing,
        updatedAt=nothing,
    )

    - value::Float64 : Значение.
    - currencyId::CurrencyType
    - updatedAt::ZonedDateTime : Время последнего обновления.
"""
Base.@kwdef mutable struct GetPriceDTO <: OpenAPI.APIModel
    value::Union{Nothing, Float64} = nothing
    currencyId = nothing # spec type: Union{ Nothing, CurrencyType }
    updatedAt::Union{Nothing, ZonedDateTime} = nothing

    function GetPriceDTO(value, currencyId, updatedAt, )
        OpenAPI.validate_property(GetPriceDTO, Symbol("value"), value)
        OpenAPI.validate_property(GetPriceDTO, Symbol("currencyId"), currencyId)
        OpenAPI.validate_property(GetPriceDTO, Symbol("updatedAt"), updatedAt)
        return new(value, currencyId, updatedAt, )
    end
end # type GetPriceDTO

const _property_types_GetPriceDTO = Dict{Symbol,String}(Symbol("value")=>"Float64", Symbol("currencyId")=>"CurrencyType", Symbol("updatedAt")=>"ZonedDateTime", )
OpenAPI.property_type(::Type{ GetPriceDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_GetPriceDTO[name]))}

function check_required(o::GetPriceDTO)
    o.value === nothing && (return false)
    o.currencyId === nothing && (return false)
    o.updatedAt === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ GetPriceDTO }, name::Symbol, val)
    if name === Symbol("value")
        OpenAPI.validate_param(name, "GetPriceDTO", :minimum, val, 0, true)
    end
    if name === Symbol("updatedAt")
        OpenAPI.validate_param(name, "GetPriceDTO", :format, val, "date-time")
    end
end
