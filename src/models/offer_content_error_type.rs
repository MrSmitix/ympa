/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// OfferContentErrorType : Типы ошибок:  * `OFFER_NOT_FOUND` — такого товара нет в каталоге. * `UNKNOWN_CATEGORY` — указана неизвестная категория. * `CATEGORY_MISMATCH` — указана категория, которая не совпадает с категорией товара. * `UNKNOWN_PARAMETER` — передана характеристика, которой нет среди характеристик категории. * `UNEXPECTED_BOOLEAN_VALUE` — вместо boolean-значения передано что-то другое. * `NUMBER_FORMAT` — передана строка, не обозначающая число, вместо числа. * `VALUE_BLANK` — передано пустое значение. * `INVALID_UNIT_ID` — передана единица измерения, недопустимая для характеристики. * `INVALID_GROUP_ID_LENGTH` — в названии превышено допустимое значение символов — 255. * `INVALID_GROUP_ID_CHARACTERS` — переданы [недопустимые символы](*ascii-code). 
/// Типы ошибок:  * `OFFER_NOT_FOUND` — такого товара нет в каталоге. * `UNKNOWN_CATEGORY` — указана неизвестная категория. * `CATEGORY_MISMATCH` — указана категория, которая не совпадает с категорией товара. * `UNKNOWN_PARAMETER` — передана характеристика, которой нет среди характеристик категории. * `UNEXPECTED_BOOLEAN_VALUE` — вместо boolean-значения передано что-то другое. * `NUMBER_FORMAT` — передана строка, не обозначающая число, вместо числа. * `VALUE_BLANK` — передано пустое значение. * `INVALID_UNIT_ID` — передана единица измерения, недопустимая для характеристики. * `INVALID_GROUP_ID_LENGTH` — в названии превышено допустимое значение символов — 255. * `INVALID_GROUP_ID_CHARACTERS` — переданы [недопустимые символы](*ascii-code). 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum OfferContentErrorType {
    #[serde(rename = "OFFER_NOT_FOUND")]
    OfferNotFound,
    #[serde(rename = "UNKNOWN_CATEGORY")]
    UnknownCategory,
    #[serde(rename = "CATEGORY_MISMATCH")]
    CategoryMismatch,
    #[serde(rename = "UNKNOWN_PARAMETER")]
    UnknownParameter,
    #[serde(rename = "UNEXPECTED_BOOLEAN_VALUE")]
    UnexpectedBooleanValue,
    #[serde(rename = "NUMBER_FORMAT")]
    NumberFormat,
    #[serde(rename = "VALUE_BLANK")]
    ValueBlank,
    #[serde(rename = "INVALID_UNIT_ID")]
    InvalidUnitId,
    #[serde(rename = "INVALID_GROUP_ID_LENGTH")]
    InvalidGroupIdLength,
    #[serde(rename = "INVALID_GROUP_ID_CHARACTERS")]
    InvalidGroupIdCharacters,

}

impl std::fmt::Display for OfferContentErrorType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::OfferNotFound => write!(f, "OFFER_NOT_FOUND"),
            Self::UnknownCategory => write!(f, "UNKNOWN_CATEGORY"),
            Self::CategoryMismatch => write!(f, "CATEGORY_MISMATCH"),
            Self::UnknownParameter => write!(f, "UNKNOWN_PARAMETER"),
            Self::UnexpectedBooleanValue => write!(f, "UNEXPECTED_BOOLEAN_VALUE"),
            Self::NumberFormat => write!(f, "NUMBER_FORMAT"),
            Self::ValueBlank => write!(f, "VALUE_BLANK"),
            Self::InvalidUnitId => write!(f, "INVALID_UNIT_ID"),
            Self::InvalidGroupIdLength => write!(f, "INVALID_GROUP_ID_LENGTH"),
            Self::InvalidGroupIdCharacters => write!(f, "INVALID_GROUP_ID_CHARACTERS"),
        }
    }
}

impl Default for OfferContentErrorType {
    fn default() -> OfferContentErrorType {
        Self::OfferNotFound
    }
}

