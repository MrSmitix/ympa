// tslint:disable
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    GpsDTO,
    GpsDTOFromJSON,
    GpsDTOToJSON,
} from './';

/**
 * Адрес доставки.  Указывается, если `type=DELIVERY`, `type=POST` или `type=PICKUP` (адрес пункта выдачи). 
 * @export
 * @interface OrderDeliveryAddressDTO
 */
export interface OrderDeliveryAddressDTO  {
    /**
     * Страна.  Обязательный параметр. 
     * @type {string}
     * @memberof OrderDeliveryAddressDTO
     */
    country?: string;
    /**
     * Почтовый индекс.  Указывается, если выбрана доставка почтой (`delivery type=POST`). 
     * @type {string}
     * @memberof OrderDeliveryAddressDTO
     */
    postcode?: string;
    /**
     * Город или населенный пункт.  Обязательный параметр. 
     * @type {string}
     * @memberof OrderDeliveryAddressDTO
     */
    city?: string;
    /**
     * Район.
     * @type {string}
     * @memberof OrderDeliveryAddressDTO
     */
    district?: string;
    /**
     * Станция метро.
     * @type {string}
     * @memberof OrderDeliveryAddressDTO
     */
    subway?: string;
    /**
     * Улица.  Обязательный параметр. 
     * @type {string}
     * @memberof OrderDeliveryAddressDTO
     */
    street?: string;
    /**
     * Дом или владение.  Обязательный параметр. 
     * @type {string}
     * @memberof OrderDeliveryAddressDTO
     */
    house?: string;
    /**
     * Корпус или строение.
     * @type {string}
     * @memberof OrderDeliveryAddressDTO
     */
    block?: string;
    /**
     * Подъезд.
     * @type {string}
     * @memberof OrderDeliveryAddressDTO
     */
    entrance?: string;
    /**
     * Код домофона.
     * @type {string}
     * @memberof OrderDeliveryAddressDTO
     */
    entryphone?: string;
    /**
     * Этаж.
     * @type {string}
     * @memberof OrderDeliveryAddressDTO
     */
    floor?: string;
    /**
     * Квартира или офис.
     * @type {string}
     * @memberof OrderDeliveryAddressDTO
     */
    apartment?: string;
    /**
     * Телефон получателя заказа.  Обязательный параметр. 
     * @type {string}
     * @memberof OrderDeliveryAddressDTO
     */
    phone?: string;
    /**
     * Фамилия, имя и отчество получателя заказа.  Обязательный параметр. 
     * @type {string}
     * @memberof OrderDeliveryAddressDTO
     */
    recipient?: string;
    /**
     * 
     * @type {GpsDTO}
     * @memberof OrderDeliveryAddressDTO
     */
    gps?: GpsDTO;
}

export function OrderDeliveryAddressDTOFromJSON(json: any): OrderDeliveryAddressDTO {
    return {
        'country': !exists(json, 'country') ? undefined : json['country'],
        'postcode': !exists(json, 'postcode') ? undefined : json['postcode'],
        'city': !exists(json, 'city') ? undefined : json['city'],
        'district': !exists(json, 'district') ? undefined : json['district'],
        'subway': !exists(json, 'subway') ? undefined : json['subway'],
        'street': !exists(json, 'street') ? undefined : json['street'],
        'house': !exists(json, 'house') ? undefined : json['house'],
        'block': !exists(json, 'block') ? undefined : json['block'],
        'entrance': !exists(json, 'entrance') ? undefined : json['entrance'],
        'entryphone': !exists(json, 'entryphone') ? undefined : json['entryphone'],
        'floor': !exists(json, 'floor') ? undefined : json['floor'],
        'apartment': !exists(json, 'apartment') ? undefined : json['apartment'],
        'phone': !exists(json, 'phone') ? undefined : json['phone'],
        'recipient': !exists(json, 'recipient') ? undefined : json['recipient'],
        'gps': !exists(json, 'gps') ? undefined : GpsDTOFromJSON(json['gps']),
    };
}

export function OrderDeliveryAddressDTOToJSON(value?: OrderDeliveryAddressDTO): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'country': value.country,
        'postcode': value.postcode,
        'city': value.city,
        'district': value.district,
        'subway': value.subway,
        'street': value.street,
        'house': value.house,
        'block': value.block,
        'entrance': value.entrance,
        'entryphone': value.entryphone,
        'floor': value.floor,
        'apartment': value.apartment,
        'phone': value.phone,
        'recipient': value.recipient,
        'gps': GpsDTOToJSON(value.gps),
    };
}


