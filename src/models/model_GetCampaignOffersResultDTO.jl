# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""GetCampaignOffersResultDTO
Список товаров в заданном магазине.

    GetCampaignOffersResultDTO(;
        paging=nothing,
        offers=nothing,
    )

    - paging::ScrollingPagerDTO
    - offers::Vector{GetCampaignOfferDTO} : Страница списка товаров.
"""
Base.@kwdef mutable struct GetCampaignOffersResultDTO <: OpenAPI.APIModel
    paging = nothing # spec type: Union{ Nothing, ScrollingPagerDTO }
    offers::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{GetCampaignOfferDTO} }

    function GetCampaignOffersResultDTO(paging, offers, )
        OpenAPI.validate_property(GetCampaignOffersResultDTO, Symbol("paging"), paging)
        OpenAPI.validate_property(GetCampaignOffersResultDTO, Symbol("offers"), offers)
        return new(paging, offers, )
    end
end # type GetCampaignOffersResultDTO

const _property_types_GetCampaignOffersResultDTO = Dict{Symbol,String}(Symbol("paging")=>"ScrollingPagerDTO", Symbol("offers")=>"Vector{GetCampaignOfferDTO}", )
OpenAPI.property_type(::Type{ GetCampaignOffersResultDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_GetCampaignOffersResultDTO[name]))}

function check_required(o::GetCampaignOffersResultDTO)
    o.offers === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ GetCampaignOffersResultDTO }, name::Symbol, val)
end
