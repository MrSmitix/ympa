/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ReturnRequestDecisionType : Решение по возврату.
/// Решение по возврату.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ReturnRequestDecisionType {
    #[serde(rename = "REFUND_MONEY")]
    RefundMoney,
    #[serde(rename = "REFUND_MONEY_INCLUDING_SHIPMENT")]
    RefundMoneyIncludingShipment,
    #[serde(rename = "REPAIR")]
    Repair,
    #[serde(rename = "REPLACE")]
    Replace,
    #[serde(rename = "SEND_TO_EXAMINATION")]
    SendToExamination,
    #[serde(rename = "DECLINE_REFUND")]
    DeclineRefund,
    #[serde(rename = "OTHER_DECISION")]
    OtherDecision,

}

impl std::fmt::Display for ReturnRequestDecisionType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::RefundMoney => write!(f, "REFUND_MONEY"),
            Self::RefundMoneyIncludingShipment => write!(f, "REFUND_MONEY_INCLUDING_SHIPMENT"),
            Self::Repair => write!(f, "REPAIR"),
            Self::Replace => write!(f, "REPLACE"),
            Self::SendToExamination => write!(f, "SEND_TO_EXAMINATION"),
            Self::DeclineRefund => write!(f, "DECLINE_REFUND"),
            Self::OtherDecision => write!(f, "OTHER_DECISION"),
        }
    }
}

impl Default for ReturnRequestDecisionType {
    fn default() -> ReturnRequestDecisionType {
        Self::RefundMoney
    }
}

