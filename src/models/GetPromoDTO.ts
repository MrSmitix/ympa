// tslint:disable
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ChannelType,
    ChannelTypeFromJSON,
    ChannelTypeToJSON,
    GetPromoAssortmentInfoDTO,
    GetPromoAssortmentInfoDTOFromJSON,
    GetPromoAssortmentInfoDTOToJSON,
    GetPromoBestsellerInfoDTO,
    GetPromoBestsellerInfoDTOFromJSON,
    GetPromoBestsellerInfoDTOToJSON,
    GetPromoConstraintsDTO,
    GetPromoConstraintsDTOFromJSON,
    GetPromoConstraintsDTOToJSON,
    GetPromoMechanicsInfoDTO,
    GetPromoMechanicsInfoDTOFromJSON,
    GetPromoMechanicsInfoDTOToJSON,
    PromoPeriodDTO,
    PromoPeriodDTOFromJSON,
    PromoPeriodDTOToJSON,
} from './';

/**
 * Информация об акции.
 * @export
 * @interface GetPromoDTO
 */
export interface GetPromoDTO  {
    /**
     * Идентификатор акции.
     * @type {string}
     * @memberof GetPromoDTO
     */
    id: string;
    /**
     * Название акции.
     * @type {string}
     * @memberof GetPromoDTO
     */
    name: string;
    /**
     * 
     * @type {PromoPeriodDTO}
     * @memberof GetPromoDTO
     */
    period: PromoPeriodDTO;
    /**
     * Участвует или участвовал ли продавец в этой акции.  Для текущих и будущих акций возвращается со значением `true`, если в акции есть товары, которые были добавлены вручную. Если товары не участвуют в акции или добавлены в нее автоматически, параметр возвращается со значением `false`.  Для прошедших акций всегда возвращается со значением `true`.  Об автоматическом и ручном добавлении товаров в акцию читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/index). 
     * @type {boolean}
     * @memberof GetPromoDTO
     */
    participating: boolean;
    /**
     * 
     * @type {GetPromoAssortmentInfoDTO}
     * @memberof GetPromoDTO
     */
    assortmentInfo: GetPromoAssortmentInfoDTO;
    /**
     * 
     * @type {GetPromoMechanicsInfoDTO}
     * @memberof GetPromoDTO
     */
    mechanicsInfo: GetPromoMechanicsInfoDTO;
    /**
     * 
     * @type {GetPromoBestsellerInfoDTO}
     * @memberof GetPromoDTO
     */
    bestsellerInfo: GetPromoBestsellerInfoDTO;
    /**
     * Список каналов продвижения товаров.
     * @type {Array<ChannelType>}
     * @memberof GetPromoDTO
     */
    channels?: Array<ChannelType>;
    /**
     * 
     * @type {GetPromoConstraintsDTO}
     * @memberof GetPromoDTO
     */
    constraints?: GetPromoConstraintsDTO;
}

export function GetPromoDTOFromJSON(json: any): GetPromoDTO {
    return {
        'id': json['id'],
        'name': json['name'],
        'period': PromoPeriodDTOFromJSON(json['period']),
        'participating': json['participating'],
        'assortmentInfo': GetPromoAssortmentInfoDTOFromJSON(json['assortmentInfo']),
        'mechanicsInfo': GetPromoMechanicsInfoDTOFromJSON(json['mechanicsInfo']),
        'bestsellerInfo': GetPromoBestsellerInfoDTOFromJSON(json['bestsellerInfo']),
        'channels': !exists(json, 'channels') ? undefined : (json['channels'] as Array<any>).map(ChannelTypeFromJSON),
        'constraints': !exists(json, 'constraints') ? undefined : GetPromoConstraintsDTOFromJSON(json['constraints']),
    };
}

export function GetPromoDTOToJSON(value?: GetPromoDTO): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'id': value.id,
        'name': value.name,
        'period': PromoPeriodDTOToJSON(value.period),
        'participating': value.participating,
        'assortmentInfo': GetPromoAssortmentInfoDTOToJSON(value.assortmentInfo),
        'mechanicsInfo': GetPromoMechanicsInfoDTOToJSON(value.mechanicsInfo),
        'bestsellerInfo': GetPromoBestsellerInfoDTOToJSON(value.bestsellerInfo),
        'channels': value.channels === undefined ? undefined : (value.channels as Array<any>).map(ChannelTypeToJSON),
        'constraints': GetPromoConstraintsDTOToJSON(value.constraints),
    };
}


