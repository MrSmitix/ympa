/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// OrderSubstatusType : Этап обработки заказа (если он имеет статус `PROCESSING`) или причина отмены заказа (если он имеет статус `CANCELLED`).  * Значения для заказа в статусе `PROCESSING`:      * `STARTED` — заказ подтвержден, его можно начать обрабатывать.      * `READY_TO_SHIP` — заказ собран и готов к отправке.  * Значения для заказа в статусе `CANCELLED`:      * `PROCESSING_EXPIRED` — значение более не используется.      * `REPLACING_ORDER` — покупатель решил заменить товар другим по собственной инициативе.      * `RESERVATION_EXPIRED` — покупатель не завершил оформление зарезервированного заказа в течение 10 минут.      * `SHOP_FAILED` — магазин не может выполнить заказ.      * `USER_CHANGED_MIND` — покупатель отменил заказ по личным причинам.      * `USER_NOT_PAID` — покупатель не оплатил заказ (для типа оплаты `PREPAID`) в течение 30 минут.      * `USER_REFUSED_DELIVERY` — покупателя не устроили условия доставки.      * `USER_REFUSED_PRODUCT` — покупателю не подошел товар.      * `USER_REFUSED_QUALITY` — покупателя не устроило качество товара.      * `USER_UNREACHABLE` — не удалось связаться с покупателем. Для отмены с этой причиной необходимо выполнить условия:        * не менее 3 звонков с 8 до 21 в часовом поясе покупателя;       * перерыв между первым и третьим звонком не менее 90 минут;       * соединение не короче 5 секунд.        Если хотя бы одно из этих условий не выполнено (кроме случая, когда номер недоступен), отменить заказ не получится. Вернется ответ с кодом ошибки 400.  * `TECHNICAL_ERROR` — техническая ошибка на стороне Маркета. Обратитесь в поддержку.  Также могут возвращаться другие значения. Обрабатывать их не требуется. 
/// Этап обработки заказа (если он имеет статус `PROCESSING`) или причина отмены заказа (если он имеет статус `CANCELLED`).  * Значения для заказа в статусе `PROCESSING`:      * `STARTED` — заказ подтвержден, его можно начать обрабатывать.      * `READY_TO_SHIP` — заказ собран и готов к отправке.  * Значения для заказа в статусе `CANCELLED`:      * `PROCESSING_EXPIRED` — значение более не используется.      * `REPLACING_ORDER` — покупатель решил заменить товар другим по собственной инициативе.      * `RESERVATION_EXPIRED` — покупатель не завершил оформление зарезервированного заказа в течение 10 минут.      * `SHOP_FAILED` — магазин не может выполнить заказ.      * `USER_CHANGED_MIND` — покупатель отменил заказ по личным причинам.      * `USER_NOT_PAID` — покупатель не оплатил заказ (для типа оплаты `PREPAID`) в течение 30 минут.      * `USER_REFUSED_DELIVERY` — покупателя не устроили условия доставки.      * `USER_REFUSED_PRODUCT` — покупателю не подошел товар.      * `USER_REFUSED_QUALITY` — покупателя не устроило качество товара.      * `USER_UNREACHABLE` — не удалось связаться с покупателем. Для отмены с этой причиной необходимо выполнить условия:        * не менее 3 звонков с 8 до 21 в часовом поясе покупателя;       * перерыв между первым и третьим звонком не менее 90 минут;       * соединение не короче 5 секунд.        Если хотя бы одно из этих условий не выполнено (кроме случая, когда номер недоступен), отменить заказ не получится. Вернется ответ с кодом ошибки 400.  * `TECHNICAL_ERROR` — техническая ошибка на стороне Маркета. Обратитесь в поддержку.  Также могут возвращаться другие значения. Обрабатывать их не требуется. 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum OrderSubstatusType {
    #[serde(rename = "RESERVATION_EXPIRED")]
    ReservationExpired,
    #[serde(rename = "USER_NOT_PAID")]
    UserNotPaid,
    #[serde(rename = "USER_UNREACHABLE")]
    UserUnreachable,
    #[serde(rename = "USER_CHANGED_MIND")]
    UserChangedMind,
    #[serde(rename = "USER_REFUSED_DELIVERY")]
    UserRefusedDelivery,
    #[serde(rename = "USER_REFUSED_PRODUCT")]
    UserRefusedProduct,
    #[serde(rename = "SHOP_FAILED")]
    ShopFailed,
    #[serde(rename = "USER_REFUSED_QUALITY")]
    UserRefusedQuality,
    #[serde(rename = "REPLACING_ORDER")]
    ReplacingOrder,
    #[serde(rename = "PROCESSING_EXPIRED")]
    ProcessingExpired,
    #[serde(rename = "PENDING_EXPIRED")]
    PendingExpired,
    #[serde(rename = "SHOP_PENDING_CANCELLED")]
    ShopPendingCancelled,
    #[serde(rename = "PENDING_CANCELLED")]
    PendingCancelled,
    #[serde(rename = "USER_FRAUD")]
    UserFraud,
    #[serde(rename = "RESERVATION_FAILED")]
    ReservationFailed,
    #[serde(rename = "USER_PLACED_OTHER_ORDER")]
    UserPlacedOtherOrder,
    #[serde(rename = "USER_BOUGHT_CHEAPER")]
    UserBoughtCheaper,
    #[serde(rename = "MISSING_ITEM")]
    MissingItem,
    #[serde(rename = "BROKEN_ITEM")]
    BrokenItem,
    #[serde(rename = "WRONG_ITEM")]
    WrongItem,
    #[serde(rename = "PICKUP_EXPIRED")]
    PickupExpired,
    #[serde(rename = "DELIVERY_PROBLEMS")]
    DeliveryProblems,
    #[serde(rename = "LATE_CONTACT")]
    LateContact,
    #[serde(rename = "CUSTOM")]
    Custom,
    #[serde(rename = "DELIVERY_SERVICE_FAILED")]
    DeliveryServiceFailed,
    #[serde(rename = "WAREHOUSE_FAILED_TO_SHIP")]
    WarehouseFailedToShip,
    #[serde(rename = "DELIVERY_SERIVCE_UNDELIVERED")]
    DeliverySerivceUndelivered,
    #[serde(rename = "DELIVERY_SERVICE_UNDELIVERED")]
    DeliveryServiceUndelivered,
    #[serde(rename = "PREORDER")]
    Preorder,
    #[serde(rename = "AWAIT_CONFIRMATION")]
    AwaitConfirmation,
    #[serde(rename = "STARTED")]
    Started,
    #[serde(rename = "PACKAGING")]
    Packaging,
    #[serde(rename = "READY_TO_SHIP")]
    ReadyToShip,
    #[serde(rename = "SHIPPED")]
    Shipped,
    #[serde(rename = "ASYNC_PROCESSING")]
    AsyncProcessing,
    #[serde(rename = "USER_REFUSED_TO_PROVIDE_PERSONAL_DATA")]
    UserRefusedToProvidePersonalData,
    #[serde(rename = "WAITING_USER_INPUT")]
    WaitingUserInput,
    #[serde(rename = "WAITING_BANK_DECISION")]
    WaitingBankDecision,
    #[serde(rename = "BANK_REJECT_CREDIT_OFFER")]
    BankRejectCreditOffer,
    #[serde(rename = "CUSTOMER_REJECT_CREDIT_OFFER")]
    CustomerRejectCreditOffer,
    #[serde(rename = "CREDIT_OFFER_FAILED")]
    CreditOfferFailed,
    #[serde(rename = "AWAIT_DELIVERY_DATES_CONFIRMATION")]
    AwaitDeliveryDatesConfirmation,
    #[serde(rename = "SERVICE_FAULT")]
    ServiceFault,
    #[serde(rename = "DELIVERY_SERVICE_RECEIVED")]
    DeliveryServiceReceived,
    #[serde(rename = "USER_RECEIVED")]
    UserReceived,
    #[serde(rename = "WAITING_FOR_STOCKS")]
    WaitingForStocks,
    #[serde(rename = "AS_PART_OF_MULTI_ORDER")]
    AsPartOfMultiOrder,
    #[serde(rename = "READY_FOR_LAST_MILE")]
    ReadyForLastMile,
    #[serde(rename = "LAST_MILE_STARTED")]
    LastMileStarted,
    #[serde(rename = "ANTIFRAUD")]
    Antifraud,
    #[serde(rename = "DELIVERY_USER_NOT_RECEIVED")]
    DeliveryUserNotReceived,
    #[serde(rename = "DELIVERY_SERVICE_DELIVERED")]
    DeliveryServiceDelivered,
    #[serde(rename = "DELIVERED_USER_NOT_RECEIVED")]
    DeliveredUserNotReceived,
    #[serde(rename = "USER_WANTED_ANOTHER_PAYMENT_METHOD")]
    UserWantedAnotherPaymentMethod,
    #[serde(rename = "USER_RECEIVED_TECHNICAL_ERROR")]
    UserReceivedTechnicalError,
    #[serde(rename = "USER_FORGOT_TO_USE_BONUS")]
    UserForgotToUseBonus,
    #[serde(rename = "RECEIVED_ON_DISTRIBUTION_CENTER")]
    ReceivedOnDistributionCenter,
    #[serde(rename = "DELIVERY_SERVICE_NOT_RECEIVED")]
    DeliveryServiceNotReceived,
    #[serde(rename = "DELIVERY_SERVICE_LOST")]
    DeliveryServiceLost,
    #[serde(rename = "SHIPPED_TO_WRONG_DELIVERY_SERVICE")]
    ShippedToWrongDeliveryService,
    #[serde(rename = "DELIVERED_USER_RECEIVED")]
    DeliveredUserReceived,
    #[serde(rename = "WAITING_TINKOFF_DECISION")]
    WaitingTinkoffDecision,
    #[serde(rename = "COURIER_SEARCH")]
    CourierSearch,
    #[serde(rename = "COURIER_FOUND")]
    CourierFound,
    #[serde(rename = "COURIER_IN_TRANSIT_TO_SENDER")]
    CourierInTransitToSender,
    #[serde(rename = "COURIER_ARRIVED_TO_SENDER")]
    CourierArrivedToSender,
    #[serde(rename = "COURIER_RECEIVED")]
    CourierReceived,
    #[serde(rename = "COURIER_NOT_FOUND")]
    CourierNotFound,
    #[serde(rename = "COURIER_NOT_DELIVER_ORDER")]
    CourierNotDeliverOrder,
    #[serde(rename = "COURIER_RETURNS_ORDER")]
    CourierReturnsOrder,
    #[serde(rename = "COURIER_RETURNED_ORDER")]
    CourierReturnedOrder,
    #[serde(rename = "WAITING_USER_DELIVERY_INPUT")]
    WaitingUserDeliveryInput,
    #[serde(rename = "PICKUP_SERVICE_RECEIVED")]
    PickupServiceReceived,
    #[serde(rename = "PICKUP_USER_RECEIVED")]
    PickupUserReceived,
    #[serde(rename = "CANCELLED_COURIER_NOT_FOUND")]
    CancelledCourierNotFound,
    #[serde(rename = "COURIER_NOT_COME_FOR_ORDER")]
    CourierNotComeForOrder,
    #[serde(rename = "DELIVERY_NOT_MANAGED_REGION")]
    DeliveryNotManagedRegion,
    #[serde(rename = "INCOMPLETE_CONTACT_INFORMATION")]
    IncompleteContactInformation,
    #[serde(rename = "INCOMPLETE_MULTI_ORDER")]
    IncompleteMultiOrder,
    #[serde(rename = "INAPPROPRIATE_WEIGHT_SIZE")]
    InappropriateWeightSize,
    #[serde(rename = "TECHNICAL_ERROR")]
    TechnicalError,
    #[serde(rename = "SORTING_CENTER_LOST")]
    SortingCenterLost,
    #[serde(rename = "COURIER_SEARCH_NOT_STARTED")]
    CourierSearchNotStarted,
    #[serde(rename = "LOST")]
    Lost,
    #[serde(rename = "AWAIT_PAYMENT")]
    AwaitPayment,
    #[serde(rename = "AWAIT_LAVKA_RESERVATION")]
    AwaitLavkaReservation,
    #[serde(rename = "USER_WANTS_TO_CHANGE_ADDRESS")]
    UserWantsToChangeAddress,
    #[serde(rename = "FULL_NOT_RANSOM")]
    FullNotRansom,
    #[serde(rename = "PRESCRIPTION_MISMATCH")]
    PrescriptionMismatch,
    #[serde(rename = "DROPOFF_LOST")]
    DropoffLost,
    #[serde(rename = "DROPOFF_CLOSED")]
    DropoffClosed,
    #[serde(rename = "DELIVERY_TO_STORE_STARTED")]
    DeliveryToStoreStarted,
    #[serde(rename = "USER_WANTS_TO_CHANGE_DELIVERY_DATE")]
    UserWantsToChangeDeliveryDate,
    #[serde(rename = "WRONG_ITEM_DELIVERED")]
    WrongItemDelivered,
    #[serde(rename = "DAMAGED_BOX")]
    DamagedBox,
    #[serde(rename = "AWAIT_DELIVERY_DATES")]
    AwaitDeliveryDates,
    #[serde(rename = "LAST_MILE_COURIER_SEARCH")]
    LastMileCourierSearch,
    #[serde(rename = "PICKUP_POINT_CLOSED")]
    PickupPointClosed,
    #[serde(rename = "LEGAL_INFO_CHANGED")]
    LegalInfoChanged,
    #[serde(rename = "USER_HAS_NO_TIME_TO_PICKUP_ORDER")]
    UserHasNoTimeToPickupOrder,
    #[serde(rename = "DELIVERY_CUSTOMS_ARRIVED")]
    DeliveryCustomsArrived,
    #[serde(rename = "DELIVERY_CUSTOMS_CLEARED")]
    DeliveryCustomsCleared,
    #[serde(rename = "FIRST_MILE_DELIVERY_SERVICE_RECEIVED")]
    FirstMileDeliveryServiceReceived,
    #[serde(rename = "AWAIT_AUTO_DELIVERY_DATES")]
    AwaitAutoDeliveryDates,
    #[serde(rename = "AWAIT_USER_PERSONAL_DATA")]
    AwaitUserPersonalData,
    #[serde(rename = "NO_PERSONAL_DATA_EXPIRED")]
    NoPersonalDataExpired,
    #[serde(rename = "CUSTOMS_PROBLEMS")]
    CustomsProblems,
    #[serde(rename = "AWAIT_CASHIER")]
    AwaitCashier,
    #[serde(rename = "WAITING_POSTPAID_BUDGET_RESERVATION")]
    WaitingPostpaidBudgetReservation,
    #[serde(rename = "AWAIT_SERVICEABLE_CONFIRMATION")]
    AwaitServiceableConfirmation,
    #[serde(rename = "POSTPAID_BUDGET_RESERVATION_FAILED")]
    PostpaidBudgetReservationFailed,
    #[serde(rename = "AWAIT_CUSTOM_PRICE_CONFIRMATION")]
    AwaitCustomPriceConfirmation,
    #[serde(rename = "READY_FOR_PICKUP")]
    ReadyForPickup,
    #[serde(rename = "UNKNOWN")]
    Unknown,

}

impl std::fmt::Display for OrderSubstatusType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::ReservationExpired => write!(f, "RESERVATION_EXPIRED"),
            Self::UserNotPaid => write!(f, "USER_NOT_PAID"),
            Self::UserUnreachable => write!(f, "USER_UNREACHABLE"),
            Self::UserChangedMind => write!(f, "USER_CHANGED_MIND"),
            Self::UserRefusedDelivery => write!(f, "USER_REFUSED_DELIVERY"),
            Self::UserRefusedProduct => write!(f, "USER_REFUSED_PRODUCT"),
            Self::ShopFailed => write!(f, "SHOP_FAILED"),
            Self::UserRefusedQuality => write!(f, "USER_REFUSED_QUALITY"),
            Self::ReplacingOrder => write!(f, "REPLACING_ORDER"),
            Self::ProcessingExpired => write!(f, "PROCESSING_EXPIRED"),
            Self::PendingExpired => write!(f, "PENDING_EXPIRED"),
            Self::ShopPendingCancelled => write!(f, "SHOP_PENDING_CANCELLED"),
            Self::PendingCancelled => write!(f, "PENDING_CANCELLED"),
            Self::UserFraud => write!(f, "USER_FRAUD"),
            Self::ReservationFailed => write!(f, "RESERVATION_FAILED"),
            Self::UserPlacedOtherOrder => write!(f, "USER_PLACED_OTHER_ORDER"),
            Self::UserBoughtCheaper => write!(f, "USER_BOUGHT_CHEAPER"),
            Self::MissingItem => write!(f, "MISSING_ITEM"),
            Self::BrokenItem => write!(f, "BROKEN_ITEM"),
            Self::WrongItem => write!(f, "WRONG_ITEM"),
            Self::PickupExpired => write!(f, "PICKUP_EXPIRED"),
            Self::DeliveryProblems => write!(f, "DELIVERY_PROBLEMS"),
            Self::LateContact => write!(f, "LATE_CONTACT"),
            Self::Custom => write!(f, "CUSTOM"),
            Self::DeliveryServiceFailed => write!(f, "DELIVERY_SERVICE_FAILED"),
            Self::WarehouseFailedToShip => write!(f, "WAREHOUSE_FAILED_TO_SHIP"),
            Self::DeliverySerivceUndelivered => write!(f, "DELIVERY_SERIVCE_UNDELIVERED"),
            Self::DeliveryServiceUndelivered => write!(f, "DELIVERY_SERVICE_UNDELIVERED"),
            Self::Preorder => write!(f, "PREORDER"),
            Self::AwaitConfirmation => write!(f, "AWAIT_CONFIRMATION"),
            Self::Started => write!(f, "STARTED"),
            Self::Packaging => write!(f, "PACKAGING"),
            Self::ReadyToShip => write!(f, "READY_TO_SHIP"),
            Self::Shipped => write!(f, "SHIPPED"),
            Self::AsyncProcessing => write!(f, "ASYNC_PROCESSING"),
            Self::UserRefusedToProvidePersonalData => write!(f, "USER_REFUSED_TO_PROVIDE_PERSONAL_DATA"),
            Self::WaitingUserInput => write!(f, "WAITING_USER_INPUT"),
            Self::WaitingBankDecision => write!(f, "WAITING_BANK_DECISION"),
            Self::BankRejectCreditOffer => write!(f, "BANK_REJECT_CREDIT_OFFER"),
            Self::CustomerRejectCreditOffer => write!(f, "CUSTOMER_REJECT_CREDIT_OFFER"),
            Self::CreditOfferFailed => write!(f, "CREDIT_OFFER_FAILED"),
            Self::AwaitDeliveryDatesConfirmation => write!(f, "AWAIT_DELIVERY_DATES_CONFIRMATION"),
            Self::ServiceFault => write!(f, "SERVICE_FAULT"),
            Self::DeliveryServiceReceived => write!(f, "DELIVERY_SERVICE_RECEIVED"),
            Self::UserReceived => write!(f, "USER_RECEIVED"),
            Self::WaitingForStocks => write!(f, "WAITING_FOR_STOCKS"),
            Self::AsPartOfMultiOrder => write!(f, "AS_PART_OF_MULTI_ORDER"),
            Self::ReadyForLastMile => write!(f, "READY_FOR_LAST_MILE"),
            Self::LastMileStarted => write!(f, "LAST_MILE_STARTED"),
            Self::Antifraud => write!(f, "ANTIFRAUD"),
            Self::DeliveryUserNotReceived => write!(f, "DELIVERY_USER_NOT_RECEIVED"),
            Self::DeliveryServiceDelivered => write!(f, "DELIVERY_SERVICE_DELIVERED"),
            Self::DeliveredUserNotReceived => write!(f, "DELIVERED_USER_NOT_RECEIVED"),
            Self::UserWantedAnotherPaymentMethod => write!(f, "USER_WANTED_ANOTHER_PAYMENT_METHOD"),
            Self::UserReceivedTechnicalError => write!(f, "USER_RECEIVED_TECHNICAL_ERROR"),
            Self::UserForgotToUseBonus => write!(f, "USER_FORGOT_TO_USE_BONUS"),
            Self::ReceivedOnDistributionCenter => write!(f, "RECEIVED_ON_DISTRIBUTION_CENTER"),
            Self::DeliveryServiceNotReceived => write!(f, "DELIVERY_SERVICE_NOT_RECEIVED"),
            Self::DeliveryServiceLost => write!(f, "DELIVERY_SERVICE_LOST"),
            Self::ShippedToWrongDeliveryService => write!(f, "SHIPPED_TO_WRONG_DELIVERY_SERVICE"),
            Self::DeliveredUserReceived => write!(f, "DELIVERED_USER_RECEIVED"),
            Self::WaitingTinkoffDecision => write!(f, "WAITING_TINKOFF_DECISION"),
            Self::CourierSearch => write!(f, "COURIER_SEARCH"),
            Self::CourierFound => write!(f, "COURIER_FOUND"),
            Self::CourierInTransitToSender => write!(f, "COURIER_IN_TRANSIT_TO_SENDER"),
            Self::CourierArrivedToSender => write!(f, "COURIER_ARRIVED_TO_SENDER"),
            Self::CourierReceived => write!(f, "COURIER_RECEIVED"),
            Self::CourierNotFound => write!(f, "COURIER_NOT_FOUND"),
            Self::CourierNotDeliverOrder => write!(f, "COURIER_NOT_DELIVER_ORDER"),
            Self::CourierReturnsOrder => write!(f, "COURIER_RETURNS_ORDER"),
            Self::CourierReturnedOrder => write!(f, "COURIER_RETURNED_ORDER"),
            Self::WaitingUserDeliveryInput => write!(f, "WAITING_USER_DELIVERY_INPUT"),
            Self::PickupServiceReceived => write!(f, "PICKUP_SERVICE_RECEIVED"),
            Self::PickupUserReceived => write!(f, "PICKUP_USER_RECEIVED"),
            Self::CancelledCourierNotFound => write!(f, "CANCELLED_COURIER_NOT_FOUND"),
            Self::CourierNotComeForOrder => write!(f, "COURIER_NOT_COME_FOR_ORDER"),
            Self::DeliveryNotManagedRegion => write!(f, "DELIVERY_NOT_MANAGED_REGION"),
            Self::IncompleteContactInformation => write!(f, "INCOMPLETE_CONTACT_INFORMATION"),
            Self::IncompleteMultiOrder => write!(f, "INCOMPLETE_MULTI_ORDER"),
            Self::InappropriateWeightSize => write!(f, "INAPPROPRIATE_WEIGHT_SIZE"),
            Self::TechnicalError => write!(f, "TECHNICAL_ERROR"),
            Self::SortingCenterLost => write!(f, "SORTING_CENTER_LOST"),
            Self::CourierSearchNotStarted => write!(f, "COURIER_SEARCH_NOT_STARTED"),
            Self::Lost => write!(f, "LOST"),
            Self::AwaitPayment => write!(f, "AWAIT_PAYMENT"),
            Self::AwaitLavkaReservation => write!(f, "AWAIT_LAVKA_RESERVATION"),
            Self::UserWantsToChangeAddress => write!(f, "USER_WANTS_TO_CHANGE_ADDRESS"),
            Self::FullNotRansom => write!(f, "FULL_NOT_RANSOM"),
            Self::PrescriptionMismatch => write!(f, "PRESCRIPTION_MISMATCH"),
            Self::DropoffLost => write!(f, "DROPOFF_LOST"),
            Self::DropoffClosed => write!(f, "DROPOFF_CLOSED"),
            Self::DeliveryToStoreStarted => write!(f, "DELIVERY_TO_STORE_STARTED"),
            Self::UserWantsToChangeDeliveryDate => write!(f, "USER_WANTS_TO_CHANGE_DELIVERY_DATE"),
            Self::WrongItemDelivered => write!(f, "WRONG_ITEM_DELIVERED"),
            Self::DamagedBox => write!(f, "DAMAGED_BOX"),
            Self::AwaitDeliveryDates => write!(f, "AWAIT_DELIVERY_DATES"),
            Self::LastMileCourierSearch => write!(f, "LAST_MILE_COURIER_SEARCH"),
            Self::PickupPointClosed => write!(f, "PICKUP_POINT_CLOSED"),
            Self::LegalInfoChanged => write!(f, "LEGAL_INFO_CHANGED"),
            Self::UserHasNoTimeToPickupOrder => write!(f, "USER_HAS_NO_TIME_TO_PICKUP_ORDER"),
            Self::DeliveryCustomsArrived => write!(f, "DELIVERY_CUSTOMS_ARRIVED"),
            Self::DeliveryCustomsCleared => write!(f, "DELIVERY_CUSTOMS_CLEARED"),
            Self::FirstMileDeliveryServiceReceived => write!(f, "FIRST_MILE_DELIVERY_SERVICE_RECEIVED"),
            Self::AwaitAutoDeliveryDates => write!(f, "AWAIT_AUTO_DELIVERY_DATES"),
            Self::AwaitUserPersonalData => write!(f, "AWAIT_USER_PERSONAL_DATA"),
            Self::NoPersonalDataExpired => write!(f, "NO_PERSONAL_DATA_EXPIRED"),
            Self::CustomsProblems => write!(f, "CUSTOMS_PROBLEMS"),
            Self::AwaitCashier => write!(f, "AWAIT_CASHIER"),
            Self::WaitingPostpaidBudgetReservation => write!(f, "WAITING_POSTPAID_BUDGET_RESERVATION"),
            Self::AwaitServiceableConfirmation => write!(f, "AWAIT_SERVICEABLE_CONFIRMATION"),
            Self::PostpaidBudgetReservationFailed => write!(f, "POSTPAID_BUDGET_RESERVATION_FAILED"),
            Self::AwaitCustomPriceConfirmation => write!(f, "AWAIT_CUSTOM_PRICE_CONFIRMATION"),
            Self::ReadyForPickup => write!(f, "READY_FOR_PICKUP"),
            Self::Unknown => write!(f, "UNKNOWN"),
        }
    }
}

impl Default for OrderSubstatusType {
    fn default() -> OrderSubstatusType {
        Self::ReservationExpired
    }
}

