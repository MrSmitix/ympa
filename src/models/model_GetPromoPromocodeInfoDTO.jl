# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""GetPromoPromocodeInfoDTO
Информация для типа &#x60;MARKET_PROMOCODE&#x60;.  Параметр заполняется только для этого типа акции. 

    GetPromoPromocodeInfoDTO(;
        promocode=nothing,
        discount=nothing,
    )

    - promocode::String : Промокод.
    - discount::Int64 : Процент скидки по промокоду.
"""
Base.@kwdef mutable struct GetPromoPromocodeInfoDTO <: OpenAPI.APIModel
    promocode::Union{Nothing, String} = nothing
    discount::Union{Nothing, Int64} = nothing

    function GetPromoPromocodeInfoDTO(promocode, discount, )
        OpenAPI.validate_property(GetPromoPromocodeInfoDTO, Symbol("promocode"), promocode)
        OpenAPI.validate_property(GetPromoPromocodeInfoDTO, Symbol("discount"), discount)
        return new(promocode, discount, )
    end
end # type GetPromoPromocodeInfoDTO

const _property_types_GetPromoPromocodeInfoDTO = Dict{Symbol,String}(Symbol("promocode")=>"String", Symbol("discount")=>"Int64", )
OpenAPI.property_type(::Type{ GetPromoPromocodeInfoDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_GetPromoPromocodeInfoDTO[name]))}

function check_required(o::GetPromoPromocodeInfoDTO)
    o.promocode === nothing && (return false)
    o.discount === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ GetPromoPromocodeInfoDTO }, name::Symbol, val)
    if name === Symbol("discount")
        OpenAPI.validate_param(name, "GetPromoPromocodeInfoDTO", :format, val, "int32")
    end
end
