# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""SetReturnDecisionRequest
Решения по позиции в возврате.

    SetReturnDecisionRequest(;
        returnItemId=nothing,
        decisionType=nothing,
        comment=nothing,
    )

    - returnItemId::Int64 : Идентификатор товара в возврате.
    - decisionType::ReturnRequestDecisionType
    - comment::String : Комментарий к решению. Укажите:  * для &#x60;REFUND_MONEY_INCLUDING_SHIPMENT&#x60;— стоимость обратной пересылки;  * для &#x60;REPAIR&#x60; — когда вы устраните недостатки товара;  * для &#x60;DECLINE_REFUND&#x60; — причину отказа;  * для &#x60;OTHER_DECISION&#x60; — какое решение вы предлагаете. 
"""
Base.@kwdef mutable struct SetReturnDecisionRequest <: OpenAPI.APIModel
    returnItemId::Union{Nothing, Int64} = nothing
    decisionType = nothing # spec type: Union{ Nothing, ReturnRequestDecisionType }
    comment::Union{Nothing, String} = nothing

    function SetReturnDecisionRequest(returnItemId, decisionType, comment, )
        OpenAPI.validate_property(SetReturnDecisionRequest, Symbol("returnItemId"), returnItemId)
        OpenAPI.validate_property(SetReturnDecisionRequest, Symbol("decisionType"), decisionType)
        OpenAPI.validate_property(SetReturnDecisionRequest, Symbol("comment"), comment)
        return new(returnItemId, decisionType, comment, )
    end
end # type SetReturnDecisionRequest

const _property_types_SetReturnDecisionRequest = Dict{Symbol,String}(Symbol("returnItemId")=>"Int64", Symbol("decisionType")=>"ReturnRequestDecisionType", Symbol("comment")=>"String", )
OpenAPI.property_type(::Type{ SetReturnDecisionRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_SetReturnDecisionRequest[name]))}

function check_required(o::SetReturnDecisionRequest)
    o.returnItemId === nothing && (return false)
    o.decisionType === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ SetReturnDecisionRequest }, name::Symbol, val)
    if name === Symbol("returnItemId")
        OpenAPI.validate_param(name, "SetReturnDecisionRequest", :format, val, "int64")
    end
end
