# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""WarehousesDTO
Информация о складах и группах складов.

    WarehousesDTO(;
        warehouses=nothing,
        warehouseGroups=nothing,
    )

    - warehouses::Vector{WarehouseDTO} : Список складов, не входящих в группы.
    - warehouseGroups::Vector{WarehouseGroupDTO} : Список групп складов.
"""
Base.@kwdef mutable struct WarehousesDTO <: OpenAPI.APIModel
    warehouses::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{WarehouseDTO} }
    warehouseGroups::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{WarehouseGroupDTO} }

    function WarehousesDTO(warehouses, warehouseGroups, )
        OpenAPI.validate_property(WarehousesDTO, Symbol("warehouses"), warehouses)
        OpenAPI.validate_property(WarehousesDTO, Symbol("warehouseGroups"), warehouseGroups)
        return new(warehouses, warehouseGroups, )
    end
end # type WarehousesDTO

const _property_types_WarehousesDTO = Dict{Symbol,String}(Symbol("warehouses")=>"Vector{WarehouseDTO}", Symbol("warehouseGroups")=>"Vector{WarehouseGroupDTO}", )
OpenAPI.property_type(::Type{ WarehousesDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_WarehousesDTO[name]))}

function check_required(o::WarehousesDTO)
    o.warehouses === nothing && (return false)
    o.warehouseGroups === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ WarehousesDTO }, name::Symbol, val)
end
