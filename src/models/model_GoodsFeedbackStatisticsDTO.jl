# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""GoodsFeedbackStatisticsDTO
Статистическая информация по отзыву.

    GoodsFeedbackStatisticsDTO(;
        rating=nothing,
        commentsCount=nothing,
        recommended=nothing,
        paidAmount=nothing,
    )

    - rating::Int64 : Оценка товара.
    - commentsCount::Int64 : Количество комментариев к отзыву.  Учитываются только ответы на отзывы, а не дочерние комментарии. 
    - recommended::Bool : Рекомендуют ли этот товар.
    - paidAmount::Int64 : Количество баллов Плюса, которое автор получил за отзыв.
"""
Base.@kwdef mutable struct GoodsFeedbackStatisticsDTO <: OpenAPI.APIModel
    rating::Union{Nothing, Int64} = nothing
    commentsCount::Union{Nothing, Int64} = nothing
    recommended::Union{Nothing, Bool} = nothing
    paidAmount::Union{Nothing, Int64} = nothing

    function GoodsFeedbackStatisticsDTO(rating, commentsCount, recommended, paidAmount, )
        OpenAPI.validate_property(GoodsFeedbackStatisticsDTO, Symbol("rating"), rating)
        OpenAPI.validate_property(GoodsFeedbackStatisticsDTO, Symbol("commentsCount"), commentsCount)
        OpenAPI.validate_property(GoodsFeedbackStatisticsDTO, Symbol("recommended"), recommended)
        OpenAPI.validate_property(GoodsFeedbackStatisticsDTO, Symbol("paidAmount"), paidAmount)
        return new(rating, commentsCount, recommended, paidAmount, )
    end
end # type GoodsFeedbackStatisticsDTO

const _property_types_GoodsFeedbackStatisticsDTO = Dict{Symbol,String}(Symbol("rating")=>"Int64", Symbol("commentsCount")=>"Int64", Symbol("recommended")=>"Bool", Symbol("paidAmount")=>"Int64", )
OpenAPI.property_type(::Type{ GoodsFeedbackStatisticsDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_GoodsFeedbackStatisticsDTO[name]))}

function check_required(o::GoodsFeedbackStatisticsDTO)
    o.rating === nothing && (return false)
    o.commentsCount === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ GoodsFeedbackStatisticsDTO }, name::Symbol, val)
    if name === Symbol("rating")
        OpenAPI.validate_param(name, "GoodsFeedbackStatisticsDTO", :format, val, "int32")
    end
    if name === Symbol("rating")
        OpenAPI.validate_param(name, "GoodsFeedbackStatisticsDTO", :maximum, val, 5, false)
        OpenAPI.validate_param(name, "GoodsFeedbackStatisticsDTO", :minimum, val, 1, false)
    end
    if name === Symbol("commentsCount")
        OpenAPI.validate_param(name, "GoodsFeedbackStatisticsDTO", :format, val, "int64")
    end
    if name === Symbol("paidAmount")
        OpenAPI.validate_param(name, "GoodsFeedbackStatisticsDTO", :format, val, "int64")
    end
end
