// tslint:disable
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Информация о предложении.
 * @export
 * @interface ModelOfferDTO
 */
export interface ModelOfferDTO  {
    /**
     * Скидка на предложение в процентах.
     * @type {number}
     * @memberof ModelOfferDTO
     */
    discount?: number;
    /**
     * Наименование предложения.
     * @type {string}
     * @memberof ModelOfferDTO
     */
    name?: string;
    /**
     * Позиция предложения в выдаче Маркета на карточке модели.
     * @type {number}
     * @memberof ModelOfferDTO
     */
    pos?: number;
    /**
     * Цена предложения без скидки магазина.
     * @type {number}
     * @memberof ModelOfferDTO
     */
    preDiscountPrice?: number;
    /**
     * Цена предложения без скидки, которую получает покупатель при оплате через Yandex Pay.
     * @type {number}
     * @memberof ModelOfferDTO
     */
    price?: number;
    /**
     * Идентификатор региона предложения (регион, откуда доставляется товар).  Сначала показываются предложения, доставляемые из региона, указанного в запросе в параметре `regionId`. Предложения, доставляемые из других регионов, показываются после них. 
     * @type {number}
     * @memberof ModelOfferDTO
     */
    regionId?: number;
    /**
     * Стоимость доставки товара в регион:  * `0` — доставка осуществляется бесплатно. * `-1` — магазин не осуществляет доставку этого товара (самовывоз).  Если стоимость доставки неизвестна, параметр не выводится. 
     * @type {number}
     * @memberof ModelOfferDTO
     */
    shippingCost?: number;
    /**
     * Название магазина (в том виде, в котором отображается на Маркете).
     * @type {string}
     * @memberof ModelOfferDTO
     */
    shopName?: string;
    /**
     * Рейтинг магазина.  Возможные значения: * `-1` — у магазинов, недавно появившихся на Маркете, рейтинг появляется не сразу. До момента появления рейтинга для таких магазинов возвращается значение `-1`. * `1`. * `2`. * `3`. * `4`. * `5`. 
     * @type {number}
     * @memberof ModelOfferDTO
     */
    shopRating?: number;
    /**
     * {% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %} 
     * @type {number}
     * @memberof ModelOfferDTO
     */
    inStock?: number;
}

export function ModelOfferDTOFromJSON(json: any): ModelOfferDTO {
    return {
        'discount': !exists(json, 'discount') ? undefined : json['discount'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'pos': !exists(json, 'pos') ? undefined : json['pos'],
        'preDiscountPrice': !exists(json, 'preDiscountPrice') ? undefined : json['preDiscountPrice'],
        'price': !exists(json, 'price') ? undefined : json['price'],
        'regionId': !exists(json, 'regionId') ? undefined : json['regionId'],
        'shippingCost': !exists(json, 'shippingCost') ? undefined : json['shippingCost'],
        'shopName': !exists(json, 'shopName') ? undefined : json['shopName'],
        'shopRating': !exists(json, 'shopRating') ? undefined : json['shopRating'],
        'inStock': !exists(json, 'inStock') ? undefined : json['inStock'],
    };
}

export function ModelOfferDTOToJSON(value?: ModelOfferDTO): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'discount': value.discount,
        'name': value.name,
        'pos': value.pos,
        'preDiscountPrice': value.preDiscountPrice,
        'price': value.price,
        'regionId': value.regionId,
        'shippingCost': value.shippingCost,
        'shopName': value.shopName,
        'shopRating': value.shopRating,
        'inStock': value.inStock,
    };
}


