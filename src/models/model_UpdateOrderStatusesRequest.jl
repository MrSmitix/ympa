# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""UpdateOrderStatusesRequest
Список заказов.

    UpdateOrderStatusesRequest(;
        orders=nothing,
    )

    - orders::Vector{OrderStateDTO} : Список заказов.
"""
Base.@kwdef mutable struct UpdateOrderStatusesRequest <: OpenAPI.APIModel
    orders::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{OrderStateDTO} }

    function UpdateOrderStatusesRequest(orders, )
        OpenAPI.validate_property(UpdateOrderStatusesRequest, Symbol("orders"), orders)
        return new(orders, )
    end
end # type UpdateOrderStatusesRequest

const _property_types_UpdateOrderStatusesRequest = Dict{Symbol,String}(Symbol("orders")=>"Vector{OrderStateDTO}", )
OpenAPI.property_type(::Type{ UpdateOrderStatusesRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_UpdateOrderStatusesRequest[name]))}

function check_required(o::UpdateOrderStatusesRequest)
    o.orders === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ UpdateOrderStatusesRequest }, name::Symbol, val)
    if name === Symbol("orders")
        OpenAPI.validate_param(name, "UpdateOrderStatusesRequest", :maxItems, val, 30)
        OpenAPI.validate_param(name, "UpdateOrderStatusesRequest", :minItems, val, 1)
    end
end
