// tslint:disable
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    QuantumDTO,
    QuantumDTOFromJSON,
    QuantumDTOToJSON,
} from './';

/**
 * Информация о новой цене на товар.
 * @export
 * @interface BaseCampaignOfferDTO
 */
export interface BaseCampaignOfferDTO  {
    /**
     * Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
     * @type {string}
     * @memberof BaseCampaignOfferDTO
     */
    offerId: string;
    /**
     * 
     * @type {QuantumDTO}
     * @memberof BaseCampaignOfferDTO
     */
    quantum?: QuantumDTO;
    /**
     * Есть ли товар в продаже. 
     * @type {boolean}
     * @memberof BaseCampaignOfferDTO
     */
    available?: boolean;
}

export function BaseCampaignOfferDTOFromJSON(json: any): BaseCampaignOfferDTO {
    return {
        'offerId': json['offerId'],
        'quantum': !exists(json, 'quantum') ? undefined : QuantumDTOFromJSON(json['quantum']),
        'available': !exists(json, 'available') ? undefined : json['available'],
    };
}

export function BaseCampaignOfferDTOToJSON(value?: BaseCampaignOfferDTO): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'offerId': value.offerId,
        'quantum': QuantumDTOToJSON(value.quantum),
        'available': value.available,
    };
}


