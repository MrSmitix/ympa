# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""SetShipmentPalletsCountRequest
Запрос на передачу количества упаковок в отгрузке.

    SetShipmentPalletsCountRequest(;
        placesCount=nothing,
    )

    - placesCount::Int64 : Количество упаковок в отгрузке.
"""
Base.@kwdef mutable struct SetShipmentPalletsCountRequest <: OpenAPI.APIModel
    placesCount::Union{Nothing, Int64} = nothing

    function SetShipmentPalletsCountRequest(placesCount, )
        OpenAPI.validate_property(SetShipmentPalletsCountRequest, Symbol("placesCount"), placesCount)
        return new(placesCount, )
    end
end # type SetShipmentPalletsCountRequest

const _property_types_SetShipmentPalletsCountRequest = Dict{Symbol,String}(Symbol("placesCount")=>"Int64", )
OpenAPI.property_type(::Type{ SetShipmentPalletsCountRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_SetShipmentPalletsCountRequest[name]))}

function check_required(o::SetShipmentPalletsCountRequest)
    o.placesCount === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ SetShipmentPalletsCountRequest }, name::Symbol, val)
    if name === Symbol("placesCount")
        OpenAPI.validate_param(name, "SetShipmentPalletsCountRequest", :format, val, "int32")
    end
    if name === Symbol("placesCount")
        OpenAPI.validate_param(name, "SetShipmentPalletsCountRequest", :minimum, val, 0, false)
    end
end
