# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""OrderItemPromoDTO
Информация о вознаграждениях партнеру за скидки на товар по промокодам, купонам и акциям.

    OrderItemPromoDTO(;
        type=nothing,
        discount=nothing,
        subsidy=nothing,
        shopPromoId=nothing,
        marketPromoId=nothing,
    )

    - type::OrderPromoType
    - discount::Float64 : Размер пользовательской скидки в валюте покупателя. 
    - subsidy::Float64 : Вознаграждение партнеру от Маркета за товар, проданный в рамках акции.  Передается в валюте заказа. 
    - shopPromoId::String : Идентификатор акции поставщика. 
    - marketPromoId::String : Идентификатор акции в рамках соглашения на оказание услуг по продвижению сервиса между Маркетом и партнером.  Параметр передается, только если параметр &#x60;type&#x3D;MARKET_DEAL&#x60;. 
"""
Base.@kwdef mutable struct OrderItemPromoDTO <: OpenAPI.APIModel
    type = nothing # spec type: Union{ Nothing, OrderPromoType }
    discount::Union{Nothing, Float64} = nothing
    subsidy::Union{Nothing, Float64} = nothing
    shopPromoId::Union{Nothing, String} = nothing
    marketPromoId::Union{Nothing, String} = nothing

    function OrderItemPromoDTO(type, discount, subsidy, shopPromoId, marketPromoId, )
        OpenAPI.validate_property(OrderItemPromoDTO, Symbol("type"), type)
        OpenAPI.validate_property(OrderItemPromoDTO, Symbol("discount"), discount)
        OpenAPI.validate_property(OrderItemPromoDTO, Symbol("subsidy"), subsidy)
        OpenAPI.validate_property(OrderItemPromoDTO, Symbol("shopPromoId"), shopPromoId)
        OpenAPI.validate_property(OrderItemPromoDTO, Symbol("marketPromoId"), marketPromoId)
        return new(type, discount, subsidy, shopPromoId, marketPromoId, )
    end
end # type OrderItemPromoDTO

const _property_types_OrderItemPromoDTO = Dict{Symbol,String}(Symbol("type")=>"OrderPromoType", Symbol("discount")=>"Float64", Symbol("subsidy")=>"Float64", Symbol("shopPromoId")=>"String", Symbol("marketPromoId")=>"String", )
OpenAPI.property_type(::Type{ OrderItemPromoDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_OrderItemPromoDTO[name]))}

function check_required(o::OrderItemPromoDTO)
    o.type === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ OrderItemPromoDTO }, name::Symbol, val)
    if name === Symbol("discount")
        OpenAPI.validate_param(name, "OrderItemPromoDTO", :format, val, "decimal")
    end
    if name === Symbol("subsidy")
        OpenAPI.validate_param(name, "OrderItemPromoDTO", :format, val, "decimal")
    end
end
