# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""SetOrderDeliveryTrackCodeRequest

    SetOrderDeliveryTrackCodeRequest(;
        trackCode=nothing,
        deliveryServiceId=nothing,
    )

    - trackCode::String : Трек‑номер посылки.
    - deliveryServiceId::Int64 : Идентификатор службы доставки. Информацию о службе доставки можно получить с помощью запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md).
"""
Base.@kwdef mutable struct SetOrderDeliveryTrackCodeRequest <: OpenAPI.APIModel
    trackCode::Union{Nothing, String} = nothing
    deliveryServiceId::Union{Nothing, Int64} = nothing

    function SetOrderDeliveryTrackCodeRequest(trackCode, deliveryServiceId, )
        OpenAPI.validate_property(SetOrderDeliveryTrackCodeRequest, Symbol("trackCode"), trackCode)
        OpenAPI.validate_property(SetOrderDeliveryTrackCodeRequest, Symbol("deliveryServiceId"), deliveryServiceId)
        return new(trackCode, deliveryServiceId, )
    end
end # type SetOrderDeliveryTrackCodeRequest

const _property_types_SetOrderDeliveryTrackCodeRequest = Dict{Symbol,String}(Symbol("trackCode")=>"String", Symbol("deliveryServiceId")=>"Int64", )
OpenAPI.property_type(::Type{ SetOrderDeliveryTrackCodeRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_SetOrderDeliveryTrackCodeRequest[name]))}

function check_required(o::SetOrderDeliveryTrackCodeRequest)
    o.trackCode === nothing && (return false)
    o.deliveryServiceId === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ SetOrderDeliveryTrackCodeRequest }, name::Symbol, val)
    if name === Symbol("deliveryServiceId")
        OpenAPI.validate_param(name, "SetOrderDeliveryTrackCodeRequest", :format, val, "int64")
    end
end
