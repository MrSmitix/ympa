# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""DeletePromoOffersResultDTO
Результат удаления товаров из акции.  Возвращается, только если в запросе был передан параметр &#x60;offerIds&#x60;. 

    DeletePromoOffersResultDTO(;
        rejectedOffers=nothing,
    )

    - rejectedOffers::Vector{RejectedPromoOfferDeleteDTO} : Товары, при удалении которых появились ошибки.  Возвращается, только если есть такие товары. 
"""
Base.@kwdef mutable struct DeletePromoOffersResultDTO <: OpenAPI.APIModel
    rejectedOffers::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{RejectedPromoOfferDeleteDTO} }

    function DeletePromoOffersResultDTO(rejectedOffers, )
        OpenAPI.validate_property(DeletePromoOffersResultDTO, Symbol("rejectedOffers"), rejectedOffers)
        return new(rejectedOffers, )
    end
end # type DeletePromoOffersResultDTO

const _property_types_DeletePromoOffersResultDTO = Dict{Symbol,String}(Symbol("rejectedOffers")=>"Vector{RejectedPromoOfferDeleteDTO}", )
OpenAPI.property_type(::Type{ DeletePromoOffersResultDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DeletePromoOffersResultDTO[name]))}

function check_required(o::DeletePromoOffersResultDTO)
    true
end

function OpenAPI.validate_property(::Type{ DeletePromoOffersResultDTO }, name::Symbol, val)
end
