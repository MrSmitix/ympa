/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// OrdersStatsStockType : Тип товара:  * `DEFECT` — товар бракованный.  * `FIT` — товар надлежащего качества. 
/// Тип товара:  * `DEFECT` — товар бракованный.  * `FIT` — товар надлежащего качества. 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum OrdersStatsStockType {
    #[serde(rename = "FIT")]
    Fit,
    #[serde(rename = "FREEZE")]
    Freeze,
    #[serde(rename = "AVAILABLE")]
    Available,
    #[serde(rename = "QUARANTINE")]
    Quarantine,
    #[serde(rename = "UTILIZATION")]
    Utilization,
    #[serde(rename = "DEFECT")]
    Defect,
    #[serde(rename = "EXPIRED")]
    Expired,

}

impl std::fmt::Display for OrdersStatsStockType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Fit => write!(f, "FIT"),
            Self::Freeze => write!(f, "FREEZE"),
            Self::Available => write!(f, "AVAILABLE"),
            Self::Quarantine => write!(f, "QUARANTINE"),
            Self::Utilization => write!(f, "UTILIZATION"),
            Self::Defect => write!(f, "DEFECT"),
            Self::Expired => write!(f, "EXPIRED"),
        }
    }
}

impl Default for OrdersStatsStockType {
    fn default() -> OrdersStatsStockType {
        Self::Fit
    }
}

