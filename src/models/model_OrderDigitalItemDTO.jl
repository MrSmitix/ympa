# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""OrderDigitalItemDTO
Ключ цифрового товара.

    OrderDigitalItemDTO(;
        id=nothing,
        code=nothing,
        slip=nothing,
        activate_till=nothing,
    )

    - id::Int64 : Идентификатор товара в заказе.  Он приходит в ответе на запрос [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) и в запросе Маркета [POST order/accept](../../pushapi/reference/orderAccept.md) — параметр &#x60;id&#x60; в &#x60;items&#x60;. 
    - code::String : Сам ключ.
    - slip::String : Инструкция по активации.
    - activate_till::Date : Дата, до которой нужно активировать ключ. Если ключ действует бессрочно, укажите любую дату в отдаленном будущем.  Формат даты: &#x60;ГГГГ-ММ-ДД&#x60;. 
"""
Base.@kwdef mutable struct OrderDigitalItemDTO <: OpenAPI.APIModel
    id::Union{Nothing, Int64} = nothing
    code::Union{Nothing, String} = nothing
    slip::Union{Nothing, String} = nothing
    activate_till::Union{Nothing, Date} = nothing

    function OrderDigitalItemDTO(id, code, slip, activate_till, )
        OpenAPI.validate_property(OrderDigitalItemDTO, Symbol("id"), id)
        OpenAPI.validate_property(OrderDigitalItemDTO, Symbol("code"), code)
        OpenAPI.validate_property(OrderDigitalItemDTO, Symbol("slip"), slip)
        OpenAPI.validate_property(OrderDigitalItemDTO, Symbol("activate_till"), activate_till)
        return new(id, code, slip, activate_till, )
    end
end # type OrderDigitalItemDTO

const _property_types_OrderDigitalItemDTO = Dict{Symbol,String}(Symbol("id")=>"Int64", Symbol("code")=>"String", Symbol("slip")=>"String", Symbol("activate_till")=>"Date", )
OpenAPI.property_type(::Type{ OrderDigitalItemDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_OrderDigitalItemDTO[name]))}

function check_required(o::OrderDigitalItemDTO)
    o.id === nothing && (return false)
    o.code === nothing && (return false)
    o.slip === nothing && (return false)
    o.activate_till === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ OrderDigitalItemDTO }, name::Symbol, val)
    if name === Symbol("id")
        OpenAPI.validate_param(name, "OrderDigitalItemDTO", :format, val, "int64")
    end
    if name === Symbol("activate_till")
        OpenAPI.validate_param(name, "OrderDigitalItemDTO", :format, val, "date")
    end
end
