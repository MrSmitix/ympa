// tslint:disable
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    FeedbackCommentAuthorDTO,
    FeedbackCommentAuthorDTOFromJSON,
    FeedbackCommentAuthorDTOToJSON,
} from './';

/**
 * Комментарий к отзыву на магазин.
 * @export
 * @interface FeedbackCommentDTO
 */
export interface FeedbackCommentDTO  {
    /**
     * Идентификатор ответа.
     * @type {number}
     * @memberof FeedbackCommentDTO
     */
    id?: number;
    /**
     * Идентификатор родительского ответа.
     * @type {number}
     * @memberof FeedbackCommentDTO
     */
    parentId?: number;
    /**
     * Текст ответа.
     * @type {string}
     * @memberof FeedbackCommentDTO
     */
    body?: string;
    /**
     * Дата и время создания ответа.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:00:00+03:00`. 
     * @type {Date}
     * @memberof FeedbackCommentDTO
     */
    createdAt?: Date;
    /**
     * Дата и время изменения ответа.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:00:00+03:00`. 
     * @type {Date}
     * @memberof FeedbackCommentDTO
     */
    updatedAt?: Date;
    /**
     * 
     * @type {FeedbackCommentAuthorDTO}
     * @memberof FeedbackCommentDTO
     */
    author?: FeedbackCommentAuthorDTO;
    /**
     * Дочерние ответы.
     * @type {Array<FeedbackCommentDTO>}
     * @memberof FeedbackCommentDTO
     */
    children?: Array<FeedbackCommentDTO>;
}

export function FeedbackCommentDTOFromJSON(json: any): FeedbackCommentDTO {
    return {
        'id': !exists(json, 'id') ? undefined : json['id'],
        'parentId': !exists(json, 'parentId') ? undefined : json['parentId'],
        'body': !exists(json, 'body') ? undefined : json['body'],
        'createdAt': !exists(json, 'createdAt') ? undefined : new Date(json['createdAt']),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : new Date(json['updatedAt']),
        'author': !exists(json, 'author') ? undefined : FeedbackCommentAuthorDTOFromJSON(json['author']),
        'children': !exists(json, 'children') ? undefined : (json['children'] as Array<any>).map(FeedbackCommentDTOFromJSON),
    };
}

export function FeedbackCommentDTOToJSON(value?: FeedbackCommentDTO): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'id': value.id,
        'parentId': value.parentId,
        'body': value.body,
        'createdAt': value.createdAt === undefined ? undefined : value.createdAt.toISOString(),
        'updatedAt': value.updatedAt === undefined ? undefined : value.updatedAt.toISOString(),
        'author': FeedbackCommentAuthorDTOToJSON(value.author),
        'children': value.children === undefined ? undefined : (value.children as Array<any>).map(FeedbackCommentDTOToJSON),
    };
}


