# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""UpdateStockDTO
Информация об остатках одного товара на одном из складов.

    UpdateStockDTO(;
        sku=nothing,
        items=nothing,
    )

    - sku::String : Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
    - items::Vector{UpdateStockItemDTO} : Информация об остатках товара. 
"""
Base.@kwdef mutable struct UpdateStockDTO <: OpenAPI.APIModel
    sku::Union{Nothing, String} = nothing
    items::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{UpdateStockItemDTO} }

    function UpdateStockDTO(sku, items, )
        OpenAPI.validate_property(UpdateStockDTO, Symbol("sku"), sku)
        OpenAPI.validate_property(UpdateStockDTO, Symbol("items"), items)
        return new(sku, items, )
    end
end # type UpdateStockDTO

const _property_types_UpdateStockDTO = Dict{Symbol,String}(Symbol("sku")=>"String", Symbol("items")=>"Vector{UpdateStockItemDTO}", )
OpenAPI.property_type(::Type{ UpdateStockDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_UpdateStockDTO[name]))}

function check_required(o::UpdateStockDTO)
    o.sku === nothing && (return false)
    o.items === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ UpdateStockDTO }, name::Symbol, val)
    if name === Symbol("sku")
        OpenAPI.validate_param(name, "UpdateStockDTO", :maxLength, val, 255)
        OpenAPI.validate_param(name, "UpdateStockDTO", :minLength, val, 1)
        OpenAPI.validate_param(name, "UpdateStockDTO", :pattern, val, r"^[^\x00-\x08\x0A-\x1f\x7f]{1,255}$")
    end
    if name === Symbol("items")
        OpenAPI.validate_param(name, "UpdateStockDTO", :maxItems, val, 1)
        OpenAPI.validate_param(name, "UpdateStockDTO", :minItems, val, 1)
    end
end
