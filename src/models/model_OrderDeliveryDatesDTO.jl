# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""OrderDeliveryDatesDTO
Диапазон дат доставки.

    OrderDeliveryDatesDTO(;
        fromDate=nothing,
        toDate=nothing,
        fromTime=nothing,
        toTime=nothing,
        realDeliveryDate=nothing,
    )

    - fromDate::String : Формат даты: &#x60;ДД-ММ-ГГГГ&#x60;. 
    - toDate::String : Формат даты: &#x60;ДД-ММ-ГГГГ&#x60;. 
    - fromTime::String : Начало интервала времени доставки.  Передается только совместно с параметром &#x60;type&#x3D;DELIVERY&#x60;.  Формат времени: 24-часовой, &#x60;ЧЧ:ММ&#x60;. В качестве минут всегда должно быть указано &#x60;00&#x60; (исключение — &#x60;23:59&#x60;).  Минимальное значение: &#x60;00:00&#x60;. 
    - toTime::String : Конец интервала времени доставки.  Передается только совместно с параметром &#x60;type&#x3D;DELIVERY&#x60;.  Формат времени: 24-часовой, &#x60;ЧЧ:ММ&#x60;. В качестве минут всегда должно быть указано &#x60;00&#x60; (исключение — &#x60;23:59&#x60;).  Максимальное значение: &#x60;23:59&#x60;. 
    - realDeliveryDate::String : Формат даты: &#x60;ДД-ММ-ГГГГ&#x60;. 
"""
Base.@kwdef mutable struct OrderDeliveryDatesDTO <: OpenAPI.APIModel
    fromDate::Union{Nothing, String} = nothing
    toDate::Union{Nothing, String} = nothing
    fromTime::Union{Nothing, String} = nothing
    toTime::Union{Nothing, String} = nothing
    realDeliveryDate::Union{Nothing, String} = nothing

    function OrderDeliveryDatesDTO(fromDate, toDate, fromTime, toTime, realDeliveryDate, )
        OpenAPI.validate_property(OrderDeliveryDatesDTO, Symbol("fromDate"), fromDate)
        OpenAPI.validate_property(OrderDeliveryDatesDTO, Symbol("toDate"), toDate)
        OpenAPI.validate_property(OrderDeliveryDatesDTO, Symbol("fromTime"), fromTime)
        OpenAPI.validate_property(OrderDeliveryDatesDTO, Symbol("toTime"), toTime)
        OpenAPI.validate_property(OrderDeliveryDatesDTO, Symbol("realDeliveryDate"), realDeliveryDate)
        return new(fromDate, toDate, fromTime, toTime, realDeliveryDate, )
    end
end # type OrderDeliveryDatesDTO

const _property_types_OrderDeliveryDatesDTO = Dict{Symbol,String}(Symbol("fromDate")=>"String", Symbol("toDate")=>"String", Symbol("fromTime")=>"String", Symbol("toTime")=>"String", Symbol("realDeliveryDate")=>"String", )
OpenAPI.property_type(::Type{ OrderDeliveryDatesDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_OrderDeliveryDatesDTO[name]))}

function check_required(o::OrderDeliveryDatesDTO)
    true
end

function OpenAPI.validate_property(::Type{ OrderDeliveryDatesDTO }, name::Symbol, val)
    if name === Symbol("fromDate")
        OpenAPI.validate_param(name, "OrderDeliveryDatesDTO", :format, val, "date-dd-MM-yyyy")
    end
    if name === Symbol("toDate")
        OpenAPI.validate_param(name, "OrderDeliveryDatesDTO", :format, val, "date-dd-MM-yyyy")
    end
    if name === Symbol("fromTime")
        OpenAPI.validate_param(name, "OrderDeliveryDatesDTO", :format, val, "time")
    end
    if name === Symbol("toTime")
        OpenAPI.validate_param(name, "OrderDeliveryDatesDTO", :format, val, "time")
    end
    if name === Symbol("realDeliveryDate")
        OpenAPI.validate_param(name, "OrderDeliveryDatesDTO", :format, val, "date-dd-MM-yyyy")
    end
end
