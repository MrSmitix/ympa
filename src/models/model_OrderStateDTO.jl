# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""OrderStateDTO
Информация по заказу.

    OrderStateDTO(;
        id=nothing,
        status=nothing,
        substatus=nothing,
    )

    - id::Int64 : Идентификатор заказа.
    - status::OrderStatusType
    - substatus::OrderSubstatusType
"""
Base.@kwdef mutable struct OrderStateDTO <: OpenAPI.APIModel
    id::Union{Nothing, Int64} = nothing
    status = nothing # spec type: Union{ Nothing, OrderStatusType }
    substatus = nothing # spec type: Union{ Nothing, OrderSubstatusType }

    function OrderStateDTO(id, status, substatus, )
        OpenAPI.validate_property(OrderStateDTO, Symbol("id"), id)
        OpenAPI.validate_property(OrderStateDTO, Symbol("status"), status)
        OpenAPI.validate_property(OrderStateDTO, Symbol("substatus"), substatus)
        return new(id, status, substatus, )
    end
end # type OrderStateDTO

const _property_types_OrderStateDTO = Dict{Symbol,String}(Symbol("id")=>"Int64", Symbol("status")=>"OrderStatusType", Symbol("substatus")=>"OrderSubstatusType", )
OpenAPI.property_type(::Type{ OrderStateDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_OrderStateDTO[name]))}

function check_required(o::OrderStateDTO)
    o.id === nothing && (return false)
    o.status === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ OrderStateDTO }, name::Symbol, val)
    if name === Symbol("id")
        OpenAPI.validate_param(name, "OrderStateDTO", :format, val, "int64")
    end
end
