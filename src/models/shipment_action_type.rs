/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ShipmentActionType : Действия с отгрузкой:  * `CONFIRM` — подтвердить отгрузку. * `DOWNLOAD_ACT` — скачать акт приема-передачи отгрузки. * `DOWNLOAD_INBOUND_ACT` — скачать список принятых заказов. * `DOWNLOAD_DISCREPANCY_ACT` — скачать акт расхождений. * `CHANGE_PALLETS_COUNT` — указать количество палет. 
/// Действия с отгрузкой:  * `CONFIRM` — подтвердить отгрузку. * `DOWNLOAD_ACT` — скачать акт приема-передачи отгрузки. * `DOWNLOAD_INBOUND_ACT` — скачать список принятых заказов. * `DOWNLOAD_DISCREPANCY_ACT` — скачать акт расхождений. * `CHANGE_PALLETS_COUNT` — указать количество палет. 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ShipmentActionType {
    #[serde(rename = "CONFIRM")]
    Confirm,
    #[serde(rename = "DOWNLOAD_ACT")]
    DownloadAct,
    #[serde(rename = "DOWNLOAD_INBOUND_ACT")]
    DownloadInboundAct,
    #[serde(rename = "DOWNLOAD_DISCREPANCY_ACT")]
    DownloadDiscrepancyAct,
    #[serde(rename = "CHANGE_PALLETS_COUNT")]
    ChangePalletsCount,

}

impl std::fmt::Display for ShipmentActionType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Confirm => write!(f, "CONFIRM"),
            Self::DownloadAct => write!(f, "DOWNLOAD_ACT"),
            Self::DownloadInboundAct => write!(f, "DOWNLOAD_INBOUND_ACT"),
            Self::DownloadDiscrepancyAct => write!(f, "DOWNLOAD_DISCREPANCY_ACT"),
            Self::ChangePalletsCount => write!(f, "CHANGE_PALLETS_COUNT"),
        }
    }
}

impl Default for ShipmentActionType {
    fn default() -> ShipmentActionType {
        Self::Confirm
    }
}

