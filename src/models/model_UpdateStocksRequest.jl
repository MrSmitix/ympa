# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""UpdateStocksRequest
Запрос на изменение информации по остаткам товаров.

    UpdateStocksRequest(;
        skus=nothing,
    )

    - skus::Vector{UpdateStockDTO} : Данные об остатках товаров. 
"""
Base.@kwdef mutable struct UpdateStocksRequest <: OpenAPI.APIModel
    skus::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{UpdateStockDTO} }

    function UpdateStocksRequest(skus, )
        OpenAPI.validate_property(UpdateStocksRequest, Symbol("skus"), skus)
        return new(skus, )
    end
end # type UpdateStocksRequest

const _property_types_UpdateStocksRequest = Dict{Symbol,String}(Symbol("skus")=>"Vector{UpdateStockDTO}", )
OpenAPI.property_type(::Type{ UpdateStocksRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_UpdateStocksRequest[name]))}

function check_required(o::UpdateStocksRequest)
    o.skus === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ UpdateStocksRequest }, name::Symbol, val)
    if name === Symbol("skus")
        OpenAPI.validate_param(name, "UpdateStocksRequest", :maxItems, val, 2000)
        OpenAPI.validate_param(name, "UpdateStocksRequest", :minItems, val, 1)
        OpenAPI.validate_param(name, "UpdateStocksRequest", :uniqueItems, val, true)
    end
end
