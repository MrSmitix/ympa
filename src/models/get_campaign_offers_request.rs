/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// GetCampaignOffersRequest : Фильтрации товаров  В запросе можно указать либо фильтр offerIds, либо любые другие фильтры товаров. Совместное использование фильтра offerIds с другими фильтрациями приведет к ошибке. 
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetCampaignOffersRequest {
    /// Идентификаторы товаров, информация о которых нужна.  {% note warning \"Такой список возвращается только целиком\" %}  Не используйте это поле одновременно с фильтрами по статусам карточек, категориям, брендам или тегам. Если вы хотите воспользоваться фильтрами, оставьте поле пустым.  Если вы запрашиваете информацию по конкретным SKU, не заполняйте:  * `page_token` * `limit`  {% endnote %}    
    #[serde(rename = "offerIds", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub offer_ids: Option<Option<Vec<String>>>,
    /// Фильтр по статусам товаров. 
    #[serde(rename = "statuses", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub statuses: Option<Option<Vec<models::OfferCampaignStatusType>>>,
    /// Фильтр по категориям на Маркете.
    #[serde(rename = "categoryIds", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub category_ids: Option<Option<Vec<i32>>>,
    /// Фильтр по брендам.
    #[serde(rename = "vendorNames", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub vendor_names: Option<Option<Vec<String>>>,
    /// Фильтр по тегам.
    #[serde(rename = "tags", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Option<Vec<String>>>,
}

impl GetCampaignOffersRequest {
    /// Фильтрации товаров  В запросе можно указать либо фильтр offerIds, либо любые другие фильтры товаров. Совместное использование фильтра offerIds с другими фильтрациями приведет к ошибке. 
    pub fn new() -> GetCampaignOffersRequest {
        GetCampaignOffersRequest {
            offer_ids: None,
            statuses: None,
            category_ids: None,
            vendor_names: None,
            tags: None,
        }
    }
}

