# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""GetPricesByOfferIdsRequest
Запрос списка цен.

    GetPricesByOfferIdsRequest(;
        offerIds=nothing,
    )

    - offerIds::Vector{String} : Список SKU.  {% note warning \&quot;Такой список возвращается только целиком\&quot; %}  Если вы запрашиваете информацию по конкретным SKU, не заполняйте:  * &#x60;page_token&#x60; * &#x60;limit&#x60;  {% endnote %}    
"""
Base.@kwdef mutable struct GetPricesByOfferIdsRequest <: OpenAPI.APIModel
    offerIds::Union{Nothing, Vector{String}} = nothing

    function GetPricesByOfferIdsRequest(offerIds, )
        OpenAPI.validate_property(GetPricesByOfferIdsRequest, Symbol("offerIds"), offerIds)
        return new(offerIds, )
    end
end # type GetPricesByOfferIdsRequest

const _property_types_GetPricesByOfferIdsRequest = Dict{Symbol,String}(Symbol("offerIds")=>"Vector{String}", )
OpenAPI.property_type(::Type{ GetPricesByOfferIdsRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_GetPricesByOfferIdsRequest[name]))}

function check_required(o::GetPricesByOfferIdsRequest)
    true
end

function OpenAPI.validate_property(::Type{ GetPricesByOfferIdsRequest }, name::Symbol, val)
    if name === Symbol("offerIds")
        OpenAPI.validate_param(name, "GetPricesByOfferIdsRequest", :maxItems, val, 2000)
        OpenAPI.validate_param(name, "GetPricesByOfferIdsRequest", :minItems, val, 1)
    end
end
