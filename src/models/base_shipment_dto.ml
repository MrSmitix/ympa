(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Base_shipment_dto.t : Информация об отгрузке.
 *)

type t = {
    (* Идентификатор отгрузки. *)
    id: int64 option [@default None];
    (* Начало планового интервала отгрузки. *)
    plan_interval_from: string option [@default None];
    (* Конец планового интервала отгрузки. *)
    plan_interval_to: string option [@default None];
    shipment_type: Enums.shipmenttype option [@default None];
    warehouse: Partner_shipment_warehouse_dto.t option [@default None];
    warehouse_to: Partner_shipment_warehouse_dto.t option [@default None];
    (* Идентификатор отгрузки в вашей системе. Если вы еще не передавали идентификатор, вернется идентификатор из параметра `id`. *)
    external_id: string option [@default None];
    delivery_service: Delivery_service_dto.t option [@default None];
    pallets_count: Pallets_count_dto.t option [@default None];
    (* Идентификаторы заказов в отгрузке. *)
    order_ids: int64 list;
    (* Количество заказов, которое Маркет запланировал к отгрузке. *)
    draft_count: int32 option [@default None];
    (* Количество заказов, которое Маркет подтвердил к отгрузке. *)
    planned_count: int32 option [@default None];
    (* Количество заказов, принятых в сортировочном центре или пункте приема. *)
    fact_count: int32 option [@default None];
} [@@deriving yojson { strict = false }, show ];;

(** Информация об отгрузке. *)
let create (order_ids : int64 list) : t = {
    id = None;
    plan_interval_from = None;
    plan_interval_to = None;
    shipment_type = None;
    warehouse = None;
    warehouse_to = None;
    external_id = None;
    delivery_service = None;
    pallets_count = None;
    order_ids = order_ids;
    draft_count = None;
    planned_count = None;
    fact_count = None;
}

