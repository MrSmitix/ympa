// tslint:disable
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    LogisticPointType,
    LogisticPointTypeFromJSON,
    LogisticPointTypeToJSON,
    PickupAddressDTO,
    PickupAddressDTOFromJSON,
    PickupAddressDTOToJSON,
} from './';

/**
 * Описание пункта вывоза для возврата.
 * @export
 * @interface LogisticPickupPointDTO
 */
export interface LogisticPickupPointDTO  {
    /**
     * Идентификатор пункта вывоза.
     * @type {number}
     * @memberof LogisticPickupPointDTO
     */
    id?: number;
    /**
     * Название пункта вывоза.
     * @type {string}
     * @memberof LogisticPickupPointDTO
     */
    name?: string;
    /**
     * 
     * @type {PickupAddressDTO}
     * @memberof LogisticPickupPointDTO
     */
    address?: PickupAddressDTO;
    /**
     * Дополнительные инструкции к вывозу.
     * @type {string}
     * @memberof LogisticPickupPointDTO
     */
    instruction?: string;
    /**
     * 
     * @type {LogisticPointType}
     * @memberof LogisticPickupPointDTO
     */
    type?: LogisticPointType;
    /**
     * Идентификатор логистического партнера, к которому относится логистическая точка.
     * @type {number}
     * @memberof LogisticPickupPointDTO
     */
    logisticPartnerId?: number;
}

export function LogisticPickupPointDTOFromJSON(json: any): LogisticPickupPointDTO {
    return {
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'address': !exists(json, 'address') ? undefined : PickupAddressDTOFromJSON(json['address']),
        'instruction': !exists(json, 'instruction') ? undefined : json['instruction'],
        'type': !exists(json, 'type') ? undefined : LogisticPointTypeFromJSON(json['type']),
        'logisticPartnerId': !exists(json, 'logisticPartnerId') ? undefined : json['logisticPartnerId'],
    };
}

export function LogisticPickupPointDTOToJSON(value?: LogisticPickupPointDTO): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'id': value.id,
        'name': value.name,
        'address': PickupAddressDTOToJSON(value.address),
        'instruction': value.instruction,
        'type': LogisticPointTypeToJSON(value.type),
        'logisticPartnerId': value.logisticPartnerId,
    };
}



