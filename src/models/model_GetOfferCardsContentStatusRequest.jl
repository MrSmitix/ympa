# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""GetOfferCardsContentStatusRequest

    GetOfferCardsContentStatusRequest(;
        offerIds=nothing,
        cardStatuses=nothing,
        categoryIds=nothing,
    )

    - offerIds::Vector{String} : Идентификаторы товаров, информация о которых нужна. &lt;br&gt;&lt;br&gt; ⚠️ Не используйте это поле одновременно с фильтрами по статусам карточек, категориям, брендам или тегам. Если вы хотите воспользоваться фильтрами, оставьте поле пустым. 
    - cardStatuses::Vector{OfferCardStatusType} : Фильтр по статусам карточек.  [Что такое карточка товара](https://yandex.ru/support/marketplace/assortment/content/index.html) 
    - categoryIds::Vector{Int64} : Фильтр по категориям на Маркете.
"""
Base.@kwdef mutable struct GetOfferCardsContentStatusRequest <: OpenAPI.APIModel
    offerIds::Union{Nothing, Vector{String}} = nothing
    cardStatuses::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{OfferCardStatusType} }
    categoryIds::Union{Nothing, Vector{Int64}} = nothing

    function GetOfferCardsContentStatusRequest(offerIds, cardStatuses, categoryIds, )
        OpenAPI.validate_property(GetOfferCardsContentStatusRequest, Symbol("offerIds"), offerIds)
        OpenAPI.validate_property(GetOfferCardsContentStatusRequest, Symbol("cardStatuses"), cardStatuses)
        OpenAPI.validate_property(GetOfferCardsContentStatusRequest, Symbol("categoryIds"), categoryIds)
        return new(offerIds, cardStatuses, categoryIds, )
    end
end # type GetOfferCardsContentStatusRequest

const _property_types_GetOfferCardsContentStatusRequest = Dict{Symbol,String}(Symbol("offerIds")=>"Vector{String}", Symbol("cardStatuses")=>"Vector{OfferCardStatusType}", Symbol("categoryIds")=>"Vector{Int64}", )
OpenAPI.property_type(::Type{ GetOfferCardsContentStatusRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_GetOfferCardsContentStatusRequest[name]))}

function check_required(o::GetOfferCardsContentStatusRequest)
    true
end

function OpenAPI.validate_property(::Type{ GetOfferCardsContentStatusRequest }, name::Symbol, val)
    if name === Symbol("offerIds")
        OpenAPI.validate_param(name, "GetOfferCardsContentStatusRequest", :maxItems, val, 200)
        OpenAPI.validate_param(name, "GetOfferCardsContentStatusRequest", :uniqueItems, val, true)
    end
    if name === Symbol("cardStatuses")
        OpenAPI.validate_param(name, "GetOfferCardsContentStatusRequest", :uniqueItems, val, true)
    end
    if name === Symbol("categoryIds")
        OpenAPI.validate_param(name, "GetOfferCardsContentStatusRequest", :maxItems, val, 200)
        OpenAPI.validate_param(name, "GetOfferCardsContentStatusRequest", :uniqueItems, val, true)
    end
end
