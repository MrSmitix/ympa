# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""OrdersStatsPaymentDTO
Информация о денежных переводах по заказу.

    OrdersStatsPaymentDTO(;
        id=nothing,
        date=nothing,
        type=nothing,
        source=nothing,
        total=nothing,
        paymentOrder=nothing,
    )

    - id::String : Идентификатор денежного перевода.
    - date::Date : Дата денежного перевода.  Формат даты: &#x60;ГГГГ-ММ-ДД&#x60;. 
    - type::OrdersStatsPaymentType
    - source::OrdersStatsPaymentSourceType
    - total::Float64 : Сумма денежного перевода. Значение указывается в рублях независимо от способа денежного перевода. Точность — два знака после запятой. 
    - paymentOrder::OrdersStatsPaymentOrderDTO
"""
Base.@kwdef mutable struct OrdersStatsPaymentDTO <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    date::Union{Nothing, Date} = nothing
    type = nothing # spec type: Union{ Nothing, OrdersStatsPaymentType }
    source = nothing # spec type: Union{ Nothing, OrdersStatsPaymentSourceType }
    total::Union{Nothing, Float64} = nothing
    paymentOrder = nothing # spec type: Union{ Nothing, OrdersStatsPaymentOrderDTO }

    function OrdersStatsPaymentDTO(id, date, type, source, total, paymentOrder, )
        OpenAPI.validate_property(OrdersStatsPaymentDTO, Symbol("id"), id)
        OpenAPI.validate_property(OrdersStatsPaymentDTO, Symbol("date"), date)
        OpenAPI.validate_property(OrdersStatsPaymentDTO, Symbol("type"), type)
        OpenAPI.validate_property(OrdersStatsPaymentDTO, Symbol("source"), source)
        OpenAPI.validate_property(OrdersStatsPaymentDTO, Symbol("total"), total)
        OpenAPI.validate_property(OrdersStatsPaymentDTO, Symbol("paymentOrder"), paymentOrder)
        return new(id, date, type, source, total, paymentOrder, )
    end
end # type OrdersStatsPaymentDTO

const _property_types_OrdersStatsPaymentDTO = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("date")=>"Date", Symbol("type")=>"OrdersStatsPaymentType", Symbol("source")=>"OrdersStatsPaymentSourceType", Symbol("total")=>"Float64", Symbol("paymentOrder")=>"OrdersStatsPaymentOrderDTO", )
OpenAPI.property_type(::Type{ OrdersStatsPaymentDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_OrdersStatsPaymentDTO[name]))}

function check_required(o::OrdersStatsPaymentDTO)
    true
end

function OpenAPI.validate_property(::Type{ OrdersStatsPaymentDTO }, name::Symbol, val)
    if name === Symbol("date")
        OpenAPI.validate_param(name, "OrdersStatsPaymentDTO", :format, val, "date")
    end
end
