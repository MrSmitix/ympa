# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""OfferMappingEntriesDTO
Информация о товарах в каталоге.

    OfferMappingEntriesDTO(;
        paging=nothing,
        offerMappingEntries=nothing,
    )

    - paging::ScrollingPagerDTO
    - offerMappingEntries::Vector{OfferMappingEntryDTO} : Информация о товарах в каталоге.
"""
Base.@kwdef mutable struct OfferMappingEntriesDTO <: OpenAPI.APIModel
    paging = nothing # spec type: Union{ Nothing, ScrollingPagerDTO }
    offerMappingEntries::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{OfferMappingEntryDTO} }

    function OfferMappingEntriesDTO(paging, offerMappingEntries, )
        OpenAPI.validate_property(OfferMappingEntriesDTO, Symbol("paging"), paging)
        OpenAPI.validate_property(OfferMappingEntriesDTO, Symbol("offerMappingEntries"), offerMappingEntries)
        return new(paging, offerMappingEntries, )
    end
end # type OfferMappingEntriesDTO

const _property_types_OfferMappingEntriesDTO = Dict{Symbol,String}(Symbol("paging")=>"ScrollingPagerDTO", Symbol("offerMappingEntries")=>"Vector{OfferMappingEntryDTO}", )
OpenAPI.property_type(::Type{ OfferMappingEntriesDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_OfferMappingEntriesDTO[name]))}

function check_required(o::OfferMappingEntriesDTO)
    o.offerMappingEntries === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ OfferMappingEntriesDTO }, name::Symbol, val)
end
