// tslint:disable
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    OrderPromoType,
    OrderPromoTypeFromJSON,
    OrderPromoTypeToJSON,
} from './';

/**
 * Информация о вознаграждениях партнеру за скидки на товар по промокодам, купонам и акциям.
 * @export
 * @interface OrderItemPromoDTO
 */
export interface OrderItemPromoDTO  {
    /**
     * 
     * @type {OrderPromoType}
     * @memberof OrderItemPromoDTO
     */
    type: OrderPromoType;
    /**
     * Размер пользовательской скидки в валюте покупателя. 
     * @type {number}
     * @memberof OrderItemPromoDTO
     */
    discount?: number;
    /**
     * Вознаграждение партнеру от Маркета за товар, проданный в рамках акции.  Передается в валюте заказа. 
     * @type {number}
     * @memberof OrderItemPromoDTO
     */
    subsidy?: number;
    /**
     * Идентификатор акции поставщика. 
     * @type {string}
     * @memberof OrderItemPromoDTO
     */
    shopPromoId?: string;
    /**
     * Идентификатор акции в рамках соглашения на оказание услуг по продвижению сервиса между Маркетом и партнером.  Параметр передается, только если параметр `type=MARKET_DEAL`. 
     * @type {string}
     * @memberof OrderItemPromoDTO
     */
    marketPromoId?: string;
}

export function OrderItemPromoDTOFromJSON(json: any): OrderItemPromoDTO {
    return {
        'type': OrderPromoTypeFromJSON(json['type']),
        'discount': !exists(json, 'discount') ? undefined : json['discount'],
        'subsidy': !exists(json, 'subsidy') ? undefined : json['subsidy'],
        'shopPromoId': !exists(json, 'shopPromoId') ? undefined : json['shopPromoId'],
        'marketPromoId': !exists(json, 'marketPromoId') ? undefined : json['marketPromoId'],
    };
}

export function OrderItemPromoDTOToJSON(value?: OrderItemPromoDTO): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'type': OrderPromoTypeToJSON(value.type),
        'discount': value.discount,
        'subsidy': value.subsidy,
        'shopPromoId': value.shopPromoId,
        'marketPromoId': value.marketPromoId,
    };
}



