# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""OrderSubsidyDTO
Общее вознаграждение партнеру за DBS-доставку и все скидки на товар:  * по промокодам, купонам и акциям; * по баллам Плюса; * по доставке (DBS).  Передается в валюте заказа. 

    OrderSubsidyDTO(;
        type=nothing,
        amount=nothing,
    )

    - type::OrderSubsidyType
    - amount::Float64 : Сумма субсидии.
"""
Base.@kwdef mutable struct OrderSubsidyDTO <: OpenAPI.APIModel
    type = nothing # spec type: Union{ Nothing, OrderSubsidyType }
    amount::Union{Nothing, Float64} = nothing

    function OrderSubsidyDTO(type, amount, )
        OpenAPI.validate_property(OrderSubsidyDTO, Symbol("type"), type)
        OpenAPI.validate_property(OrderSubsidyDTO, Symbol("amount"), amount)
        return new(type, amount, )
    end
end # type OrderSubsidyDTO

const _property_types_OrderSubsidyDTO = Dict{Symbol,String}(Symbol("type")=>"OrderSubsidyType", Symbol("amount")=>"Float64", )
OpenAPI.property_type(::Type{ OrderSubsidyDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_OrderSubsidyDTO[name]))}

function check_required(o::OrderSubsidyDTO)
    true
end

function OpenAPI.validate_property(::Type{ OrderSubsidyDTO }, name::Symbol, val)
    if name === Symbol("amount")
        OpenAPI.validate_param(name, "OrderSubsidyDTO", :format, val, "decimal")
    end
end
