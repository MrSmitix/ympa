# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""OrdersStatsPriceDTO
Цена или скидки на товар.

    OrdersStatsPriceDTO(;
        type=nothing,
        costPerItem=nothing,
        total=nothing,
    )

    - type::OrdersStatsPriceType
    - costPerItem::Float64 : Цена или скидка на единицу товара в заказе. Указана в рублях. Точность — два знака после запятой. 
    - total::Float64 : Суммарная цена или скидка на все единицы товара в заказе. Указана в рублях. Точность — два знака после запятой. 
"""
Base.@kwdef mutable struct OrdersStatsPriceDTO <: OpenAPI.APIModel
    type = nothing # spec type: Union{ Nothing, OrdersStatsPriceType }
    costPerItem::Union{Nothing, Float64} = nothing
    total::Union{Nothing, Float64} = nothing

    function OrdersStatsPriceDTO(type, costPerItem, total, )
        OpenAPI.validate_property(OrdersStatsPriceDTO, Symbol("type"), type)
        OpenAPI.validate_property(OrdersStatsPriceDTO, Symbol("costPerItem"), costPerItem)
        OpenAPI.validate_property(OrdersStatsPriceDTO, Symbol("total"), total)
        return new(type, costPerItem, total, )
    end
end # type OrdersStatsPriceDTO

const _property_types_OrdersStatsPriceDTO = Dict{Symbol,String}(Symbol("type")=>"OrdersStatsPriceType", Symbol("costPerItem")=>"Float64", Symbol("total")=>"Float64", )
OpenAPI.property_type(::Type{ OrdersStatsPriceDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_OrdersStatsPriceDTO[name]))}

function check_required(o::OrdersStatsPriceDTO)
    true
end

function OpenAPI.validate_property(::Type{ OrdersStatsPriceDTO }, name::Symbol, val)
end
