# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""OfferMappingInfoDTO
Информация о карточке товара.

    OfferMappingInfoDTO(;
        mapping=nothing,
        awaitingModerationMapping=nothing,
        rejectedMapping=nothing,
    )

    - mapping::OfferMappingDTO
    - awaitingModerationMapping::OfferMappingDTO
    - rejectedMapping::OfferMappingDTO
"""
Base.@kwdef mutable struct OfferMappingInfoDTO <: OpenAPI.APIModel
    mapping = nothing # spec type: Union{ Nothing, OfferMappingDTO }
    awaitingModerationMapping = nothing # spec type: Union{ Nothing, OfferMappingDTO }
    rejectedMapping = nothing # spec type: Union{ Nothing, OfferMappingDTO }

    function OfferMappingInfoDTO(mapping, awaitingModerationMapping, rejectedMapping, )
        OpenAPI.validate_property(OfferMappingInfoDTO, Symbol("mapping"), mapping)
        OpenAPI.validate_property(OfferMappingInfoDTO, Symbol("awaitingModerationMapping"), awaitingModerationMapping)
        OpenAPI.validate_property(OfferMappingInfoDTO, Symbol("rejectedMapping"), rejectedMapping)
        return new(mapping, awaitingModerationMapping, rejectedMapping, )
    end
end # type OfferMappingInfoDTO

const _property_types_OfferMappingInfoDTO = Dict{Symbol,String}(Symbol("mapping")=>"OfferMappingDTO", Symbol("awaitingModerationMapping")=>"OfferMappingDTO", Symbol("rejectedMapping")=>"OfferMappingDTO", )
OpenAPI.property_type(::Type{ OfferMappingInfoDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_OfferMappingInfoDTO[name]))}

function check_required(o::OfferMappingInfoDTO)
    true
end

function OpenAPI.validate_property(::Type{ OfferMappingInfoDTO }, name::Symbol, val)
end
