# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""UpdateOfferMappingsRequest

    UpdateOfferMappingsRequest(;
        offerMappings=nothing,
        onlyPartnerMediaContent=nothing,
    )

    - offerMappings::Vector{UpdateOfferMappingDTO} : Перечень товаров, которые нужно добавить или обновить.
    - onlyPartnerMediaContent::Bool : Будут использоваться только переданные вами изображения товаров.  Значение по умолчанию — &#x60;false&#x60;. Если вы хотите заменить изображения, которые добавил Маркет, передайте значение &#x60;true&#x60;. 
"""
Base.@kwdef mutable struct UpdateOfferMappingsRequest <: OpenAPI.APIModel
    offerMappings::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{UpdateOfferMappingDTO} }
    onlyPartnerMediaContent::Union{Nothing, Bool} = nothing

    function UpdateOfferMappingsRequest(offerMappings, onlyPartnerMediaContent, )
        OpenAPI.validate_property(UpdateOfferMappingsRequest, Symbol("offerMappings"), offerMappings)
        OpenAPI.validate_property(UpdateOfferMappingsRequest, Symbol("onlyPartnerMediaContent"), onlyPartnerMediaContent)
        return new(offerMappings, onlyPartnerMediaContent, )
    end
end # type UpdateOfferMappingsRequest

const _property_types_UpdateOfferMappingsRequest = Dict{Symbol,String}(Symbol("offerMappings")=>"Vector{UpdateOfferMappingDTO}", Symbol("onlyPartnerMediaContent")=>"Bool", )
OpenAPI.property_type(::Type{ UpdateOfferMappingsRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_UpdateOfferMappingsRequest[name]))}

function check_required(o::UpdateOfferMappingsRequest)
    o.offerMappings === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ UpdateOfferMappingsRequest }, name::Symbol, val)
    if name === Symbol("offerMappings")
        OpenAPI.validate_param(name, "UpdateOfferMappingsRequest", :maxItems, val, 500)
        OpenAPI.validate_param(name, "UpdateOfferMappingsRequest", :minItems, val, 1)
    end
end
