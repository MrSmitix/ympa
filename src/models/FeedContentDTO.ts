// tslint:disable
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    FeedContentErrorDTO,
    FeedContentErrorDTOFromJSON,
    FeedContentErrorDTOToJSON,
    FeedStatusType,
    FeedStatusTypeFromJSON,
    FeedStatusTypeToJSON,
} from './';

/**
 * Информация о проверке содержимого прайс-листа, загруженного на Маркет.
 * @export
 * @interface FeedContentDTO
 */
export interface FeedContentDTO  {
    /**
     * Количество предложений, в которых найдены ошибки на этапе загрузки прайс-листа. Выводится, если параметр `content status=OK`. 
     * @type {number}
     * @memberof FeedContentDTO
     */
    rejectedOffersCount?: number;
    /**
     * 
     * @type {FeedStatusType}
     * @memberof FeedContentDTO
     */
    status?: FeedStatusType;
    /**
     * Количество предложений в прайс-листе. Выводится, если параметр `content status=OK`. 
     * @type {number}
     * @memberof FeedContentDTO
     */
    totalOffersCount?: number;
    /**
     * 
     * @type {FeedContentErrorDTO}
     * @memberof FeedContentDTO
     */
    error?: FeedContentErrorDTO;
}

export function FeedContentDTOFromJSON(json: any): FeedContentDTO {
    return {
        'rejectedOffersCount': !exists(json, 'rejectedOffersCount') ? undefined : json['rejectedOffersCount'],
        'status': !exists(json, 'status') ? undefined : FeedStatusTypeFromJSON(json['status']),
        'totalOffersCount': !exists(json, 'totalOffersCount') ? undefined : json['totalOffersCount'],
        'error': !exists(json, 'error') ? undefined : FeedContentErrorDTOFromJSON(json['error']),
    };
}

export function FeedContentDTOToJSON(value?: FeedContentDTO): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'rejectedOffersCount': value.rejectedOffersCount,
        'status': FeedStatusTypeToJSON(value.status),
        'totalOffersCount': value.totalOffersCount,
        'error': FeedContentErrorDTOToJSON(value.error),
    };
}



