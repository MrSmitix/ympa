# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""GetOfferMappingsResultDTO
Информация о товарах.

    GetOfferMappingsResultDTO(;
        paging=nothing,
        offerMappings=nothing,
    )

    - paging::ScrollingPagerDTO
    - offerMappings::Vector{GetOfferMappingDTO} : Информация о товарах.
"""
Base.@kwdef mutable struct GetOfferMappingsResultDTO <: OpenAPI.APIModel
    paging = nothing # spec type: Union{ Nothing, ScrollingPagerDTO }
    offerMappings::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{GetOfferMappingDTO} }

    function GetOfferMappingsResultDTO(paging, offerMappings, )
        OpenAPI.validate_property(GetOfferMappingsResultDTO, Symbol("paging"), paging)
        OpenAPI.validate_property(GetOfferMappingsResultDTO, Symbol("offerMappings"), offerMappings)
        return new(paging, offerMappings, )
    end
end # type GetOfferMappingsResultDTO

const _property_types_GetOfferMappingsResultDTO = Dict{Symbol,String}(Symbol("paging")=>"ScrollingPagerDTO", Symbol("offerMappings")=>"Vector{GetOfferMappingDTO}", )
OpenAPI.property_type(::Type{ GetOfferMappingsResultDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_GetOfferMappingsResultDTO[name]))}

function check_required(o::GetOfferMappingsResultDTO)
    o.offerMappings === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ GetOfferMappingsResultDTO }, name::Symbol, val)
end
