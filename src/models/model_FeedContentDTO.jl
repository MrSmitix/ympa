# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""FeedContentDTO
Информация о проверке содержимого прайс-листа, загруженного на Маркет.

    FeedContentDTO(;
        rejectedOffersCount=nothing,
        status=nothing,
        totalOffersCount=nothing,
        error=nothing,
    )

    - rejectedOffersCount::Int64 : Количество предложений, в которых найдены ошибки на этапе загрузки прайс-листа. Выводится, если параметр &#x60;content status&#x3D;OK&#x60;. 
    - status::FeedStatusType
    - totalOffersCount::Int64 : Количество предложений в прайс-листе. Выводится, если параметр &#x60;content status&#x3D;OK&#x60;. 
    - error::FeedContentErrorDTO
"""
Base.@kwdef mutable struct FeedContentDTO <: OpenAPI.APIModel
    rejectedOffersCount::Union{Nothing, Int64} = nothing
    status = nothing # spec type: Union{ Nothing, FeedStatusType }
    totalOffersCount::Union{Nothing, Int64} = nothing
    error = nothing # spec type: Union{ Nothing, FeedContentErrorDTO }

    function FeedContentDTO(rejectedOffersCount, status, totalOffersCount, error, )
        OpenAPI.validate_property(FeedContentDTO, Symbol("rejectedOffersCount"), rejectedOffersCount)
        OpenAPI.validate_property(FeedContentDTO, Symbol("status"), status)
        OpenAPI.validate_property(FeedContentDTO, Symbol("totalOffersCount"), totalOffersCount)
        OpenAPI.validate_property(FeedContentDTO, Symbol("error"), error)
        return new(rejectedOffersCount, status, totalOffersCount, error, )
    end
end # type FeedContentDTO

const _property_types_FeedContentDTO = Dict{Symbol,String}(Symbol("rejectedOffersCount")=>"Int64", Symbol("status")=>"FeedStatusType", Symbol("totalOffersCount")=>"Int64", Symbol("error")=>"FeedContentErrorDTO", )
OpenAPI.property_type(::Type{ FeedContentDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_FeedContentDTO[name]))}

function check_required(o::FeedContentDTO)
    true
end

function OpenAPI.validate_property(::Type{ FeedContentDTO }, name::Symbol, val)
    if name === Symbol("rejectedOffersCount")
        OpenAPI.validate_param(name, "FeedContentDTO", :format, val, "int64")
    end
    if name === Symbol("totalOffersCount")
        OpenAPI.validate_param(name, "FeedContentDTO", :format, val, "int64")
    end
end
