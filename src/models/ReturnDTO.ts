// tslint:disable
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    LogisticPickupPointDTO,
    LogisticPickupPointDTOFromJSON,
    LogisticPickupPointDTOToJSON,
    RecipientType,
    RecipientTypeFromJSON,
    RecipientTypeToJSON,
    RefundStatusType,
    RefundStatusTypeFromJSON,
    RefundStatusTypeToJSON,
    ReturnItemDTO,
    ReturnItemDTOFromJSON,
    ReturnItemDTOToJSON,
    ReturnShipmentStatusType,
    ReturnShipmentStatusTypeFromJSON,
    ReturnShipmentStatusTypeToJSON,
    ReturnType,
    ReturnTypeFromJSON,
    ReturnTypeToJSON,
} from './';

/**
 * Возврат заказа.
 * @export
 * @interface ReturnDTO
 */
export interface ReturnDTO  {
    /**
     * Идентификатор возврата.
     * @type {number}
     * @memberof ReturnDTO
     */
    id?: number;
    /**
     * Номер заказа.
     * @type {number}
     * @memberof ReturnDTO
     */
    orderId?: number;
    /**
     * Дата создания возврата клиентом.
     * @type {Date}
     * @memberof ReturnDTO
     */
    creationDate?: Date;
    /**
     * Дата обновления возврата.
     * @type {Date}
     * @memberof ReturnDTO
     */
    updateDate?: Date;
    /**
     * 
     * @type {RefundStatusType}
     * @memberof ReturnDTO
     */
    refundStatus?: RefundStatusType;
    /**
     * 
     * @type {LogisticPickupPointDTO}
     * @memberof ReturnDTO
     */
    logisticPickupPoint?: LogisticPickupPointDTO;
    /**
     * 
     * @type {RecipientType}
     * @memberof ReturnDTO
     */
    shipmentRecipientType?: RecipientType;
    /**
     * 
     * @type {ReturnShipmentStatusType}
     * @memberof ReturnDTO
     */
    shipmentStatus?: ReturnShipmentStatusType;
    /**
     * Сумма возврата.
     * @type {number}
     * @memberof ReturnDTO
     */
    refundAmount?: number;
    /**
     * Список товаров в возврате.
     * @type {Array<ReturnItemDTO>}
     * @memberof ReturnDTO
     */
    items: Array<ReturnItemDTO>;
    /**
     * 
     * @type {ReturnType}
     * @memberof ReturnDTO
     */
    returnType?: ReturnType;
    /**
     * Используется ли опция **Быстрый возврат денег за дешевый брак**. 
     * @type {boolean}
     * @memberof ReturnDTO
     */
    fastReturn?: boolean;
}

export function ReturnDTOFromJSON(json: any): ReturnDTO {
    return {
        'id': !exists(json, 'id') ? undefined : json['id'],
        'orderId': !exists(json, 'orderId') ? undefined : json['orderId'],
        'creationDate': !exists(json, 'creationDate') ? undefined : new Date(json['creationDate']),
        'updateDate': !exists(json, 'updateDate') ? undefined : new Date(json['updateDate']),
        'refundStatus': !exists(json, 'refundStatus') ? undefined : RefundStatusTypeFromJSON(json['refundStatus']),
        'logisticPickupPoint': !exists(json, 'logisticPickupPoint') ? undefined : LogisticPickupPointDTOFromJSON(json['logisticPickupPoint']),
        'shipmentRecipientType': !exists(json, 'shipmentRecipientType') ? undefined : RecipientTypeFromJSON(json['shipmentRecipientType']),
        'shipmentStatus': !exists(json, 'shipmentStatus') ? undefined : ReturnShipmentStatusTypeFromJSON(json['shipmentStatus']),
        'refundAmount': !exists(json, 'refundAmount') ? undefined : json['refundAmount'],
        'items': (json['items'] as Array<any>).map(ReturnItemDTOFromJSON),
        'returnType': !exists(json, 'returnType') ? undefined : ReturnTypeFromJSON(json['returnType']),
        'fastReturn': !exists(json, 'fastReturn') ? undefined : json['fastReturn'],
    };
}

export function ReturnDTOToJSON(value?: ReturnDTO): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'id': value.id,
        'orderId': value.orderId,
        'creationDate': value.creationDate === undefined ? undefined : value.creationDate.toISOString(),
        'updateDate': value.updateDate === undefined ? undefined : value.updateDate.toISOString(),
        'refundStatus': RefundStatusTypeToJSON(value.refundStatus),
        'logisticPickupPoint': LogisticPickupPointDTOToJSON(value.logisticPickupPoint),
        'shipmentRecipientType': RecipientTypeToJSON(value.shipmentRecipientType),
        'shipmentStatus': ReturnShipmentStatusTypeToJSON(value.shipmentStatus),
        'refundAmount': value.refundAmount,
        'items': (value.items as Array<any>).map(ReturnItemDTOToJSON),
        'returnType': ReturnTypeToJSON(value.returnType),
        'fastReturn': value.fastReturn,
    };
}



