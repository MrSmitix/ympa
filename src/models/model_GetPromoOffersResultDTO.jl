# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""GetPromoOffersResultDTO
Список товаров, которые участвуют или могут участвовать в акции.

    GetPromoOffersResultDTO(;
        offers=nothing,
        paging=nothing,
    )

    - offers::Vector{GetPromoOfferDTO} : Товары, которые участвуют или могут участвовать в акции.
    - paging::ForwardScrollingPagerDTO
"""
Base.@kwdef mutable struct GetPromoOffersResultDTO <: OpenAPI.APIModel
    offers::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{GetPromoOfferDTO} }
    paging = nothing # spec type: Union{ Nothing, ForwardScrollingPagerDTO }

    function GetPromoOffersResultDTO(offers, paging, )
        OpenAPI.validate_property(GetPromoOffersResultDTO, Symbol("offers"), offers)
        OpenAPI.validate_property(GetPromoOffersResultDTO, Symbol("paging"), paging)
        return new(offers, paging, )
    end
end # type GetPromoOffersResultDTO

const _property_types_GetPromoOffersResultDTO = Dict{Symbol,String}(Symbol("offers")=>"Vector{GetPromoOfferDTO}", Symbol("paging")=>"ForwardScrollingPagerDTO", )
OpenAPI.property_type(::Type{ GetPromoOffersResultDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_GetPromoOffersResultDTO[name]))}

function check_required(o::GetPromoOffersResultDTO)
    o.offers === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ GetPromoOffersResultDTO }, name::Symbol, val)
end
