/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// OrderDeliveryDto : Информация о доставке.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OrderDeliveryDto {
    /// Идентификатор доставки, присвоенный магазином.  Указывается, только если магазин передал данный идентификатор в ответе на запрос методом [POST cart](../../pushapi/reference/cart.md). 
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<models::OrderDeliveryType>,
    /// Наименование службы доставки.
    #[serde(rename = "serviceName", skip_serializing_if = "Option::is_none")]
    pub service_name: Option<String>,
    /// {% note warning \"\" %}  Этот параметр устарел. Стоимость доставки смотрите в параметре `deliveryTotal`.  {% endnote %}  Стоимость доставки в валюте заказа. 
    #[serde(rename = "price", skip_serializing_if = "Option::is_none")]
    pub price: Option<f64>,
    #[serde(rename = "deliveryPartnerType", skip_serializing_if = "Option::is_none")]
    pub delivery_partner_type: Option<models::OrderDeliveryPartnerType>,
    #[serde(rename = "courier", skip_serializing_if = "Option::is_none")]
    pub courier: Option<Box<models::OrderCourierDto>>,
    #[serde(rename = "dates", skip_serializing_if = "Option::is_none")]
    pub dates: Option<Box<models::OrderDeliveryDatesDto>>,
    #[serde(rename = "region", skip_serializing_if = "Option::is_none")]
    pub region: Option<Box<models::RegionDto>>,
    #[serde(rename = "address", skip_serializing_if = "Option::is_none")]
    pub address: Option<Box<models::OrderDeliveryAddressDto>>,
    #[serde(rename = "vat", skip_serializing_if = "Option::is_none")]
    pub vat: Option<models::OrderVatType>,
    /// Идентификатор службы доставки.
    #[serde(rename = "deliveryServiceId", skip_serializing_if = "Option::is_none")]
    pub delivery_service_id: Option<i64>,
    #[serde(rename = "liftType", skip_serializing_if = "Option::is_none")]
    pub lift_type: Option<models::OrderLiftType>,
    /// Стоимость подъема на этаж.
    #[serde(rename = "liftPrice", skip_serializing_if = "Option::is_none")]
    pub lift_price: Option<f64>,
    /// Идентификатор пункта самовывоза, присвоенный магазином.
    #[serde(rename = "outletCode", skip_serializing_if = "Option::is_none")]
    pub outlet_code: Option<String>,
    /// Формат даты: `ДД-ММ-ГГГГ`. 
    #[serde(rename = "outletStorageLimitDate", skip_serializing_if = "Option::is_none")]
    pub outlet_storage_limit_date: Option<String>,
    #[serde(rename = "dispatchType", skip_serializing_if = "Option::is_none")]
    pub dispatch_type: Option<models::OrderDeliveryDispatchType>,
    /// Информация для отслеживания перемещений посылки.
    #[serde(rename = "tracks", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub tracks: Option<Option<Vec<models::OrderTrackDto>>>,
    /// Информация о посылках.
    #[serde(rename = "shipments", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub shipments: Option<Option<Vec<models::OrderShipmentDto>>>,
    /// Приблизительная ли дата доставки.
    #[serde(rename = "estimated", skip_serializing_if = "Option::is_none")]
    pub estimated: Option<bool>,
    #[serde(rename = "eacType", skip_serializing_if = "Option::is_none")]
    pub eac_type: Option<models::OrderDeliveryEacType>,
    /// Код подтверждения ЭАПП (для типа `MERCHANT_TO_COURIER`). 
    #[serde(rename = "eacCode", skip_serializing_if = "Option::is_none")]
    pub eac_code: Option<String>,
}

impl OrderDeliveryDto {
    /// Информация о доставке.
    pub fn new() -> OrderDeliveryDto {
        OrderDeliveryDto {
            id: None,
            r#type: None,
            service_name: None,
            price: None,
            delivery_partner_type: None,
            courier: None,
            dates: None,
            region: None,
            address: None,
            vat: None,
            delivery_service_id: None,
            lift_type: None,
            lift_price: None,
            outlet_code: None,
            outlet_storage_limit_date: None,
            dispatch_type: None,
            tracks: None,
            shipments: None,
            estimated: None,
            eac_type: None,
            eac_code: None,
        }
    }
}

