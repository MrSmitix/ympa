# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""CategoryErrorDTO
Текст ошибки.

    CategoryErrorDTO(;
        categoryId=nothing,
        type=nothing,
    )

    - categoryId::Int64 : Идентификатор категории.
    - type::CategoryErrorType
"""
Base.@kwdef mutable struct CategoryErrorDTO <: OpenAPI.APIModel
    categoryId::Union{Nothing, Int64} = nothing
    type = nothing # spec type: Union{ Nothing, CategoryErrorType }

    function CategoryErrorDTO(categoryId, type, )
        OpenAPI.validate_property(CategoryErrorDTO, Symbol("categoryId"), categoryId)
        OpenAPI.validate_property(CategoryErrorDTO, Symbol("type"), type)
        return new(categoryId, type, )
    end
end # type CategoryErrorDTO

const _property_types_CategoryErrorDTO = Dict{Symbol,String}(Symbol("categoryId")=>"Int64", Symbol("type")=>"CategoryErrorType", )
OpenAPI.property_type(::Type{ CategoryErrorDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CategoryErrorDTO[name]))}

function check_required(o::CategoryErrorDTO)
    true
end

function OpenAPI.validate_property(::Type{ CategoryErrorDTO }, name::Symbol, val)
    if name === Symbol("categoryId")
        OpenAPI.validate_param(name, "CategoryErrorDTO", :format, val, "int64")
    end
end
