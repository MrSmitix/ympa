# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""PriceRecommendationItemDTO
Рекомендованная цена.

    PriceRecommendationItemDTO(;
        campaignId=nothing,
        price=nothing,
    )

    - campaignId::Int64 : Идентификатор кампании.
    - price::Float64 : Рекомендованная цена на товар. Чтобы продвижение хорошо работало, цена на товар должна быть не выше этого значения. [Подробно о рекомендованных ценах](https://yandex.ru/support/marketplace/marketing/campaigns.html#prices) 
"""
Base.@kwdef mutable struct PriceRecommendationItemDTO <: OpenAPI.APIModel
    campaignId::Union{Nothing, Int64} = nothing
    price::Union{Nothing, Float64} = nothing

    function PriceRecommendationItemDTO(campaignId, price, )
        OpenAPI.validate_property(PriceRecommendationItemDTO, Symbol("campaignId"), campaignId)
        OpenAPI.validate_property(PriceRecommendationItemDTO, Symbol("price"), price)
        return new(campaignId, price, )
    end
end # type PriceRecommendationItemDTO

const _property_types_PriceRecommendationItemDTO = Dict{Symbol,String}(Symbol("campaignId")=>"Int64", Symbol("price")=>"Float64", )
OpenAPI.property_type(::Type{ PriceRecommendationItemDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PriceRecommendationItemDTO[name]))}

function check_required(o::PriceRecommendationItemDTO)
    o.campaignId === nothing && (return false)
    o.price === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ PriceRecommendationItemDTO }, name::Symbol, val)
    if name === Symbol("campaignId")
        OpenAPI.validate_param(name, "PriceRecommendationItemDTO", :format, val, "int64")
    end
    if name === Symbol("price")
        OpenAPI.validate_param(name, "PriceRecommendationItemDTO", :format, val, "decimal")
    end
    if name === Symbol("price")
        OpenAPI.validate_param(name, "PriceRecommendationItemDTO", :minimum, val, 1, false)
    end
end
