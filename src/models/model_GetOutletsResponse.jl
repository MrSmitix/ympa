# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""GetOutletsResponse
Ответ на запрос информации о точках продаж.

    GetOutletsResponse(;
        outlets=nothing,
        paging=nothing,
        pager=nothing,
    )

    - outlets::Vector{FullOutletDTO} : Информация о точках продаж.
    - paging::ScrollingPagerDTO
    - pager::FlippingPagerDTO
"""
Base.@kwdef mutable struct GetOutletsResponse <: OpenAPI.APIModel
    outlets::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{FullOutletDTO} }
    paging = nothing # spec type: Union{ Nothing, ScrollingPagerDTO }
    pager = nothing # spec type: Union{ Nothing, FlippingPagerDTO }

    function GetOutletsResponse(outlets, paging, pager, )
        OpenAPI.validate_property(GetOutletsResponse, Symbol("outlets"), outlets)
        OpenAPI.validate_property(GetOutletsResponse, Symbol("paging"), paging)
        OpenAPI.validate_property(GetOutletsResponse, Symbol("pager"), pager)
        return new(outlets, paging, pager, )
    end
end # type GetOutletsResponse

const _property_types_GetOutletsResponse = Dict{Symbol,String}(Symbol("outlets")=>"Vector{FullOutletDTO}", Symbol("paging")=>"ScrollingPagerDTO", Symbol("pager")=>"FlippingPagerDTO", )
OpenAPI.property_type(::Type{ GetOutletsResponse }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_GetOutletsResponse[name]))}

function check_required(o::GetOutletsResponse)
    o.outlets === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ GetOutletsResponse }, name::Symbol, val)
end
