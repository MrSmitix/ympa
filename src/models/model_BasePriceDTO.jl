# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""BasePriceDTO
Цена на товар.

    BasePriceDTO(;
        value=nothing,
        currencyId=nothing,
    )

    - value::Float64 : Значение.
    - currencyId::CurrencyType
"""
Base.@kwdef mutable struct BasePriceDTO <: OpenAPI.APIModel
    value::Union{Nothing, Float64} = nothing
    currencyId = nothing # spec type: Union{ Nothing, CurrencyType }

    function BasePriceDTO(value, currencyId, )
        OpenAPI.validate_property(BasePriceDTO, Symbol("value"), value)
        OpenAPI.validate_property(BasePriceDTO, Symbol("currencyId"), currencyId)
        return new(value, currencyId, )
    end
end # type BasePriceDTO

const _property_types_BasePriceDTO = Dict{Symbol,String}(Symbol("value")=>"Float64", Symbol("currencyId")=>"CurrencyType", )
OpenAPI.property_type(::Type{ BasePriceDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_BasePriceDTO[name]))}

function check_required(o::BasePriceDTO)
    o.value === nothing && (return false)
    o.currencyId === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ BasePriceDTO }, name::Symbol, val)
    if name === Symbol("value")
        OpenAPI.validate_param(name, "BasePriceDTO", :minimum, val, 0, true)
    end
end
