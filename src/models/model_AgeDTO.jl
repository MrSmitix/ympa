# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""AgeDTO
Возраст в заданных единицах измерения.

    AgeDTO(;
        value=nothing,
        ageUnit=nothing,
    )

    - value::Float64 : Значение. 
    - ageUnit::AgeUnitType
"""
Base.@kwdef mutable struct AgeDTO <: OpenAPI.APIModel
    value::Union{Nothing, Float64} = nothing
    ageUnit = nothing # spec type: Union{ Nothing, AgeUnitType }

    function AgeDTO(value, ageUnit, )
        OpenAPI.validate_property(AgeDTO, Symbol("value"), value)
        OpenAPI.validate_property(AgeDTO, Symbol("ageUnit"), ageUnit)
        return new(value, ageUnit, )
    end
end # type AgeDTO

const _property_types_AgeDTO = Dict{Symbol,String}(Symbol("value")=>"Float64", Symbol("ageUnit")=>"AgeUnitType", )
OpenAPI.property_type(::Type{ AgeDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AgeDTO[name]))}

function check_required(o::AgeDTO)
    o.value === nothing && (return false)
    o.ageUnit === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ AgeDTO }, name::Symbol, val)
    if name === Symbol("value")
        OpenAPI.validate_param(name, "AgeDTO", :minimum, val, 0, false)
    end
end
