// tslint:disable
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    DayOfWeekType,
    DayOfWeekTypeFromJSON,
    DayOfWeekTypeToJSON,
    OfferAvailabilityStatusType,
    OfferAvailabilityStatusTypeFromJSON,
    OfferAvailabilityStatusTypeToJSON,
    OfferProcessingStateDTO,
    OfferProcessingStateDTOFromJSON,
    OfferProcessingStateDTOToJSON,
    OfferWeightDimensionsDTO,
    OfferWeightDimensionsDTOFromJSON,
    OfferWeightDimensionsDTOToJSON,
    TimePeriodDTO,
    TimePeriodDTOFromJSON,
    TimePeriodDTOToJSON,
} from './';

/**
 * Базовая информация о товарах в каталоге.
 * @export
 * @interface MappingsOfferInfoDTO
 */
export interface MappingsOfferInfoDTO  {
    /**
     * Составляйте название по схеме: тип + бренд или производитель + модель + особенности, если есть (например, цвет, размер или вес) и количество в упаковке.  Не включайте в название условия продажи (например, «скидка», «бесплатная доставка» и т. д.), эмоциональные характеристики («хит», «супер» и т. д.). Не пишите слова большими буквами — кроме устоявшихся названий брендов и моделей.  Оптимальная длина — 50–60 символов, максимальная — 256.  [Рекомендации и правила](https://yandex.ru/support/marketplace/assortment/fields/title.html) 
     * @type {string}
     * @memberof MappingsOfferInfoDTO
     */
    name?: string;
    /**
     * Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
     * @type {string}
     * @memberof MappingsOfferInfoDTO
     */
    shopSku?: string;
    /**
     * Категория товара в вашем магазине. Значение будет использовано для определения категории товара на Маркете в случае, если вы не передали категорию в параметре `marketCategoryId`.  Указывайте конкретные категории — например, набор ножей лучше отнести к категории **Столовые приборы**, а не просто **Посуда**.  Выбирайте категории, которые описывают товар, а не абстрактный признак — например, **Духи**, а не **Подарки**.  Значение будет использовано для определения категории товара на Маркете в случае, если вы не передали категорию в параметре `marketCategoryId`. 
     * @type {string}
     * @memberof MappingsOfferInfoDTO
     */
    category?: string;
    /**
     * Название бренда или производителя. Должно быть записано так, как его пишет сам бренд.
     * @type {string}
     * @memberof MappingsOfferInfoDTO
     */
    vendor?: string;
    /**
     * Артикул товара от производителя.
     * @type {string}
     * @memberof MappingsOfferInfoDTO
     */
    vendorCode?: string;
    /**
     * Подробное описание товара: например, его преимущества и особенности.  Не давайте в описании инструкций по установке и сборке. Не используйте слова «скидка», «распродажа», «дешевый», «подарок» (кроме подарочных категорий), «бесплатно», «акция», «специальная цена», «новинка», «new», «аналог», «заказ», «хит». Не указывайте никакой контактной информации и не давайте ссылок.  Можно использовать теги:  * \\<h>, \\<h1>, \\<h2> и так далее — для заголовков; * \\<br> и \\<p> — для переноса строки; * \\<ol> — для нумерованного списка; * \\<ul> — для маркированного списка; * \\<li> — для создания элементов списка (должен находиться внутри \\<ol> или \\<ul>); * \\<div> — поддерживается, но не влияет на отображение текста.  Оптимальная длина — 400–600 символов, максимальная — 6000.  [Рекомендации и правила](https://yandex.ru/support/marketplace/assortment/fields/description.html) 
     * @type {string}
     * @memberof MappingsOfferInfoDTO
     */
    description?: string;
    /**
     * Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
     * @type {string}
     * @memberof MappingsOfferInfoDTO
     */
    id?: string;
    /**
     * Идентификатор фида.
     * @type {number}
     * @memberof MappingsOfferInfoDTO
     */
    feedId?: number;
    /**
     * Указывайте в виде последовательности цифр. Подойдут коды EAN-13, EAN-8, UPC-A, UPC-E или Code 128.  Для книг указывайте ISBN.  Для товаров [определенных категорий и торговых марок](https://yastatic.net/s3/doc-binary/src/support/market/ru/yandex-market-list-for-gtin.xlsx) штрихкод должен быть действительным кодом GTIN. Обратите внимание: внутренние штрихкоды, начинающиеся на 2 или 02, и коды формата Code 128 не являются GTIN.  [Что такое GTIN](*gtin)  
     * @type {Array<string>}
     * @memberof MappingsOfferInfoDTO
     */
    barcodes?: Array<string>;
    /**
     * URL фотографии товара или страницы с описанием на вашем сайте.  Переданные данные не будут отображаться на витрине, но они помогут специалистам Маркета найти карточку для вашего товара.  Должен содержать один вложенный параметр url. 
     * @type {Array<string>}
     * @memberof MappingsOfferInfoDTO
     */
    urls?: Array<string>;
    /**
     * Ссылки (URL) изображений товара в хорошем качестве.  Можно указать до 30 ссылок. При этом изображение по первой ссылке будет основным. Оно используется в качестве изображения товара в поиске Маркета и на карточке товара. Другие изображения товара доступны в режиме просмотра увеличенных изображений.  Обязательный параметр.  Должен содержать хотя бы один вложенный параметр `picture`. 
     * @type {Array<string>}
     * @memberof MappingsOfferInfoDTO
     */
    pictures?: Array<string>;
    /**
     * Изготовитель товара: компания, которая произвела товар, ее адрес и регистрационный номер (если есть).  Необязательный параметр. 
     * @type {string}
     * @memberof MappingsOfferInfoDTO
     */
    manufacturer?: string;
    /**
     * Список стран, в которых произведен товар.  Обязательный параметр.  Должен содержать хотя бы одну, но не больше 5 стран. 
     * @type {Array<string>}
     * @memberof MappingsOfferInfoDTO
     */
    manufacturerCountries?: Array<string>;
    /**
     * Минимальное количество единиц товара, которое вы поставляете на склад.  Например, если вы поставляете детское питание партиями минимум по 10 коробок, а в каждой коробке по 6 баночек, укажите значение 60. 
     * @type {number}
     * @memberof MappingsOfferInfoDTO
     */
    minShipment?: number;
    /**
     * Количество единиц товара в одной упаковке, которую вы поставляете на склад.  Например, если вы поставляете детское питание коробками по 6 баночек, укажите значение 6. 
     * @type {number}
     * @memberof MappingsOfferInfoDTO
     */
    transportUnitSize?: number;
    /**
     * Добавочная партия: по сколько единиц товара можно добавлять к минимальному количеству minShipment.  Например, если вы поставляете детское питание партиями минимум по 10 коробок и хотите добавлять к минимальной партии по 2 коробки, а в каждой коробке по 6 баночек, укажите значение 12. 
     * @type {number}
     * @memberof MappingsOfferInfoDTO
     */
    quantumOfSupply?: number;
    /**
     * Срок, за который продавец поставляет товары на склад, в днях.
     * @type {number}
     * @memberof MappingsOfferInfoDTO
     */
    deliveryDurationDays?: number;
    /**
     * Сколько мест (если больше одного) занимает товар.  Параметр указывается, только если товар занимает больше одного места (например, кондиционер занимает два места: внешний и внутренний блоки в двух коробках). Если товар занимает одно место, не указывайте этот параметр. 
     * @type {number}
     * @memberof MappingsOfferInfoDTO
     */
    boxCount?: number;
    /**
     * Список кодов товара в единой Товарной номенклатуре внешнеэкономической деятельности (ТН ВЭД).  Обязательный параметр, если товар подлежит особому учету (например, в системе «Меркурий» как продукция животного происхождения или в системе «Честный ЗНАК»).  Может содержать только один вложенный код ТН ВЭД. 
     * @type {Array<string>}
     * @memberof MappingsOfferInfoDTO
     */
    customsCommodityCodes?: Array<string>;
    /**
     * 
     * @type {OfferWeightDimensionsDTO}
     * @memberof MappingsOfferInfoDTO
     */
    weightDimensions?: OfferWeightDimensionsDTO;
    /**
     * Дни недели, в которые продавец поставляет товары на склад.
     * @type {Array<DayOfWeekType>}
     * @memberof MappingsOfferInfoDTO
     */
    supplyScheduleDays?: Array<DayOfWeekType>;
    /**
     * {% note warning \"\" %}  Этот параметр устарел. Вместо него используйте `shelfLife`. Совместное использование обоих параметров приведет к ошибке.  {% endnote %}  Срок годности: через сколько дней товар станет непригоден для использования. 
     * @type {number}
     * @memberof MappingsOfferInfoDTO
     */
    shelfLifeDays?: number;
    /**
     * {% note warning \"\" %}  Этот параметр устарел. Вместо него используйте `lifeTime`. Совместное использование обоих параметров приведет к ошибке.  {% endnote %}  Срок службы: сколько дней товар будет исправно выполнять свою функцию, а изготовитель — нести ответственность за его существенные недостатки. 
     * @type {number}
     * @memberof MappingsOfferInfoDTO
     */
    lifeTimeDays?: number;
    /**
     * Гарантийный срок товара: сколько дней возможно обслуживание и ремонт товара или возврат денег, а изготовитель или продавец будет нести ответственность за недостатки товара. 
     * @type {number}
     * @memberof MappingsOfferInfoDTO
     */
    guaranteePeriodDays?: number;
    /**
     * 
     * @type {OfferProcessingStateDTO}
     * @memberof MappingsOfferInfoDTO
     */
    processingState?: OfferProcessingStateDTO;
    /**
     * 
     * @type {OfferAvailabilityStatusType}
     * @memberof MappingsOfferInfoDTO
     */
    availability?: OfferAvailabilityStatusType;
    /**
     * 
     * @type {TimePeriodDTO}
     * @memberof MappingsOfferInfoDTO
     */
    shelfLife?: TimePeriodDTO;
    /**
     * 
     * @type {TimePeriodDTO}
     * @memberof MappingsOfferInfoDTO
     */
    lifeTime?: TimePeriodDTO;
    /**
     * 
     * @type {TimePeriodDTO}
     * @memberof MappingsOfferInfoDTO
     */
    guaranteePeriod?: TimePeriodDTO;
    /**
     * Номер документа на товар.  Перед указанием номера документ нужно загрузить в кабинете продавца на Маркете. [Инструкция](https://yandex.ru/support/marketplace/assortment/restrictions/certificates.html) 
     * @type {string}
     * @memberof MappingsOfferInfoDTO
     */
    certificate?: string;
}

export function MappingsOfferInfoDTOFromJSON(json: any): MappingsOfferInfoDTO {
    return {
        'name': !exists(json, 'name') ? undefined : json['name'],
        'shopSku': !exists(json, 'shopSku') ? undefined : json['shopSku'],
        'category': !exists(json, 'category') ? undefined : json['category'],
        'vendor': !exists(json, 'vendor') ? undefined : json['vendor'],
        'vendorCode': !exists(json, 'vendorCode') ? undefined : json['vendorCode'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'feedId': !exists(json, 'feedId') ? undefined : json['feedId'],
        'barcodes': !exists(json, 'barcodes') ? undefined : json['barcodes'],
        'urls': !exists(json, 'urls') ? undefined : json['urls'],
        'pictures': !exists(json, 'pictures') ? undefined : json['pictures'],
        'manufacturer': !exists(json, 'manufacturer') ? undefined : json['manufacturer'],
        'manufacturerCountries': !exists(json, 'manufacturerCountries') ? undefined : json['manufacturerCountries'],
        'minShipment': !exists(json, 'minShipment') ? undefined : json['minShipment'],
        'transportUnitSize': !exists(json, 'transportUnitSize') ? undefined : json['transportUnitSize'],
        'quantumOfSupply': !exists(json, 'quantumOfSupply') ? undefined : json['quantumOfSupply'],
        'deliveryDurationDays': !exists(json, 'deliveryDurationDays') ? undefined : json['deliveryDurationDays'],
        'boxCount': !exists(json, 'boxCount') ? undefined : json['boxCount'],
        'customsCommodityCodes': !exists(json, 'customsCommodityCodes') ? undefined : json['customsCommodityCodes'],
        'weightDimensions': !exists(json, 'weightDimensions') ? undefined : OfferWeightDimensionsDTOFromJSON(json['weightDimensions']),
        'supplyScheduleDays': !exists(json, 'supplyScheduleDays') ? undefined : (json['supplyScheduleDays'] as Array<any>).map(DayOfWeekTypeFromJSON),
        'shelfLifeDays': !exists(json, 'shelfLifeDays') ? undefined : json['shelfLifeDays'],
        'lifeTimeDays': !exists(json, 'lifeTimeDays') ? undefined : json['lifeTimeDays'],
        'guaranteePeriodDays': !exists(json, 'guaranteePeriodDays') ? undefined : json['guaranteePeriodDays'],
        'processingState': !exists(json, 'processingState') ? undefined : OfferProcessingStateDTOFromJSON(json['processingState']),
        'availability': !exists(json, 'availability') ? undefined : OfferAvailabilityStatusTypeFromJSON(json['availability']),
        'shelfLife': !exists(json, 'shelfLife') ? undefined : TimePeriodDTOFromJSON(json['shelfLife']),
        'lifeTime': !exists(json, 'lifeTime') ? undefined : TimePeriodDTOFromJSON(json['lifeTime']),
        'guaranteePeriod': !exists(json, 'guaranteePeriod') ? undefined : TimePeriodDTOFromJSON(json['guaranteePeriod']),
        'certificate': !exists(json, 'certificate') ? undefined : json['certificate'],
    };
}

export function MappingsOfferInfoDTOToJSON(value?: MappingsOfferInfoDTO): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'name': value.name,
        'shopSku': value.shopSku,
        'category': value.category,
        'vendor': value.vendor,
        'vendorCode': value.vendorCode,
        'description': value.description,
        'id': value.id,
        'feedId': value.feedId,
        'barcodes': value.barcodes,
        'urls': value.urls,
        'pictures': value.pictures,
        'manufacturer': value.manufacturer,
        'manufacturerCountries': value.manufacturerCountries,
        'minShipment': value.minShipment,
        'transportUnitSize': value.transportUnitSize,
        'quantumOfSupply': value.quantumOfSupply,
        'deliveryDurationDays': value.deliveryDurationDays,
        'boxCount': value.boxCount,
        'customsCommodityCodes': value.customsCommodityCodes,
        'weightDimensions': OfferWeightDimensionsDTOToJSON(value.weightDimensions),
        'supplyScheduleDays': value.supplyScheduleDays === undefined ? undefined : (value.supplyScheduleDays as Array<any>).map(DayOfWeekTypeToJSON),
        'shelfLifeDays': value.shelfLifeDays,
        'lifeTimeDays': value.lifeTimeDays,
        'guaranteePeriodDays': value.guaranteePeriodDays,
        'processingState': OfferProcessingStateDTOToJSON(value.processingState),
        'availability': OfferAvailabilityStatusTypeToJSON(value.availability),
        'shelfLife': TimePeriodDTOToJSON(value.shelfLife),
        'lifeTime': TimePeriodDTOToJSON(value.lifeTime),
        'guaranteePeriod': TimePeriodDTOToJSON(value.guaranteePeriod),
        'certificate': value.certificate,
    };
}



