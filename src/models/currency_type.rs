/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CurrencyType : Коды валют. Возможные значения: * `BYR` — белорусский рубль. * `KZT` — казахстанский тенге. * `RUR` — российский рубль. * `UAH` — украинская гривна. 
/// Коды валют. Возможные значения: * `BYR` — белорусский рубль. * `KZT` — казахстанский тенге. * `RUR` — российский рубль. * `UAH` — украинская гривна. 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CurrencyType {
    #[serde(rename = "RUR")]
    Rur,
    #[serde(rename = "USD")]
    Usd,
    #[serde(rename = "EUR")]
    Eur,
    #[serde(rename = "UAH")]
    Uah,
    #[serde(rename = "AUD")]
    Aud,
    #[serde(rename = "GBP")]
    Gbp,
    #[serde(rename = "BYR")]
    Byr,
    #[serde(rename = "BYN")]
    Byn,
    #[serde(rename = "DKK")]
    Dkk,
    #[serde(rename = "ISK")]
    Isk,
    #[serde(rename = "KZT")]
    Kzt,
    #[serde(rename = "CAD")]
    Cad,
    #[serde(rename = "CNY")]
    Cny,
    #[serde(rename = "NOK")]
    Nok,
    #[serde(rename = "XDR")]
    Xdr,
    #[serde(rename = "SGD")]
    Sgd,
    #[serde(rename = "TRY")]
    Try,
    #[serde(rename = "SEK")]
    Sek,
    #[serde(rename = "CHF")]
    Chf,
    #[serde(rename = "JPY")]
    Jpy,
    #[serde(rename = "AZN")]
    Azn,
    #[serde(rename = "ALL")]
    All,
    #[serde(rename = "DZD")]
    Dzd,
    #[serde(rename = "AOA")]
    Aoa,
    #[serde(rename = "ARS")]
    Ars,
    #[serde(rename = "AMD")]
    Amd,
    #[serde(rename = "AFN")]
    Afn,
    #[serde(rename = "BHD")]
    Bhd,
    #[serde(rename = "BGN")]
    Bgn,
    #[serde(rename = "BOB")]
    Bob,
    #[serde(rename = "BWP")]
    Bwp,
    #[serde(rename = "BND")]
    Bnd,
    #[serde(rename = "BRL")]
    Brl,
    #[serde(rename = "BIF")]
    Bif,
    #[serde(rename = "HUF")]
    Huf,
    #[serde(rename = "VEF")]
    Vef,
    #[serde(rename = "KPW")]
    Kpw,
    #[serde(rename = "VND")]
    Vnd,
    #[serde(rename = "GMD")]
    Gmd,
    #[serde(rename = "GHS")]
    Ghs,
    #[serde(rename = "GNF")]
    Gnf,
    #[serde(rename = "HKD")]
    Hkd,
    #[serde(rename = "GEL")]
    Gel,
    #[serde(rename = "AED")]
    Aed,
    #[serde(rename = "EGP")]
    Egp,
    #[serde(rename = "ZMK")]
    Zmk,
    #[serde(rename = "ILS")]
    Ils,
    #[serde(rename = "INR")]
    Inr,
    #[serde(rename = "IDR")]
    Idr,
    #[serde(rename = "JOD")]
    Jod,
    #[serde(rename = "IQD")]
    Iqd,
    #[serde(rename = "IRR")]
    Irr,
    #[serde(rename = "YER")]
    Yer,
    #[serde(rename = "QAR")]
    Qar,
    #[serde(rename = "KES")]
    Kes,
    #[serde(rename = "KGS")]
    Kgs,
    #[serde(rename = "COP")]
    Cop,
    #[serde(rename = "CDF")]
    Cdf,
    #[serde(rename = "CRC")]
    Crc,
    #[serde(rename = "KWD")]
    Kwd,
    #[serde(rename = "CUP")]
    Cup,
    #[serde(rename = "LAK")]
    Lak,
    #[serde(rename = "LVL")]
    Lvl,
    #[serde(rename = "SLL")]
    Sll,
    #[serde(rename = "LBP")]
    Lbp,
    #[serde(rename = "LYD")]
    Lyd,
    #[serde(rename = "SZL")]
    Szl,
    #[serde(rename = "LTL")]
    Ltl,
    #[serde(rename = "MUR")]
    Mur,
    #[serde(rename = "MRO")]
    Mro,
    #[serde(rename = "MKD")]
    Mkd,
    #[serde(rename = "MWK")]
    Mwk,
    #[serde(rename = "MGA")]
    Mga,
    #[serde(rename = "MYR")]
    Myr,
    #[serde(rename = "MAD")]
    Mad,
    #[serde(rename = "MXN")]
    Mxn,
    #[serde(rename = "MZN")]
    Mzn,
    #[serde(rename = "MDL")]
    Mdl,
    #[serde(rename = "MNT")]
    Mnt,
    #[serde(rename = "NPR")]
    Npr,
    #[serde(rename = "NGN")]
    Ngn,
    #[serde(rename = "NIO")]
    Nio,
    #[serde(rename = "NZD")]
    Nzd,
    #[serde(rename = "OMR")]
    Omr,
    #[serde(rename = "PKR")]
    Pkr,
    #[serde(rename = "PYG")]
    Pyg,
    #[serde(rename = "PEN")]
    Pen,
    #[serde(rename = "PLN")]
    Pln,
    #[serde(rename = "KHR")]
    Khr,
    #[serde(rename = "SAR")]
    Sar,
    #[serde(rename = "RON")]
    Ron,
    #[serde(rename = "SCR")]
    Scr,
    #[serde(rename = "SYP")]
    Syp,
    #[serde(rename = "SKK")]
    Skk,
    #[serde(rename = "SOS")]
    Sos,
    #[serde(rename = "SDG")]
    Sdg,
    #[serde(rename = "SRD")]
    Srd,
    #[serde(rename = "TJS")]
    Tjs,
    #[serde(rename = "THB")]
    Thb,
    #[serde(rename = "TWD")]
    Twd,
    #[serde(rename = "BDT")]
    Bdt,
    #[serde(rename = "TZS")]
    Tzs,
    #[serde(rename = "TND")]
    Tnd,
    #[serde(rename = "TMM")]
    Tmm,
    #[serde(rename = "UGX")]
    Ugx,
    #[serde(rename = "UZS")]
    Uzs,
    #[serde(rename = "UYU")]
    Uyu,
    #[serde(rename = "PHP")]
    Php,
    #[serde(rename = "DJF")]
    Djf,
    #[serde(rename = "XAF")]
    Xaf,
    #[serde(rename = "XOF")]
    Xof,
    #[serde(rename = "HRK")]
    Hrk,
    #[serde(rename = "CZK")]
    Czk,
    #[serde(rename = "CLP")]
    Clp,
    #[serde(rename = "LKR")]
    Lkr,
    #[serde(rename = "EEK")]
    Eek,
    #[serde(rename = "ETB")]
    Etb,
    #[serde(rename = "RSD")]
    Rsd,
    #[serde(rename = "ZAR")]
    Zar,
    #[serde(rename = "KRW")]
    Krw,
    #[serde(rename = "NAD")]
    Nad,
    #[serde(rename = "TL")]
    Tl,
    #[serde(rename = "UE")]
    Ue,

}

impl std::fmt::Display for CurrencyType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Rur => write!(f, "RUR"),
            Self::Usd => write!(f, "USD"),
            Self::Eur => write!(f, "EUR"),
            Self::Uah => write!(f, "UAH"),
            Self::Aud => write!(f, "AUD"),
            Self::Gbp => write!(f, "GBP"),
            Self::Byr => write!(f, "BYR"),
            Self::Byn => write!(f, "BYN"),
            Self::Dkk => write!(f, "DKK"),
            Self::Isk => write!(f, "ISK"),
            Self::Kzt => write!(f, "KZT"),
            Self::Cad => write!(f, "CAD"),
            Self::Cny => write!(f, "CNY"),
            Self::Nok => write!(f, "NOK"),
            Self::Xdr => write!(f, "XDR"),
            Self::Sgd => write!(f, "SGD"),
            Self::Try => write!(f, "TRY"),
            Self::Sek => write!(f, "SEK"),
            Self::Chf => write!(f, "CHF"),
            Self::Jpy => write!(f, "JPY"),
            Self::Azn => write!(f, "AZN"),
            Self::All => write!(f, "ALL"),
            Self::Dzd => write!(f, "DZD"),
            Self::Aoa => write!(f, "AOA"),
            Self::Ars => write!(f, "ARS"),
            Self::Amd => write!(f, "AMD"),
            Self::Afn => write!(f, "AFN"),
            Self::Bhd => write!(f, "BHD"),
            Self::Bgn => write!(f, "BGN"),
            Self::Bob => write!(f, "BOB"),
            Self::Bwp => write!(f, "BWP"),
            Self::Bnd => write!(f, "BND"),
            Self::Brl => write!(f, "BRL"),
            Self::Bif => write!(f, "BIF"),
            Self::Huf => write!(f, "HUF"),
            Self::Vef => write!(f, "VEF"),
            Self::Kpw => write!(f, "KPW"),
            Self::Vnd => write!(f, "VND"),
            Self::Gmd => write!(f, "GMD"),
            Self::Ghs => write!(f, "GHS"),
            Self::Gnf => write!(f, "GNF"),
            Self::Hkd => write!(f, "HKD"),
            Self::Gel => write!(f, "GEL"),
            Self::Aed => write!(f, "AED"),
            Self::Egp => write!(f, "EGP"),
            Self::Zmk => write!(f, "ZMK"),
            Self::Ils => write!(f, "ILS"),
            Self::Inr => write!(f, "INR"),
            Self::Idr => write!(f, "IDR"),
            Self::Jod => write!(f, "JOD"),
            Self::Iqd => write!(f, "IQD"),
            Self::Irr => write!(f, "IRR"),
            Self::Yer => write!(f, "YER"),
            Self::Qar => write!(f, "QAR"),
            Self::Kes => write!(f, "KES"),
            Self::Kgs => write!(f, "KGS"),
            Self::Cop => write!(f, "COP"),
            Self::Cdf => write!(f, "CDF"),
            Self::Crc => write!(f, "CRC"),
            Self::Kwd => write!(f, "KWD"),
            Self::Cup => write!(f, "CUP"),
            Self::Lak => write!(f, "LAK"),
            Self::Lvl => write!(f, "LVL"),
            Self::Sll => write!(f, "SLL"),
            Self::Lbp => write!(f, "LBP"),
            Self::Lyd => write!(f, "LYD"),
            Self::Szl => write!(f, "SZL"),
            Self::Ltl => write!(f, "LTL"),
            Self::Mur => write!(f, "MUR"),
            Self::Mro => write!(f, "MRO"),
            Self::Mkd => write!(f, "MKD"),
            Self::Mwk => write!(f, "MWK"),
            Self::Mga => write!(f, "MGA"),
            Self::Myr => write!(f, "MYR"),
            Self::Mad => write!(f, "MAD"),
            Self::Mxn => write!(f, "MXN"),
            Self::Mzn => write!(f, "MZN"),
            Self::Mdl => write!(f, "MDL"),
            Self::Mnt => write!(f, "MNT"),
            Self::Npr => write!(f, "NPR"),
            Self::Ngn => write!(f, "NGN"),
            Self::Nio => write!(f, "NIO"),
            Self::Nzd => write!(f, "NZD"),
            Self::Omr => write!(f, "OMR"),
            Self::Pkr => write!(f, "PKR"),
            Self::Pyg => write!(f, "PYG"),
            Self::Pen => write!(f, "PEN"),
            Self::Pln => write!(f, "PLN"),
            Self::Khr => write!(f, "KHR"),
            Self::Sar => write!(f, "SAR"),
            Self::Ron => write!(f, "RON"),
            Self::Scr => write!(f, "SCR"),
            Self::Syp => write!(f, "SYP"),
            Self::Skk => write!(f, "SKK"),
            Self::Sos => write!(f, "SOS"),
            Self::Sdg => write!(f, "SDG"),
            Self::Srd => write!(f, "SRD"),
            Self::Tjs => write!(f, "TJS"),
            Self::Thb => write!(f, "THB"),
            Self::Twd => write!(f, "TWD"),
            Self::Bdt => write!(f, "BDT"),
            Self::Tzs => write!(f, "TZS"),
            Self::Tnd => write!(f, "TND"),
            Self::Tmm => write!(f, "TMM"),
            Self::Ugx => write!(f, "UGX"),
            Self::Uzs => write!(f, "UZS"),
            Self::Uyu => write!(f, "UYU"),
            Self::Php => write!(f, "PHP"),
            Self::Djf => write!(f, "DJF"),
            Self::Xaf => write!(f, "XAF"),
            Self::Xof => write!(f, "XOF"),
            Self::Hrk => write!(f, "HRK"),
            Self::Czk => write!(f, "CZK"),
            Self::Clp => write!(f, "CLP"),
            Self::Lkr => write!(f, "LKR"),
            Self::Eek => write!(f, "EEK"),
            Self::Etb => write!(f, "ETB"),
            Self::Rsd => write!(f, "RSD"),
            Self::Zar => write!(f, "ZAR"),
            Self::Krw => write!(f, "KRW"),
            Self::Nad => write!(f, "NAD"),
            Self::Tl => write!(f, "TL"),
            Self::Ue => write!(f, "UE"),
        }
    }
}

impl Default for CurrencyType {
    fn default() -> CurrencyType {
        Self::Rur
    }
}

