/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// OrdersStatsPaymentType : Тип денежного перевода: - `PAYMENT` — оплата. - `REFUND` — возврат. 
/// Тип денежного перевода: - `PAYMENT` — оплата. - `REFUND` — возврат. 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum OrdersStatsPaymentType {
    #[serde(rename = "PAYMENT")]
    Payment,
    #[serde(rename = "REFUND")]
    Refund,
    #[serde(rename = "UNKNOWN")]
    Unknown,

}

impl std::fmt::Display for OrdersStatsPaymentType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Payment => write!(f, "PAYMENT"),
            Self::Refund => write!(f, "REFUND"),
            Self::Unknown => write!(f, "UNKNOWN"),
        }
    }
}

impl Default for OrdersStatsPaymentType {
    fn default() -> OrdersStatsPaymentType {
        Self::Payment
    }
}

