/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// GetPromoDto : Информация об акции.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetPromoDto {
    /// Идентификатор акции.
    #[serde(rename = "id")]
    pub id: String,
    /// Название акции.
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "period")]
    pub period: Box<models::PromoPeriodDto>,
    /// Участвует или участвовал ли продавец в этой акции.  Для текущих и будущих акций возвращается со значением `true`, если в акции есть товары, которые были добавлены вручную. Если товары не участвуют в акции или добавлены в нее автоматически, параметр возвращается со значением `false`.  Для прошедших акций всегда возвращается со значением `true`.  Об автоматическом и ручном добавлении товаров в акцию читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/index). 
    #[serde(rename = "participating")]
    pub participating: bool,
    #[serde(rename = "assortmentInfo")]
    pub assortment_info: Box<models::GetPromoAssortmentInfoDto>,
    #[serde(rename = "mechanicsInfo")]
    pub mechanics_info: Box<models::GetPromoMechanicsInfoDto>,
    #[serde(rename = "bestsellerInfo")]
    pub bestseller_info: Box<models::GetPromoBestsellerInfoDto>,
    /// Список каналов продвижения товаров.
    #[serde(rename = "channels", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub channels: Option<Option<Vec<models::ChannelType>>>,
    #[serde(rename = "constraints", skip_serializing_if = "Option::is_none")]
    pub constraints: Option<Box<models::GetPromoConstraintsDto>>,
}

impl GetPromoDto {
    /// Информация об акции.
    pub fn new(id: String, name: String, period: models::PromoPeriodDto, participating: bool, assortment_info: models::GetPromoAssortmentInfoDto, mechanics_info: models::GetPromoMechanicsInfoDto, bestseller_info: models::GetPromoBestsellerInfoDto) -> GetPromoDto {
        GetPromoDto {
            id,
            name,
            period: Box::new(period),
            participating,
            assortment_info: Box::new(assortment_info),
            mechanics_info: Box::new(mechanics_info),
            bestseller_info: Box::new(bestseller_info),
            channels: None,
            constraints: None,
        }
    }
}

