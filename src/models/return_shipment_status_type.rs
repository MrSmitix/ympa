/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ReturnShipmentStatusType : Статус передачи возврата:  * `CREATED` — возврат создан.  * `RECEIVED` — принят у покупателя.  * `IN_TRANSIT` — возврат в пути.  * `READY_FOR_PICKUP` — возврат готов к выдаче магазину.  * `PICKED` — возврат выдан магазину.  * `LOST` — возврат утерян при транспортировке.  * `CANCELLED` — возврат отменен.  * `FULFILMENT_RECEIVED` — возврат принят на складе Маркета.  * `PREPARED_FOR_UTILIZATION` — возврат передан в утилизацию.  * `UTILIZED` — возврат утилизирован. 
/// Статус передачи возврата:  * `CREATED` — возврат создан.  * `RECEIVED` — принят у покупателя.  * `IN_TRANSIT` — возврат в пути.  * `READY_FOR_PICKUP` — возврат готов к выдаче магазину.  * `PICKED` — возврат выдан магазину.  * `LOST` — возврат утерян при транспортировке.  * `CANCELLED` — возврат отменен.  * `FULFILMENT_RECEIVED` — возврат принят на складе Маркета.  * `PREPARED_FOR_UTILIZATION` — возврат передан в утилизацию.  * `UTILIZED` — возврат утилизирован. 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ReturnShipmentStatusType {
    #[serde(rename = "CREATED")]
    Created,
    #[serde(rename = "RECEIVED")]
    Received,
    #[serde(rename = "IN_TRANSIT")]
    InTransit,
    #[serde(rename = "READY_FOR_PICKUP")]
    ReadyForPickup,
    #[serde(rename = "PICKED")]
    Picked,
    #[serde(rename = "LOST")]
    Lost,
    #[serde(rename = "EXPIRED")]
    Expired,
    #[serde(rename = "CANCELLED")]
    Cancelled,
    #[serde(rename = "FULFILMENT_RECEIVED")]
    FulfilmentReceived,
    #[serde(rename = "PREPARED_FOR_UTILIZATION")]
    PreparedForUtilization,
    #[serde(rename = "NOT_IN_DEMAND")]
    NotInDemand,
    #[serde(rename = "UTILIZED")]
    Utilized,
    #[serde(rename = "READY_FOR_EXPROPRIATION")]
    ReadyForExpropriation,
    #[serde(rename = "RECEIVED_FOR_EXPROPRIATION")]
    ReceivedForExpropriation,

}

impl std::fmt::Display for ReturnShipmentStatusType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Created => write!(f, "CREATED"),
            Self::Received => write!(f, "RECEIVED"),
            Self::InTransit => write!(f, "IN_TRANSIT"),
            Self::ReadyForPickup => write!(f, "READY_FOR_PICKUP"),
            Self::Picked => write!(f, "PICKED"),
            Self::Lost => write!(f, "LOST"),
            Self::Expired => write!(f, "EXPIRED"),
            Self::Cancelled => write!(f, "CANCELLED"),
            Self::FulfilmentReceived => write!(f, "FULFILMENT_RECEIVED"),
            Self::PreparedForUtilization => write!(f, "PREPARED_FOR_UTILIZATION"),
            Self::NotInDemand => write!(f, "NOT_IN_DEMAND"),
            Self::Utilized => write!(f, "UTILIZED"),
            Self::ReadyForExpropriation => write!(f, "READY_FOR_EXPROPRIATION"),
            Self::ReceivedForExpropriation => write!(f, "RECEIVED_FOR_EXPROPRIATION"),
        }
    }
}

impl Default for ReturnShipmentStatusType {
    fn default() -> ReturnShipmentStatusType {
        Self::Created
    }
}

