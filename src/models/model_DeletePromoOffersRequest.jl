# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""DeletePromoOffersRequest
Удаление товаров из акции.  Чтобы убрать:  * все товары из акции и больше не участвовать в ней, передайте значение &#x60;true&#x60; в параметре &#x60;deleteAllOffers&#x60;;  * часть товаров, передайте их идентификаторы в параметре &#x60;offersIds&#x60;. 

    DeletePromoOffersRequest(;
        promoId=nothing,
        deleteAllOffers=nothing,
        offerIds=nothing,
    )

    - promoId::String : Идентификатор акции.
    - deleteAllOffers::Bool : Чтобы убрать все товары из акции и больше не участвовать в ней, передайте значение &#x60;true&#x60; и не передавайте параметр &#x60;offerIds&#x60;.
    - offerIds::Vector{String} : Товары, которые нужно убрать из акции.
"""
Base.@kwdef mutable struct DeletePromoOffersRequest <: OpenAPI.APIModel
    promoId::Union{Nothing, String} = nothing
    deleteAllOffers::Union{Nothing, Bool} = nothing
    offerIds::Union{Nothing, Vector{String}} = nothing

    function DeletePromoOffersRequest(promoId, deleteAllOffers, offerIds, )
        OpenAPI.validate_property(DeletePromoOffersRequest, Symbol("promoId"), promoId)
        OpenAPI.validate_property(DeletePromoOffersRequest, Symbol("deleteAllOffers"), deleteAllOffers)
        OpenAPI.validate_property(DeletePromoOffersRequest, Symbol("offerIds"), offerIds)
        return new(promoId, deleteAllOffers, offerIds, )
    end
end # type DeletePromoOffersRequest

const _property_types_DeletePromoOffersRequest = Dict{Symbol,String}(Symbol("promoId")=>"String", Symbol("deleteAllOffers")=>"Bool", Symbol("offerIds")=>"Vector{String}", )
OpenAPI.property_type(::Type{ DeletePromoOffersRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DeletePromoOffersRequest[name]))}

function check_required(o::DeletePromoOffersRequest)
    o.promoId === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ DeletePromoOffersRequest }, name::Symbol, val)
    if name === Symbol("offerIds")
        OpenAPI.validate_param(name, "DeletePromoOffersRequest", :maxItems, val, 500)
        OpenAPI.validate_param(name, "DeletePromoOffersRequest", :minItems, val, 1)
    end
end
