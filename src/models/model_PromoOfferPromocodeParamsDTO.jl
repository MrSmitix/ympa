# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""PromoOfferPromocodeParamsDTO
Параметры товара в акции с типом &#x60;MARKET_PROMOCODE&#x60;.

    PromoOfferPromocodeParamsDTO(;
        maxPrice=nothing,
    )

    - maxPrice::Int64 : Максимально возможная цена для участия в акции до применения промокода.  Указывается в рублях.  Возвращается для всех товаров. 
"""
Base.@kwdef mutable struct PromoOfferPromocodeParamsDTO <: OpenAPI.APIModel
    maxPrice::Union{Nothing, Int64} = nothing

    function PromoOfferPromocodeParamsDTO(maxPrice, )
        OpenAPI.validate_property(PromoOfferPromocodeParamsDTO, Symbol("maxPrice"), maxPrice)
        return new(maxPrice, )
    end
end # type PromoOfferPromocodeParamsDTO

const _property_types_PromoOfferPromocodeParamsDTO = Dict{Symbol,String}(Symbol("maxPrice")=>"Int64", )
OpenAPI.property_type(::Type{ PromoOfferPromocodeParamsDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PromoOfferPromocodeParamsDTO[name]))}

function check_required(o::PromoOfferPromocodeParamsDTO)
    o.maxPrice === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ PromoOfferPromocodeParamsDTO }, name::Symbol, val)
    if name === Symbol("maxPrice")
        OpenAPI.validate_param(name, "PromoOfferPromocodeParamsDTO", :format, val, "int64")
    end
end
