# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""GetMappingDTO
Информация о товарах в каталоге. 

    GetMappingDTO(;
        marketSku=nothing,
        marketSkuName=nothing,
        marketModelId=nothing,
        marketModelName=nothing,
        marketCategoryId=nothing,
        marketCategoryName=nothing,
    )

    - marketSku::Int64 : SKU на Маркете.
    - marketSkuName::String : Название карточки товара.  Может отсутствовать в ответе, если товар еще не привязан к карточке. 
    - marketModelId::Int64 : Идентификатор модели на Маркете.  Может отсутствовать в ответе, если товар еще не привязан к карточке. 
    - marketModelName::String : Название модели на Маркете.  Может отсутствовать в ответе, если товар еще не привязан к карточке. 
    - marketCategoryId::Int64 : Идентификатор категории на Маркете, в которую попал товар.  Может отсутствовать в ответе, если Маркет еще не определил категорию товара. 
    - marketCategoryName::String : Название категории карточки на Маркете.  Может отсутствовать в ответе, если Маркет еще не определил категорию товара. 
"""
Base.@kwdef mutable struct GetMappingDTO <: OpenAPI.APIModel
    marketSku::Union{Nothing, Int64} = nothing
    marketSkuName::Union{Nothing, String} = nothing
    marketModelId::Union{Nothing, Int64} = nothing
    marketModelName::Union{Nothing, String} = nothing
    marketCategoryId::Union{Nothing, Int64} = nothing
    marketCategoryName::Union{Nothing, String} = nothing

    function GetMappingDTO(marketSku, marketSkuName, marketModelId, marketModelName, marketCategoryId, marketCategoryName, )
        OpenAPI.validate_property(GetMappingDTO, Symbol("marketSku"), marketSku)
        OpenAPI.validate_property(GetMappingDTO, Symbol("marketSkuName"), marketSkuName)
        OpenAPI.validate_property(GetMappingDTO, Symbol("marketModelId"), marketModelId)
        OpenAPI.validate_property(GetMappingDTO, Symbol("marketModelName"), marketModelName)
        OpenAPI.validate_property(GetMappingDTO, Symbol("marketCategoryId"), marketCategoryId)
        OpenAPI.validate_property(GetMappingDTO, Symbol("marketCategoryName"), marketCategoryName)
        return new(marketSku, marketSkuName, marketModelId, marketModelName, marketCategoryId, marketCategoryName, )
    end
end # type GetMappingDTO

const _property_types_GetMappingDTO = Dict{Symbol,String}(Symbol("marketSku")=>"Int64", Symbol("marketSkuName")=>"String", Symbol("marketModelId")=>"Int64", Symbol("marketModelName")=>"String", Symbol("marketCategoryId")=>"Int64", Symbol("marketCategoryName")=>"String", )
OpenAPI.property_type(::Type{ GetMappingDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_GetMappingDTO[name]))}

function check_required(o::GetMappingDTO)
    true
end

function OpenAPI.validate_property(::Type{ GetMappingDTO }, name::Symbol, val)
    if name === Symbol("marketSku")
        OpenAPI.validate_param(name, "GetMappingDTO", :format, val, "int64")
    end
    if name === Symbol("marketModelId")
        OpenAPI.validate_param(name, "GetMappingDTO", :format, val, "int64")
    end
    if name === Symbol("marketCategoryId")
        OpenAPI.validate_param(name, "GetMappingDTO", :format, val, "int64")
    end
end
