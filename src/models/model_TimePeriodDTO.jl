# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""TimePeriodDTO
Временной отрезок с комментарием. Требования к содержанию комментария зависят от контекста использования параметра и указаны в описании поля, которое его содержит.

    TimePeriodDTO(;
        timePeriod=nothing,
        timeUnit=nothing,
        comment=nothing,
    )

    - timePeriod::Int64 : Продолжительность в указанных единицах.
    - timeUnit::TimeUnitType
    - comment::String : Комментарий.
"""
Base.@kwdef mutable struct TimePeriodDTO <: OpenAPI.APIModel
    timePeriod::Union{Nothing, Int64} = nothing
    timeUnit = nothing # spec type: Union{ Nothing, TimeUnitType }
    comment::Union{Nothing, String} = nothing

    function TimePeriodDTO(timePeriod, timeUnit, comment, )
        OpenAPI.validate_property(TimePeriodDTO, Symbol("timePeriod"), timePeriod)
        OpenAPI.validate_property(TimePeriodDTO, Symbol("timeUnit"), timeUnit)
        OpenAPI.validate_property(TimePeriodDTO, Symbol("comment"), comment)
        return new(timePeriod, timeUnit, comment, )
    end
end # type TimePeriodDTO

const _property_types_TimePeriodDTO = Dict{Symbol,String}(Symbol("timePeriod")=>"Int64", Symbol("timeUnit")=>"TimeUnitType", Symbol("comment")=>"String", )
OpenAPI.property_type(::Type{ TimePeriodDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_TimePeriodDTO[name]))}

function check_required(o::TimePeriodDTO)
    o.timePeriod === nothing && (return false)
    o.timeUnit === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ TimePeriodDTO }, name::Symbol, val)
end
