# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ModelDTO
Модель товара.

    ModelDTO(;
        id=nothing,
        name=nothing,
        prices=nothing,
    )

    - id::Int64 : Идентификатор модели товара.
    - name::String : Название модели товара.
    - prices::ModelPriceDTO
"""
Base.@kwdef mutable struct ModelDTO <: OpenAPI.APIModel
    id::Union{Nothing, Int64} = nothing
    name::Union{Nothing, String} = nothing
    prices = nothing # spec type: Union{ Nothing, ModelPriceDTO }

    function ModelDTO(id, name, prices, )
        OpenAPI.validate_property(ModelDTO, Symbol("id"), id)
        OpenAPI.validate_property(ModelDTO, Symbol("name"), name)
        OpenAPI.validate_property(ModelDTO, Symbol("prices"), prices)
        return new(id, name, prices, )
    end
end # type ModelDTO

const _property_types_ModelDTO = Dict{Symbol,String}(Symbol("id")=>"Int64", Symbol("name")=>"String", Symbol("prices")=>"ModelPriceDTO", )
OpenAPI.property_type(::Type{ ModelDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ModelDTO[name]))}

function check_required(o::ModelDTO)
    true
end

function OpenAPI.validate_property(::Type{ ModelDTO }, name::Symbol, val)
    if name === Symbol("id")
        OpenAPI.validate_param(name, "ModelDTO", :format, val, "int64")
    end
end
