# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""GetHiddenOffersResultDTO
Список скрытых вами товаров. 

    GetHiddenOffersResultDTO(;
        paging=nothing,
        hiddenOffers=nothing,
    )

    - paging::ScrollingPagerDTO
    - hiddenOffers::Vector{HiddenOfferDTO} : Список скрытых товаров.
"""
Base.@kwdef mutable struct GetHiddenOffersResultDTO <: OpenAPI.APIModel
    paging = nothing # spec type: Union{ Nothing, ScrollingPagerDTO }
    hiddenOffers::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{HiddenOfferDTO} }

    function GetHiddenOffersResultDTO(paging, hiddenOffers, )
        OpenAPI.validate_property(GetHiddenOffersResultDTO, Symbol("paging"), paging)
        OpenAPI.validate_property(GetHiddenOffersResultDTO, Symbol("hiddenOffers"), hiddenOffers)
        return new(paging, hiddenOffers, )
    end
end # type GetHiddenOffersResultDTO

const _property_types_GetHiddenOffersResultDTO = Dict{Symbol,String}(Symbol("paging")=>"ScrollingPagerDTO", Symbol("hiddenOffers")=>"Vector{HiddenOfferDTO}", )
OpenAPI.property_type(::Type{ GetHiddenOffersResultDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_GetHiddenOffersResultDTO[name]))}

function check_required(o::GetHiddenOffersResultDTO)
    o.hiddenOffers === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ GetHiddenOffersResultDTO }, name::Symbol, val)
end
