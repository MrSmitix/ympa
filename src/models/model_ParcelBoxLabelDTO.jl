# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ParcelBoxLabelDTO
Информация о ярлыке для коробки.

    ParcelBoxLabelDTO(;
        url=nothing,
        supplierName=nothing,
        deliveryServiceName=nothing,
        orderId=nothing,
        orderNum=nothing,
        recipientName=nothing,
        boxId=nothing,
        fulfilmentId=nothing,
        place=nothing,
        weight=nothing,
        deliveryServiceId=nothing,
        deliveryAddress=nothing,
        shipmentDate=nothing,
    )

    - url::String : Соответствует URL, по которому выполняется запрос [GET campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes/{boxId}/label](../../reference/orders/generateOrderLabel.md). 
    - supplierName::String : Юридическое название магазина.
    - deliveryServiceName::String : Юридическое название службы доставки.
    - orderId::Int64 : Идентификатор заказа в системе Маркета.
    - orderNum::String : Идентификатор заказа в информационной системе магазина.  Совпадает с &#x60;orderId&#x60;, если Маркету неизвестен номер заказа в системе магазина. 
    - recipientName::String : Фамилия и инициалы получателя заказа.
    - boxId::Int64 : Идентификатор коробки.
    - fulfilmentId::String : Идентификатор коробки в информационной системе магазина.  Возвращается в формате: &#x60;номер заказа на Маркете-номер коробки&#x60;. Например, &#x60;7206821‑1&#x60;, &#x60;7206821‑2&#x60; и т. д. 
    - place::String : Номер коробки в заказе. Возвращается в формате: &#x60;номер места/общее количество мест&#x60;. 
    - weight::String : {% note warning \&quot;\&quot; %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Общая масса всех товаров в заказе. Возвращается в формате: &#x60;weight кг&#x60;. 
    - deliveryServiceId::String : Идентификатор службы доставки. Информацию о службе доставки можно получить с помощью запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md).
    - deliveryAddress::String : Адрес получателя.
    - shipmentDate::String : Дата отгрузки в формате &#x60;dd.MM.yyyy&#x60;.
"""
Base.@kwdef mutable struct ParcelBoxLabelDTO <: OpenAPI.APIModel
    url::Union{Nothing, String} = nothing
    supplierName::Union{Nothing, String} = nothing
    deliveryServiceName::Union{Nothing, String} = nothing
    orderId::Union{Nothing, Int64} = nothing
    orderNum::Union{Nothing, String} = nothing
    recipientName::Union{Nothing, String} = nothing
    boxId::Union{Nothing, Int64} = nothing
    fulfilmentId::Union{Nothing, String} = nothing
    place::Union{Nothing, String} = nothing
    weight::Union{Nothing, String} = nothing
    deliveryServiceId::Union{Nothing, String} = nothing
    deliveryAddress::Union{Nothing, String} = nothing
    shipmentDate::Union{Nothing, String} = nothing

    function ParcelBoxLabelDTO(url, supplierName, deliveryServiceName, orderId, orderNum, recipientName, boxId, fulfilmentId, place, weight, deliveryServiceId, deliveryAddress, shipmentDate, )
        OpenAPI.validate_property(ParcelBoxLabelDTO, Symbol("url"), url)
        OpenAPI.validate_property(ParcelBoxLabelDTO, Symbol("supplierName"), supplierName)
        OpenAPI.validate_property(ParcelBoxLabelDTO, Symbol("deliveryServiceName"), deliveryServiceName)
        OpenAPI.validate_property(ParcelBoxLabelDTO, Symbol("orderId"), orderId)
        OpenAPI.validate_property(ParcelBoxLabelDTO, Symbol("orderNum"), orderNum)
        OpenAPI.validate_property(ParcelBoxLabelDTO, Symbol("recipientName"), recipientName)
        OpenAPI.validate_property(ParcelBoxLabelDTO, Symbol("boxId"), boxId)
        OpenAPI.validate_property(ParcelBoxLabelDTO, Symbol("fulfilmentId"), fulfilmentId)
        OpenAPI.validate_property(ParcelBoxLabelDTO, Symbol("place"), place)
        OpenAPI.validate_property(ParcelBoxLabelDTO, Symbol("weight"), weight)
        OpenAPI.validate_property(ParcelBoxLabelDTO, Symbol("deliveryServiceId"), deliveryServiceId)
        OpenAPI.validate_property(ParcelBoxLabelDTO, Symbol("deliveryAddress"), deliveryAddress)
        OpenAPI.validate_property(ParcelBoxLabelDTO, Symbol("shipmentDate"), shipmentDate)
        return new(url, supplierName, deliveryServiceName, orderId, orderNum, recipientName, boxId, fulfilmentId, place, weight, deliveryServiceId, deliveryAddress, shipmentDate, )
    end
end # type ParcelBoxLabelDTO

const _property_types_ParcelBoxLabelDTO = Dict{Symbol,String}(Symbol("url")=>"String", Symbol("supplierName")=>"String", Symbol("deliveryServiceName")=>"String", Symbol("orderId")=>"Int64", Symbol("orderNum")=>"String", Symbol("recipientName")=>"String", Symbol("boxId")=>"Int64", Symbol("fulfilmentId")=>"String", Symbol("place")=>"String", Symbol("weight")=>"String", Symbol("deliveryServiceId")=>"String", Symbol("deliveryAddress")=>"String", Symbol("shipmentDate")=>"String", )
OpenAPI.property_type(::Type{ ParcelBoxLabelDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ParcelBoxLabelDTO[name]))}

function check_required(o::ParcelBoxLabelDTO)
    o.url === nothing && (return false)
    o.supplierName === nothing && (return false)
    o.deliveryServiceName === nothing && (return false)
    o.orderId === nothing && (return false)
    o.orderNum === nothing && (return false)
    o.recipientName === nothing && (return false)
    o.boxId === nothing && (return false)
    o.fulfilmentId === nothing && (return false)
    o.place === nothing && (return false)
    o.weight === nothing && (return false)
    o.deliveryServiceId === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ ParcelBoxLabelDTO }, name::Symbol, val)
    if name === Symbol("orderId")
        OpenAPI.validate_param(name, "ParcelBoxLabelDTO", :format, val, "int64")
    end
    if name === Symbol("boxId")
        OpenAPI.validate_param(name, "ParcelBoxLabelDTO", :format, val, "int64")
    end
end
