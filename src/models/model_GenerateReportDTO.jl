# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""GenerateReportDTO
Идентификатор, который понадобится для отслеживания статуса генерации и получения готового отчета.

    GenerateReportDTO(;
        reportId=nothing,
        estimatedGenerationTime=nothing,
    )

    - reportId::String : Идентификатор, который понадобится для отслеживания статуса генерации и получения готового отчета.
    - estimatedGenerationTime::Int64 : Ожидаемая продолжительность генерации в миллисекундах.
"""
Base.@kwdef mutable struct GenerateReportDTO <: OpenAPI.APIModel
    reportId::Union{Nothing, String} = nothing
    estimatedGenerationTime::Union{Nothing, Int64} = nothing

    function GenerateReportDTO(reportId, estimatedGenerationTime, )
        OpenAPI.validate_property(GenerateReportDTO, Symbol("reportId"), reportId)
        OpenAPI.validate_property(GenerateReportDTO, Symbol("estimatedGenerationTime"), estimatedGenerationTime)
        return new(reportId, estimatedGenerationTime, )
    end
end # type GenerateReportDTO

const _property_types_GenerateReportDTO = Dict{Symbol,String}(Symbol("reportId")=>"String", Symbol("estimatedGenerationTime")=>"Int64", )
OpenAPI.property_type(::Type{ GenerateReportDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_GenerateReportDTO[name]))}

function check_required(o::GenerateReportDTO)
    o.reportId === nothing && (return false)
    o.estimatedGenerationTime === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ GenerateReportDTO }, name::Symbol, val)
    if name === Symbol("estimatedGenerationTime")
        OpenAPI.validate_param(name, "GenerateReportDTO", :format, val, "int64")
    end
end
