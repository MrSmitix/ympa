# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""OrderItemInstanceModificationDTO
Позиция в корзине, требующая маркировки.

    OrderItemInstanceModificationDTO(;
        id=nothing,
        instances=nothing,
    )

    - id::Int64 : Идентификатор товара в заказе.  Он приходит в ответе на запрос [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) и в запросе Маркета [POST order/accept](../../pushapi/reference/orderAccept.md) — параметр &#x60;id&#x60; в &#x60;items&#x60;. 
    - instances::Vector{BriefOrderItemInstanceDTO} : Список кодов маркировки единиц товара. 
"""
Base.@kwdef mutable struct OrderItemInstanceModificationDTO <: OpenAPI.APIModel
    id::Union{Nothing, Int64} = nothing
    instances::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{BriefOrderItemInstanceDTO} }

    function OrderItemInstanceModificationDTO(id, instances, )
        OpenAPI.validate_property(OrderItemInstanceModificationDTO, Symbol("id"), id)
        OpenAPI.validate_property(OrderItemInstanceModificationDTO, Symbol("instances"), instances)
        return new(id, instances, )
    end
end # type OrderItemInstanceModificationDTO

const _property_types_OrderItemInstanceModificationDTO = Dict{Symbol,String}(Symbol("id")=>"Int64", Symbol("instances")=>"Vector{BriefOrderItemInstanceDTO}", )
OpenAPI.property_type(::Type{ OrderItemInstanceModificationDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_OrderItemInstanceModificationDTO[name]))}

function check_required(o::OrderItemInstanceModificationDTO)
    o.id === nothing && (return false)
    o.instances === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ OrderItemInstanceModificationDTO }, name::Symbol, val)
    if name === Symbol("id")
        OpenAPI.validate_param(name, "OrderItemInstanceModificationDTO", :format, val, "int64")
    end
end
