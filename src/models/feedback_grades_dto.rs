/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// FeedbackGradesDto : Информация об оценках, которые поставил автор отзыва магазину, и об оценках полезности отзыва от других пользователей Маркета.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FeedbackGradesDto {
    /// Общая оценка, указанная в отзыве: от `1` («Ужасный магазин») до `5` («Отличный магазин»).
    #[serde(rename = "average", skip_serializing_if = "Option::is_none")]
    pub average: Option<f64>,
    /// Количество пользователей, считающих отзыв полезным.
    #[serde(rename = "agreeCount", skip_serializing_if = "Option::is_none")]
    pub agree_count: Option<i64>,
    /// Количество пользователей, считающих отзыв бесполезным.
    #[serde(rename = "rejectCount", skip_serializing_if = "Option::is_none")]
    pub reject_count: Option<i64>,
    /// Информация об оценках по параметрам, указанных в отзыве.  При создании отзыва автору предлагается поставить оценки магазину по нескольким параметрам: например, за скорость обработки заказа или удобство самовывоза. Набор параметров зависит от того, какой способ покупки (параметр `delivery`) указал автор. 
    #[serde(rename = "factors")]
    pub factors: Vec<models::FeedbackFactorDto>,
}

impl FeedbackGradesDto {
    /// Информация об оценках, которые поставил автор отзыва магазину, и об оценках полезности отзыва от других пользователей Маркета.
    pub fn new(factors: Vec<models::FeedbackFactorDto>) -> FeedbackGradesDto {
        FeedbackGradesDto {
            average: None,
            agree_count: None,
            reject_count: None,
            factors,
        }
    }
}

