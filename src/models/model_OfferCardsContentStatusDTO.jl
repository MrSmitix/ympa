# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""OfferCardsContentStatusDTO
Список товаров с информацией о состоянии карточек.

    OfferCardsContentStatusDTO(;
        offerCards=nothing,
        paging=nothing,
    )

    - offerCards::Vector{OfferCardDTO} : Страница списка товаров с информацией о состоянии карточек.
    - paging::ForwardScrollingPagerDTO
"""
Base.@kwdef mutable struct OfferCardsContentStatusDTO <: OpenAPI.APIModel
    offerCards::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{OfferCardDTO} }
    paging = nothing # spec type: Union{ Nothing, ForwardScrollingPagerDTO }

    function OfferCardsContentStatusDTO(offerCards, paging, )
        OpenAPI.validate_property(OfferCardsContentStatusDTO, Symbol("offerCards"), offerCards)
        OpenAPI.validate_property(OfferCardsContentStatusDTO, Symbol("paging"), paging)
        return new(offerCards, paging, )
    end
end # type OfferCardsContentStatusDTO

const _property_types_OfferCardsContentStatusDTO = Dict{Symbol,String}(Symbol("offerCards")=>"Vector{OfferCardDTO}", Symbol("paging")=>"ForwardScrollingPagerDTO", )
OpenAPI.property_type(::Type{ OfferCardsContentStatusDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_OfferCardsContentStatusDTO[name]))}

function check_required(o::OfferCardsContentStatusDTO)
    o.offerCards === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ OfferCardsContentStatusDTO }, name::Symbol, val)
end
