(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Brief_order_item_dto.t : Информация о маркированном товаре.
 *)

type t = {
    (* Идентификатор товара в заказе.  Позволяет идентифицировать товар в рамках данного заказа.  *)
    id: int64 option [@default None];
    vat: Enums.ordervattype option [@default None];
    (* Количество единиц товара. *)
    count: int32 option [@default None];
    (* Цена на товар. Указана в той валюте, которая была задана в каталоге. Разделитель целой и дробной части — точка.  *)
    price: float option [@default None];
    (* Название товара. *)
    offer_name: string option [@default None];
    (* Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)  *)
    offer_id: string option [@default None];
    (* Переданные вами коды маркировки. *)
    instances: Order_item_instance_dto.t list;
} [@@deriving yojson { strict = false }, show ];;

(** Информация о маркированном товаре. *)
let create () : t = {
    id = None;
    vat = None;
    count = None;
    price = None;
    offer_name = None;
    offer_id = None;
    instances = [];
}

