# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""OfferCampaignStatusDTO
Статус товара в магазине.

    OfferCampaignStatusDTO(;
        campaignId=nothing,
        status=nothing,
    )

    - campaignId::Int64 : Идентификатор кампании. 
    - status::OfferCampaignStatusType
"""
Base.@kwdef mutable struct OfferCampaignStatusDTO <: OpenAPI.APIModel
    campaignId::Union{Nothing, Int64} = nothing
    status = nothing # spec type: Union{ Nothing, OfferCampaignStatusType }

    function OfferCampaignStatusDTO(campaignId, status, )
        OpenAPI.validate_property(OfferCampaignStatusDTO, Symbol("campaignId"), campaignId)
        OpenAPI.validate_property(OfferCampaignStatusDTO, Symbol("status"), status)
        return new(campaignId, status, )
    end
end # type OfferCampaignStatusDTO

const _property_types_OfferCampaignStatusDTO = Dict{Symbol,String}(Symbol("campaignId")=>"Int64", Symbol("status")=>"OfferCampaignStatusType", )
OpenAPI.property_type(::Type{ OfferCampaignStatusDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_OfferCampaignStatusDTO[name]))}

function check_required(o::OfferCampaignStatusDTO)
    o.campaignId === nothing && (return false)
    o.status === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ OfferCampaignStatusDTO }, name::Symbol, val)
    if name === Symbol("campaignId")
        OpenAPI.validate_param(name, "OfferCampaignStatusDTO", :format, val, "int64")
    end
end
