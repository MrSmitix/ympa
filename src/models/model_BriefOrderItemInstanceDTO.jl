# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""BriefOrderItemInstanceDTO
Идентификатор единицы товара.  Заполните только одно поле в зависимости от того, в какой системе маркирован товар.  Подробно о работе с маркируемыми товарами рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/cz.html). 

    BriefOrderItemInstanceDTO(;
        cis=nothing,
        uin=nothing,
        rnpt=nothing,
        gtd=nothing,
    )

    - cis::String : Код идентификации единицы товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/).  {% note warning %}  Не экранируйте косую черту в коде символа-разделителя &#x60;\\u001d&#x60;!  ✅ &#x60;01030410947874432155Qbag!\\u001d93Zjqw&#x60;  ❌ &#x60;01030410947874432155Qbag!\\\\u001d93Zjqw&#x60;  Косые черты и кавычки в других местах экранируйте по правилам JSON: &#x60;\\\\&#x60; и &#x60;\\\&quot;&#x60;  {% endnote %} 
    - uin::String : Уникальный идентификационный номер ювелирного изделия.  Представляет собой число из 16 цифр. 
    - rnpt::String : Регистрационный номер партии товара.  Представляет собой строку из четырех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ/ХХХ.  Первая часть — код таможни, которая зарегистрировала декларацию на партию товара. Далее — дата, номер декларации и номер маркированного товара в декларации. 
    - gtd::String : Грузовая таможенная декларация.  Представляет собой строку из трех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ.  Первая часть — код таможни, которая зарегистрировала декларацию на ввезенные товары. Далее — дата и номер декларации. 
"""
Base.@kwdef mutable struct BriefOrderItemInstanceDTO <: OpenAPI.APIModel
    cis::Union{Nothing, String} = nothing
    uin::Union{Nothing, String} = nothing
    rnpt::Union{Nothing, String} = nothing
    gtd::Union{Nothing, String} = nothing

    function BriefOrderItemInstanceDTO(cis, uin, rnpt, gtd, )
        OpenAPI.validate_property(BriefOrderItemInstanceDTO, Symbol("cis"), cis)
        OpenAPI.validate_property(BriefOrderItemInstanceDTO, Symbol("uin"), uin)
        OpenAPI.validate_property(BriefOrderItemInstanceDTO, Symbol("rnpt"), rnpt)
        OpenAPI.validate_property(BriefOrderItemInstanceDTO, Symbol("gtd"), gtd)
        return new(cis, uin, rnpt, gtd, )
    end
end # type BriefOrderItemInstanceDTO

const _property_types_BriefOrderItemInstanceDTO = Dict{Symbol,String}(Symbol("cis")=>"String", Symbol("uin")=>"String", Symbol("rnpt")=>"String", Symbol("gtd")=>"String", )
OpenAPI.property_type(::Type{ BriefOrderItemInstanceDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_BriefOrderItemInstanceDTO[name]))}

function check_required(o::BriefOrderItemInstanceDTO)
    true
end

function OpenAPI.validate_property(::Type{ BriefOrderItemInstanceDTO }, name::Symbol, val)
end
