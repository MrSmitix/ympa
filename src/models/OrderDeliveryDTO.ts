// tslint:disable
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    OrderCourierDTO,
    OrderCourierDTOFromJSON,
    OrderCourierDTOToJSON,
    OrderDeliveryAddressDTO,
    OrderDeliveryAddressDTOFromJSON,
    OrderDeliveryAddressDTOToJSON,
    OrderDeliveryDatesDTO,
    OrderDeliveryDatesDTOFromJSON,
    OrderDeliveryDatesDTOToJSON,
    OrderDeliveryDispatchType,
    OrderDeliveryDispatchTypeFromJSON,
    OrderDeliveryDispatchTypeToJSON,
    OrderDeliveryEacType,
    OrderDeliveryEacTypeFromJSON,
    OrderDeliveryEacTypeToJSON,
    OrderDeliveryPartnerType,
    OrderDeliveryPartnerTypeFromJSON,
    OrderDeliveryPartnerTypeToJSON,
    OrderDeliveryType,
    OrderDeliveryTypeFromJSON,
    OrderDeliveryTypeToJSON,
    OrderLiftType,
    OrderLiftTypeFromJSON,
    OrderLiftTypeToJSON,
    OrderShipmentDTO,
    OrderShipmentDTOFromJSON,
    OrderShipmentDTOToJSON,
    OrderTrackDTO,
    OrderTrackDTOFromJSON,
    OrderTrackDTOToJSON,
    OrderVatType,
    OrderVatTypeFromJSON,
    OrderVatTypeToJSON,
    RegionDTO,
    RegionDTOFromJSON,
    RegionDTOToJSON,
} from './';

/**
 * Информация о доставке.
 * @export
 * @interface OrderDeliveryDTO
 */
export interface OrderDeliveryDTO  {
    /**
     * Идентификатор доставки, присвоенный магазином.  Указывается, только если магазин передал данный идентификатор в ответе на запрос методом [POST cart](../../pushapi/reference/cart.md). 
     * @type {string}
     * @memberof OrderDeliveryDTO
     */
    id?: string;
    /**
     * 
     * @type {OrderDeliveryType}
     * @memberof OrderDeliveryDTO
     */
    type?: OrderDeliveryType;
    /**
     * Наименование службы доставки.
     * @type {string}
     * @memberof OrderDeliveryDTO
     */
    serviceName?: string;
    /**
     * {% note warning \"\" %}  Этот параметр устарел. Стоимость доставки смотрите в параметре `deliveryTotal`.  {% endnote %}  Стоимость доставки в валюте заказа. 
     * @type {number}
     * @memberof OrderDeliveryDTO
     */
    price?: number;
    /**
     * 
     * @type {OrderDeliveryPartnerType}
     * @memberof OrderDeliveryDTO
     */
    deliveryPartnerType?: OrderDeliveryPartnerType;
    /**
     * 
     * @type {OrderCourierDTO}
     * @memberof OrderDeliveryDTO
     */
    courier?: OrderCourierDTO;
    /**
     * 
     * @type {OrderDeliveryDatesDTO}
     * @memberof OrderDeliveryDTO
     */
    dates?: OrderDeliveryDatesDTO;
    /**
     * 
     * @type {RegionDTO}
     * @memberof OrderDeliveryDTO
     */
    region?: RegionDTO;
    /**
     * 
     * @type {OrderDeliveryAddressDTO}
     * @memberof OrderDeliveryDTO
     */
    address?: OrderDeliveryAddressDTO;
    /**
     * 
     * @type {OrderVatType}
     * @memberof OrderDeliveryDTO
     */
    vat?: OrderVatType;
    /**
     * Идентификатор службы доставки.
     * @type {number}
     * @memberof OrderDeliveryDTO
     */
    deliveryServiceId?: number;
    /**
     * 
     * @type {OrderLiftType}
     * @memberof OrderDeliveryDTO
     */
    liftType?: OrderLiftType;
    /**
     * Стоимость подъема на этаж.
     * @type {number}
     * @memberof OrderDeliveryDTO
     */
    liftPrice?: number;
    /**
     * Идентификатор пункта самовывоза, присвоенный магазином.
     * @type {string}
     * @memberof OrderDeliveryDTO
     */
    outletCode?: string;
    /**
     * Формат даты: `ДД-ММ-ГГГГ`. 
     * @type {string}
     * @memberof OrderDeliveryDTO
     */
    outletStorageLimitDate?: string;
    /**
     * 
     * @type {OrderDeliveryDispatchType}
     * @memberof OrderDeliveryDTO
     */
    dispatchType?: OrderDeliveryDispatchType;
    /**
     * Информация для отслеживания перемещений посылки.
     * @type {Array<OrderTrackDTO>}
     * @memberof OrderDeliveryDTO
     */
    tracks?: Array<OrderTrackDTO>;
    /**
     * Информация о посылках.
     * @type {Array<OrderShipmentDTO>}
     * @memberof OrderDeliveryDTO
     */
    shipments?: Array<OrderShipmentDTO>;
    /**
     * Приблизительная ли дата доставки.
     * @type {boolean}
     * @memberof OrderDeliveryDTO
     */
    estimated?: boolean;
    /**
     * 
     * @type {OrderDeliveryEacType}
     * @memberof OrderDeliveryDTO
     */
    eacType?: OrderDeliveryEacType;
    /**
     * Код подтверждения ЭАПП (для типа `MERCHANT_TO_COURIER`). 
     * @type {string}
     * @memberof OrderDeliveryDTO
     */
    eacCode?: string;
}

export function OrderDeliveryDTOFromJSON(json: any): OrderDeliveryDTO {
    return {
        'id': !exists(json, 'id') ? undefined : json['id'],
        'type': !exists(json, 'type') ? undefined : OrderDeliveryTypeFromJSON(json['type']),
        'serviceName': !exists(json, 'serviceName') ? undefined : json['serviceName'],
        'price': !exists(json, 'price') ? undefined : json['price'],
        'deliveryPartnerType': !exists(json, 'deliveryPartnerType') ? undefined : OrderDeliveryPartnerTypeFromJSON(json['deliveryPartnerType']),
        'courier': !exists(json, 'courier') ? undefined : OrderCourierDTOFromJSON(json['courier']),
        'dates': !exists(json, 'dates') ? undefined : OrderDeliveryDatesDTOFromJSON(json['dates']),
        'region': !exists(json, 'region') ? undefined : RegionDTOFromJSON(json['region']),
        'address': !exists(json, 'address') ? undefined : OrderDeliveryAddressDTOFromJSON(json['address']),
        'vat': !exists(json, 'vat') ? undefined : OrderVatTypeFromJSON(json['vat']),
        'deliveryServiceId': !exists(json, 'deliveryServiceId') ? undefined : json['deliveryServiceId'],
        'liftType': !exists(json, 'liftType') ? undefined : OrderLiftTypeFromJSON(json['liftType']),
        'liftPrice': !exists(json, 'liftPrice') ? undefined : json['liftPrice'],
        'outletCode': !exists(json, 'outletCode') ? undefined : json['outletCode'],
        'outletStorageLimitDate': !exists(json, 'outletStorageLimitDate') ? undefined : json['outletStorageLimitDate'],
        'dispatchType': !exists(json, 'dispatchType') ? undefined : OrderDeliveryDispatchTypeFromJSON(json['dispatchType']),
        'tracks': !exists(json, 'tracks') ? undefined : (json['tracks'] as Array<any>).map(OrderTrackDTOFromJSON),
        'shipments': !exists(json, 'shipments') ? undefined : (json['shipments'] as Array<any>).map(OrderShipmentDTOFromJSON),
        'estimated': !exists(json, 'estimated') ? undefined : json['estimated'],
        'eacType': !exists(json, 'eacType') ? undefined : OrderDeliveryEacTypeFromJSON(json['eacType']),
        'eacCode': !exists(json, 'eacCode') ? undefined : json['eacCode'],
    };
}

export function OrderDeliveryDTOToJSON(value?: OrderDeliveryDTO): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'id': value.id,
        'type': OrderDeliveryTypeToJSON(value.type),
        'serviceName': value.serviceName,
        'price': value.price,
        'deliveryPartnerType': OrderDeliveryPartnerTypeToJSON(value.deliveryPartnerType),
        'courier': OrderCourierDTOToJSON(value.courier),
        'dates': OrderDeliveryDatesDTOToJSON(value.dates),
        'region': RegionDTOToJSON(value.region),
        'address': OrderDeliveryAddressDTOToJSON(value.address),
        'vat': OrderVatTypeToJSON(value.vat),
        'deliveryServiceId': value.deliveryServiceId,
        'liftType': OrderLiftTypeToJSON(value.liftType),
        'liftPrice': value.liftPrice,
        'outletCode': value.outletCode,
        'outletStorageLimitDate': value.outletStorageLimitDate,
        'dispatchType': OrderDeliveryDispatchTypeToJSON(value.dispatchType),
        'tracks': value.tracks === undefined ? undefined : (value.tracks as Array<any>).map(OrderTrackDTOToJSON),
        'shipments': value.shipments === undefined ? undefined : (value.shipments as Array<any>).map(OrderShipmentDTOToJSON),
        'estimated': value.estimated,
        'eacType': OrderDeliveryEacTypeToJSON(value.eacType),
        'eacCode': value.eacCode,
    };
}



