// tslint:disable
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    GpsDTO,
    GpsDTOFromJSON,
    GpsDTOToJSON,
} from './';

/**
 * Адрес склада.
 * @export
 * @interface WarehouseAddressDTO
 */
export interface WarehouseAddressDTO  {
    /**
     * Город.
     * @type {string}
     * @memberof WarehouseAddressDTO
     */
    city: string;
    /**
     * Улица.
     * @type {string}
     * @memberof WarehouseAddressDTO
     */
    street?: string;
    /**
     * Номер дома.
     * @type {string}
     * @memberof WarehouseAddressDTO
     */
    number?: string;
    /**
     * Номер строения.
     * @type {string}
     * @memberof WarehouseAddressDTO
     */
    building?: string;
    /**
     * Номер корпуса.
     * @type {string}
     * @memberof WarehouseAddressDTO
     */
    block?: string;
    /**
     * 
     * @type {GpsDTO}
     * @memberof WarehouseAddressDTO
     */
    gps: GpsDTO;
}

export function WarehouseAddressDTOFromJSON(json: any): WarehouseAddressDTO {
    return {
        'city': json['city'],
        'street': !exists(json, 'street') ? undefined : json['street'],
        'number': !exists(json, 'number') ? undefined : json['number'],
        'building': !exists(json, 'building') ? undefined : json['building'],
        'block': !exists(json, 'block') ? undefined : json['block'],
        'gps': GpsDTOFromJSON(json['gps']),
    };
}

export function WarehouseAddressDTOToJSON(value?: WarehouseAddressDTO): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'city': value.city,
        'street': value.street,
        'number': value.number,
        'building': value.building,
        'block': value.block,
        'gps': GpsDTOToJSON(value.gps),
    };
}


