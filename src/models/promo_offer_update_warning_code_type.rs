/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PromoOfferUpdateWarningCodeType : Предупреждение, которое появилось при добавлении товара:  * `DEEP_DISCOUNT_OFFER` — большая разница с ценой в каталоге. Проверьте, нет ли ошибки.  * `CATALOG_PRICE_IS_LOWER_THAN_PROMO` — [базовая цена](*basic-price) в кабинете ниже цены по акции. У товара в акции будет отображаться базовая цена.  * `SHOP_PRICES_ARE_LOWER_THAN_PROMO` — цена в отдельном магазине ниже цены по акции. У товара в акции будет отображаться цена в магазине. Для остальных магазинов будет действовать цена по акции.  * `PROMOCODE_PRICE_MORE_THAN_MAX_FAIR_PRICE` — в отдельном магазине цена с учетом промокода выше максимально возможной цены. Товар не будет участвовать в акции.  * `SHOP_OFFER_NOT_ELIGIBLE_FOR_PROMO` — товар в отдельном магазине не подходит под условия акции. 
/// Предупреждение, которое появилось при добавлении товара:  * `DEEP_DISCOUNT_OFFER` — большая разница с ценой в каталоге. Проверьте, нет ли ошибки.  * `CATALOG_PRICE_IS_LOWER_THAN_PROMO` — [базовая цена](*basic-price) в кабинете ниже цены по акции. У товара в акции будет отображаться базовая цена.  * `SHOP_PRICES_ARE_LOWER_THAN_PROMO` — цена в отдельном магазине ниже цены по акции. У товара в акции будет отображаться цена в магазине. Для остальных магазинов будет действовать цена по акции.  * `PROMOCODE_PRICE_MORE_THAN_MAX_FAIR_PRICE` — в отдельном магазине цена с учетом промокода выше максимально возможной цены. Товар не будет участвовать в акции.  * `SHOP_OFFER_NOT_ELIGIBLE_FOR_PROMO` — товар в отдельном магазине не подходит под условия акции. 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PromoOfferUpdateWarningCodeType {
    #[serde(rename = "DEEP_DISCOUNT_OFFER")]
    DeepDiscountOffer,
    #[serde(rename = "CATALOG_PRICE_IS_LOWER_THAN_PROMO")]
    CatalogPriceIsLowerThanPromo,
    #[serde(rename = "SHOP_PRICES_ARE_LOWER_THAN_PROMO")]
    ShopPricesAreLowerThanPromo,
    #[serde(rename = "PROMOCODE_PRICE_MORE_THAN_MAX_FAIR_PRICE")]
    PromocodePriceMoreThanMaxFairPrice,
    #[serde(rename = "SHOP_OFFER_NOT_ELIGIBLE_FOR_PROMO")]
    ShopOfferNotEligibleForPromo,

}

impl std::fmt::Display for PromoOfferUpdateWarningCodeType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::DeepDiscountOffer => write!(f, "DEEP_DISCOUNT_OFFER"),
            Self::CatalogPriceIsLowerThanPromo => write!(f, "CATALOG_PRICE_IS_LOWER_THAN_PROMO"),
            Self::ShopPricesAreLowerThanPromo => write!(f, "SHOP_PRICES_ARE_LOWER_THAN_PROMO"),
            Self::PromocodePriceMoreThanMaxFairPrice => write!(f, "PROMOCODE_PRICE_MORE_THAN_MAX_FAIR_PRICE"),
            Self::ShopOfferNotEligibleForPromo => write!(f, "SHOP_OFFER_NOT_ELIGIBLE_FOR_PROMO"),
        }
    }
}

impl Default for PromoOfferUpdateWarningCodeType {
    fn default() -> PromoOfferUpdateWarningCodeType {
        Self::DeepDiscountOffer
    }
}

