# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""EnrichedOrderBoxLayoutDTO
Информация о коробке.

    EnrichedOrderBoxLayoutDTO(;
        items=nothing,
        boxId=nothing,
    )

    - items::Vector{OrderBoxLayoutItemDTO} : Список товаров в коробке.  Если в коробке едет часть большого товара, в списке может быть только один пункт. 
    - boxId::Int64 : Идентификатор коробки.
"""
Base.@kwdef mutable struct EnrichedOrderBoxLayoutDTO <: OpenAPI.APIModel
    items::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{OrderBoxLayoutItemDTO} }
    boxId::Union{Nothing, Int64} = nothing

    function EnrichedOrderBoxLayoutDTO(items, boxId, )
        OpenAPI.validate_property(EnrichedOrderBoxLayoutDTO, Symbol("items"), items)
        OpenAPI.validate_property(EnrichedOrderBoxLayoutDTO, Symbol("boxId"), boxId)
        return new(items, boxId, )
    end
end # type EnrichedOrderBoxLayoutDTO

const _property_types_EnrichedOrderBoxLayoutDTO = Dict{Symbol,String}(Symbol("items")=>"Vector{OrderBoxLayoutItemDTO}", Symbol("boxId")=>"Int64", )
OpenAPI.property_type(::Type{ EnrichedOrderBoxLayoutDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_EnrichedOrderBoxLayoutDTO[name]))}

function check_required(o::EnrichedOrderBoxLayoutDTO)
    o.items === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ EnrichedOrderBoxLayoutDTO }, name::Symbol, val)
    if name === Symbol("items")
        OpenAPI.validate_param(name, "EnrichedOrderBoxLayoutDTO", :minItems, val, 1)
    end
    if name === Symbol("boxId")
        OpenAPI.validate_param(name, "EnrichedOrderBoxLayoutDTO", :format, val, "int64")
    end
end
