/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ChatMessageSenderType : Кто отправил сообщение:  * `PARTNER` — магазин. * `CUSTOMER` — покупатель. * `MARKET` — Маркет. * `SUPPORT` — сотрудник службы поддержки Маркета. 
/// Кто отправил сообщение:  * `PARTNER` — магазин. * `CUSTOMER` — покупатель. * `MARKET` — Маркет. * `SUPPORT` — сотрудник службы поддержки Маркета. 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ChatMessageSenderType {
    #[serde(rename = "PARTNER")]
    Partner,
    #[serde(rename = "CUSTOMER")]
    Customer,
    #[serde(rename = "MARKET")]
    Market,
    #[serde(rename = "SUPPORT")]
    Support,

}

impl std::fmt::Display for ChatMessageSenderType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Partner => write!(f, "PARTNER"),
            Self::Customer => write!(f, "CUSTOMER"),
            Self::Market => write!(f, "MARKET"),
            Self::Support => write!(f, "SUPPORT"),
        }
    }
}

impl Default for ChatMessageSenderType {
    fn default() -> ChatMessageSenderType {
        Self::Partner
    }
}

