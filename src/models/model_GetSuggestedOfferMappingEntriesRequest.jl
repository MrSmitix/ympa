# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""GetSuggestedOfferMappingEntriesRequest
Запрос рекомендованных карточек товара.

    GetSuggestedOfferMappingEntriesRequest(;
        offers=nothing,
    )

    - offers::Vector{MappingsOfferDTO} : Список товаров.
"""
Base.@kwdef mutable struct GetSuggestedOfferMappingEntriesRequest <: OpenAPI.APIModel
    offers::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{MappingsOfferDTO} }

    function GetSuggestedOfferMappingEntriesRequest(offers, )
        OpenAPI.validate_property(GetSuggestedOfferMappingEntriesRequest, Symbol("offers"), offers)
        return new(offers, )
    end
end # type GetSuggestedOfferMappingEntriesRequest

const _property_types_GetSuggestedOfferMappingEntriesRequest = Dict{Symbol,String}(Symbol("offers")=>"Vector{MappingsOfferDTO}", )
OpenAPI.property_type(::Type{ GetSuggestedOfferMappingEntriesRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_GetSuggestedOfferMappingEntriesRequest[name]))}

function check_required(o::GetSuggestedOfferMappingEntriesRequest)
    o.offers === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ GetSuggestedOfferMappingEntriesRequest }, name::Symbol, val)
    if name === Symbol("offers")
        OpenAPI.validate_param(name, "GetSuggestedOfferMappingEntriesRequest", :maxItems, val, 500)
        OpenAPI.validate_param(name, "GetSuggestedOfferMappingEntriesRequest", :minItems, val, 1)
    end
end
