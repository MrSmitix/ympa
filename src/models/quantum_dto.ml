(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Quantum_dto.t : Настройка продажи квантами.  Чтобы сбросить установленные ранее значения, передайте пустой параметр `quantum`.  {% cut \''Пример\'' %}  ```json {   \''offers\'': [     {       \''offerId\'': \''08e35dc1-89a2-11e3-8055-0015e9b8c48d\'',       \''quantum\'': {}     }   ] } ```  {% endcut %} 
 *)

type t = {
    (* Минимальное количество единиц товара в заказе. Например, если указать 10, покупатель сможет добавить в корзину не меньше 10 единиц.  ⚠️ Если количество товара на складе меньше заданного, ограничение не сработает и покупатель сможет его заказать.  *)
    min_quantity: int32 option [@default None];
    (* На сколько единиц покупатель сможет увеличить количество товара в корзине.  Например, если задать 5, покупатель сможет добавить к заказу только 5, 10, 15, ... единиц товара.  ⚠️ Если количество товара на складе не дотягивает до кванта, ограничение не сработает и покупатель сможет заказать количество, не кратное кванту.  *)
    step_quantity: int32 option [@default None];
} [@@deriving yojson { strict = false }, show ];;

(** Настройка продажи квантами.  Чтобы сбросить установленные ранее значения, передайте пустой параметр `quantum`.  {% cut \''Пример\'' %}  ```json {   \''offers\'': [     {       \''offerId\'': \''08e35dc1-89a2-11e3-8055-0015e9b8c48d\'',       \''quantum\'': {}     }   ] } ```  {% endcut %}  *)
let create () : t = {
    min_quantity = None;
    step_quantity = None;
}

