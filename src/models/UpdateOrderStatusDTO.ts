// tslint:disable
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    OrderStatusType,
    OrderStatusTypeFromJSON,
    OrderStatusTypeToJSON,
    OrderSubstatusType,
    OrderSubstatusTypeFromJSON,
    OrderSubstatusTypeToJSON,
    OrderUpdateStatusType,
    OrderUpdateStatusTypeFromJSON,
    OrderUpdateStatusTypeToJSON,
} from './';

/**
 * Список заказов.
 * @export
 * @interface UpdateOrderStatusDTO
 */
export interface UpdateOrderStatusDTO  {
    /**
     * Идентификатор заказа.
     * @type {number}
     * @memberof UpdateOrderStatusDTO
     */
    id?: number;
    /**
     * 
     * @type {OrderStatusType}
     * @memberof UpdateOrderStatusDTO
     */
    status?: OrderStatusType;
    /**
     * 
     * @type {OrderSubstatusType}
     * @memberof UpdateOrderStatusDTO
     */
    substatus?: OrderSubstatusType;
    /**
     * 
     * @type {OrderUpdateStatusType}
     * @memberof UpdateOrderStatusDTO
     */
    updateStatus?: OrderUpdateStatusType;
    /**
     * Ошибка при изменении статуса заказа. Содержит описание ошибки и идентификатор заказа.  Возвращается, если параметр `updateStatus` принимает значение `ERROR`. 
     * @type {string}
     * @memberof UpdateOrderStatusDTO
     */
    errorDetails?: string;
}

export function UpdateOrderStatusDTOFromJSON(json: any): UpdateOrderStatusDTO {
    return {
        'id': !exists(json, 'id') ? undefined : json['id'],
        'status': !exists(json, 'status') ? undefined : OrderStatusTypeFromJSON(json['status']),
        'substatus': !exists(json, 'substatus') ? undefined : OrderSubstatusTypeFromJSON(json['substatus']),
        'updateStatus': !exists(json, 'updateStatus') ? undefined : OrderUpdateStatusTypeFromJSON(json['updateStatus']),
        'errorDetails': !exists(json, 'errorDetails') ? undefined : json['errorDetails'],
    };
}

export function UpdateOrderStatusDTOToJSON(value?: UpdateOrderStatusDTO): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'id': value.id,
        'status': OrderStatusTypeToJSON(value.status),
        'substatus': OrderSubstatusTypeToJSON(value.substatus),
        'updateStatus': OrderUpdateStatusTypeToJSON(value.updateStatus),
        'errorDetails': value.errorDetails,
    };
}



