// tslint:disable
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    OfferCardStatusType,
    OfferCardStatusTypeFromJSON,
    OfferCardStatusTypeToJSON,
} from './';

/**
 * 
 * @export
 * @interface GetOfferCardsContentStatusRequest
 */
export interface GetOfferCardsContentStatusRequest  {
    /**
     * Идентификаторы товаров, информация о которых нужна. <br><br> ⚠️ Не используйте это поле одновременно с фильтрами по статусам карточек, категориям, брендам или тегам. Если вы хотите воспользоваться фильтрами, оставьте поле пустым. 
     * @type {Set<string>}
     * @memberof GetOfferCardsContentStatusRequest
     */
    offerIds?: Set<string>;
    /**
     * Фильтр по статусам карточек.  [Что такое карточка товара](https://yandex.ru/support/marketplace/assortment/content/index.html) 
     * @type {Set<OfferCardStatusType>}
     * @memberof GetOfferCardsContentStatusRequest
     */
    cardStatuses?: Set<OfferCardStatusType>;
    /**
     * Фильтр по категориям на Маркете.
     * @type {Set<number>}
     * @memberof GetOfferCardsContentStatusRequest
     */
    categoryIds?: Set<number>;
}

export function GetOfferCardsContentStatusRequestFromJSON(json: any): GetOfferCardsContentStatusRequest {
    return {
        'offerIds': !exists(json, 'offerIds') ? undefined : json['offerIds'],
        'cardStatuses': !exists(json, 'cardStatuses') ? undefined : (json['cardStatuses'] as Array<any>).map(OfferCardStatusTypeFromJSON),
        'categoryIds': !exists(json, 'categoryIds') ? undefined : json['categoryIds'],
    };
}

export function GetOfferCardsContentStatusRequestToJSON(value?: GetOfferCardsContentStatusRequest): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'offerIds': value.offerIds,
        'cardStatuses': value.cardStatuses === undefined ? undefined : (value.cardStatuses as Array<any>).map(OfferCardStatusTypeToJSON),
        'categoryIds': value.categoryIds,
    };
}


