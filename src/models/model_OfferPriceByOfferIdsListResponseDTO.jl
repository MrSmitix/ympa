# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""OfferPriceByOfferIdsListResponseDTO
Список цен.

    OfferPriceByOfferIdsListResponseDTO(;
        offers=nothing,
        paging=nothing,
    )

    - offers::Vector{OfferPriceByOfferIdsResponseDTO} : Страница списка цен.
    - paging::ScrollingPagerDTO
"""
Base.@kwdef mutable struct OfferPriceByOfferIdsListResponseDTO <: OpenAPI.APIModel
    offers::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{OfferPriceByOfferIdsResponseDTO} }
    paging = nothing # spec type: Union{ Nothing, ScrollingPagerDTO }

    function OfferPriceByOfferIdsListResponseDTO(offers, paging, )
        OpenAPI.validate_property(OfferPriceByOfferIdsListResponseDTO, Symbol("offers"), offers)
        OpenAPI.validate_property(OfferPriceByOfferIdsListResponseDTO, Symbol("paging"), paging)
        return new(offers, paging, )
    end
end # type OfferPriceByOfferIdsListResponseDTO

const _property_types_OfferPriceByOfferIdsListResponseDTO = Dict{Symbol,String}(Symbol("offers")=>"Vector{OfferPriceByOfferIdsResponseDTO}", Symbol("paging")=>"ScrollingPagerDTO", )
OpenAPI.property_type(::Type{ OfferPriceByOfferIdsListResponseDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_OfferPriceByOfferIdsListResponseDTO[name]))}

function check_required(o::OfferPriceByOfferIdsListResponseDTO)
    o.offers === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ OfferPriceByOfferIdsListResponseDTO }, name::Symbol, val)
end
