# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""PickupAddressDTO
Адрес доставки.

    PickupAddressDTO(;
        country=nothing,
        city=nothing,
        street=nothing,
        house=nothing,
        postcode=nothing,
    )

    - country::String : Страна.
    - city::String : Город.
    - street::String : Улица.
    - house::String : Номер дома.
    - postcode::String : Почтовый индекс.
"""
Base.@kwdef mutable struct PickupAddressDTO <: OpenAPI.APIModel
    country::Union{Nothing, String} = nothing
    city::Union{Nothing, String} = nothing
    street::Union{Nothing, String} = nothing
    house::Union{Nothing, String} = nothing
    postcode::Union{Nothing, String} = nothing

    function PickupAddressDTO(country, city, street, house, postcode, )
        OpenAPI.validate_property(PickupAddressDTO, Symbol("country"), country)
        OpenAPI.validate_property(PickupAddressDTO, Symbol("city"), city)
        OpenAPI.validate_property(PickupAddressDTO, Symbol("street"), street)
        OpenAPI.validate_property(PickupAddressDTO, Symbol("house"), house)
        OpenAPI.validate_property(PickupAddressDTO, Symbol("postcode"), postcode)
        return new(country, city, street, house, postcode, )
    end
end # type PickupAddressDTO

const _property_types_PickupAddressDTO = Dict{Symbol,String}(Symbol("country")=>"String", Symbol("city")=>"String", Symbol("street")=>"String", Symbol("house")=>"String", Symbol("postcode")=>"String", )
OpenAPI.property_type(::Type{ PickupAddressDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PickupAddressDTO[name]))}

function check_required(o::PickupAddressDTO)
    true
end

function OpenAPI.validate_property(::Type{ PickupAddressDTO }, name::Symbol, val)
end
