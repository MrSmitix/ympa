# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""OrderDeliveryAddressDTO
Адрес доставки.  Указывается, если &#x60;type&#x3D;DELIVERY&#x60;, &#x60;type&#x3D;POST&#x60; или &#x60;type&#x3D;PICKUP&#x60; (адрес пункта выдачи). 

    OrderDeliveryAddressDTO(;
        country=nothing,
        postcode=nothing,
        city=nothing,
        district=nothing,
        subway=nothing,
        street=nothing,
        house=nothing,
        block=nothing,
        entrance=nothing,
        entryphone=nothing,
        floor=nothing,
        apartment=nothing,
        phone=nothing,
        recipient=nothing,
        gps=nothing,
    )

    - country::String : Страна.  Обязательный параметр. 
    - postcode::String : Почтовый индекс.  Указывается, если выбрана доставка почтой (&#x60;delivery type&#x3D;POST&#x60;). 
    - city::String : Город или населенный пункт.  Обязательный параметр. 
    - district::String : Район.
    - subway::String : Станция метро.
    - street::String : Улица.  Обязательный параметр. 
    - house::String : Дом или владение.  Обязательный параметр. 
    - block::String : Корпус или строение.
    - entrance::String : Подъезд.
    - entryphone::String : Код домофона.
    - floor::String : Этаж.
    - apartment::String : Квартира или офис.
    - phone::String : Телефон получателя заказа.  Обязательный параметр. 
    - recipient::String : Фамилия, имя и отчество получателя заказа.  Обязательный параметр. 
    - gps::GpsDTO
"""
Base.@kwdef mutable struct OrderDeliveryAddressDTO <: OpenAPI.APIModel
    country::Union{Nothing, String} = nothing
    postcode::Union{Nothing, String} = nothing
    city::Union{Nothing, String} = nothing
    district::Union{Nothing, String} = nothing
    subway::Union{Nothing, String} = nothing
    street::Union{Nothing, String} = nothing
    house::Union{Nothing, String} = nothing
    block::Union{Nothing, String} = nothing
    entrance::Union{Nothing, String} = nothing
    entryphone::Union{Nothing, String} = nothing
    floor::Union{Nothing, String} = nothing
    apartment::Union{Nothing, String} = nothing
    phone::Union{Nothing, String} = nothing
    recipient::Union{Nothing, String} = nothing
    gps = nothing # spec type: Union{ Nothing, GpsDTO }

    function OrderDeliveryAddressDTO(country, postcode, city, district, subway, street, house, block, entrance, entryphone, floor, apartment, phone, recipient, gps, )
        OpenAPI.validate_property(OrderDeliveryAddressDTO, Symbol("country"), country)
        OpenAPI.validate_property(OrderDeliveryAddressDTO, Symbol("postcode"), postcode)
        OpenAPI.validate_property(OrderDeliveryAddressDTO, Symbol("city"), city)
        OpenAPI.validate_property(OrderDeliveryAddressDTO, Symbol("district"), district)
        OpenAPI.validate_property(OrderDeliveryAddressDTO, Symbol("subway"), subway)
        OpenAPI.validate_property(OrderDeliveryAddressDTO, Symbol("street"), street)
        OpenAPI.validate_property(OrderDeliveryAddressDTO, Symbol("house"), house)
        OpenAPI.validate_property(OrderDeliveryAddressDTO, Symbol("block"), block)
        OpenAPI.validate_property(OrderDeliveryAddressDTO, Symbol("entrance"), entrance)
        OpenAPI.validate_property(OrderDeliveryAddressDTO, Symbol("entryphone"), entryphone)
        OpenAPI.validate_property(OrderDeliveryAddressDTO, Symbol("floor"), floor)
        OpenAPI.validate_property(OrderDeliveryAddressDTO, Symbol("apartment"), apartment)
        OpenAPI.validate_property(OrderDeliveryAddressDTO, Symbol("phone"), phone)
        OpenAPI.validate_property(OrderDeliveryAddressDTO, Symbol("recipient"), recipient)
        OpenAPI.validate_property(OrderDeliveryAddressDTO, Symbol("gps"), gps)
        return new(country, postcode, city, district, subway, street, house, block, entrance, entryphone, floor, apartment, phone, recipient, gps, )
    end
end # type OrderDeliveryAddressDTO

const _property_types_OrderDeliveryAddressDTO = Dict{Symbol,String}(Symbol("country")=>"String", Symbol("postcode")=>"String", Symbol("city")=>"String", Symbol("district")=>"String", Symbol("subway")=>"String", Symbol("street")=>"String", Symbol("house")=>"String", Symbol("block")=>"String", Symbol("entrance")=>"String", Symbol("entryphone")=>"String", Symbol("floor")=>"String", Symbol("apartment")=>"String", Symbol("phone")=>"String", Symbol("recipient")=>"String", Symbol("gps")=>"GpsDTO", )
OpenAPI.property_type(::Type{ OrderDeliveryAddressDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_OrderDeliveryAddressDTO[name]))}

function check_required(o::OrderDeliveryAddressDTO)
    true
end

function OpenAPI.validate_property(::Type{ OrderDeliveryAddressDTO }, name::Symbol, val)
end
