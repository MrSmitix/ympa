// tslint:disable
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ReturnDecisionDTO,
    ReturnDecisionDTOFromJSON,
    ReturnDecisionDTOToJSON,
    ReturnInstanceDTO,
    ReturnInstanceDTOFromJSON,
    ReturnInstanceDTOToJSON,
    TrackDTO,
    TrackDTOFromJSON,
    TrackDTOToJSON,
} from './';

/**
 * Список товаров в возврате.
 * @export
 * @interface ReturnItemDTO
 */
export interface ReturnItemDTO  {
    /**
     * SKU на Маркете.
     * @type {number}
     * @memberof ReturnItemDTO
     */
    marketSku?: number;
    /**
     * Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
     * @type {string}
     * @memberof ReturnItemDTO
     */
    shopSku: string;
    /**
     * Количество единиц товара.
     * @type {number}
     * @memberof ReturnItemDTO
     */
    count: number;
    /**
     * Список решений по возврату.
     * @type {Array<ReturnDecisionDTO>}
     * @memberof ReturnItemDTO
     */
    decisions?: Array<ReturnDecisionDTO>;
    /**
     * Список логистических позиций возврата.
     * @type {Array<ReturnInstanceDTO>}
     * @memberof ReturnItemDTO
     */
    instances?: Array<ReturnInstanceDTO>;
    /**
     * Список трек-кодов для почтовых отправлений.
     * @type {Array<TrackDTO>}
     * @memberof ReturnItemDTO
     */
    tracks?: Array<TrackDTO>;
}

export function ReturnItemDTOFromJSON(json: any): ReturnItemDTO {
    return {
        'marketSku': !exists(json, 'marketSku') ? undefined : json['marketSku'],
        'shopSku': json['shopSku'],
        'count': json['count'],
        'decisions': !exists(json, 'decisions') ? undefined : (json['decisions'] as Array<any>).map(ReturnDecisionDTOFromJSON),
        'instances': !exists(json, 'instances') ? undefined : (json['instances'] as Array<any>).map(ReturnInstanceDTOFromJSON),
        'tracks': !exists(json, 'tracks') ? undefined : (json['tracks'] as Array<any>).map(TrackDTOFromJSON),
    };
}

export function ReturnItemDTOToJSON(value?: ReturnItemDTO): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'marketSku': value.marketSku,
        'shopSku': value.shopSku,
        'count': value.count,
        'decisions': value.decisions === undefined ? undefined : (value.decisions as Array<any>).map(ReturnDecisionDTOToJSON),
        'instances': value.instances === undefined ? undefined : (value.instances as Array<any>).map(ReturnInstanceDTOToJSON),
        'tracks': value.tracks === undefined ? undefined : (value.tracks as Array<any>).map(TrackDTOToJSON),
    };
}


