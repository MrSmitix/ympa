/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// GetGoodsFeedbackRequest : Фильтр запроса отзывов в кабинете. 
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetGoodsFeedbackRequest {
    /// Начало периода. Не включительно.  Если параметр не указан, возвращается информация за 6 месяцев до указанной в `dateTimeTo` даты. 
    #[serde(rename = "dateTimeFrom", skip_serializing_if = "Option::is_none")]
    pub date_time_from: Option<String>,
    /// Конец периода. Не включительно.  Если параметр не указан, используется текущая дата. 
    #[serde(rename = "dateTimeTo", skip_serializing_if = "Option::is_none")]
    pub date_time_to: Option<String>,
    #[serde(rename = "reactionStatus", skip_serializing_if = "Option::is_none")]
    pub reaction_status: Option<models::FeedbackReactionStatusType>,
    /// Оценка товара.
    #[serde(rename = "ratingValues", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub rating_values: Option<Option<Vec<i32>>>,
    /// Фильтр по идентификатору модели товара.  Получить идентификатор модели можно с помощью одного из запросов:  * [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md);  * [POST businesses/{businessId}/offer-cards](../../reference/content/getOfferCardsContentStatus.md);  * [POST models](../../reference/models/getModels.md). 
    #[serde(rename = "modelIds", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub model_ids: Option<Option<Vec<i64>>>,
    /// Фильтр отзывов за баллы Плюса.
    #[serde(rename = "paid", skip_serializing_if = "Option::is_none")]
    pub paid: Option<bool>,
}

impl GetGoodsFeedbackRequest {
    /// Фильтр запроса отзывов в кабинете. 
    pub fn new() -> GetGoodsFeedbackRequest {
        GetGoodsFeedbackRequest {
            date_time_from: None,
            date_time_to: None,
            reaction_status: None,
            rating_values: None,
            model_ids: None,
            paid: None,
        }
    }
}

