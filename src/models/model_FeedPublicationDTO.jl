# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""FeedPublicationDTO
Информация о последней публикации предложений из прайс-листа на Маркете.

    FeedPublicationDTO(;
        status=nothing,
        full=nothing,
        priceAndStockUpdate=nothing,
    )

    - status::FeedStatusType
    - full::FeedPublicationFullDTO
    - priceAndStockUpdate::FeedPublicationPriceAndStockUpdateDTO
"""
Base.@kwdef mutable struct FeedPublicationDTO <: OpenAPI.APIModel
    status = nothing # spec type: Union{ Nothing, FeedStatusType }
    full = nothing # spec type: Union{ Nothing, FeedPublicationFullDTO }
    priceAndStockUpdate = nothing # spec type: Union{ Nothing, FeedPublicationPriceAndStockUpdateDTO }

    function FeedPublicationDTO(status, full, priceAndStockUpdate, )
        OpenAPI.validate_property(FeedPublicationDTO, Symbol("status"), status)
        OpenAPI.validate_property(FeedPublicationDTO, Symbol("full"), full)
        OpenAPI.validate_property(FeedPublicationDTO, Symbol("priceAndStockUpdate"), priceAndStockUpdate)
        return new(status, full, priceAndStockUpdate, )
    end
end # type FeedPublicationDTO

const _property_types_FeedPublicationDTO = Dict{Symbol,String}(Symbol("status")=>"FeedStatusType", Symbol("full")=>"FeedPublicationFullDTO", Symbol("priceAndStockUpdate")=>"FeedPublicationPriceAndStockUpdateDTO", )
OpenAPI.property_type(::Type{ FeedPublicationDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_FeedPublicationDTO[name]))}

function check_required(o::FeedPublicationDTO)
    true
end

function OpenAPI.validate_property(::Type{ FeedPublicationDTO }, name::Symbol, val)
end
