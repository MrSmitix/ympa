// tslint:disable
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    BusinessDTO,
    BusinessDTOFromJSON,
    BusinessDTOToJSON,
    PlacementType,
    PlacementTypeFromJSON,
    PlacementTypeToJSON,
} from './';

/**
 * Информация о магазине.
 * @export
 * @interface CampaignDTO
 */
export interface CampaignDTO  {
    /**
     * URL магазина.
     * @type {string}
     * @memberof CampaignDTO
     */
    domain?: string;
    /**
     * Идентификатор кампании.
     * @type {number}
     * @memberof CampaignDTO
     */
    id?: number;
    /**
     * Идентификатор плательщика в Яндекс Балансе.
     * @type {number}
     * @memberof CampaignDTO
     */
    clientId?: number;
    /**
     * 
     * @type {BusinessDTO}
     * @memberof CampaignDTO
     */
    business?: BusinessDTO;
    /**
     * 
     * @type {PlacementType}
     * @memberof CampaignDTO
     */
    placementType?: PlacementType;
}

export function CampaignDTOFromJSON(json: any): CampaignDTO {
    return {
        'domain': !exists(json, 'domain') ? undefined : json['domain'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'clientId': !exists(json, 'clientId') ? undefined : json['clientId'],
        'business': !exists(json, 'business') ? undefined : BusinessDTOFromJSON(json['business']),
        'placementType': !exists(json, 'placementType') ? undefined : PlacementTypeFromJSON(json['placementType']),
    };
}

export function CampaignDTOToJSON(value?: CampaignDTO): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'domain': value.domain,
        'id': value.id,
        'clientId': value.clientId,
        'business': BusinessDTOToJSON(value.business),
        'placementType': PlacementTypeToJSON(value.placementType),
    };
}



