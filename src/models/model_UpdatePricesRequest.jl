# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""UpdatePricesRequest
Запрос на установку цен на товары.

    UpdatePricesRequest(;
        offers=nothing,
    )

    - offers::Vector{OfferPriceDTO} : Список товаров.
"""
Base.@kwdef mutable struct UpdatePricesRequest <: OpenAPI.APIModel
    offers::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{OfferPriceDTO} }

    function UpdatePricesRequest(offers, )
        OpenAPI.validate_property(UpdatePricesRequest, Symbol("offers"), offers)
        return new(offers, )
    end
end # type UpdatePricesRequest

const _property_types_UpdatePricesRequest = Dict{Symbol,String}(Symbol("offers")=>"Vector{OfferPriceDTO}", )
OpenAPI.property_type(::Type{ UpdatePricesRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_UpdatePricesRequest[name]))}

function check_required(o::UpdatePricesRequest)
    o.offers === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ UpdatePricesRequest }, name::Symbol, val)
    if name === Symbol("offers")
        OpenAPI.validate_param(name, "UpdatePricesRequest", :maxItems, val, 2000)
        OpenAPI.validate_param(name, "UpdatePricesRequest", :minItems, val, 1)
    end
end
