# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""CampaignSettingsTimePeriodDTO
Период, за который рассчитывается итоговый список нерабочих дней службы доставки.

    CampaignSettingsTimePeriodDTO(;
        fromDate=nothing,
        toDate=nothing,
    )

    - fromDate::String : Формат даты: &#x60;ДД-ММ-ГГГГ&#x60;. 
    - toDate::String : Формат даты: &#x60;ДД-ММ-ГГГГ&#x60;. 
"""
Base.@kwdef mutable struct CampaignSettingsTimePeriodDTO <: OpenAPI.APIModel
    fromDate::Union{Nothing, String} = nothing
    toDate::Union{Nothing, String} = nothing

    function CampaignSettingsTimePeriodDTO(fromDate, toDate, )
        OpenAPI.validate_property(CampaignSettingsTimePeriodDTO, Symbol("fromDate"), fromDate)
        OpenAPI.validate_property(CampaignSettingsTimePeriodDTO, Symbol("toDate"), toDate)
        return new(fromDate, toDate, )
    end
end # type CampaignSettingsTimePeriodDTO

const _property_types_CampaignSettingsTimePeriodDTO = Dict{Symbol,String}(Symbol("fromDate")=>"String", Symbol("toDate")=>"String", )
OpenAPI.property_type(::Type{ CampaignSettingsTimePeriodDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CampaignSettingsTimePeriodDTO[name]))}

function check_required(o::CampaignSettingsTimePeriodDTO)
    true
end

function OpenAPI.validate_property(::Type{ CampaignSettingsTimePeriodDTO }, name::Symbol, val)
    if name === Symbol("fromDate")
        OpenAPI.validate_param(name, "CampaignSettingsTimePeriodDTO", :format, val, "date-dd-MM-yyyy")
    end
    if name === Symbol("toDate")
        OpenAPI.validate_param(name, "CampaignSettingsTimePeriodDTO", :format, val, "date-dd-MM-yyyy")
    end
end
