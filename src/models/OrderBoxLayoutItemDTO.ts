// tslint:disable
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    BriefOrderItemInstanceDTO,
    BriefOrderItemInstanceDTOFromJSON,
    BriefOrderItemInstanceDTOToJSON,
    OrderBoxLayoutPartialCountDTO,
    OrderBoxLayoutPartialCountDTOFromJSON,
    OrderBoxLayoutPartialCountDTOToJSON,
} from './';

/**
 * Информация о товаре в коробке.
 * @export
 * @interface OrderBoxLayoutItemDTO
 */
export interface OrderBoxLayoutItemDTO  {
    /**
     * Идентификатор товара в заказе.  {% cut \"Где его взять\" %}  Идентификатор приходит в ответе на запрос [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) и в запросе Маркета [POST order/accept](../../pushapi/reference/orderAccept.md) — параметр `id` в `items`.  {% endcut %}   
     * @type {number}
     * @memberof OrderBoxLayoutItemDTO
     */
    id: number;
    /**
     * Количество единиц товара в коробке.  Используйте это поле, если в коробке поедут целые товары, не разделенные на части. Не используйте это поле одновременно с `partialCount`. 
     * @type {number}
     * @memberof OrderBoxLayoutItemDTO
     */
    fullCount?: number;
    /**
     * 
     * @type {OrderBoxLayoutPartialCountDTO}
     * @memberof OrderBoxLayoutItemDTO
     */
    partialCount?: OrderBoxLayoutPartialCountDTO;
    /**
     * Переданные вами коды маркировки.
     * @type {Array<BriefOrderItemInstanceDTO>}
     * @memberof OrderBoxLayoutItemDTO
     */
    instances?: Array<BriefOrderItemInstanceDTO>;
}

export function OrderBoxLayoutItemDTOFromJSON(json: any): OrderBoxLayoutItemDTO {
    return {
        'id': json['id'],
        'fullCount': !exists(json, 'fullCount') ? undefined : json['fullCount'],
        'partialCount': !exists(json, 'partialCount') ? undefined : OrderBoxLayoutPartialCountDTOFromJSON(json['partialCount']),
        'instances': !exists(json, 'instances') ? undefined : (json['instances'] as Array<any>).map(BriefOrderItemInstanceDTOFromJSON),
    };
}

export function OrderBoxLayoutItemDTOToJSON(value?: OrderBoxLayoutItemDTO): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'id': value.id,
        'fullCount': value.fullCount,
        'partialCount': OrderBoxLayoutPartialCountDTOToJSON(value.partialCount),
        'instances': value.instances === undefined ? undefined : (value.instances as Array<any>).map(BriefOrderItemInstanceDTOToJSON),
    };
}


