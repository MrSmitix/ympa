// tslint:disable
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    PlacementType,
    PlacementTypeFromJSON,
    PlacementTypeToJSON,
} from './';

/**
 * Данные, необходимые для генерации отчета: идентификатор магазина, период, за который нужен отчет, а также фильтры. 
 * @export
 * @interface GenerateUnitedNettingReportRequest
 */
export interface GenerateUnitedNettingReportRequest  {
    /**
     * Идентификатор бизнеса.
     * @type {number}
     * @memberof GenerateUnitedNettingReportRequest
     */
    businessId: number;
    /**
     * {% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Начало периода, включительно. 
     * @type {Date}
     * @memberof GenerateUnitedNettingReportRequest
     */
    dateTimeFrom?: Date;
    /**
     * {% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Конец периода, включительно. Максимальный период — 1 год. 
     * @type {Date}
     * @memberof GenerateUnitedNettingReportRequest
     */
    dateTimeTo?: Date;
    /**
     * Начало периода, включительно.
     * @type {Date}
     * @memberof GenerateUnitedNettingReportRequest
     */
    dateFrom?: Date;
    /**
     * Конец периода, включительно. Максимальный период — 1 год.
     * @type {Date}
     * @memberof GenerateUnitedNettingReportRequest
     */
    dateTo?: Date;
    /**
     * Номер платежного поручения.
     * @type {number}
     * @memberof GenerateUnitedNettingReportRequest
     */
    bankOrderId?: number;
    /**
     * Дата платежного поручения.
     * @type {Date}
     * @memberof GenerateUnitedNettingReportRequest
     */
    bankOrderDateTime?: Date;
    /**
     * Список моделей, которые нужны в отчете. 
     * @type {Array<PlacementType>}
     * @memberof GenerateUnitedNettingReportRequest
     */
    placementPrograms?: Array<PlacementType>;
    /**
     * Список ИНН, которые нужны в отчете.
     * @type {Array<string>}
     * @memberof GenerateUnitedNettingReportRequest
     */
    inns?: Array<string>;
    /**
     * Список магазинов, которые нужны в отчете.
     * @type {Array<number>}
     * @memberof GenerateUnitedNettingReportRequest
     */
    campaignIds?: Array<number>;
}

export function GenerateUnitedNettingReportRequestFromJSON(json: any): GenerateUnitedNettingReportRequest {
    return {
        'businessId': json['businessId'],
        'dateTimeFrom': !exists(json, 'dateTimeFrom') ? undefined : new Date(json['dateTimeFrom']),
        'dateTimeTo': !exists(json, 'dateTimeTo') ? undefined : new Date(json['dateTimeTo']),
        'dateFrom': !exists(json, 'dateFrom') ? undefined : new Date(json['dateFrom']),
        'dateTo': !exists(json, 'dateTo') ? undefined : new Date(json['dateTo']),
        'bankOrderId': !exists(json, 'bankOrderId') ? undefined : json['bankOrderId'],
        'bankOrderDateTime': !exists(json, 'bankOrderDateTime') ? undefined : new Date(json['bankOrderDateTime']),
        'placementPrograms': !exists(json, 'placementPrograms') ? undefined : (json['placementPrograms'] as Array<any>).map(PlacementTypeFromJSON),
        'inns': !exists(json, 'inns') ? undefined : json['inns'],
        'campaignIds': !exists(json, 'campaignIds') ? undefined : json['campaignIds'],
    };
}

export function GenerateUnitedNettingReportRequestToJSON(value?: GenerateUnitedNettingReportRequest): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'businessId': value.businessId,
        'dateTimeFrom': value.dateTimeFrom === undefined ? undefined : value.dateTimeFrom.toISOString(),
        'dateTimeTo': value.dateTimeTo === undefined ? undefined : value.dateTimeTo.toISOString(),
        'dateFrom': value.dateFrom === undefined ? undefined : value.dateFrom.toISOString().substring(0,10),
        'dateTo': value.dateTo === undefined ? undefined : value.dateTo.toISOString().substring(0,10),
        'bankOrderId': value.bankOrderId,
        'bankOrderDateTime': value.bankOrderDateTime === undefined ? undefined : value.bankOrderDateTime.toISOString(),
        'placementPrograms': value.placementPrograms === undefined ? undefined : (value.placementPrograms as Array<any>).map(PlacementTypeToJSON),
        'inns': value.inns,
        'campaignIds': value.campaignIds,
    };
}


