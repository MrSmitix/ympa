# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""GenerateGoodsMovementReportRequest
Данные, необходимые для генерации отчета.

    GenerateGoodsMovementReportRequest(;
        campaignId=nothing,
        dateFrom=nothing,
        dateTo=nothing,
        shopSku=nothing,
    )

    - campaignId::Int64 : Идентификатор кампании.
    - dateFrom::Date : Начало периода, включительно.
    - dateTo::Date : Конец периода, включительно.
    - shopSku::String : Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
"""
Base.@kwdef mutable struct GenerateGoodsMovementReportRequest <: OpenAPI.APIModel
    campaignId::Union{Nothing, Int64} = nothing
    dateFrom::Union{Nothing, Date} = nothing
    dateTo::Union{Nothing, Date} = nothing
    shopSku::Union{Nothing, String} = nothing

    function GenerateGoodsMovementReportRequest(campaignId, dateFrom, dateTo, shopSku, )
        OpenAPI.validate_property(GenerateGoodsMovementReportRequest, Symbol("campaignId"), campaignId)
        OpenAPI.validate_property(GenerateGoodsMovementReportRequest, Symbol("dateFrom"), dateFrom)
        OpenAPI.validate_property(GenerateGoodsMovementReportRequest, Symbol("dateTo"), dateTo)
        OpenAPI.validate_property(GenerateGoodsMovementReportRequest, Symbol("shopSku"), shopSku)
        return new(campaignId, dateFrom, dateTo, shopSku, )
    end
end # type GenerateGoodsMovementReportRequest

const _property_types_GenerateGoodsMovementReportRequest = Dict{Symbol,String}(Symbol("campaignId")=>"Int64", Symbol("dateFrom")=>"Date", Symbol("dateTo")=>"Date", Symbol("shopSku")=>"String", )
OpenAPI.property_type(::Type{ GenerateGoodsMovementReportRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_GenerateGoodsMovementReportRequest[name]))}

function check_required(o::GenerateGoodsMovementReportRequest)
    o.campaignId === nothing && (return false)
    o.dateFrom === nothing && (return false)
    o.dateTo === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ GenerateGoodsMovementReportRequest }, name::Symbol, val)
    if name === Symbol("campaignId")
        OpenAPI.validate_param(name, "GenerateGoodsMovementReportRequest", :format, val, "int64")
    end
    if name === Symbol("dateFrom")
        OpenAPI.validate_param(name, "GenerateGoodsMovementReportRequest", :format, val, "date")
    end
    if name === Symbol("dateTo")
        OpenAPI.validate_param(name, "GenerateGoodsMovementReportRequest", :format, val, "date")
    end
    if name === Symbol("shopSku")
        OpenAPI.validate_param(name, "GenerateGoodsMovementReportRequest", :maxLength, val, 255)
        OpenAPI.validate_param(name, "GenerateGoodsMovementReportRequest", :minLength, val, 1)
        OpenAPI.validate_param(name, "GenerateGoodsMovementReportRequest", :pattern, val, r"^[^\x00-\x08\x0A-\x1f\x7f]{1,255}$")
    end
end
