# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""GenerateGoodsRealizationReportRequest
Данные, необходимые для генерации отчета: идентификатор магазина и период, за который нужен отчет. 

    GenerateGoodsRealizationReportRequest(;
        campaignId=nothing,
        year=nothing,
        month=nothing,
    )

    - campaignId::Int64 : Идентификатор кампании.
    - year::Int64 : Год.
    - month::Int64 : Номер месяца.
"""
Base.@kwdef mutable struct GenerateGoodsRealizationReportRequest <: OpenAPI.APIModel
    campaignId::Union{Nothing, Int64} = nothing
    year::Union{Nothing, Int64} = nothing
    month::Union{Nothing, Int64} = nothing

    function GenerateGoodsRealizationReportRequest(campaignId, year, month, )
        OpenAPI.validate_property(GenerateGoodsRealizationReportRequest, Symbol("campaignId"), campaignId)
        OpenAPI.validate_property(GenerateGoodsRealizationReportRequest, Symbol("year"), year)
        OpenAPI.validate_property(GenerateGoodsRealizationReportRequest, Symbol("month"), month)
        return new(campaignId, year, month, )
    end
end # type GenerateGoodsRealizationReportRequest

const _property_types_GenerateGoodsRealizationReportRequest = Dict{Symbol,String}(Symbol("campaignId")=>"Int64", Symbol("year")=>"Int64", Symbol("month")=>"Int64", )
OpenAPI.property_type(::Type{ GenerateGoodsRealizationReportRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_GenerateGoodsRealizationReportRequest[name]))}

function check_required(o::GenerateGoodsRealizationReportRequest)
    o.campaignId === nothing && (return false)
    o.year === nothing && (return false)
    o.month === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ GenerateGoodsRealizationReportRequest }, name::Symbol, val)
    if name === Symbol("campaignId")
        OpenAPI.validate_param(name, "GenerateGoodsRealizationReportRequest", :format, val, "int64")
    end
    if name === Symbol("year")
        OpenAPI.validate_param(name, "GenerateGoodsRealizationReportRequest", :format, val, "int32")
    end
    if name === Symbol("month")
        OpenAPI.validate_param(name, "GenerateGoodsRealizationReportRequest", :format, val, "int32")
    end
    if name === Symbol("month")
        OpenAPI.validate_param(name, "GenerateGoodsRealizationReportRequest", :maximum, val, 12, false)
        OpenAPI.validate_param(name, "GenerateGoodsRealizationReportRequest", :minimum, val, 1, false)
    end
end
