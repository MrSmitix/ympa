/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// WarehouseAddressDto : Адрес склада.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WarehouseAddressDto {
    /// Город.
    #[serde(rename = "city")]
    pub city: String,
    /// Улица.
    #[serde(rename = "street", skip_serializing_if = "Option::is_none")]
    pub street: Option<String>,
    /// Номер дома.
    #[serde(rename = "number", skip_serializing_if = "Option::is_none")]
    pub number: Option<String>,
    /// Номер строения.
    #[serde(rename = "building", skip_serializing_if = "Option::is_none")]
    pub building: Option<String>,
    /// Номер корпуса.
    #[serde(rename = "block", skip_serializing_if = "Option::is_none")]
    pub block: Option<String>,
    #[serde(rename = "gps")]
    pub gps: Box<models::GpsDto>,
}

impl WarehouseAddressDto {
    /// Адрес склада.
    pub fn new(city: String, gps: models::GpsDto) -> WarehouseAddressDto {
        WarehouseAddressDto {
            city,
            street: None,
            number: None,
            building: None,
            block: None,
            gps: Box::new(gps),
        }
    }
}

