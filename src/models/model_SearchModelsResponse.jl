# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""SearchModelsResponse

    SearchModelsResponse(;
        models=nothing,
        currency=nothing,
        regionId=nothing,
        pager=nothing,
    )

    - models::Vector{ModelDTO} : Список моделей товаров.
    - currency::CurrencyType
    - regionId::Int64 : Идентификатор региона, для которого выводится информация о предложениях модели (доставляемых в этот регион).  Информацию о регионе по идентификатору можно получить с помощью запроса [GET regions/{regionId}](../../reference/regions/searchRegionsById.md). 
    - pager::FlippingPagerDTO
"""
Base.@kwdef mutable struct SearchModelsResponse <: OpenAPI.APIModel
    models::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{ModelDTO} }
    currency = nothing # spec type: Union{ Nothing, CurrencyType }
    regionId::Union{Nothing, Int64} = nothing
    pager = nothing # spec type: Union{ Nothing, FlippingPagerDTO }

    function SearchModelsResponse(models, currency, regionId, pager, )
        OpenAPI.validate_property(SearchModelsResponse, Symbol("models"), models)
        OpenAPI.validate_property(SearchModelsResponse, Symbol("currency"), currency)
        OpenAPI.validate_property(SearchModelsResponse, Symbol("regionId"), regionId)
        OpenAPI.validate_property(SearchModelsResponse, Symbol("pager"), pager)
        return new(models, currency, regionId, pager, )
    end
end # type SearchModelsResponse

const _property_types_SearchModelsResponse = Dict{Symbol,String}(Symbol("models")=>"Vector{ModelDTO}", Symbol("currency")=>"CurrencyType", Symbol("regionId")=>"Int64", Symbol("pager")=>"FlippingPagerDTO", )
OpenAPI.property_type(::Type{ SearchModelsResponse }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_SearchModelsResponse[name]))}

function check_required(o::SearchModelsResponse)
    o.models === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ SearchModelsResponse }, name::Symbol, val)
    if name === Symbol("regionId")
        OpenAPI.validate_param(name, "SearchModelsResponse", :format, val, "int64")
    end
end
