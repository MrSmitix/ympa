# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""WarehouseAddressDTO
Адрес склада.

    WarehouseAddressDTO(;
        city=nothing,
        street=nothing,
        number=nothing,
        building=nothing,
        block=nothing,
        gps=nothing,
    )

    - city::String : Город.
    - street::String : Улица.
    - number::String : Номер дома.
    - building::String : Номер строения.
    - block::String : Номер корпуса.
    - gps::GpsDTO
"""
Base.@kwdef mutable struct WarehouseAddressDTO <: OpenAPI.APIModel
    city::Union{Nothing, String} = nothing
    street::Union{Nothing, String} = nothing
    number::Union{Nothing, String} = nothing
    building::Union{Nothing, String} = nothing
    block::Union{Nothing, String} = nothing
    gps = nothing # spec type: Union{ Nothing, GpsDTO }

    function WarehouseAddressDTO(city, street, number, building, block, gps, )
        OpenAPI.validate_property(WarehouseAddressDTO, Symbol("city"), city)
        OpenAPI.validate_property(WarehouseAddressDTO, Symbol("street"), street)
        OpenAPI.validate_property(WarehouseAddressDTO, Symbol("number"), number)
        OpenAPI.validate_property(WarehouseAddressDTO, Symbol("building"), building)
        OpenAPI.validate_property(WarehouseAddressDTO, Symbol("block"), block)
        OpenAPI.validate_property(WarehouseAddressDTO, Symbol("gps"), gps)
        return new(city, street, number, building, block, gps, )
    end
end # type WarehouseAddressDTO

const _property_types_WarehouseAddressDTO = Dict{Symbol,String}(Symbol("city")=>"String", Symbol("street")=>"String", Symbol("number")=>"String", Symbol("building")=>"String", Symbol("block")=>"String", Symbol("gps")=>"GpsDTO", )
OpenAPI.property_type(::Type{ WarehouseAddressDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_WarehouseAddressDTO[name]))}

function check_required(o::WarehouseAddressDTO)
    o.city === nothing && (return false)
    o.gps === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ WarehouseAddressDTO }, name::Symbol, val)
    if name === Symbol("city")
        OpenAPI.validate_param(name, "WarehouseAddressDTO", :maxLength, val, 200)
    end
    if name === Symbol("street")
        OpenAPI.validate_param(name, "WarehouseAddressDTO", :maxLength, val, 512)
    end
    if name === Symbol("number")
        OpenAPI.validate_param(name, "WarehouseAddressDTO", :maxLength, val, 256)
    end
    if name === Symbol("building")
        OpenAPI.validate_param(name, "WarehouseAddressDTO", :maxLength, val, 16)
    end
    if name === Symbol("block")
        OpenAPI.validate_param(name, "WarehouseAddressDTO", :maxLength, val, 16)
    end
end
