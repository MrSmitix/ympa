# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""GetOrdersResponse
Модель для ответа API списка информации по заказам.

    GetOrdersResponse(;
        pager=nothing,
        orders=nothing,
        paging=nothing,
    )

    - pager::FlippingPagerDTO
    - orders::Vector{OrderDTO} : Модель заказа. 
    - paging::ForwardScrollingPagerDTO
"""
Base.@kwdef mutable struct GetOrdersResponse <: OpenAPI.APIModel
    pager = nothing # spec type: Union{ Nothing, FlippingPagerDTO }
    orders::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{OrderDTO} }
    paging = nothing # spec type: Union{ Nothing, ForwardScrollingPagerDTO }

    function GetOrdersResponse(pager, orders, paging, )
        OpenAPI.validate_property(GetOrdersResponse, Symbol("pager"), pager)
        OpenAPI.validate_property(GetOrdersResponse, Symbol("orders"), orders)
        OpenAPI.validate_property(GetOrdersResponse, Symbol("paging"), paging)
        return new(pager, orders, paging, )
    end
end # type GetOrdersResponse

const _property_types_GetOrdersResponse = Dict{Symbol,String}(Symbol("pager")=>"FlippingPagerDTO", Symbol("orders")=>"Vector{OrderDTO}", Symbol("paging")=>"ForwardScrollingPagerDTO", )
OpenAPI.property_type(::Type{ GetOrdersResponse }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_GetOrdersResponse[name]))}

function check_required(o::GetOrdersResponse)
    o.orders === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ GetOrdersResponse }, name::Symbol, val)
end
