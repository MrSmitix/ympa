// tslint:disable
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    OrderItemInstanceDTO,
    OrderItemInstanceDTOFromJSON,
    OrderItemInstanceDTOToJSON,
    OrderVatType,
    OrderVatTypeFromJSON,
    OrderVatTypeToJSON,
} from './';

/**
 * Информация о маркированном товаре.
 * @export
 * @interface BriefOrderItemDTO
 */
export interface BriefOrderItemDTO  {
    /**
     * Идентификатор товара в заказе.  Позволяет идентифицировать товар в рамках данного заказа. 
     * @type {number}
     * @memberof BriefOrderItemDTO
     */
    id?: number;
    /**
     * 
     * @type {OrderVatType}
     * @memberof BriefOrderItemDTO
     */
    vat?: OrderVatType;
    /**
     * Количество единиц товара.
     * @type {number}
     * @memberof BriefOrderItemDTO
     */
    count?: number;
    /**
     * Цена на товар. Указана в той валюте, которая была задана в каталоге. Разделитель целой и дробной части — точка. 
     * @type {number}
     * @memberof BriefOrderItemDTO
     */
    price?: number;
    /**
     * Название товара.
     * @type {string}
     * @memberof BriefOrderItemDTO
     */
    offerName?: string;
    /**
     * Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
     * @type {string}
     * @memberof BriefOrderItemDTO
     */
    offerId?: string;
    /**
     * Переданные вами коды маркировки.
     * @type {Array<OrderItemInstanceDTO>}
     * @memberof BriefOrderItemDTO
     */
    instances?: Array<OrderItemInstanceDTO>;
}

export function BriefOrderItemDTOFromJSON(json: any): BriefOrderItemDTO {
    return {
        'id': !exists(json, 'id') ? undefined : json['id'],
        'vat': !exists(json, 'vat') ? undefined : OrderVatTypeFromJSON(json['vat']),
        'count': !exists(json, 'count') ? undefined : json['count'],
        'price': !exists(json, 'price') ? undefined : json['price'],
        'offerName': !exists(json, 'offerName') ? undefined : json['offerName'],
        'offerId': !exists(json, 'offerId') ? undefined : json['offerId'],
        'instances': !exists(json, 'instances') ? undefined : (json['instances'] as Array<any>).map(OrderItemInstanceDTOFromJSON),
    };
}

export function BriefOrderItemDTOToJSON(value?: BriefOrderItemDTO): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'id': value.id,
        'vat': OrderVatTypeToJSON(value.vat),
        'count': value.count,
        'price': value.price,
        'offerName': value.offerName,
        'offerId': value.offerId,
        'instances': value.instances === undefined ? undefined : (value.instances as Array<any>).map(OrderItemInstanceDTOToJSON),
    };
}



