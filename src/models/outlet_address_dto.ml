(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Outlet_address_dto.t : Адрес точки продаж. 
 *)

type t = {
    (* Идентификатор региона.  Идентификатор можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).  {% note alert %}  При создании и редактировании точек продаж можно указывать только регионы типов `TOWN` (город), `CITY` (крупный город) и `REPUBLIC_AREA` (район субъекта федерации). Тип региона указан в выходных параметрах type запросов [GET regions](../../reference/regions/searchRegionsByName.md) и [GET regions/{regionId}](../../reference/regions/searchRegionsById.md).  {% endnote %}  *)
    region_id: int64;
    (* Улица. *)
    street: string option [@default None];
    (* Номер дома. *)
    number: string option [@default None];
    (* Номер строения. *)
    building: string option [@default None];
    (* Номер владения. *)
    estate: string option [@default None];
    (* Номер корпуса. *)
    block: string option [@default None];
    (* Дополнительная информация. *)
    additional: string option [@default None];
    (* Порядковый номер километра дороги, на котором располагается точка продаж, если отсутствует улица. *)
    km: int32 option [@default None];
    (* {% note warning \''\'' %}  Этот параметр устарел. Не используйте его. Город или населенный пункт возвращается в параметре `regionId`.  {% endnote %}  *)
    city: string option [@default None];
} [@@deriving yojson { strict = false }, show ];;

(** Адрес точки продаж.  *)
let create (region_id : int64) : t = {
    region_id = region_id;
    street = None;
    number = None;
    building = None;
    estate = None;
    block = None;
    additional = None;
    km = None;
    city = None;
}

