# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""PromoOfferParamsDTO
Параметры товара в акции.  Возвращается параметр, который соответствует типу акции. 

    PromoOfferParamsDTO(;
        discountParams=nothing,
        promocodeParams=nothing,
    )

    - discountParams::PromoOfferDiscountParamsDTO
    - promocodeParams::PromoOfferPromocodeParamsDTO
"""
Base.@kwdef mutable struct PromoOfferParamsDTO <: OpenAPI.APIModel
    discountParams = nothing # spec type: Union{ Nothing, PromoOfferDiscountParamsDTO }
    promocodeParams = nothing # spec type: Union{ Nothing, PromoOfferPromocodeParamsDTO }

    function PromoOfferParamsDTO(discountParams, promocodeParams, )
        OpenAPI.validate_property(PromoOfferParamsDTO, Symbol("discountParams"), discountParams)
        OpenAPI.validate_property(PromoOfferParamsDTO, Symbol("promocodeParams"), promocodeParams)
        return new(discountParams, promocodeParams, )
    end
end # type PromoOfferParamsDTO

const _property_types_PromoOfferParamsDTO = Dict{Symbol,String}(Symbol("discountParams")=>"PromoOfferDiscountParamsDTO", Symbol("promocodeParams")=>"PromoOfferPromocodeParamsDTO", )
OpenAPI.property_type(::Type{ PromoOfferParamsDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PromoOfferParamsDTO[name]))}

function check_required(o::PromoOfferParamsDTO)
    true
end

function OpenAPI.validate_property(::Type{ PromoOfferParamsDTO }, name::Symbol, val)
end
