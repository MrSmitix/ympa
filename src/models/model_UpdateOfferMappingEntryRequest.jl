# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""UpdateOfferMappingEntryRequest
Запрос на обновление товаров.

    UpdateOfferMappingEntryRequest(;
        offerMappingEntries=nothing,
    )

    - offerMappingEntries::Vector{UpdateOfferMappingEntryDTO} : Информация о товарах в каталоге.
"""
Base.@kwdef mutable struct UpdateOfferMappingEntryRequest <: OpenAPI.APIModel
    offerMappingEntries::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{UpdateOfferMappingEntryDTO} }

    function UpdateOfferMappingEntryRequest(offerMappingEntries, )
        OpenAPI.validate_property(UpdateOfferMappingEntryRequest, Symbol("offerMappingEntries"), offerMappingEntries)
        return new(offerMappingEntries, )
    end
end # type UpdateOfferMappingEntryRequest

const _property_types_UpdateOfferMappingEntryRequest = Dict{Symbol,String}(Symbol("offerMappingEntries")=>"Vector{UpdateOfferMappingEntryDTO}", )
OpenAPI.property_type(::Type{ UpdateOfferMappingEntryRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_UpdateOfferMappingEntryRequest[name]))}

function check_required(o::UpdateOfferMappingEntryRequest)
    o.offerMappingEntries === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ UpdateOfferMappingEntryRequest }, name::Symbol, val)
    if name === Symbol("offerMappingEntries")
        OpenAPI.validate_param(name, "UpdateOfferMappingEntryRequest", :maxItems, val, 500)
        OpenAPI.validate_param(name, "UpdateOfferMappingEntryRequest", :minItems, val, 1)
    end
end
