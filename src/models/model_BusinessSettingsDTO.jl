# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""BusinessSettingsDTO
Настройки кабинета.

    BusinessSettingsDTO(;
        onlyDefaultPrice=nothing,
        currency=nothing,
    )

    - onlyDefaultPrice::Bool : Можно ли установить только [базовую цену](*rule): * &#x60;false&#x60; — можно задать и базовую цену, и цены в конкретных магазинах. * &#x60;true&#x60; — можно задать только базовую цену. 
    - currency::CurrencyType
"""
Base.@kwdef mutable struct BusinessSettingsDTO <: OpenAPI.APIModel
    onlyDefaultPrice::Union{Nothing, Bool} = nothing
    currency = nothing # spec type: Union{ Nothing, CurrencyType }

    function BusinessSettingsDTO(onlyDefaultPrice, currency, )
        OpenAPI.validate_property(BusinessSettingsDTO, Symbol("onlyDefaultPrice"), onlyDefaultPrice)
        OpenAPI.validate_property(BusinessSettingsDTO, Symbol("currency"), currency)
        return new(onlyDefaultPrice, currency, )
    end
end # type BusinessSettingsDTO

const _property_types_BusinessSettingsDTO = Dict{Symbol,String}(Symbol("onlyDefaultPrice")=>"Bool", Symbol("currency")=>"CurrencyType", )
OpenAPI.property_type(::Type{ BusinessSettingsDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_BusinessSettingsDTO[name]))}

function check_required(o::BusinessSettingsDTO)
    true
end

function OpenAPI.validate_property(::Type{ BusinessSettingsDTO }, name::Symbol, val)
end
