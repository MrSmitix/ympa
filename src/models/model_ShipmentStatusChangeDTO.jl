# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ShipmentStatusChangeDTO
Статус отгрузки.

    ShipmentStatusChangeDTO(;
        status=nothing,
        description=nothing,
        updateTime=nothing,
    )

    - status::ShipmentStatusType
    - description::String : Описание статуса отгрузки.
    - updateTime::ZonedDateTime : Время последнего изменения статуса отгрузки.
"""
Base.@kwdef mutable struct ShipmentStatusChangeDTO <: OpenAPI.APIModel
    status = nothing # spec type: Union{ Nothing, ShipmentStatusType }
    description::Union{Nothing, String} = nothing
    updateTime::Union{Nothing, ZonedDateTime} = nothing

    function ShipmentStatusChangeDTO(status, description, updateTime, )
        OpenAPI.validate_property(ShipmentStatusChangeDTO, Symbol("status"), status)
        OpenAPI.validate_property(ShipmentStatusChangeDTO, Symbol("description"), description)
        OpenAPI.validate_property(ShipmentStatusChangeDTO, Symbol("updateTime"), updateTime)
        return new(status, description, updateTime, )
    end
end # type ShipmentStatusChangeDTO

const _property_types_ShipmentStatusChangeDTO = Dict{Symbol,String}(Symbol("status")=>"ShipmentStatusType", Symbol("description")=>"String", Symbol("updateTime")=>"ZonedDateTime", )
OpenAPI.property_type(::Type{ ShipmentStatusChangeDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ShipmentStatusChangeDTO[name]))}

function check_required(o::ShipmentStatusChangeDTO)
    true
end

function OpenAPI.validate_property(::Type{ ShipmentStatusChangeDTO }, name::Symbol, val)
    if name === Symbol("updateTime")
        OpenAPI.validate_param(name, "ShipmentStatusChangeDTO", :format, val, "date-time")
    end
end
