// tslint:disable
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    FeedContentDTO,
    FeedContentDTOFromJSON,
    FeedContentDTOToJSON,
    FeedDownloadDTO,
    FeedDownloadDTOFromJSON,
    FeedDownloadDTOToJSON,
    FeedPlacementDTO,
    FeedPlacementDTOFromJSON,
    FeedPlacementDTOToJSON,
    FeedPublicationDTO,
    FeedPublicationDTOFromJSON,
    FeedPublicationDTOToJSON,
} from './';

/**
 * Информация о прайс-листе.
 * @export
 * @interface FeedDTO
 */
export interface FeedDTO  {
    /**
     * Идентификатор прайс-листа.
     * @type {number}
     * @memberof FeedDTO
     */
    id?: number;
    /**
     * Логин для авторизации при скачивании прайс-листа. Параметр выводится при размещении прайс-листа на сайте магазина и в случае ограничения доступа к нему. 
     * @type {string}
     * @memberof FeedDTO
     */
    login?: string;
    /**
     * Имя файла, содержащего прайс-лист. Параметр выводится при размещении прайс-листа на сервере Маркета. 
     * @type {string}
     * @memberof FeedDTO
     */
    name?: string;
    /**
     * Пароль для авторизации при скачивании прайс-листа. Параметр выводится при размещении прайс-листа на сайте магазина и в случае ограничения доступа к нему. 
     * @type {string}
     * @memberof FeedDTO
     */
    password?: string;
    /**
     * Дата загрузки прайс-листа на Маркет.  Формат даты: `ДД-ММ-ГГГГ`.  Параметр выводится при размещении прайс-листа на сервере Маркета. 
     * @type {Date}
     * @memberof FeedDTO
     */
    uploadDate?: Date;
    /**
     * URL прайс-листа. Параметр выводится при размещении прайс-листа на сайте магазина. 
     * @type {string}
     * @memberof FeedDTO
     */
    url?: string;
    /**
     * 
     * @type {FeedContentDTO}
     * @memberof FeedDTO
     */
    content?: FeedContentDTO;
    /**
     * 
     * @type {FeedDownloadDTO}
     * @memberof FeedDTO
     */
    download?: FeedDownloadDTO;
    /**
     * 
     * @type {FeedPlacementDTO}
     * @memberof FeedDTO
     */
    placement?: FeedPlacementDTO;
    /**
     * 
     * @type {FeedPublicationDTO}
     * @memberof FeedDTO
     */
    publication?: FeedPublicationDTO;
}

export function FeedDTOFromJSON(json: any): FeedDTO {
    return {
        'id': !exists(json, 'id') ? undefined : json['id'],
        'login': !exists(json, 'login') ? undefined : json['login'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'password': !exists(json, 'password') ? undefined : json['password'],
        'uploadDate': !exists(json, 'uploadDate') ? undefined : new Date(json['uploadDate']),
        'url': !exists(json, 'url') ? undefined : json['url'],
        'content': !exists(json, 'content') ? undefined : FeedContentDTOFromJSON(json['content']),
        'download': !exists(json, 'download') ? undefined : FeedDownloadDTOFromJSON(json['download']),
        'placement': !exists(json, 'placement') ? undefined : FeedPlacementDTOFromJSON(json['placement']),
        'publication': !exists(json, 'publication') ? undefined : FeedPublicationDTOFromJSON(json['publication']),
    };
}

export function FeedDTOToJSON(value?: FeedDTO): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'id': value.id,
        'login': value.login,
        'name': value.name,
        'password': value.password,
        'uploadDate': value.uploadDate === undefined ? undefined : value.uploadDate.toISOString(),
        'url': value.url,
        'content': FeedContentDTOToJSON(value.content),
        'download': FeedDownloadDTOToJSON(value.download),
        'placement': FeedPlacementDTOToJSON(value.placement),
        'publication': FeedPublicationDTOToJSON(value.publication),
    };
}


