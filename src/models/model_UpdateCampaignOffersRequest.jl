# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""UpdateCampaignOffersRequest
Запрос на обновление предложений товаров магазина.

    UpdateCampaignOffersRequest(;
        offers=nothing,
    )

    - offers::Vector{UpdateCampaignOfferDTO} : Параметры размещения товаров в заданном магазине.
"""
Base.@kwdef mutable struct UpdateCampaignOffersRequest <: OpenAPI.APIModel
    offers::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{UpdateCampaignOfferDTO} }

    function UpdateCampaignOffersRequest(offers, )
        OpenAPI.validate_property(UpdateCampaignOffersRequest, Symbol("offers"), offers)
        return new(offers, )
    end
end # type UpdateCampaignOffersRequest

const _property_types_UpdateCampaignOffersRequest = Dict{Symbol,String}(Symbol("offers")=>"Vector{UpdateCampaignOfferDTO}", )
OpenAPI.property_type(::Type{ UpdateCampaignOffersRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_UpdateCampaignOffersRequest[name]))}

function check_required(o::UpdateCampaignOffersRequest)
    o.offers === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ UpdateCampaignOffersRequest }, name::Symbol, val)
    if name === Symbol("offers")
        OpenAPI.validate_param(name, "UpdateCampaignOffersRequest", :maxItems, val, 500)
        OpenAPI.validate_param(name, "UpdateCampaignOffersRequest", :minItems, val, 1)
    end
end
