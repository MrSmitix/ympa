# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""OrderStatusChangeDTO
Заказ.

    OrderStatusChangeDTO(;
        status=nothing,
        substatus=nothing,
        delivery=nothing,
    )

    - status::OrderStatusType
    - substatus::OrderSubstatusType
    - delivery::OrderStatusChangeDeliveryDTO
"""
Base.@kwdef mutable struct OrderStatusChangeDTO <: OpenAPI.APIModel
    status = nothing # spec type: Union{ Nothing, OrderStatusType }
    substatus = nothing # spec type: Union{ Nothing, OrderSubstatusType }
    delivery = nothing # spec type: Union{ Nothing, OrderStatusChangeDeliveryDTO }

    function OrderStatusChangeDTO(status, substatus, delivery, )
        OpenAPI.validate_property(OrderStatusChangeDTO, Symbol("status"), status)
        OpenAPI.validate_property(OrderStatusChangeDTO, Symbol("substatus"), substatus)
        OpenAPI.validate_property(OrderStatusChangeDTO, Symbol("delivery"), delivery)
        return new(status, substatus, delivery, )
    end
end # type OrderStatusChangeDTO

const _property_types_OrderStatusChangeDTO = Dict{Symbol,String}(Symbol("status")=>"OrderStatusType", Symbol("substatus")=>"OrderSubstatusType", Symbol("delivery")=>"OrderStatusChangeDeliveryDTO", )
OpenAPI.property_type(::Type{ OrderStatusChangeDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_OrderStatusChangeDTO[name]))}

function check_required(o::OrderStatusChangeDTO)
    o.status === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ OrderStatusChangeDTO }, name::Symbol, val)
end
