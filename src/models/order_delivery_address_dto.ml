(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Order_delivery_address_dto.t : Адрес доставки.  Указывается, если `type=DELIVERY`, `type=POST` или `type=PICKUP` (адрес пункта выдачи). 
 *)

type t = {
    (* Страна.  Обязательный параметр.  *)
    country: string option [@default None];
    (* Почтовый индекс.  Указывается, если выбрана доставка почтой (`delivery type=POST`).  *)
    postcode: string option [@default None];
    (* Город или населенный пункт.  Обязательный параметр.  *)
    city: string option [@default None];
    (* Район. *)
    district: string option [@default None];
    (* Станция метро. *)
    subway: string option [@default None];
    (* Улица.  Обязательный параметр.  *)
    street: string option [@default None];
    (* Дом или владение.  Обязательный параметр.  *)
    house: string option [@default None];
    (* Корпус или строение. *)
    block: string option [@default None];
    (* Подъезд. *)
    entrance: string option [@default None];
    (* Код домофона. *)
    entryphone: string option [@default None];
    (* Этаж. *)
    floor: string option [@default None];
    (* Квартира или офис. *)
    apartment: string option [@default None];
    (* Телефон получателя заказа.  Обязательный параметр.  *)
    phone: string option [@default None];
    (* Фамилия, имя и отчество получателя заказа.  Обязательный параметр.  *)
    recipient: string option [@default None];
    gps: Gps_dto.t option [@default None];
} [@@deriving yojson { strict = false }, show ];;

(** Адрес доставки.  Указывается, если `type=DELIVERY`, `type=POST` или `type=PICKUP` (адрес пункта выдачи).  *)
let create () : t = {
    country = None;
    postcode = None;
    city = None;
    district = None;
    subway = None;
    street = None;
    house = None;
    block = None;
    entrance = None;
    entryphone = None;
    floor = None;
    apartment = None;
    phone = None;
    recipient = None;
    gps = None;
}

