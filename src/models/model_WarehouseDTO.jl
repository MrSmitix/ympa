# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""WarehouseDTO
Информация о складе.

    WarehouseDTO(;
        id=nothing,
        name=nothing,
        campaignId=nothing,
        express=nothing,
        address=nothing,
    )

    - id::Int64 : Идентификатор склада.
    - name::String : Название склада.
    - campaignId::Int64 : Идентификатор кампании в API и идентификатор магазина.
    - express::Bool : Возможна ли доставка по модели Экспресс.
    - address::WarehouseAddressDTO
"""
Base.@kwdef mutable struct WarehouseDTO <: OpenAPI.APIModel
    id::Union{Nothing, Int64} = nothing
    name::Union{Nothing, String} = nothing
    campaignId::Union{Nothing, Int64} = nothing
    express::Union{Nothing, Bool} = nothing
    address = nothing # spec type: Union{ Nothing, WarehouseAddressDTO }

    function WarehouseDTO(id, name, campaignId, express, address, )
        OpenAPI.validate_property(WarehouseDTO, Symbol("id"), id)
        OpenAPI.validate_property(WarehouseDTO, Symbol("name"), name)
        OpenAPI.validate_property(WarehouseDTO, Symbol("campaignId"), campaignId)
        OpenAPI.validate_property(WarehouseDTO, Symbol("express"), express)
        OpenAPI.validate_property(WarehouseDTO, Symbol("address"), address)
        return new(id, name, campaignId, express, address, )
    end
end # type WarehouseDTO

const _property_types_WarehouseDTO = Dict{Symbol,String}(Symbol("id")=>"Int64", Symbol("name")=>"String", Symbol("campaignId")=>"Int64", Symbol("express")=>"Bool", Symbol("address")=>"WarehouseAddressDTO", )
OpenAPI.property_type(::Type{ WarehouseDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_WarehouseDTO[name]))}

function check_required(o::WarehouseDTO)
    o.id === nothing && (return false)
    o.name === nothing && (return false)
    o.campaignId === nothing && (return false)
    o.express === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ WarehouseDTO }, name::Symbol, val)
    if name === Symbol("id")
        OpenAPI.validate_param(name, "WarehouseDTO", :format, val, "int64")
    end
    if name === Symbol("campaignId")
        OpenAPI.validate_param(name, "WarehouseDTO", :format, val, "int64")
    end
end
