# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""OrderBoxLayoutPartialCountDTO
Информация о части товара в коробке.

    OrderBoxLayoutPartialCountDTO(;
        current=nothing,
        total=nothing,
    )

    - current::Int64 : Номер части, начиная с 1.
    - total::Int64 : На сколько всего частей разделен товар.
"""
Base.@kwdef mutable struct OrderBoxLayoutPartialCountDTO <: OpenAPI.APIModel
    current::Union{Nothing, Int64} = nothing
    total::Union{Nothing, Int64} = nothing

    function OrderBoxLayoutPartialCountDTO(current, total, )
        OpenAPI.validate_property(OrderBoxLayoutPartialCountDTO, Symbol("current"), current)
        OpenAPI.validate_property(OrderBoxLayoutPartialCountDTO, Symbol("total"), total)
        return new(current, total, )
    end
end # type OrderBoxLayoutPartialCountDTO

const _property_types_OrderBoxLayoutPartialCountDTO = Dict{Symbol,String}(Symbol("current")=>"Int64", Symbol("total")=>"Int64", )
OpenAPI.property_type(::Type{ OrderBoxLayoutPartialCountDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_OrderBoxLayoutPartialCountDTO[name]))}

function check_required(o::OrderBoxLayoutPartialCountDTO)
    o.current === nothing && (return false)
    o.total === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ OrderBoxLayoutPartialCountDTO }, name::Symbol, val)
    if name === Symbol("current")
        OpenAPI.validate_param(name, "OrderBoxLayoutPartialCountDTO", :format, val, "int32")
    end
    if name === Symbol("current")
        OpenAPI.validate_param(name, "OrderBoxLayoutPartialCountDTO", :minimum, val, 1, false)
    end
    if name === Symbol("total")
        OpenAPI.validate_param(name, "OrderBoxLayoutPartialCountDTO", :format, val, "int32")
    end
    if name === Symbol("total")
        OpenAPI.validate_param(name, "OrderBoxLayoutPartialCountDTO", :minimum, val, 2, false)
    end
end
