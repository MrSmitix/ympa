# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""FlippingPagerDTO
Модель для пагинации.

    FlippingPagerDTO(;
        total=nothing,
        from=nothing,
        to=nothing,
        currentPage=nothing,
        pagesCount=nothing,
        pageSize=nothing,
    )

    - total::Int64 : Сколько всего найдено элементов.
    - from::Int64 : Начальный номер найденного элемента на странице.
    - to::Int64 : Конечный номер найденного элемента на странице.
    - currentPage::Int64 : Текущая страница.
    - pagesCount::Int64 : Общее количество страниц.
    - pageSize::Int64 : Размер страницы.
"""
Base.@kwdef mutable struct FlippingPagerDTO <: OpenAPI.APIModel
    total::Union{Nothing, Int64} = nothing
    from::Union{Nothing, Int64} = nothing
    to::Union{Nothing, Int64} = nothing
    currentPage::Union{Nothing, Int64} = nothing
    pagesCount::Union{Nothing, Int64} = nothing
    pageSize::Union{Nothing, Int64} = nothing

    function FlippingPagerDTO(total, from, to, currentPage, pagesCount, pageSize, )
        OpenAPI.validate_property(FlippingPagerDTO, Symbol("total"), total)
        OpenAPI.validate_property(FlippingPagerDTO, Symbol("from"), from)
        OpenAPI.validate_property(FlippingPagerDTO, Symbol("to"), to)
        OpenAPI.validate_property(FlippingPagerDTO, Symbol("currentPage"), currentPage)
        OpenAPI.validate_property(FlippingPagerDTO, Symbol("pagesCount"), pagesCount)
        OpenAPI.validate_property(FlippingPagerDTO, Symbol("pageSize"), pageSize)
        return new(total, from, to, currentPage, pagesCount, pageSize, )
    end
end # type FlippingPagerDTO

const _property_types_FlippingPagerDTO = Dict{Symbol,String}(Symbol("total")=>"Int64", Symbol("from")=>"Int64", Symbol("to")=>"Int64", Symbol("currentPage")=>"Int64", Symbol("pagesCount")=>"Int64", Symbol("pageSize")=>"Int64", )
OpenAPI.property_type(::Type{ FlippingPagerDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_FlippingPagerDTO[name]))}

function check_required(o::FlippingPagerDTO)
    true
end

function OpenAPI.validate_property(::Type{ FlippingPagerDTO }, name::Symbol, val)
    if name === Symbol("total")
        OpenAPI.validate_param(name, "FlippingPagerDTO", :format, val, "int32")
    end
    if name === Symbol("from")
        OpenAPI.validate_param(name, "FlippingPagerDTO", :format, val, "int32")
    end
    if name === Symbol("to")
        OpenAPI.validate_param(name, "FlippingPagerDTO", :format, val, "int32")
    end
    if name === Symbol("currentPage")
        OpenAPI.validate_param(name, "FlippingPagerDTO", :format, val, "int32")
    end
    if name === Symbol("pagesCount")
        OpenAPI.validate_param(name, "FlippingPagerDTO", :format, val, "int32")
    end
    if name === Symbol("pageSize")
        OpenAPI.validate_param(name, "FlippingPagerDTO", :format, val, "int32")
    end
end
