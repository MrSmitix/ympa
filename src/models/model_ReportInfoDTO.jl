# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ReportInfoDTO
Статус генерации и ссылка на готовый отчет.

    ReportInfoDTO(;
        status=nothing,
        subStatus=nothing,
        generationRequestedAt=nothing,
        generationFinishedAt=nothing,
        file=nothing,
        estimatedGenerationTime=nothing,
    )

    - status::ReportStatusType
    - subStatus::ReportSubStatusType
    - generationRequestedAt::ZonedDateTime : Дата и время запроса на генерацию.
    - generationFinishedAt::ZonedDateTime : Дата и время завершения генерации.
    - file::String : Ссылка на готовый отчет.
    - estimatedGenerationTime::Int64 : Ожидаемая продолжительность генерации в миллисекундах.
"""
Base.@kwdef mutable struct ReportInfoDTO <: OpenAPI.APIModel
    status = nothing # spec type: Union{ Nothing, ReportStatusType }
    subStatus = nothing # spec type: Union{ Nothing, ReportSubStatusType }
    generationRequestedAt::Union{Nothing, ZonedDateTime} = nothing
    generationFinishedAt::Union{Nothing, ZonedDateTime} = nothing
    file::Union{Nothing, String} = nothing
    estimatedGenerationTime::Union{Nothing, Int64} = nothing

    function ReportInfoDTO(status, subStatus, generationRequestedAt, generationFinishedAt, file, estimatedGenerationTime, )
        OpenAPI.validate_property(ReportInfoDTO, Symbol("status"), status)
        OpenAPI.validate_property(ReportInfoDTO, Symbol("subStatus"), subStatus)
        OpenAPI.validate_property(ReportInfoDTO, Symbol("generationRequestedAt"), generationRequestedAt)
        OpenAPI.validate_property(ReportInfoDTO, Symbol("generationFinishedAt"), generationFinishedAt)
        OpenAPI.validate_property(ReportInfoDTO, Symbol("file"), file)
        OpenAPI.validate_property(ReportInfoDTO, Symbol("estimatedGenerationTime"), estimatedGenerationTime)
        return new(status, subStatus, generationRequestedAt, generationFinishedAt, file, estimatedGenerationTime, )
    end
end # type ReportInfoDTO

const _property_types_ReportInfoDTO = Dict{Symbol,String}(Symbol("status")=>"ReportStatusType", Symbol("subStatus")=>"ReportSubStatusType", Symbol("generationRequestedAt")=>"ZonedDateTime", Symbol("generationFinishedAt")=>"ZonedDateTime", Symbol("file")=>"String", Symbol("estimatedGenerationTime")=>"Int64", )
OpenAPI.property_type(::Type{ ReportInfoDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ReportInfoDTO[name]))}

function check_required(o::ReportInfoDTO)
    o.status === nothing && (return false)
    o.generationRequestedAt === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ ReportInfoDTO }, name::Symbol, val)
    if name === Symbol("generationRequestedAt")
        OpenAPI.validate_param(name, "ReportInfoDTO", :format, val, "date-time")
    end
    if name === Symbol("generationFinishedAt")
        OpenAPI.validate_param(name, "ReportInfoDTO", :format, val, "date-time")
    end
    if name === Symbol("estimatedGenerationTime")
        OpenAPI.validate_param(name, "ReportInfoDTO", :format, val, "int64")
    end
end
