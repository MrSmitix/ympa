/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// RejectedPromoOfferUpdateReasonType : Причина отклонения изменения:  * `OFFER_DOES_NOT_EXIST` — в кабинете нет товара с таким SKU.  * `OFFER_DUPLICATION` — один и тот же товар передан несколько раз.  * `OFFER_NOT_ELIGIBLE_FOR_PROMO` — товар не подходит под условия акции.  * `OFFER_PROMOS_MAX_BYTE_SIZE_EXCEEDED` — товар не добавлен в акцию по техническим причинам.  * `DEADLINE_FOR_FOCUS_PROMOS_EXCEEDED` — истек срок добавления товаров в акцию.  * `EMPTY_OLD_PRICE` — не указана зачеркнутая цена.  * `EMPTY_PROMO_PRICE` — не указана цена по акции.  * `MAX_PROMO_PRICE_EXCEEDED` — цена по акции превышает максимально возможную цену для участия в акции.  * `PROMO_PRICE_BIGGER_THAN_MAX` — цена по акции больше 95% от зачеркнутой цены.  * `PROMO_PRICE_SMALLER_THAN_MIN` — цена по акции меньше 1% от зачеркнутой цены. 
/// Причина отклонения изменения:  * `OFFER_DOES_NOT_EXIST` — в кабинете нет товара с таким SKU.  * `OFFER_DUPLICATION` — один и тот же товар передан несколько раз.  * `OFFER_NOT_ELIGIBLE_FOR_PROMO` — товар не подходит под условия акции.  * `OFFER_PROMOS_MAX_BYTE_SIZE_EXCEEDED` — товар не добавлен в акцию по техническим причинам.  * `DEADLINE_FOR_FOCUS_PROMOS_EXCEEDED` — истек срок добавления товаров в акцию.  * `EMPTY_OLD_PRICE` — не указана зачеркнутая цена.  * `EMPTY_PROMO_PRICE` — не указана цена по акции.  * `MAX_PROMO_PRICE_EXCEEDED` — цена по акции превышает максимально возможную цену для участия в акции.  * `PROMO_PRICE_BIGGER_THAN_MAX` — цена по акции больше 95% от зачеркнутой цены.  * `PROMO_PRICE_SMALLER_THAN_MIN` — цена по акции меньше 1% от зачеркнутой цены. 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RejectedPromoOfferUpdateReasonType {
    #[serde(rename = "OFFER_DOES_NOT_EXIST")]
    OfferDoesNotExist,
    #[serde(rename = "OFFER_DUPLICATION")]
    OfferDuplication,
    #[serde(rename = "OFFER_NOT_ELIGIBLE_FOR_PROMO")]
    OfferNotEligibleForPromo,
    #[serde(rename = "OFFER_PROMOS_MAX_BYTE_SIZE_EXCEEDED")]
    OfferPromosMaxByteSizeExceeded,
    #[serde(rename = "DEADLINE_FOR_FOCUS_PROMOS_EXCEEDED")]
    DeadlineForFocusPromosExceeded,
    #[serde(rename = "EMPTY_OLD_PRICE")]
    EmptyOldPrice,
    #[serde(rename = "EMPTY_PROMO_PRICE")]
    EmptyPromoPrice,
    #[serde(rename = "MAX_PROMO_PRICE_EXCEEDED")]
    MaxPromoPriceExceeded,
    #[serde(rename = "PROMO_PRICE_BIGGER_THAN_MAX")]
    PromoPriceBiggerThanMax,
    #[serde(rename = "PROMO_PRICE_SMALLER_THAN_MIN")]
    PromoPriceSmallerThanMin,

}

impl std::fmt::Display for RejectedPromoOfferUpdateReasonType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::OfferDoesNotExist => write!(f, "OFFER_DOES_NOT_EXIST"),
            Self::OfferDuplication => write!(f, "OFFER_DUPLICATION"),
            Self::OfferNotEligibleForPromo => write!(f, "OFFER_NOT_ELIGIBLE_FOR_PROMO"),
            Self::OfferPromosMaxByteSizeExceeded => write!(f, "OFFER_PROMOS_MAX_BYTE_SIZE_EXCEEDED"),
            Self::DeadlineForFocusPromosExceeded => write!(f, "DEADLINE_FOR_FOCUS_PROMOS_EXCEEDED"),
            Self::EmptyOldPrice => write!(f, "EMPTY_OLD_PRICE"),
            Self::EmptyPromoPrice => write!(f, "EMPTY_PROMO_PRICE"),
            Self::MaxPromoPriceExceeded => write!(f, "MAX_PROMO_PRICE_EXCEEDED"),
            Self::PromoPriceBiggerThanMax => write!(f, "PROMO_PRICE_BIGGER_THAN_MAX"),
            Self::PromoPriceSmallerThanMin => write!(f, "PROMO_PRICE_SMALLER_THAN_MIN"),
        }
    }
}

impl Default for RejectedPromoOfferUpdateReasonType {
    fn default() -> RejectedPromoOfferUpdateReasonType {
        Self::OfferDoesNotExist
    }
}

