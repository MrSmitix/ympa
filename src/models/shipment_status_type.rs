/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ShipmentStatusType : Статус отгрузки:  * `OUTBOUND_CREATED` — формируется. * `OUTBOUND_READY_FOR_CONFIRMATION` — можно обрабатывать. * `OUTBOUND_CONFIRMED` — подтверждена и готова к отправке. * `OUTBOUND_SIGNED` — по ней подписан электронный акт приема-передачи. * `ACCEPTED` — принята в сортировочном центре или пункте приема. * `ACCEPTED_WITH_DISCREPANCIES` — принята с расхождениями. * `FINISHED` — завершена. * `ERROR` — отменена из-за ошибки. 
/// Статус отгрузки:  * `OUTBOUND_CREATED` — формируется. * `OUTBOUND_READY_FOR_CONFIRMATION` — можно обрабатывать. * `OUTBOUND_CONFIRMED` — подтверждена и готова к отправке. * `OUTBOUND_SIGNED` — по ней подписан электронный акт приема-передачи. * `ACCEPTED` — принята в сортировочном центре или пункте приема. * `ACCEPTED_WITH_DISCREPANCIES` — принята с расхождениями. * `FINISHED` — завершена. * `ERROR` — отменена из-за ошибки. 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ShipmentStatusType {
    #[serde(rename = "OUTBOUND_CREATED")]
    OutboundCreated,
    #[serde(rename = "OUTBOUND_READY_FOR_CONFIRMATION")]
    OutboundReadyForConfirmation,
    #[serde(rename = "OUTBOUND_CONFIRMED")]
    OutboundConfirmed,
    #[serde(rename = "OUTBOUND_SIGNED")]
    OutboundSigned,
    #[serde(rename = "FINISHED")]
    Finished,
    #[serde(rename = "ACCEPTED")]
    Accepted,
    #[serde(rename = "ACCEPTED_WITH_DISCREPANCIES")]
    AcceptedWithDiscrepancies,
    #[serde(rename = "ERROR")]
    Error,

}

impl std::fmt::Display for ShipmentStatusType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::OutboundCreated => write!(f, "OUTBOUND_CREATED"),
            Self::OutboundReadyForConfirmation => write!(f, "OUTBOUND_READY_FOR_CONFIRMATION"),
            Self::OutboundConfirmed => write!(f, "OUTBOUND_CONFIRMED"),
            Self::OutboundSigned => write!(f, "OUTBOUND_SIGNED"),
            Self::Finished => write!(f, "FINISHED"),
            Self::Accepted => write!(f, "ACCEPTED"),
            Self::AcceptedWithDiscrepancies => write!(f, "ACCEPTED_WITH_DISCREPANCIES"),
            Self::Error => write!(f, "ERROR"),
        }
    }
}

impl Default for ShipmentStatusType {
    fn default() -> ShipmentStatusType {
        Self::OutboundCreated
    }
}

