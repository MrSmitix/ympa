/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// OrdersStatsOrderDto : Информация о заказе.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OrdersStatsOrderDto {
    /// Идентификатор заказа.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i64>,
    /// Дата создания заказа.  Формат даты: `ГГГГ-ММ-ДД`. 
    #[serde(rename = "creationDate", skip_serializing_if = "Option::is_none")]
    pub creation_date: Option<String>,
    /// Дата и время, когда статус заказа был изменен в последний раз.  Формат даты и времени: ISO 8601. Например, `2017-11-21T00:00:00`. Часовой пояс — UTC+03:00 (Москва). 
    #[serde(rename = "statusUpdateDate", skip_serializing_if = "Option::is_none")]
    pub status_update_date: Option<String>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<models::OrderStatsStatusType>,
    /// Идентификатор заказа в информационной системе магазина.
    #[serde(rename = "partnerOrderId", skip_serializing_if = "Option::is_none")]
    pub partner_order_id: Option<String>,
    #[serde(rename = "paymentType", skip_serializing_if = "Option::is_none")]
    pub payment_type: Option<models::OrdersStatsOrderPaymentType>,
    /// Тип заказа:  * `false` — настоящий заказ покупателя.  * `true` — [тестовый](../../pushapi/concepts/sandbox.md) заказ Маркета. 
    #[serde(rename = "fake", skip_serializing_if = "Option::is_none")]
    pub fake: Option<bool>,
    #[serde(rename = "deliveryRegion", skip_serializing_if = "Option::is_none")]
    pub delivery_region: Option<Box<models::OrdersStatsDeliveryRegionDto>>,
    /// Список товаров в заказе после возможных изменений.
    #[serde(rename = "items")]
    pub items: Vec<models::OrdersStatsItemDto>,
    /// Список товаров в заказе до изменений.
    #[serde(rename = "initialItems", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub initial_items: Option<Option<Vec<models::OrdersStatsItemDto>>>,
    /// Информация о денежных переводах по заказу.
    #[serde(rename = "payments")]
    pub payments: Vec<models::OrdersStatsPaymentDto>,
    /// Информация о комиссиях за заказ.
    #[serde(rename = "commissions")]
    pub commissions: Vec<models::OrdersStatsCommissionDto>,
}

impl OrdersStatsOrderDto {
    /// Информация о заказе.
    pub fn new(items: Vec<models::OrdersStatsItemDto>, payments: Vec<models::OrdersStatsPaymentDto>, commissions: Vec<models::OrdersStatsCommissionDto>) -> OrdersStatsOrderDto {
        OrdersStatsOrderDto {
            id: None,
            creation_date: None,
            status_update_date: None,
            status: None,
            partner_order_id: None,
            payment_type: None,
            fake: None,
            delivery_region: None,
            items,
            initial_items: None,
            payments,
            commissions,
        }
    }
}

