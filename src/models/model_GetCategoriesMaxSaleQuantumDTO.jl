# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""GetCategoriesMaxSaleQuantumDTO
Категории и лимит на установку кванта и минимального количества товаров.

    GetCategoriesMaxSaleQuantumDTO(;
        results=nothing,
        errors=nothing,
    )

    - results::Vector{MaxSaleQuantumDTO} : Категории и лимит на установку кванта и минимального количества товаров.
    - errors::Vector{CategoryErrorDTO} : Ошибки, которые появились из-за переданных категорий.
"""
Base.@kwdef mutable struct GetCategoriesMaxSaleQuantumDTO <: OpenAPI.APIModel
    results::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{MaxSaleQuantumDTO} }
    errors::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CategoryErrorDTO} }

    function GetCategoriesMaxSaleQuantumDTO(results, errors, )
        OpenAPI.validate_property(GetCategoriesMaxSaleQuantumDTO, Symbol("results"), results)
        OpenAPI.validate_property(GetCategoriesMaxSaleQuantumDTO, Symbol("errors"), errors)
        return new(results, errors, )
    end
end # type GetCategoriesMaxSaleQuantumDTO

const _property_types_GetCategoriesMaxSaleQuantumDTO = Dict{Symbol,String}(Symbol("results")=>"Vector{MaxSaleQuantumDTO}", Symbol("errors")=>"Vector{CategoryErrorDTO}", )
OpenAPI.property_type(::Type{ GetCategoriesMaxSaleQuantumDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_GetCategoriesMaxSaleQuantumDTO[name]))}

function check_required(o::GetCategoriesMaxSaleQuantumDTO)
    o.results === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ GetCategoriesMaxSaleQuantumDTO }, name::Symbol, val)
end
