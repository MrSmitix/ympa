# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""GoodsFeedbackListDTO
Список отзывов о товарах. 

    GoodsFeedbackListDTO(;
        feedbacks=nothing,
        paging=nothing,
    )

    - feedbacks::Vector{GoodsFeedbackDTO} : Список отзывов.
    - paging::ForwardScrollingPagerDTO
"""
Base.@kwdef mutable struct GoodsFeedbackListDTO <: OpenAPI.APIModel
    feedbacks::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{GoodsFeedbackDTO} }
    paging = nothing # spec type: Union{ Nothing, ForwardScrollingPagerDTO }

    function GoodsFeedbackListDTO(feedbacks, paging, )
        OpenAPI.validate_property(GoodsFeedbackListDTO, Symbol("feedbacks"), feedbacks)
        OpenAPI.validate_property(GoodsFeedbackListDTO, Symbol("paging"), paging)
        return new(feedbacks, paging, )
    end
end # type GoodsFeedbackListDTO

const _property_types_GoodsFeedbackListDTO = Dict{Symbol,String}(Symbol("feedbacks")=>"Vector{GoodsFeedbackDTO}", Symbol("paging")=>"ForwardScrollingPagerDTO", )
OpenAPI.property_type(::Type{ GoodsFeedbackListDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_GoodsFeedbackListDTO[name]))}

function check_required(o::GoodsFeedbackListDTO)
    o.feedbacks === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ GoodsFeedbackListDTO }, name::Symbol, val)
end
