# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""FeedParameterDTO
Параметр прайс-листа.

    FeedParameterDTO(;
        deleted=nothing,
        name=nothing,
        values=nothing,
    )

    - deleted::Bool : Удалить ли значение параметра.  Возможное значение: * &#x60;true&#x60; — удалить значение параметра.  Используется вместе с параметром &#x60;name&#x60;. 
    - name::String : Название параметра.  Возможное значение: - &#x60;reparseIntervalMinutes&#x60; — период скачивания прайс-листа. Маркет будет скачивать прайс-лист через количество минут, указанное в параметре &#x60;value&#x60;. Например, при &#x60;value&#x3D;1440&#x60;, Маркет будет скачивать прайс-лист один раз в сутки.  {% note alert %}  Несмотря на установленное значение, Маркет скачает прайс-лист один раз в сутки.  {% endnote %}  Обязательный параметр. 
    - values::Vector{Int64} : Значения параметра.  Используется вместе с параметром &#x60;name&#x60;. 
"""
Base.@kwdef mutable struct FeedParameterDTO <: OpenAPI.APIModel
    deleted::Union{Nothing, Bool} = nothing
    name::Union{Nothing, String} = nothing
    values::Union{Nothing, Vector{Int64}} = nothing

    function FeedParameterDTO(deleted, name, values, )
        OpenAPI.validate_property(FeedParameterDTO, Symbol("deleted"), deleted)
        OpenAPI.validate_property(FeedParameterDTO, Symbol("name"), name)
        OpenAPI.validate_property(FeedParameterDTO, Symbol("values"), values)
        return new(deleted, name, values, )
    end
end # type FeedParameterDTO

const _property_types_FeedParameterDTO = Dict{Symbol,String}(Symbol("deleted")=>"Bool", Symbol("name")=>"String", Symbol("values")=>"Vector{Int64}", )
OpenAPI.property_type(::Type{ FeedParameterDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_FeedParameterDTO[name]))}

function check_required(o::FeedParameterDTO)
    o.name === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ FeedParameterDTO }, name::Symbol, val)
end
