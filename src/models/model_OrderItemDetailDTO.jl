# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""OrderItemDetailDTO
Детали по товару в заказе.

    OrderItemDetailDTO(;
        itemCount=nothing,
        itemStatus=nothing,
        updateDate=nothing,
    )

    - itemCount::Int64 : Количество единиц товара.
    - itemStatus::OrderItemStatusType
    - updateDate::String : Формат даты: &#x60;ДД-ММ-ГГГГ&#x60;. 
"""
Base.@kwdef mutable struct OrderItemDetailDTO <: OpenAPI.APIModel
    itemCount::Union{Nothing, Int64} = nothing
    itemStatus = nothing # spec type: Union{ Nothing, OrderItemStatusType }
    updateDate::Union{Nothing, String} = nothing

    function OrderItemDetailDTO(itemCount, itemStatus, updateDate, )
        OpenAPI.validate_property(OrderItemDetailDTO, Symbol("itemCount"), itemCount)
        OpenAPI.validate_property(OrderItemDetailDTO, Symbol("itemStatus"), itemStatus)
        OpenAPI.validate_property(OrderItemDetailDTO, Symbol("updateDate"), updateDate)
        return new(itemCount, itemStatus, updateDate, )
    end
end # type OrderItemDetailDTO

const _property_types_OrderItemDetailDTO = Dict{Symbol,String}(Symbol("itemCount")=>"Int64", Symbol("itemStatus")=>"OrderItemStatusType", Symbol("updateDate")=>"String", )
OpenAPI.property_type(::Type{ OrderItemDetailDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_OrderItemDetailDTO[name]))}

function check_required(o::OrderItemDetailDTO)
    true
end

function OpenAPI.validate_property(::Type{ OrderItemDetailDTO }, name::Symbol, val)
    if name === Symbol("itemCount")
        OpenAPI.validate_param(name, "OrderItemDetailDTO", :format, val, "int64")
    end
    if name === Symbol("updateDate")
        OpenAPI.validate_param(name, "OrderItemDetailDTO", :format, val, "date-dd-MM-yyyy")
    end
end
