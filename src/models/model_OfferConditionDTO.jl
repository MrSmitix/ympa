# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""OfferConditionDTO
Состояние уцененного товара. 

    OfferConditionDTO(;
        type=nothing,
        quality=nothing,
        reason=nothing,
    )

    - type::OfferConditionType
    - quality::OfferConditionQualityType
    - reason::String : Описание товара. Подробно опишите дефекты, насколько они заметны и где их искать. 
"""
Base.@kwdef mutable struct OfferConditionDTO <: OpenAPI.APIModel
    type = nothing # spec type: Union{ Nothing, OfferConditionType }
    quality = nothing # spec type: Union{ Nothing, OfferConditionQualityType }
    reason::Union{Nothing, String} = nothing

    function OfferConditionDTO(type, quality, reason, )
        OpenAPI.validate_property(OfferConditionDTO, Symbol("type"), type)
        OpenAPI.validate_property(OfferConditionDTO, Symbol("quality"), quality)
        OpenAPI.validate_property(OfferConditionDTO, Symbol("reason"), reason)
        return new(type, quality, reason, )
    end
end # type OfferConditionDTO

const _property_types_OfferConditionDTO = Dict{Symbol,String}(Symbol("type")=>"OfferConditionType", Symbol("quality")=>"OfferConditionQualityType", Symbol("reason")=>"String", )
OpenAPI.property_type(::Type{ OfferConditionDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_OfferConditionDTO[name]))}

function check_required(o::OfferConditionDTO)
    true
end

function OpenAPI.validate_property(::Type{ OfferConditionDTO }, name::Symbol, val)
end
