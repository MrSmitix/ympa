# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""GetOfferRecommendationsRequest

    GetOfferRecommendationsRequest(;
        offerIds=nothing,
        cofinancePriceFilter=nothing,
        recommendedCofinancePriceFilter=nothing,
        competitivenessFilter=nothing,
    )

    - offerIds::Vector{String} : Идентификаторы товаров, информация о которых нужна. ⚠️ Не используйте это поле одновременно с остальными фильтрами. Если вы хотите воспользоваться фильтрами, оставьте поле пустым.
    - cofinancePriceFilter::FieldStateType
    - recommendedCofinancePriceFilter::FieldStateType
    - competitivenessFilter::PriceCompetitivenessType
"""
Base.@kwdef mutable struct GetOfferRecommendationsRequest <: OpenAPI.APIModel
    offerIds::Union{Nothing, Vector{String}} = nothing
    cofinancePriceFilter = nothing # spec type: Union{ Nothing, FieldStateType }
    recommendedCofinancePriceFilter = nothing # spec type: Union{ Nothing, FieldStateType }
    competitivenessFilter = nothing # spec type: Union{ Nothing, PriceCompetitivenessType }

    function GetOfferRecommendationsRequest(offerIds, cofinancePriceFilter, recommendedCofinancePriceFilter, competitivenessFilter, )
        OpenAPI.validate_property(GetOfferRecommendationsRequest, Symbol("offerIds"), offerIds)
        OpenAPI.validate_property(GetOfferRecommendationsRequest, Symbol("cofinancePriceFilter"), cofinancePriceFilter)
        OpenAPI.validate_property(GetOfferRecommendationsRequest, Symbol("recommendedCofinancePriceFilter"), recommendedCofinancePriceFilter)
        OpenAPI.validate_property(GetOfferRecommendationsRequest, Symbol("competitivenessFilter"), competitivenessFilter)
        return new(offerIds, cofinancePriceFilter, recommendedCofinancePriceFilter, competitivenessFilter, )
    end
end # type GetOfferRecommendationsRequest

const _property_types_GetOfferRecommendationsRequest = Dict{Symbol,String}(Symbol("offerIds")=>"Vector{String}", Symbol("cofinancePriceFilter")=>"FieldStateType", Symbol("recommendedCofinancePriceFilter")=>"FieldStateType", Symbol("competitivenessFilter")=>"PriceCompetitivenessType", )
OpenAPI.property_type(::Type{ GetOfferRecommendationsRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_GetOfferRecommendationsRequest[name]))}

function check_required(o::GetOfferRecommendationsRequest)
    true
end

function OpenAPI.validate_property(::Type{ GetOfferRecommendationsRequest }, name::Symbol, val)
end
