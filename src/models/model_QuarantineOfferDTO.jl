# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""QuarantineOfferDTO
Товар в карантине.

    QuarantineOfferDTO(;
        offerId=nothing,
        currentPrice=nothing,
        lastValidPrice=nothing,
        verdicts=nothing,
    )

    - offerId::String : Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
    - currentPrice::BasePriceDTO
    - lastValidPrice::BasePriceDTO
    - verdicts::Vector{PriceQuarantineVerdictDTO} : Причины попадания товара в карантин.
"""
Base.@kwdef mutable struct QuarantineOfferDTO <: OpenAPI.APIModel
    offerId::Union{Nothing, String} = nothing
    currentPrice = nothing # spec type: Union{ Nothing, BasePriceDTO }
    lastValidPrice = nothing # spec type: Union{ Nothing, BasePriceDTO }
    verdicts::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{PriceQuarantineVerdictDTO} }

    function QuarantineOfferDTO(offerId, currentPrice, lastValidPrice, verdicts, )
        OpenAPI.validate_property(QuarantineOfferDTO, Symbol("offerId"), offerId)
        OpenAPI.validate_property(QuarantineOfferDTO, Symbol("currentPrice"), currentPrice)
        OpenAPI.validate_property(QuarantineOfferDTO, Symbol("lastValidPrice"), lastValidPrice)
        OpenAPI.validate_property(QuarantineOfferDTO, Symbol("verdicts"), verdicts)
        return new(offerId, currentPrice, lastValidPrice, verdicts, )
    end
end # type QuarantineOfferDTO

const _property_types_QuarantineOfferDTO = Dict{Symbol,String}(Symbol("offerId")=>"String", Symbol("currentPrice")=>"BasePriceDTO", Symbol("lastValidPrice")=>"BasePriceDTO", Symbol("verdicts")=>"Vector{PriceQuarantineVerdictDTO}", )
OpenAPI.property_type(::Type{ QuarantineOfferDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_QuarantineOfferDTO[name]))}

function check_required(o::QuarantineOfferDTO)
    true
end

function OpenAPI.validate_property(::Type{ QuarantineOfferDTO }, name::Symbol, val)
    if name === Symbol("offerId")
        OpenAPI.validate_param(name, "QuarantineOfferDTO", :maxLength, val, 255)
        OpenAPI.validate_param(name, "QuarantineOfferDTO", :minLength, val, 1)
        OpenAPI.validate_param(name, "QuarantineOfferDTO", :pattern, val, r"^[^\x00-\x08\x0A-\x1f\x7f]{1,255}$")
    end
end
