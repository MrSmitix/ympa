/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// FeedbackDeliveryType : Способ покупки, указанный в отзыве:  * `DELIVERY` — доставка. * `PICKUP` — самовывоз. * `INSTORE` — в магазине. 
/// Способ покупки, указанный в отзыве:  * `DELIVERY` — доставка. * `PICKUP` — самовывоз. * `INSTORE` — в магазине. 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum FeedbackDeliveryType {
    #[serde(rename = "DELIVERY")]
    Delivery,
    #[serde(rename = "PICKUP")]
    Pickup,
    #[serde(rename = "INSTORE")]
    Instore,

}

impl std::fmt::Display for FeedbackDeliveryType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Delivery => write!(f, "DELIVERY"),
            Self::Pickup => write!(f, "PICKUP"),
            Self::Instore => write!(f, "INSTORE"),
        }
    }
}

impl Default for FeedbackDeliveryType {
    fn default() -> FeedbackDeliveryType {
        Self::Delivery
    }
}

