/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// OfferType : Особый тип товара:  * `MEDICINE` — лекарства. * `BOOK` — бумажные и электронные книги. * `AUDIOBOOK` — аудиокниги. * `ARTIST_TITLE` — музыкальная и видеопродукция. * `ON_DEMAND` — товары на заказ.  {% note info \"Если ваш товар — книга\" %}  Укажите год издания в характеристиках товара. [Подробнее о параметре](../../reference/business-assortment/updateOfferMappings.md#offerparamdto)  {% endnote %} 
/// Особый тип товара:  * `MEDICINE` — лекарства. * `BOOK` — бумажные и электронные книги. * `AUDIOBOOK` — аудиокниги. * `ARTIST_TITLE` — музыкальная и видеопродукция. * `ON_DEMAND` — товары на заказ.  {% note info \"Если ваш товар — книга\" %}  Укажите год издания в характеристиках товара. [Подробнее о параметре](../../reference/business-assortment/updateOfferMappings.md#offerparamdto)  {% endnote %} 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum OfferType {
    #[serde(rename = "DEFAULT")]
    Default,
    #[serde(rename = "MEDICINE")]
    Medicine,
    #[serde(rename = "BOOK")]
    Book,
    #[serde(rename = "AUDIOBOOK")]
    Audiobook,
    #[serde(rename = "ARTIST_TITLE")]
    ArtistTitle,
    #[serde(rename = "ON_DEMAND")]
    OnDemand,

}

impl std::fmt::Display for OfferType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Default => write!(f, "DEFAULT"),
            Self::Medicine => write!(f, "MEDICINE"),
            Self::Book => write!(f, "BOOK"),
            Self::Audiobook => write!(f, "AUDIOBOOK"),
            Self::ArtistTitle => write!(f, "ARTIST_TITLE"),
            Self::OnDemand => write!(f, "ON_DEMAND"),
        }
    }
}

impl Default for OfferType {
    fn default() -> OfferType {
        Self::Default
    }
}

