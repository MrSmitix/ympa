/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PriceCompetitivenessType : Привлекательность цены:  * `OPTIMAL` — привлекательная. * `AVERAGE` — умеренная. * `LOW` — непривлекательная. 
/// Привлекательность цены:  * `OPTIMAL` — привлекательная. * `AVERAGE` — умеренная. * `LOW` — непривлекательная. 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PriceCompetitivenessType {
    #[serde(rename = "OPTIMAL")]
    Optimal,
    #[serde(rename = "AVERAGE")]
    Average,
    #[serde(rename = "LOW")]
    Low,

}

impl std::fmt::Display for PriceCompetitivenessType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Optimal => write!(f, "OPTIMAL"),
            Self::Average => write!(f, "AVERAGE"),
            Self::Low => write!(f, "LOW"),
        }
    }
}

impl Default for PriceCompetitivenessType {
    fn default() -> PriceCompetitivenessType {
        Self::Optimal
    }
}

