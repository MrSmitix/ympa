// tslint:disable
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    PaymentFrequencyType,
    PaymentFrequencyTypeFromJSON,
    PaymentFrequencyTypeToJSON,
    SellingProgramType,
    SellingProgramTypeFromJSON,
    SellingProgramTypeToJSON,
} from './';

/**
 * Параметры для расчета стоимости услуг.
 * @export
 * @interface CalculateTariffsParametersDTO
 */
export interface CalculateTariffsParametersDTO  {
    /**
     * Идентификатор кампании. У пользователя, который выполняет запрос, должен быть доступ к этой кампании.  Используйте параметр `campaignId`, если уже завершили подключение магазина на Маркете. Иначе вернется пустой список.  Обязательный параметр, если не указан параметр `sellingProgram`. Совместное использование параметров приведет к ошибке. 
     * @type {number}
     * @memberof CalculateTariffsParametersDTO
     */
    campaignId?: number;
    /**
     * 
     * @type {SellingProgramType}
     * @memberof CalculateTariffsParametersDTO
     */
    sellingProgram?: SellingProgramType;
    /**
     * 
     * @type {PaymentFrequencyType}
     * @memberof CalculateTariffsParametersDTO
     */
    frequency?: PaymentFrequencyType;
}

export function CalculateTariffsParametersDTOFromJSON(json: any): CalculateTariffsParametersDTO {
    return {
        'campaignId': !exists(json, 'campaignId') ? undefined : json['campaignId'],
        'sellingProgram': !exists(json, 'sellingProgram') ? undefined : SellingProgramTypeFromJSON(json['sellingProgram']),
        'frequency': !exists(json, 'frequency') ? undefined : PaymentFrequencyTypeFromJSON(json['frequency']),
    };
}

export function CalculateTariffsParametersDTOToJSON(value?: CalculateTariffsParametersDTO): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'campaignId': value.campaignId,
        'sellingProgram': SellingProgramTypeToJSON(value.sellingProgram),
        'frequency': PaymentFrequencyTypeToJSON(value.frequency),
    };
}



