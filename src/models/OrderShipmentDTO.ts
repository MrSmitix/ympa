// tslint:disable
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    OrderParcelBoxDTO,
    OrderParcelBoxDTOFromJSON,
    OrderParcelBoxDTOToJSON,
    OrderTrackDTO,
    OrderTrackDTOFromJSON,
    OrderTrackDTOToJSON,
} from './';

/**
 * Список посылок.  В параметре может указываться несколько посылок. 
 * @export
 * @interface OrderShipmentDTO
 */
export interface OrderShipmentDTO  {
    /**
     * Идентификатор посылки, присвоенный Маркетом.
     * @type {number}
     * @memberof OrderShipmentDTO
     */
    id?: number;
    /**
     * Формат даты: `ДД-ММ-ГГГГ`. 
     * @type {string}
     * @memberof OrderShipmentDTO
     */
    shipmentDate?: string;
    /**
     * **Только для модели Экспресс**  Время, к которому магазин должен упаковать заказ и перевести его в статус `READY_TO_SHIP`. После смены статуса за заказом приедет курьер.  Поле может появиться не сразу. Запрашивайте информацию о заказе в течении 5–10 минут, пока оно не вернется.  Формат времени: 24-часовой, `ЧЧ:ММ`.  Если заказ сделан организацией, параметр не возвращается до согласования даты доставки. 
     * @type {string}
     * @memberof OrderShipmentDTO
     */
    shipmentTime?: string;
    /**
     * **Только для модели DBS**  Информация для отслеживания перемещений посылки. 
     * @type {Array<OrderTrackDTO>}
     * @memberof OrderShipmentDTO
     */
    tracks?: Array<OrderTrackDTO>;
    /**
     * Список грузовых мест.
     * @type {Array<OrderParcelBoxDTO>}
     * @memberof OrderShipmentDTO
     */
    boxes?: Array<OrderParcelBoxDTO>;
}

export function OrderShipmentDTOFromJSON(json: any): OrderShipmentDTO {
    return {
        'id': !exists(json, 'id') ? undefined : json['id'],
        'shipmentDate': !exists(json, 'shipmentDate') ? undefined : json['shipmentDate'],
        'shipmentTime': !exists(json, 'shipmentTime') ? undefined : json['shipmentTime'],
        'tracks': !exists(json, 'tracks') ? undefined : (json['tracks'] as Array<any>).map(OrderTrackDTOFromJSON),
        'boxes': !exists(json, 'boxes') ? undefined : (json['boxes'] as Array<any>).map(OrderParcelBoxDTOFromJSON),
    };
}

export function OrderShipmentDTOToJSON(value?: OrderShipmentDTO): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'id': value.id,
        'shipmentDate': value.shipmentDate,
        'shipmentTime': value.shipmentTime,
        'tracks': value.tracks === undefined ? undefined : (value.tracks as Array<any>).map(OrderTrackDTOToJSON),
        'boxes': value.boxes === undefined ? undefined : (value.boxes as Array<any>).map(OrderParcelBoxDTOToJSON),
    };
}


