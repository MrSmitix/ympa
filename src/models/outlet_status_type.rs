/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// OutletStatusType : Статус точки продаж.  Возможные значения:  * `AT_MODERATION` — проверяется. * `FAILED` — не прошла проверку и отклонена модератором. * `MODERATED` — проверена и одобрена. * `NONMODERATED` — новая точка, нуждается в проверке. 
/// Статус точки продаж.  Возможные значения:  * `AT_MODERATION` — проверяется. * `FAILED` — не прошла проверку и отклонена модератором. * `MODERATED` — проверена и одобрена. * `NONMODERATED` — новая точка, нуждается в проверке. 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum OutletStatusType {
    #[serde(rename = "AT_MODERATION")]
    AtModeration,
    #[serde(rename = "FAILED")]
    Failed,
    #[serde(rename = "MODERATED")]
    Moderated,
    #[serde(rename = "NONMODERATED")]
    Nonmoderated,
    #[serde(rename = "UNKNOWN")]
    Unknown,

}

impl std::fmt::Display for OutletStatusType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::AtModeration => write!(f, "AT_MODERATION"),
            Self::Failed => write!(f, "FAILED"),
            Self::Moderated => write!(f, "MODERATED"),
            Self::Nonmoderated => write!(f, "NONMODERATED"),
            Self::Unknown => write!(f, "UNKNOWN"),
        }
    }
}

impl Default for OutletStatusType {
    fn default() -> OutletStatusType {
        Self::AtModeration
    }
}

