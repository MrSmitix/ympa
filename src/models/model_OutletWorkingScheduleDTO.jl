# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""OutletWorkingScheduleDTO
Список режимов работы точки продаж. 

    OutletWorkingScheduleDTO(;
        workInHoliday=nothing,
        scheduleItems=nothing,
    )

    - workInHoliday::Bool : Признак, работает ли точка продаж в дни государственных праздников.  Возможные значения:  * &#x60;false&#x60; — точка продаж не работает в дни государственных праздников. * &#x60;true&#x60; — точка продаж работает в дни государственных праздников. 
    - scheduleItems::Vector{OutletWorkingScheduleItemDTO} : Список расписаний работы точки продаж. 
"""
Base.@kwdef mutable struct OutletWorkingScheduleDTO <: OpenAPI.APIModel
    workInHoliday::Union{Nothing, Bool} = nothing
    scheduleItems::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{OutletWorkingScheduleItemDTO} }

    function OutletWorkingScheduleDTO(workInHoliday, scheduleItems, )
        OpenAPI.validate_property(OutletWorkingScheduleDTO, Symbol("workInHoliday"), workInHoliday)
        OpenAPI.validate_property(OutletWorkingScheduleDTO, Symbol("scheduleItems"), scheduleItems)
        return new(workInHoliday, scheduleItems, )
    end
end # type OutletWorkingScheduleDTO

const _property_types_OutletWorkingScheduleDTO = Dict{Symbol,String}(Symbol("workInHoliday")=>"Bool", Symbol("scheduleItems")=>"Vector{OutletWorkingScheduleItemDTO}", )
OpenAPI.property_type(::Type{ OutletWorkingScheduleDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_OutletWorkingScheduleDTO[name]))}

function check_required(o::OutletWorkingScheduleDTO)
    o.scheduleItems === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ OutletWorkingScheduleDTO }, name::Symbol, val)
    if name === Symbol("scheduleItems")
        OpenAPI.validate_param(name, "OutletWorkingScheduleDTO", :minItems, val, 1)
    end
end
