// tslint:disable
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    GoodsStatsWarehouseDTO,
    GoodsStatsWarehouseDTOFromJSON,
    GoodsStatsWarehouseDTOToJSON,
    GoodsStatsWeightDimensionsDTO,
    GoodsStatsWeightDimensionsDTOFromJSON,
    GoodsStatsWeightDimensionsDTOToJSON,
    TariffDTO,
    TariffDTOFromJSON,
    TariffDTOToJSON,
} from './';

/**
 * Информация о товаре.
 * @export
 * @interface GoodsStatsGoodsDTO
 */
export interface GoodsStatsGoodsDTO  {
    /**
     * Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
     * @type {string}
     * @memberof GoodsStatsGoodsDTO
     */
    shopSku?: string;
    /**
     * SKU на Маркете.
     * @type {number}
     * @memberof GoodsStatsGoodsDTO
     */
    marketSku?: number;
    /**
     * Название товара.
     * @type {string}
     * @memberof GoodsStatsGoodsDTO
     */
    name?: string;
    /**
     * Цена на товар в валюте, которая установлена [в кабинете продавца на Маркете](https://partner.market.yandex.ru/).
     * @type {number}
     * @memberof GoodsStatsGoodsDTO
     */
    price?: number;
    /**
     * Идентификатор категории товара на Маркете.
     * @type {number}
     * @memberof GoodsStatsGoodsDTO
     */
    categoryId?: number;
    /**
     * Название категории товара на Маркете.
     * @type {string}
     * @memberof GoodsStatsGoodsDTO
     */
    categoryName?: string;
    /**
     * 
     * @type {GoodsStatsWeightDimensionsDTO}
     * @memberof GoodsStatsGoodsDTO
     */
    weightDimensions?: GoodsStatsWeightDimensionsDTO;
    /**
     * Информация о складах, на которых хранится товар.  Параметр не приходит, если товара нет ни на одном складе. 
     * @type {Array<GoodsStatsWarehouseDTO>}
     * @memberof GoodsStatsGoodsDTO
     */
    warehouses?: Array<GoodsStatsWarehouseDTO>;
    /**
     * Информация о тарифах, по которым нужно заплатить за услуги Маркета.  По некоторым услугам могут возвращаться несколько разных стоимостей. Например, в модели FBS стоимость услуги `SORTING` (обработка заказа) зависит от способа отгрузки и количества заказов в отгрузке. Подробнее о тарифах на услуги читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/introduction/rates/models/). 
     * @type {Array<TariffDTO>}
     * @memberof GoodsStatsGoodsDTO
     */
    tariffs?: Array<TariffDTO>;
    /**
     * Ссылки (URL) изображений товара в хорошем качестве.
     * @type {Array<string>}
     * @memberof GoodsStatsGoodsDTO
     */
    pictures?: Array<string>;
}

export function GoodsStatsGoodsDTOFromJSON(json: any): GoodsStatsGoodsDTO {
    return {
        'shopSku': !exists(json, 'shopSku') ? undefined : json['shopSku'],
        'marketSku': !exists(json, 'marketSku') ? undefined : json['marketSku'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'price': !exists(json, 'price') ? undefined : json['price'],
        'categoryId': !exists(json, 'categoryId') ? undefined : json['categoryId'],
        'categoryName': !exists(json, 'categoryName') ? undefined : json['categoryName'],
        'weightDimensions': !exists(json, 'weightDimensions') ? undefined : GoodsStatsWeightDimensionsDTOFromJSON(json['weightDimensions']),
        'warehouses': !exists(json, 'warehouses') ? undefined : (json['warehouses'] as Array<any>).map(GoodsStatsWarehouseDTOFromJSON),
        'tariffs': !exists(json, 'tariffs') ? undefined : (json['tariffs'] as Array<any>).map(TariffDTOFromJSON),
        'pictures': !exists(json, 'pictures') ? undefined : json['pictures'],
    };
}

export function GoodsStatsGoodsDTOToJSON(value?: GoodsStatsGoodsDTO): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'shopSku': value.shopSku,
        'marketSku': value.marketSku,
        'name': value.name,
        'price': value.price,
        'categoryId': value.categoryId,
        'categoryName': value.categoryName,
        'weightDimensions': GoodsStatsWeightDimensionsDTOToJSON(value.weightDimensions),
        'warehouses': value.warehouses === undefined ? undefined : (value.warehouses as Array<any>).map(GoodsStatsWarehouseDTOToJSON),
        'tariffs': value.tariffs === undefined ? undefined : (value.tariffs as Array<any>).map(TariffDTOToJSON),
        'pictures': value.pictures,
    };
}


