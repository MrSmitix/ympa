/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PlacementType : Модель, по которой работает магазин:  * `FBS` — FBS или Экспресс. * `FBY` — FBY. * `DBS` — DBS. 
/// Модель, по которой работает магазин:  * `FBS` — FBS или Экспресс. * `FBY` — FBY. * `DBS` — DBS. 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PlacementType {
    #[serde(rename = "FBS")]
    Fbs,
    #[serde(rename = "FBY")]
    Fby,
    #[serde(rename = "DBS")]
    Dbs,

}

impl std::fmt::Display for PlacementType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Fbs => write!(f, "FBS"),
            Self::Fby => write!(f, "FBY"),
            Self::Dbs => write!(f, "DBS"),
        }
    }
}

impl Default for PlacementType {
    fn default() -> PlacementType {
        Self::Fbs
    }
}

