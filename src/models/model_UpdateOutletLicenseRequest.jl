# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""UpdateOutletLicenseRequest
Запрос на создание или изменение лицензий для точек продаж.

    UpdateOutletLicenseRequest(;
        licenses=nothing,
    )

    - licenses::Vector{OutletLicenseDTO} : Список лицензий. Обязательный параметр, должен содержать информацию хотя бы об одной лицензии. 
"""
Base.@kwdef mutable struct UpdateOutletLicenseRequest <: OpenAPI.APIModel
    licenses::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{OutletLicenseDTO} }

    function UpdateOutletLicenseRequest(licenses, )
        OpenAPI.validate_property(UpdateOutletLicenseRequest, Symbol("licenses"), licenses)
        return new(licenses, )
    end
end # type UpdateOutletLicenseRequest

const _property_types_UpdateOutletLicenseRequest = Dict{Symbol,String}(Symbol("licenses")=>"Vector{OutletLicenseDTO}", )
OpenAPI.property_type(::Type{ UpdateOutletLicenseRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_UpdateOutletLicenseRequest[name]))}

function check_required(o::UpdateOutletLicenseRequest)
    o.licenses === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ UpdateOutletLicenseRequest }, name::Symbol, val)
    if name === Symbol("licenses")
        OpenAPI.validate_param(name, "UpdateOutletLicenseRequest", :minItems, val, 1)
    end
end
