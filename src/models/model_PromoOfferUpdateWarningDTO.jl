# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""PromoOfferUpdateWarningDTO
Предупреждение, которое появилось при добавлении товара в акцию или изменении его цен.

    PromoOfferUpdateWarningDTO(;
        code=nothing,
        campaignIds=nothing,
    )

    - code::PromoOfferUpdateWarningCodeType
    - campaignIds::Vector{Int64} : Идентификаторы магазинов в кабинете, для которых получены предупреждения.  Не возвращается, если предупреждения действуют для всех магазинов в кабинете. 
"""
Base.@kwdef mutable struct PromoOfferUpdateWarningDTO <: OpenAPI.APIModel
    code = nothing # spec type: Union{ Nothing, PromoOfferUpdateWarningCodeType }
    campaignIds::Union{Nothing, Vector{Int64}} = nothing

    function PromoOfferUpdateWarningDTO(code, campaignIds, )
        OpenAPI.validate_property(PromoOfferUpdateWarningDTO, Symbol("code"), code)
        OpenAPI.validate_property(PromoOfferUpdateWarningDTO, Symbol("campaignIds"), campaignIds)
        return new(code, campaignIds, )
    end
end # type PromoOfferUpdateWarningDTO

const _property_types_PromoOfferUpdateWarningDTO = Dict{Symbol,String}(Symbol("code")=>"PromoOfferUpdateWarningCodeType", Symbol("campaignIds")=>"Vector{Int64}", )
OpenAPI.property_type(::Type{ PromoOfferUpdateWarningDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PromoOfferUpdateWarningDTO[name]))}

function check_required(o::PromoOfferUpdateWarningDTO)
    o.code === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ PromoOfferUpdateWarningDTO }, name::Symbol, val)
end
