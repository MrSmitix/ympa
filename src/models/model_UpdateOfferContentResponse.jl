# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""UpdateOfferContentResponse
Описывает проблемы, которые появились при сохранении товара.

    UpdateOfferContentResponse(;
        status=nothing,
        results=nothing,
    )

    - status::ApiResponseStatusType
    - results::Vector{UpdateOfferContentResultDTO} : Ошибки и предупреждения, которые появились при обработке переданных значений. Каждый элемент списка соответствует одному товару.  Если ошибок и предупреждений нет, поле не передается. 
"""
Base.@kwdef mutable struct UpdateOfferContentResponse <: OpenAPI.APIModel
    status = nothing # spec type: Union{ Nothing, ApiResponseStatusType }
    results::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{UpdateOfferContentResultDTO} }

    function UpdateOfferContentResponse(status, results, )
        OpenAPI.validate_property(UpdateOfferContentResponse, Symbol("status"), status)
        OpenAPI.validate_property(UpdateOfferContentResponse, Symbol("results"), results)
        return new(status, results, )
    end
end # type UpdateOfferContentResponse

const _property_types_UpdateOfferContentResponse = Dict{Symbol,String}(Symbol("status")=>"ApiResponseStatusType", Symbol("results")=>"Vector{UpdateOfferContentResultDTO}", )
OpenAPI.property_type(::Type{ UpdateOfferContentResponse }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_UpdateOfferContentResponse[name]))}

function check_required(o::UpdateOfferContentResponse)
    true
end

function OpenAPI.validate_property(::Type{ UpdateOfferContentResponse }, name::Symbol, val)
end
