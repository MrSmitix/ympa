# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""CampaignSettingsScheduleDTO
Расписание работы службы доставки в своем регионе.

    CampaignSettingsScheduleDTO(;
        availableOnHolidays=nothing,
        customHolidays=nothing,
        customWorkingDays=nothing,
        period=nothing,
        totalHolidays=nothing,
        weeklyHolidays=nothing,
    )

    - availableOnHolidays::Bool : Признак работы службы доставки в государственные праздники. Возможные значения. * &#x60;false&#x60; — служба доставки не работает в праздничные дни. * &#x60;true&#x60; — служба доставки работает в праздничные дни. 
    - customHolidays::Vector{String} : Список дней, в которые служба доставки не работает. Дни магазин указал в кабинете продавца на Маркете.
    - customWorkingDays::Vector{String} : Список выходных и праздничных дней, в которые служба доставки работает. Дни магазин указал в кабинете продавца на Маркете.
    - period::CampaignSettingsTimePeriodDTO
    - totalHolidays::Vector{String} : Итоговый список нерабочих дней службы доставки. Список рассчитывается с учетом выходных, нерабочих дней и государственных праздников. Информацию по ним магазин указывает в кабинете продавца на Маркете.
    - weeklyHolidays::Vector{Int64} : Список выходных дней недели и государственных праздников.
"""
Base.@kwdef mutable struct CampaignSettingsScheduleDTO <: OpenAPI.APIModel
    availableOnHolidays::Union{Nothing, Bool} = nothing
    customHolidays::Union{Nothing, Vector{String}} = nothing
    customWorkingDays::Union{Nothing, Vector{String}} = nothing
    period = nothing # spec type: Union{ Nothing, CampaignSettingsTimePeriodDTO }
    totalHolidays::Union{Nothing, Vector{String}} = nothing
    weeklyHolidays::Union{Nothing, Vector{Int64}} = nothing

    function CampaignSettingsScheduleDTO(availableOnHolidays, customHolidays, customWorkingDays, period, totalHolidays, weeklyHolidays, )
        OpenAPI.validate_property(CampaignSettingsScheduleDTO, Symbol("availableOnHolidays"), availableOnHolidays)
        OpenAPI.validate_property(CampaignSettingsScheduleDTO, Symbol("customHolidays"), customHolidays)
        OpenAPI.validate_property(CampaignSettingsScheduleDTO, Symbol("customWorkingDays"), customWorkingDays)
        OpenAPI.validate_property(CampaignSettingsScheduleDTO, Symbol("period"), period)
        OpenAPI.validate_property(CampaignSettingsScheduleDTO, Symbol("totalHolidays"), totalHolidays)
        OpenAPI.validate_property(CampaignSettingsScheduleDTO, Symbol("weeklyHolidays"), weeklyHolidays)
        return new(availableOnHolidays, customHolidays, customWorkingDays, period, totalHolidays, weeklyHolidays, )
    end
end # type CampaignSettingsScheduleDTO

const _property_types_CampaignSettingsScheduleDTO = Dict{Symbol,String}(Symbol("availableOnHolidays")=>"Bool", Symbol("customHolidays")=>"Vector{String}", Symbol("customWorkingDays")=>"Vector{String}", Symbol("period")=>"CampaignSettingsTimePeriodDTO", Symbol("totalHolidays")=>"Vector{String}", Symbol("weeklyHolidays")=>"Vector{Int64}", )
OpenAPI.property_type(::Type{ CampaignSettingsScheduleDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CampaignSettingsScheduleDTO[name]))}

function check_required(o::CampaignSettingsScheduleDTO)
    o.customHolidays === nothing && (return false)
    o.customWorkingDays === nothing && (return false)
    o.totalHolidays === nothing && (return false)
    o.weeklyHolidays === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ CampaignSettingsScheduleDTO }, name::Symbol, val)
end
