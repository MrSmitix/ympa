# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""GetCategoriesMaxSaleQuantumRequest
Список категорий, для которых нужно вернуть лимит на установку кванта и минимального количества товаров. 

    GetCategoriesMaxSaleQuantumRequest(;
        marketCategoryIds=nothing,
    )

    - marketCategoryIds::Vector{Int64} : Идентификаторы листовых категории на Маркете — тех, у которых нет дочерних категорий.
"""
Base.@kwdef mutable struct GetCategoriesMaxSaleQuantumRequest <: OpenAPI.APIModel
    marketCategoryIds::Union{Nothing, Vector{Int64}} = nothing

    function GetCategoriesMaxSaleQuantumRequest(marketCategoryIds, )
        OpenAPI.validate_property(GetCategoriesMaxSaleQuantumRequest, Symbol("marketCategoryIds"), marketCategoryIds)
        return new(marketCategoryIds, )
    end
end # type GetCategoriesMaxSaleQuantumRequest

const _property_types_GetCategoriesMaxSaleQuantumRequest = Dict{Symbol,String}(Symbol("marketCategoryIds")=>"Vector{Int64}", )
OpenAPI.property_type(::Type{ GetCategoriesMaxSaleQuantumRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_GetCategoriesMaxSaleQuantumRequest[name]))}

function check_required(o::GetCategoriesMaxSaleQuantumRequest)
    o.marketCategoryIds === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ GetCategoriesMaxSaleQuantumRequest }, name::Symbol, val)
    if name === Symbol("marketCategoryIds")
        OpenAPI.validate_param(name, "GetCategoriesMaxSaleQuantumRequest", :maxItems, val, 1500)
        OpenAPI.validate_param(name, "GetCategoriesMaxSaleQuantumRequest", :minItems, val, 1)
        OpenAPI.validate_param(name, "GetCategoriesMaxSaleQuantumRequest", :uniqueItems, val, true)
    end
end
