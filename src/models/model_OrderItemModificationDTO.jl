# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""OrderItemModificationDTO
Список товаров в заказе.  Если магазин не передал информацию о товаре во входных данных, он будет удален из заказа.  Обязательный параметр. 

    OrderItemModificationDTO(;
        id=nothing,
        count=nothing,
        instances=nothing,
    )

    - id::Int64 : Идентификатор товара в рамках заказа.  Получить идентификатор можно с помощью ресурсов [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).  Обязательный параметр. 
    - count::Int64 : Новое количество товара.
    - instances::Vector{BriefOrderItemInstanceDTO} : Информация о маркировке единиц товара.  Передавайте в запросе все единицы товара, который подлежит маркировке.  Обязательный параметр, если в заказе есть товары, подлежащие маркировке [в системе «Честный ЗНАК»](https://честныйзнак.рф/). 
"""
Base.@kwdef mutable struct OrderItemModificationDTO <: OpenAPI.APIModel
    id::Union{Nothing, Int64} = nothing
    count::Union{Nothing, Int64} = nothing
    instances::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{BriefOrderItemInstanceDTO} }

    function OrderItemModificationDTO(id, count, instances, )
        OpenAPI.validate_property(OrderItemModificationDTO, Symbol("id"), id)
        OpenAPI.validate_property(OrderItemModificationDTO, Symbol("count"), count)
        OpenAPI.validate_property(OrderItemModificationDTO, Symbol("instances"), instances)
        return new(id, count, instances, )
    end
end # type OrderItemModificationDTO

const _property_types_OrderItemModificationDTO = Dict{Symbol,String}(Symbol("id")=>"Int64", Symbol("count")=>"Int64", Symbol("instances")=>"Vector{BriefOrderItemInstanceDTO}", )
OpenAPI.property_type(::Type{ OrderItemModificationDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_OrderItemModificationDTO[name]))}

function check_required(o::OrderItemModificationDTO)
    o.id === nothing && (return false)
    o.count === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ OrderItemModificationDTO }, name::Symbol, val)
    if name === Symbol("id")
        OpenAPI.validate_param(name, "OrderItemModificationDTO", :format, val, "int64")
    end
    if name === Symbol("count")
        OpenAPI.validate_param(name, "OrderItemModificationDTO", :format, val, "int32")
    end
    if name === Symbol("count")
        OpenAPI.validate_param(name, "OrderItemModificationDTO", :minimum, val, 0, false)
    end
end
