// tslint:disable
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    OfferCampaignStatusType,
    OfferCampaignStatusTypeFromJSON,
    OfferCampaignStatusTypeToJSON,
} from './';

/**
 * Фильтрации товаров  В запросе можно указать либо фильтр offerIds, либо любые другие фильтры товаров. Совместное использование фильтра offerIds с другими фильтрациями приведет к ошибке. 
 * @export
 * @interface GetCampaignOffersRequest
 */
export interface GetCampaignOffersRequest  {
    /**
     * Идентификаторы товаров, информация о которых нужна.  {% note warning \"Такой список возвращается только целиком\" %}  Не используйте это поле одновременно с фильтрами по статусам карточек, категориям, брендам или тегам. Если вы хотите воспользоваться фильтрами, оставьте поле пустым.  Если вы запрашиваете информацию по конкретным SKU, не заполняйте:  * `page_token` * `limit`  {% endnote %}    
     * @type {Array<string>}
     * @memberof GetCampaignOffersRequest
     */
    offerIds?: Array<string>;
    /**
     * Фильтр по статусам товаров. 
     * @type {Array<OfferCampaignStatusType>}
     * @memberof GetCampaignOffersRequest
     */
    statuses?: Array<OfferCampaignStatusType>;
    /**
     * Фильтр по категориям на Маркете.
     * @type {Array<number>}
     * @memberof GetCampaignOffersRequest
     */
    categoryIds?: Array<number>;
    /**
     * Фильтр по брендам.
     * @type {Array<string>}
     * @memberof GetCampaignOffersRequest
     */
    vendorNames?: Array<string>;
    /**
     * Фильтр по тегам.
     * @type {Array<string>}
     * @memberof GetCampaignOffersRequest
     */
    tags?: Array<string>;
}

export function GetCampaignOffersRequestFromJSON(json: any): GetCampaignOffersRequest {
    return {
        'offerIds': !exists(json, 'offerIds') ? undefined : json['offerIds'],
        'statuses': !exists(json, 'statuses') ? undefined : (json['statuses'] as Array<any>).map(OfferCampaignStatusTypeFromJSON),
        'categoryIds': !exists(json, 'categoryIds') ? undefined : json['categoryIds'],
        'vendorNames': !exists(json, 'vendorNames') ? undefined : json['vendorNames'],
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
    };
}

export function GetCampaignOffersRequestToJSON(value?: GetCampaignOffersRequest): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'offerIds': value.offerIds,
        'statuses': value.statuses === undefined ? undefined : (value.statuses as Array<any>).map(OfferCampaignStatusTypeToJSON),
        'categoryIds': value.categoryIds,
        'vendorNames': value.vendorNames,
        'tags': value.tags,
    };
}


