# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ReturnDTO
Возврат заказа.

    ReturnDTO(;
        id=nothing,
        orderId=nothing,
        creationDate=nothing,
        updateDate=nothing,
        refundStatus=nothing,
        logisticPickupPoint=nothing,
        shipmentRecipientType=nothing,
        shipmentStatus=nothing,
        refundAmount=nothing,
        items=nothing,
        returnType=nothing,
        fastReturn=nothing,
    )

    - id::Int64 : Идентификатор возврата.
    - orderId::Int64 : Номер заказа.
    - creationDate::ZonedDateTime : Дата создания возврата клиентом.
    - updateDate::ZonedDateTime : Дата обновления возврата.
    - refundStatus::RefundStatusType
    - logisticPickupPoint::LogisticPickupPointDTO
    - shipmentRecipientType::RecipientType
    - shipmentStatus::ReturnShipmentStatusType
    - refundAmount::Int64 : Сумма возврата.
    - items::Vector{ReturnItemDTO} : Список товаров в возврате.
    - returnType::ReturnType
    - fastReturn::Bool : Используется ли опция **Быстрый возврат денег за дешевый брак**. 
"""
Base.@kwdef mutable struct ReturnDTO <: OpenAPI.APIModel
    id::Union{Nothing, Int64} = nothing
    orderId::Union{Nothing, Int64} = nothing
    creationDate::Union{Nothing, ZonedDateTime} = nothing
    updateDate::Union{Nothing, ZonedDateTime} = nothing
    refundStatus = nothing # spec type: Union{ Nothing, RefundStatusType }
    logisticPickupPoint = nothing # spec type: Union{ Nothing, LogisticPickupPointDTO }
    shipmentRecipientType = nothing # spec type: Union{ Nothing, RecipientType }
    shipmentStatus = nothing # spec type: Union{ Nothing, ReturnShipmentStatusType }
    refundAmount::Union{Nothing, Int64} = nothing
    items::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{ReturnItemDTO} }
    returnType = nothing # spec type: Union{ Nothing, ReturnType }
    fastReturn::Union{Nothing, Bool} = nothing

    function ReturnDTO(id, orderId, creationDate, updateDate, refundStatus, logisticPickupPoint, shipmentRecipientType, shipmentStatus, refundAmount, items, returnType, fastReturn, )
        OpenAPI.validate_property(ReturnDTO, Symbol("id"), id)
        OpenAPI.validate_property(ReturnDTO, Symbol("orderId"), orderId)
        OpenAPI.validate_property(ReturnDTO, Symbol("creationDate"), creationDate)
        OpenAPI.validate_property(ReturnDTO, Symbol("updateDate"), updateDate)
        OpenAPI.validate_property(ReturnDTO, Symbol("refundStatus"), refundStatus)
        OpenAPI.validate_property(ReturnDTO, Symbol("logisticPickupPoint"), logisticPickupPoint)
        OpenAPI.validate_property(ReturnDTO, Symbol("shipmentRecipientType"), shipmentRecipientType)
        OpenAPI.validate_property(ReturnDTO, Symbol("shipmentStatus"), shipmentStatus)
        OpenAPI.validate_property(ReturnDTO, Symbol("refundAmount"), refundAmount)
        OpenAPI.validate_property(ReturnDTO, Symbol("items"), items)
        OpenAPI.validate_property(ReturnDTO, Symbol("returnType"), returnType)
        OpenAPI.validate_property(ReturnDTO, Symbol("fastReturn"), fastReturn)
        return new(id, orderId, creationDate, updateDate, refundStatus, logisticPickupPoint, shipmentRecipientType, shipmentStatus, refundAmount, items, returnType, fastReturn, )
    end
end # type ReturnDTO

const _property_types_ReturnDTO = Dict{Symbol,String}(Symbol("id")=>"Int64", Symbol("orderId")=>"Int64", Symbol("creationDate")=>"ZonedDateTime", Symbol("updateDate")=>"ZonedDateTime", Symbol("refundStatus")=>"RefundStatusType", Symbol("logisticPickupPoint")=>"LogisticPickupPointDTO", Symbol("shipmentRecipientType")=>"RecipientType", Symbol("shipmentStatus")=>"ReturnShipmentStatusType", Symbol("refundAmount")=>"Int64", Symbol("items")=>"Vector{ReturnItemDTO}", Symbol("returnType")=>"ReturnType", Symbol("fastReturn")=>"Bool", )
OpenAPI.property_type(::Type{ ReturnDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ReturnDTO[name]))}

function check_required(o::ReturnDTO)
    o.items === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ ReturnDTO }, name::Symbol, val)
    if name === Symbol("id")
        OpenAPI.validate_param(name, "ReturnDTO", :format, val, "int64")
    end
    if name === Symbol("orderId")
        OpenAPI.validate_param(name, "ReturnDTO", :format, val, "int64")
    end
    if name === Symbol("creationDate")
        OpenAPI.validate_param(name, "ReturnDTO", :format, val, "date-time")
    end
    if name === Symbol("updateDate")
        OpenAPI.validate_param(name, "ReturnDTO", :format, val, "date-time")
    end
    if name === Symbol("refundAmount")
        OpenAPI.validate_param(name, "ReturnDTO", :format, val, "int64")
    end
end
