# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""GetPriceWithVatDTO
Цена с указанием ставки НДС и времени последнего обновления.

    GetPriceWithVatDTO(;
        value=nothing,
        discountBase=nothing,
        currencyId=nothing,
        vat=nothing,
        updatedAt=nothing,
    )

    - value::Float64 : Цена на товар.
    - discountBase::Float64 : Цена на товар без скидки.  Число должно быть целым. Вы можете указать цену со скидкой от 5 до 99%.  Передавайте этот параметр при каждом обновлении цены, если предоставляете скидку на товар. 
    - currencyId::CurrencyType
    - vat::Int64 : Идентификатор ставки НДС, применяемой для товара:  * &#x60;2&#x60; — 10%. * &#x60;5&#x60; — 0%. * &#x60;6&#x60; — не облагается НДС. * &#x60;7&#x60; — 20%.  Если параметр не указан, используется ставка НДС, установленная в кабинете. 
    - updatedAt::ZonedDateTime : Время последнего обновления.
"""
Base.@kwdef mutable struct GetPriceWithVatDTO <: OpenAPI.APIModel
    value::Union{Nothing, Float64} = nothing
    discountBase::Union{Nothing, Float64} = nothing
    currencyId = nothing # spec type: Union{ Nothing, CurrencyType }
    vat::Union{Nothing, Int64} = nothing
    updatedAt::Union{Nothing, ZonedDateTime} = nothing

    function GetPriceWithVatDTO(value, discountBase, currencyId, vat, updatedAt, )
        OpenAPI.validate_property(GetPriceWithVatDTO, Symbol("value"), value)
        OpenAPI.validate_property(GetPriceWithVatDTO, Symbol("discountBase"), discountBase)
        OpenAPI.validate_property(GetPriceWithVatDTO, Symbol("currencyId"), currencyId)
        OpenAPI.validate_property(GetPriceWithVatDTO, Symbol("vat"), vat)
        OpenAPI.validate_property(GetPriceWithVatDTO, Symbol("updatedAt"), updatedAt)
        return new(value, discountBase, currencyId, vat, updatedAt, )
    end
end # type GetPriceWithVatDTO

const _property_types_GetPriceWithVatDTO = Dict{Symbol,String}(Symbol("value")=>"Float64", Symbol("discountBase")=>"Float64", Symbol("currencyId")=>"CurrencyType", Symbol("vat")=>"Int64", Symbol("updatedAt")=>"ZonedDateTime", )
OpenAPI.property_type(::Type{ GetPriceWithVatDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_GetPriceWithVatDTO[name]))}

function check_required(o::GetPriceWithVatDTO)
    o.updatedAt === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ GetPriceWithVatDTO }, name::Symbol, val)
    if name === Symbol("vat")
        OpenAPI.validate_param(name, "GetPriceWithVatDTO", :format, val, "int32")
    end
    if name === Symbol("updatedAt")
        OpenAPI.validate_param(name, "GetPriceWithVatDTO", :format, val, "date-time")
    end
end
