# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""OfferPriceResponseDTO
Информация об установленной цене на товар.

    OfferPriceResponseDTO(;
        id=nothing,
        price=nothing,
        marketSku=nothing,
        updatedAt=nothing,
    )

    - id::String : Идентификатор предложения из прайс-листа.
    - price::PriceDTO
    - marketSku::Int64 : SKU на Маркете.
    - updatedAt::ZonedDateTime : Дата и время последнего обновления цены на товар.
"""
Base.@kwdef mutable struct OfferPriceResponseDTO <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    price = nothing # spec type: Union{ Nothing, PriceDTO }
    marketSku::Union{Nothing, Int64} = nothing
    updatedAt::Union{Nothing, ZonedDateTime} = nothing

    function OfferPriceResponseDTO(id, price, marketSku, updatedAt, )
        OpenAPI.validate_property(OfferPriceResponseDTO, Symbol("id"), id)
        OpenAPI.validate_property(OfferPriceResponseDTO, Symbol("price"), price)
        OpenAPI.validate_property(OfferPriceResponseDTO, Symbol("marketSku"), marketSku)
        OpenAPI.validate_property(OfferPriceResponseDTO, Symbol("updatedAt"), updatedAt)
        return new(id, price, marketSku, updatedAt, )
    end
end # type OfferPriceResponseDTO

const _property_types_OfferPriceResponseDTO = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("price")=>"PriceDTO", Symbol("marketSku")=>"Int64", Symbol("updatedAt")=>"ZonedDateTime", )
OpenAPI.property_type(::Type{ OfferPriceResponseDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_OfferPriceResponseDTO[name]))}

function check_required(o::OfferPriceResponseDTO)
    true
end

function OpenAPI.validate_property(::Type{ OfferPriceResponseDTO }, name::Symbol, val)
    if name === Symbol("marketSku")
        OpenAPI.validate_param(name, "OfferPriceResponseDTO", :format, val, "int64")
    end
    if name === Symbol("updatedAt")
        OpenAPI.validate_param(name, "OfferPriceResponseDTO", :format, val, "date-time")
    end
end
