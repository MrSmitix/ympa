# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""OrderShipmentDTO
Список посылок.  В параметре может указываться несколько посылок. 

    OrderShipmentDTO(;
        id=nothing,
        shipmentDate=nothing,
        shipmentTime=nothing,
        tracks=nothing,
        boxes=nothing,
    )

    - id::Int64 : Идентификатор посылки, присвоенный Маркетом.
    - shipmentDate::String : Формат даты: &#x60;ДД-ММ-ГГГГ&#x60;. 
    - shipmentTime::String : **Только для модели Экспресс**  Время, к которому магазин должен упаковать заказ и перевести его в статус &#x60;READY_TO_SHIP&#x60;. После смены статуса за заказом приедет курьер.  Поле может появиться не сразу. Запрашивайте информацию о заказе в течении 5–10 минут, пока оно не вернется.  Формат времени: 24-часовой, &#x60;ЧЧ:ММ&#x60;.  Если заказ сделан организацией, параметр не возвращается до согласования даты доставки. 
    - tracks::Vector{OrderTrackDTO} : **Только для модели DBS**  Информация для отслеживания перемещений посылки. 
    - boxes::Vector{OrderParcelBoxDTO} : Список грузовых мест.
"""
Base.@kwdef mutable struct OrderShipmentDTO <: OpenAPI.APIModel
    id::Union{Nothing, Int64} = nothing
    shipmentDate::Union{Nothing, String} = nothing
    shipmentTime::Union{Nothing, String} = nothing
    tracks::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{OrderTrackDTO} }
    boxes::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{OrderParcelBoxDTO} }

    function OrderShipmentDTO(id, shipmentDate, shipmentTime, tracks, boxes, )
        OpenAPI.validate_property(OrderShipmentDTO, Symbol("id"), id)
        OpenAPI.validate_property(OrderShipmentDTO, Symbol("shipmentDate"), shipmentDate)
        OpenAPI.validate_property(OrderShipmentDTO, Symbol("shipmentTime"), shipmentTime)
        OpenAPI.validate_property(OrderShipmentDTO, Symbol("tracks"), tracks)
        OpenAPI.validate_property(OrderShipmentDTO, Symbol("boxes"), boxes)
        return new(id, shipmentDate, shipmentTime, tracks, boxes, )
    end
end # type OrderShipmentDTO

const _property_types_OrderShipmentDTO = Dict{Symbol,String}(Symbol("id")=>"Int64", Symbol("shipmentDate")=>"String", Symbol("shipmentTime")=>"String", Symbol("tracks")=>"Vector{OrderTrackDTO}", Symbol("boxes")=>"Vector{OrderParcelBoxDTO}", )
OpenAPI.property_type(::Type{ OrderShipmentDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_OrderShipmentDTO[name]))}

function check_required(o::OrderShipmentDTO)
    true
end

function OpenAPI.validate_property(::Type{ OrderShipmentDTO }, name::Symbol, val)
    if name === Symbol("id")
        OpenAPI.validate_param(name, "OrderShipmentDTO", :format, val, "int64")
    end
    if name === Symbol("shipmentDate")
        OpenAPI.validate_param(name, "OrderShipmentDTO", :format, val, "date-dd-MM-yyyy")
    end
end
