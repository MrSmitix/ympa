# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""GetChatInfoDTO
Информация о чатах.

    GetChatInfoDTO(;
        chatId=nothing,
        orderId=nothing,
        type=nothing,
        status=nothing,
        createdAt=nothing,
        updatedAt=nothing,
    )

    - chatId::Int64 : Идентификатор чата.
    - orderId::Int64 : Идентификатор заказа.
    - type::ChatType
    - status::ChatStatusType
    - createdAt::ZonedDateTime : Дата и время создания чата.  Формат даты: ISO 8601 со смещением относительно UTC. Например, &#x60;2017-11-21T00:00:00+03:00&#x60;. 
    - updatedAt::ZonedDateTime : Дата и время последнего сообщения в чате.
"""
Base.@kwdef mutable struct GetChatInfoDTO <: OpenAPI.APIModel
    chatId::Union{Nothing, Int64} = nothing
    orderId::Union{Nothing, Int64} = nothing
    type = nothing # spec type: Union{ Nothing, ChatType }
    status = nothing # spec type: Union{ Nothing, ChatStatusType }
    createdAt::Union{Nothing, ZonedDateTime} = nothing
    updatedAt::Union{Nothing, ZonedDateTime} = nothing

    function GetChatInfoDTO(chatId, orderId, type, status, createdAt, updatedAt, )
        OpenAPI.validate_property(GetChatInfoDTO, Symbol("chatId"), chatId)
        OpenAPI.validate_property(GetChatInfoDTO, Symbol("orderId"), orderId)
        OpenAPI.validate_property(GetChatInfoDTO, Symbol("type"), type)
        OpenAPI.validate_property(GetChatInfoDTO, Symbol("status"), status)
        OpenAPI.validate_property(GetChatInfoDTO, Symbol("createdAt"), createdAt)
        OpenAPI.validate_property(GetChatInfoDTO, Symbol("updatedAt"), updatedAt)
        return new(chatId, orderId, type, status, createdAt, updatedAt, )
    end
end # type GetChatInfoDTO

const _property_types_GetChatInfoDTO = Dict{Symbol,String}(Symbol("chatId")=>"Int64", Symbol("orderId")=>"Int64", Symbol("type")=>"ChatType", Symbol("status")=>"ChatStatusType", Symbol("createdAt")=>"ZonedDateTime", Symbol("updatedAt")=>"ZonedDateTime", )
OpenAPI.property_type(::Type{ GetChatInfoDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_GetChatInfoDTO[name]))}

function check_required(o::GetChatInfoDTO)
    o.chatId === nothing && (return false)
    o.orderId === nothing && (return false)
    o.type === nothing && (return false)
    o.status === nothing && (return false)
    o.createdAt === nothing && (return false)
    o.updatedAt === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ GetChatInfoDTO }, name::Symbol, val)
    if name === Symbol("chatId")
        OpenAPI.validate_param(name, "GetChatInfoDTO", :format, val, "int64")
    end
    if name === Symbol("orderId")
        OpenAPI.validate_param(name, "GetChatInfoDTO", :format, val, "int64")
    end
    if name === Symbol("createdAt")
        OpenAPI.validate_param(name, "GetChatInfoDTO", :format, val, "date-time")
    end
    if name === Symbol("updatedAt")
        OpenAPI.validate_param(name, "GetChatInfoDTO", :format, val, "date-time")
    end
end
