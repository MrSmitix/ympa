# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""CalculateTariffsOfferInfoDTO
Стоимость услуг.

    CalculateTariffsOfferInfoDTO(;
        offer=nothing,
        tariffs=nothing,
    )

    - offer::CalculateTariffsOfferDTO
    - tariffs::Vector{CalculatedTariffDTO} : Список услуг и их стоимость.  По некоторым услугам могут возвращаться несколько разных стоимостей. Например, в модели FBS стоимость услуги &#x60;SORTING&#x60; (обработка заказа) зависит от способа отгрузки и количества заказов в отгрузке. Подробнее о тарифах на услуги читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/introduction/rates/models/). 
"""
Base.@kwdef mutable struct CalculateTariffsOfferInfoDTO <: OpenAPI.APIModel
    offer = nothing # spec type: Union{ Nothing, CalculateTariffsOfferDTO }
    tariffs::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CalculatedTariffDTO} }

    function CalculateTariffsOfferInfoDTO(offer, tariffs, )
        OpenAPI.validate_property(CalculateTariffsOfferInfoDTO, Symbol("offer"), offer)
        OpenAPI.validate_property(CalculateTariffsOfferInfoDTO, Symbol("tariffs"), tariffs)
        return new(offer, tariffs, )
    end
end # type CalculateTariffsOfferInfoDTO

const _property_types_CalculateTariffsOfferInfoDTO = Dict{Symbol,String}(Symbol("offer")=>"CalculateTariffsOfferDTO", Symbol("tariffs")=>"Vector{CalculatedTariffDTO}", )
OpenAPI.property_type(::Type{ CalculateTariffsOfferInfoDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CalculateTariffsOfferInfoDTO[name]))}

function check_required(o::CalculateTariffsOfferInfoDTO)
    o.offer === nothing && (return false)
    o.tariffs === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ CalculateTariffsOfferInfoDTO }, name::Symbol, val)
end
