# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""WarehouseOffersDTO
Информация об остатках товаров на складе.

    WarehouseOffersDTO(;
        warehouseId=nothing,
        offers=nothing,
    )

    - warehouseId::Int64 : Идентификатор склада.
    - offers::Vector{WarehouseOfferDTO} : Информация об остатках.
"""
Base.@kwdef mutable struct WarehouseOffersDTO <: OpenAPI.APIModel
    warehouseId::Union{Nothing, Int64} = nothing
    offers::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{WarehouseOfferDTO} }

    function WarehouseOffersDTO(warehouseId, offers, )
        OpenAPI.validate_property(WarehouseOffersDTO, Symbol("warehouseId"), warehouseId)
        OpenAPI.validate_property(WarehouseOffersDTO, Symbol("offers"), offers)
        return new(warehouseId, offers, )
    end
end # type WarehouseOffersDTO

const _property_types_WarehouseOffersDTO = Dict{Symbol,String}(Symbol("warehouseId")=>"Int64", Symbol("offers")=>"Vector{WarehouseOfferDTO}", )
OpenAPI.property_type(::Type{ WarehouseOffersDTO }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_WarehouseOffersDTO[name]))}

function check_required(o::WarehouseOffersDTO)
    o.warehouseId === nothing && (return false)
    o.offers === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ WarehouseOffersDTO }, name::Symbol, val)
    if name === Symbol("warehouseId")
        OpenAPI.validate_param(name, "WarehouseOffersDTO", :format, val, "int64")
    end
end
