# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""UpdateOfferMappingsResponse
Описывает проблемы, возникшие при сохранении товара.

    UpdateOfferMappingsResponse(;
        status=nothing,
        results=nothing,
    )

    - status::ApiResponseStatusType
    - results::Vector{UpdateOfferMappingResultDTO} : Ошибки и предупреждения, которые появились при обработке списка характеристик. Каждый элемент списка соответствует одному товару.  Если ошибок и предупреждений нет, поле не передается. 
"""
Base.@kwdef mutable struct UpdateOfferMappingsResponse <: OpenAPI.APIModel
    status = nothing # spec type: Union{ Nothing, ApiResponseStatusType }
    results::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{UpdateOfferMappingResultDTO} }

    function UpdateOfferMappingsResponse(status, results, )
        OpenAPI.validate_property(UpdateOfferMappingsResponse, Symbol("status"), status)
        OpenAPI.validate_property(UpdateOfferMappingsResponse, Symbol("results"), results)
        return new(status, results, )
    end
end # type UpdateOfferMappingsResponse

const _property_types_UpdateOfferMappingsResponse = Dict{Symbol,String}(Symbol("status")=>"ApiResponseStatusType", Symbol("results")=>"Vector{UpdateOfferMappingResultDTO}", )
OpenAPI.property_type(::Type{ UpdateOfferMappingsResponse }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_UpdateOfferMappingsResponse[name]))}

function check_required(o::UpdateOfferMappingsResponse)
    true
end

function OpenAPI.validate_property(::Type{ UpdateOfferMappingsResponse }, name::Symbol, val)
end
