# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""GenerateUnitedOrdersRequest
Данные, необходимые для генерации отчета. 

    GenerateUnitedOrdersRequest(;
        businessId=nothing,
        dateFrom=nothing,
        dateTo=nothing,
        campaignIds=nothing,
        promoId=nothing,
    )

    - businessId::Int64 : Идентификатор бизнеса.
    - dateFrom::Date : Начало периода, включительно.
    - dateTo::Date : Конец периода, включительно. Максимальный период — 1 год.
    - campaignIds::Vector{Int64} : Список магазинов, которые нужны в отчете.
    - promoId::String : Идентификатор акции, товары из которой нужны в отчете.
"""
Base.@kwdef mutable struct GenerateUnitedOrdersRequest <: OpenAPI.APIModel
    businessId::Union{Nothing, Int64} = nothing
    dateFrom::Union{Nothing, Date} = nothing
    dateTo::Union{Nothing, Date} = nothing
    campaignIds::Union{Nothing, Vector{Int64}} = nothing
    promoId::Union{Nothing, String} = nothing

    function GenerateUnitedOrdersRequest(businessId, dateFrom, dateTo, campaignIds, promoId, )
        OpenAPI.validate_property(GenerateUnitedOrdersRequest, Symbol("businessId"), businessId)
        OpenAPI.validate_property(GenerateUnitedOrdersRequest, Symbol("dateFrom"), dateFrom)
        OpenAPI.validate_property(GenerateUnitedOrdersRequest, Symbol("dateTo"), dateTo)
        OpenAPI.validate_property(GenerateUnitedOrdersRequest, Symbol("campaignIds"), campaignIds)
        OpenAPI.validate_property(GenerateUnitedOrdersRequest, Symbol("promoId"), promoId)
        return new(businessId, dateFrom, dateTo, campaignIds, promoId, )
    end
end # type GenerateUnitedOrdersRequest

const _property_types_GenerateUnitedOrdersRequest = Dict{Symbol,String}(Symbol("businessId")=>"Int64", Symbol("dateFrom")=>"Date", Symbol("dateTo")=>"Date", Symbol("campaignIds")=>"Vector{Int64}", Symbol("promoId")=>"String", )
OpenAPI.property_type(::Type{ GenerateUnitedOrdersRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_GenerateUnitedOrdersRequest[name]))}

function check_required(o::GenerateUnitedOrdersRequest)
    o.businessId === nothing && (return false)
    o.dateFrom === nothing && (return false)
    o.dateTo === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ GenerateUnitedOrdersRequest }, name::Symbol, val)
    if name === Symbol("businessId")
        OpenAPI.validate_param(name, "GenerateUnitedOrdersRequest", :format, val, "int64")
    end
    if name === Symbol("dateFrom")
        OpenAPI.validate_param(name, "GenerateUnitedOrdersRequest", :format, val, "date")
    end
    if name === Symbol("dateTo")
        OpenAPI.validate_param(name, "GenerateUnitedOrdersRequest", :format, val, "date")
    end
end
