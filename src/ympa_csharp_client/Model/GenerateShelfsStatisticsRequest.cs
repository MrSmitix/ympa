/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ympa_csharp_client.Client.OpenAPIDateConverter;

namespace ympa_csharp_client.Model
{
    /// <summary>
    /// Данные, необходимые для генерации отчета. 
    /// </summary>
    [DataContract(Name = "GenerateShelfsStatisticsRequest")]
    public partial class GenerateShelfsStatisticsRequest : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets AttributionType
        /// </summary>
        [DataMember(Name = "attributionType", IsRequired = true, EmitDefaultValue = true)]
        public ShelfsStatisticsAttributionType AttributionType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="GenerateShelfsStatisticsRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected GenerateShelfsStatisticsRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GenerateShelfsStatisticsRequest" /> class.
        /// </summary>
        /// <param name="businessId">Идентификатор бизнеса. (required).</param>
        /// <param name="dateFrom">Начало периода, включительно. (required).</param>
        /// <param name="dateTo">Конец периода, включительно. (required).</param>
        /// <param name="attributionType">attributionType (required).</param>
        public GenerateShelfsStatisticsRequest(long businessId = default(long), DateOnly dateFrom = default(DateOnly), DateOnly dateTo = default(DateOnly), ShelfsStatisticsAttributionType attributionType = default(ShelfsStatisticsAttributionType))
        {
            this.BusinessId = businessId;
            // to ensure "dateFrom" is required (not null)
            if (dateFrom == null)
            {
                throw new ArgumentNullException("dateFrom is a required property for GenerateShelfsStatisticsRequest and cannot be null");
            }
            this.DateFrom = dateFrom;
            // to ensure "dateTo" is required (not null)
            if (dateTo == null)
            {
                throw new ArgumentNullException("dateTo is a required property for GenerateShelfsStatisticsRequest and cannot be null");
            }
            this.DateTo = dateTo;
            this.AttributionType = attributionType;
        }

        /// <summary>
        /// Идентификатор бизнеса.
        /// </summary>
        /// <value>Идентификатор бизнеса.</value>
        [DataMember(Name = "businessId", IsRequired = true, EmitDefaultValue = true)]
        public long BusinessId { get; set; }

        /// <summary>
        /// Начало периода, включительно.
        /// </summary>
        /// <value>Начало периода, включительно.</value>
        [DataMember(Name = "dateFrom", IsRequired = true, EmitDefaultValue = true)]
        public DateOnly DateFrom { get; set; }

        /// <summary>
        /// Конец периода, включительно.
        /// </summary>
        /// <value>Конец периода, включительно.</value>
        [DataMember(Name = "dateTo", IsRequired = true, EmitDefaultValue = true)]
        public DateOnly DateTo { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GenerateShelfsStatisticsRequest {\n");
            sb.Append("  BusinessId: ").Append(BusinessId).Append("\n");
            sb.Append("  DateFrom: ").Append(DateFrom).Append("\n");
            sb.Append("  DateTo: ").Append(DateTo).Append("\n");
            sb.Append("  AttributionType: ").Append(AttributionType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
