/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ympa_csharp_client.Client.OpenAPIDateConverter;

namespace ympa_csharp_client.Model
{
    /// <summary>
    /// Цена с указанием ставки НДС и времени последнего обновления.
    /// </summary>
    [DataContract(Name = "GetPriceWithVatDTO")]
    public partial class GetPriceWithVatDTO : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets CurrencyId
        /// </summary>
        [DataMember(Name = "currencyId", EmitDefaultValue = false)]
        public CurrencyType? CurrencyId { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetPriceWithVatDTO" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected GetPriceWithVatDTO() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetPriceWithVatDTO" /> class.
        /// </summary>
        /// <param name="value">Цена на товар..</param>
        /// <param name="discountBase">Цена на товар без скидки.  Число должно быть целым. Вы можете указать цену со скидкой от 5 до 99%.  Передавайте этот параметр при каждом обновлении цены, если предоставляете скидку на товар. .</param>
        /// <param name="currencyId">currencyId.</param>
        /// <param name="vat">Идентификатор ставки НДС, применяемой для товара:  * &#x60;2&#x60; — 10%. * &#x60;5&#x60; — 0%. * &#x60;6&#x60; — не облагается НДС. * &#x60;7&#x60; — 20%.  Если параметр не указан, используется ставка НДС, установленная в кабинете. .</param>
        /// <param name="updatedAt">Время последнего обновления. (required).</param>
        public GetPriceWithVatDTO(decimal value = default(decimal), decimal discountBase = default(decimal), CurrencyType? currencyId = default(CurrencyType?), int vat = default(int), DateTime updatedAt = default(DateTime))
        {
            this.UpdatedAt = updatedAt;
            this.Value = value;
            this.DiscountBase = discountBase;
            this.CurrencyId = currencyId;
            this.Vat = vat;
        }

        /// <summary>
        /// Цена на товар.
        /// </summary>
        /// <value>Цена на товар.</value>
        [DataMember(Name = "value", EmitDefaultValue = false)]
        public decimal Value { get; set; }

        /// <summary>
        /// Цена на товар без скидки.  Число должно быть целым. Вы можете указать цену со скидкой от 5 до 99%.  Передавайте этот параметр при каждом обновлении цены, если предоставляете скидку на товар. 
        /// </summary>
        /// <value>Цена на товар без скидки.  Число должно быть целым. Вы можете указать цену со скидкой от 5 до 99%.  Передавайте этот параметр при каждом обновлении цены, если предоставляете скидку на товар. </value>
        [DataMember(Name = "discountBase", EmitDefaultValue = false)]
        public decimal DiscountBase { get; set; }

        /// <summary>
        /// Идентификатор ставки НДС, применяемой для товара:  * &#x60;2&#x60; — 10%. * &#x60;5&#x60; — 0%. * &#x60;6&#x60; — не облагается НДС. * &#x60;7&#x60; — 20%.  Если параметр не указан, используется ставка НДС, установленная в кабинете. 
        /// </summary>
        /// <value>Идентификатор ставки НДС, применяемой для товара:  * &#x60;2&#x60; — 10%. * &#x60;5&#x60; — 0%. * &#x60;6&#x60; — не облагается НДС. * &#x60;7&#x60; — 20%.  Если параметр не указан, используется ставка НДС, установленная в кабинете. </value>
        [DataMember(Name = "vat", EmitDefaultValue = false)]
        public int Vat { get; set; }

        /// <summary>
        /// Время последнего обновления.
        /// </summary>
        /// <value>Время последнего обновления.</value>
        [DataMember(Name = "updatedAt", IsRequired = true, EmitDefaultValue = true)]
        public DateTime UpdatedAt { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GetPriceWithVatDTO {\n");
            sb.Append("  Value: ").Append(Value).Append("\n");
            sb.Append("  DiscountBase: ").Append(DiscountBase).Append("\n");
            sb.Append("  CurrencyId: ").Append(CurrencyId).Append("\n");
            sb.Append("  Vat: ").Append(Vat).Append("\n");
            sb.Append("  UpdatedAt: ").Append(UpdatedAt).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
