/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ympa_csharp_client.Client.OpenAPIDateConverter;

namespace ympa_csharp_client.Model
{
    /// <summary>
    /// Cтатус возврата денег:  * &#x60;STARTED_BY_USER&#x60; — создан клиентом из личного кабинета.  * &#x60;REFUND_IN_PROGRESS&#x60; — ждет решение о возврате денег.  * &#x60;REFUNDED&#x60; — по возврату проведены все возвратные денежные транзакции.  * &#x60;FAILED&#x60; — невозможно провести возврат покупателю.  * &#x60;WAITING_FOR_DECISION&#x60; — ожидает решения.  * &#x60;DECISION_MADE&#x60; — по возврату принято решение.  * &#x60;REFUNDED_WITH_BONUSES&#x60; — возврат осуществлен баллами Плюса или промокодом.  * &#x60;REFUNDED_BY_SHOP&#x60; — магазин сделал самостоятельно возврат денег.  * &#x60;COMPLETE_WITHOUT_REFUND&#x60; — возврат денег не требуется.  * &#x60;CANCELLED&#x60; — возврат отменен. 
    /// </summary>
    /// <value>Cтатус возврата денег:  * &#x60;STARTED_BY_USER&#x60; — создан клиентом из личного кабинета.  * &#x60;REFUND_IN_PROGRESS&#x60; — ждет решение о возврате денег.  * &#x60;REFUNDED&#x60; — по возврату проведены все возвратные денежные транзакции.  * &#x60;FAILED&#x60; — невозможно провести возврат покупателю.  * &#x60;WAITING_FOR_DECISION&#x60; — ожидает решения.  * &#x60;DECISION_MADE&#x60; — по возврату принято решение.  * &#x60;REFUNDED_WITH_BONUSES&#x60; — возврат осуществлен баллами Плюса или промокодом.  * &#x60;REFUNDED_BY_SHOP&#x60; — магазин сделал самостоятельно возврат денег.  * &#x60;COMPLETE_WITHOUT_REFUND&#x60; — возврат денег не требуется.  * &#x60;CANCELLED&#x60; — возврат отменен. </value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum RefundStatusType
    {
        /// <summary>
        /// Enum STARTEDBYUSER for value: STARTED_BY_USER
        /// </summary>
        [EnumMember(Value = "STARTED_BY_USER")]
        STARTEDBYUSER = 1,

        /// <summary>
        /// Enum REFUNDINPROGRESS for value: REFUND_IN_PROGRESS
        /// </summary>
        [EnumMember(Value = "REFUND_IN_PROGRESS")]
        REFUNDINPROGRESS = 2,

        /// <summary>
        /// Enum REFUNDED for value: REFUNDED
        /// </summary>
        [EnumMember(Value = "REFUNDED")]
        REFUNDED = 3,

        /// <summary>
        /// Enum FAILED for value: FAILED
        /// </summary>
        [EnumMember(Value = "FAILED")]
        FAILED = 4,

        /// <summary>
        /// Enum WAITINGFORDECISION for value: WAITING_FOR_DECISION
        /// </summary>
        [EnumMember(Value = "WAITING_FOR_DECISION")]
        WAITINGFORDECISION = 5,

        /// <summary>
        /// Enum DECISIONMADE for value: DECISION_MADE
        /// </summary>
        [EnumMember(Value = "DECISION_MADE")]
        DECISIONMADE = 6,

        /// <summary>
        /// Enum REFUNDEDWITHBONUSES for value: REFUNDED_WITH_BONUSES
        /// </summary>
        [EnumMember(Value = "REFUNDED_WITH_BONUSES")]
        REFUNDEDWITHBONUSES = 7,

        /// <summary>
        /// Enum REFUNDEDBYSHOP for value: REFUNDED_BY_SHOP
        /// </summary>
        [EnumMember(Value = "REFUNDED_BY_SHOP")]
        REFUNDEDBYSHOP = 8,

        /// <summary>
        /// Enum CANCELLED for value: CANCELLED
        /// </summary>
        [EnumMember(Value = "CANCELLED")]
        CANCELLED = 9,

        /// <summary>
        /// Enum COMPLETEWITHOUTREFUND for value: COMPLETE_WITHOUT_REFUND
        /// </summary>
        [EnumMember(Value = "COMPLETE_WITHOUT_REFUND")]
        COMPLETEWITHOUTREFUND = 10,

        /// <summary>
        /// Enum UNKNOWN for value: UNKNOWN
        /// </summary>
        [EnumMember(Value = "UNKNOWN")]
        UNKNOWN = 11
    }

}
