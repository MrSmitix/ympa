/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ympa_csharp_client.Client.OpenAPIDateConverter;

namespace ympa_csharp_client.Model
{
    /// <summary>
    /// Способ оплаты заказа:  * Значения, если выбрана оплата при оформлении заказа (&#x60;\&quot;paymentType\&quot;: \&quot;PREPAID\&quot;&#x60;):    * &#x60;YANDEX&#x60; — банковской картой.    * &#x60;APPLE_PAY&#x60; — Apple Pay.    * &#x60;GOOGLE_PAY&#x60; — Google Pay.    * &#x60;CREDIT&#x60; — в кредит.    * &#x60;TINKOFF_CREDIT&#x60; — в кредит в Тинькофф Банке.    * &#x60;TINKOFF_INSTALLMENTS&#x60; — рассрочка в Тинькофф Банке.    * &#x60;EXTERNAL_CERTIFICATE&#x60; — подарочным сертификатом (например, из приложения «Сбербанк Онлайн»).    * &#x60;SBP&#x60; — через систему быстрых платежей.    * &#x60;B2B_ACCOUNT_PREPAYMENT&#x60; — заказ оплачивает организация.   * Значения, если выбрана оплата при получении заказа (&#x60;\&quot;paymentType\&quot;: \&quot;POSTPAID\&quot;&#x60;):    * &#x60;CARD_ON_DELIVERY&#x60; — банковской картой.    * &#x60;BOUND_CARD_ON_DELIVERY&#x60; — привязанной картой при получении.    * &#x60;CASH_ON_DELIVERY&#x60; — наличными.    * &#x60;B2B_ACCOUNT_POSTPAYMENT&#x60; — заказ оплачивает организация после доставки.  * &#x60;UNKNOWN&#x60; — неизвестный тип.  Значение по умолчанию: &#x60;CASH_ON_DELIVERY&#x60;. 
    /// </summary>
    /// <value>Способ оплаты заказа:  * Значения, если выбрана оплата при оформлении заказа (&#x60;\&quot;paymentType\&quot;: \&quot;PREPAID\&quot;&#x60;):    * &#x60;YANDEX&#x60; — банковской картой.    * &#x60;APPLE_PAY&#x60; — Apple Pay.    * &#x60;GOOGLE_PAY&#x60; — Google Pay.    * &#x60;CREDIT&#x60; — в кредит.    * &#x60;TINKOFF_CREDIT&#x60; — в кредит в Тинькофф Банке.    * &#x60;TINKOFF_INSTALLMENTS&#x60; — рассрочка в Тинькофф Банке.    * &#x60;EXTERNAL_CERTIFICATE&#x60; — подарочным сертификатом (например, из приложения «Сбербанк Онлайн»).    * &#x60;SBP&#x60; — через систему быстрых платежей.    * &#x60;B2B_ACCOUNT_PREPAYMENT&#x60; — заказ оплачивает организация.   * Значения, если выбрана оплата при получении заказа (&#x60;\&quot;paymentType\&quot;: \&quot;POSTPAID\&quot;&#x60;):    * &#x60;CARD_ON_DELIVERY&#x60; — банковской картой.    * &#x60;BOUND_CARD_ON_DELIVERY&#x60; — привязанной картой при получении.    * &#x60;CASH_ON_DELIVERY&#x60; — наличными.    * &#x60;B2B_ACCOUNT_POSTPAYMENT&#x60; — заказ оплачивает организация после доставки.  * &#x60;UNKNOWN&#x60; — неизвестный тип.  Значение по умолчанию: &#x60;CASH_ON_DELIVERY&#x60;. </value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum OrderPaymentMethodType
    {
        /// <summary>
        /// Enum CASHONDELIVERY for value: CASH_ON_DELIVERY
        /// </summary>
        [EnumMember(Value = "CASH_ON_DELIVERY")]
        CASHONDELIVERY = 1,

        /// <summary>
        /// Enum CARDONDELIVERY for value: CARD_ON_DELIVERY
        /// </summary>
        [EnumMember(Value = "CARD_ON_DELIVERY")]
        CARDONDELIVERY = 2,

        /// <summary>
        /// Enum BOUNDCARDONDELIVERY for value: BOUND_CARD_ON_DELIVERY
        /// </summary>
        [EnumMember(Value = "BOUND_CARD_ON_DELIVERY")]
        BOUNDCARDONDELIVERY = 3,

        /// <summary>
        /// Enum YANDEX for value: YANDEX
        /// </summary>
        [EnumMember(Value = "YANDEX")]
        YANDEX = 4,

        /// <summary>
        /// Enum APPLEPAY for value: APPLE_PAY
        /// </summary>
        [EnumMember(Value = "APPLE_PAY")]
        APPLEPAY = 5,

        /// <summary>
        /// Enum EXTERNALCERTIFICATE for value: EXTERNAL_CERTIFICATE
        /// </summary>
        [EnumMember(Value = "EXTERNAL_CERTIFICATE")]
        EXTERNALCERTIFICATE = 6,

        /// <summary>
        /// Enum CREDIT for value: CREDIT
        /// </summary>
        [EnumMember(Value = "CREDIT")]
        CREDIT = 7,

        /// <summary>
        /// Enum GOOGLEPAY for value: GOOGLE_PAY
        /// </summary>
        [EnumMember(Value = "GOOGLE_PAY")]
        GOOGLEPAY = 8,

        /// <summary>
        /// Enum TINKOFFCREDIT for value: TINKOFF_CREDIT
        /// </summary>
        [EnumMember(Value = "TINKOFF_CREDIT")]
        TINKOFFCREDIT = 9,

        /// <summary>
        /// Enum SBP for value: SBP
        /// </summary>
        [EnumMember(Value = "SBP")]
        SBP = 10,

        /// <summary>
        /// Enum TINKOFFINSTALLMENTS for value: TINKOFF_INSTALLMENTS
        /// </summary>
        [EnumMember(Value = "TINKOFF_INSTALLMENTS")]
        TINKOFFINSTALLMENTS = 11,

        /// <summary>
        /// Enum B2BACCOUNTPREPAYMENT for value: B2B_ACCOUNT_PREPAYMENT
        /// </summary>
        [EnumMember(Value = "B2B_ACCOUNT_PREPAYMENT")]
        B2BACCOUNTPREPAYMENT = 12,

        /// <summary>
        /// Enum B2BACCOUNTPOSTPAYMENT for value: B2B_ACCOUNT_POSTPAYMENT
        /// </summary>
        [EnumMember(Value = "B2B_ACCOUNT_POSTPAYMENT")]
        B2BACCOUNTPOSTPAYMENT = 13,

        /// <summary>
        /// Enum UNKNOWN for value: UNKNOWN
        /// </summary>
        [EnumMember(Value = "UNKNOWN")]
        UNKNOWN = 14
    }

}
