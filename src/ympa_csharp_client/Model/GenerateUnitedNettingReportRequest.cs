/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ympa_csharp_client.Client.OpenAPIDateConverter;

namespace ympa_csharp_client.Model
{
    /// <summary>
    /// Данные, необходимые для генерации отчета: идентификатор магазина, период, за который нужен отчет, а также фильтры. 
    /// </summary>
    [DataContract(Name = "GenerateUnitedNettingReportRequest")]
    public partial class GenerateUnitedNettingReportRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GenerateUnitedNettingReportRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected GenerateUnitedNettingReportRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GenerateUnitedNettingReportRequest" /> class.
        /// </summary>
        /// <param name="businessId">Идентификатор бизнеса. (required).</param>
        /// <param name="dateTimeFrom">{% note warning \&quot;\&quot; %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Начало периода, включительно. .</param>
        /// <param name="dateTimeTo">{% note warning \&quot;\&quot; %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Конец периода, включительно. Максимальный период — 1 год. .</param>
        /// <param name="dateFrom">Начало периода, включительно..</param>
        /// <param name="dateTo">Конец периода, включительно. Максимальный период — 1 год..</param>
        /// <param name="bankOrderId">Номер платежного поручения..</param>
        /// <param name="bankOrderDateTime">Дата платежного поручения..</param>
        /// <param name="placementPrograms">Список моделей, которые нужны в отчете. .</param>
        /// <param name="inns">Список ИНН, которые нужны в отчете..</param>
        /// <param name="campaignIds">Список магазинов, которые нужны в отчете..</param>
        public GenerateUnitedNettingReportRequest(long businessId = default(long), DateTime dateTimeFrom = default(DateTime), DateTime dateTimeTo = default(DateTime), DateOnly dateFrom = default(DateOnly), DateOnly dateTo = default(DateOnly), long bankOrderId = default(long), DateTime bankOrderDateTime = default(DateTime), List<PlacementType> placementPrograms = default(List<PlacementType>), List<string> inns = default(List<string>), List<long> campaignIds = default(List<long>))
        {
            this.BusinessId = businessId;
            this.DateTimeFrom = dateTimeFrom;
            this.DateTimeTo = dateTimeTo;
            this.DateFrom = dateFrom;
            this.DateTo = dateTo;
            this.BankOrderId = bankOrderId;
            this.BankOrderDateTime = bankOrderDateTime;
            this.PlacementPrograms = placementPrograms;
            this.Inns = inns;
            this.CampaignIds = campaignIds;
        }

        /// <summary>
        /// Идентификатор бизнеса.
        /// </summary>
        /// <value>Идентификатор бизнеса.</value>
        [DataMember(Name = "businessId", IsRequired = true, EmitDefaultValue = true)]
        public long BusinessId { get; set; }

        /// <summary>
        /// {% note warning \&quot;\&quot; %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Начало периода, включительно. 
        /// </summary>
        /// <value>{% note warning \&quot;\&quot; %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Начало периода, включительно. </value>
        [DataMember(Name = "dateTimeFrom", EmitDefaultValue = false)]
        public DateTime DateTimeFrom { get; set; }

        /// <summary>
        /// {% note warning \&quot;\&quot; %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Конец периода, включительно. Максимальный период — 1 год. 
        /// </summary>
        /// <value>{% note warning \&quot;\&quot; %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Конец периода, включительно. Максимальный период — 1 год. </value>
        [DataMember(Name = "dateTimeTo", EmitDefaultValue = false)]
        public DateTime DateTimeTo { get; set; }

        /// <summary>
        /// Начало периода, включительно.
        /// </summary>
        /// <value>Начало периода, включительно.</value>
        [DataMember(Name = "dateFrom", EmitDefaultValue = false)]
        public DateOnly DateFrom { get; set; }

        /// <summary>
        /// Конец периода, включительно. Максимальный период — 1 год.
        /// </summary>
        /// <value>Конец периода, включительно. Максимальный период — 1 год.</value>
        [DataMember(Name = "dateTo", EmitDefaultValue = false)]
        public DateOnly DateTo { get; set; }

        /// <summary>
        /// Номер платежного поручения.
        /// </summary>
        /// <value>Номер платежного поручения.</value>
        [DataMember(Name = "bankOrderId", EmitDefaultValue = false)]
        public long BankOrderId { get; set; }

        /// <summary>
        /// Дата платежного поручения.
        /// </summary>
        /// <value>Дата платежного поручения.</value>
        [DataMember(Name = "bankOrderDateTime", EmitDefaultValue = false)]
        public DateTime BankOrderDateTime { get; set; }

        /// <summary>
        /// Список моделей, которые нужны в отчете. 
        /// </summary>
        /// <value>Список моделей, которые нужны в отчете. </value>
        [DataMember(Name = "placementPrograms", EmitDefaultValue = true)]
        public List<PlacementType> PlacementPrograms { get; set; }

        /// <summary>
        /// Список ИНН, которые нужны в отчете.
        /// </summary>
        /// <value>Список ИНН, которые нужны в отчете.</value>
        [DataMember(Name = "inns", EmitDefaultValue = true)]
        public List<string> Inns { get; set; }

        /// <summary>
        /// Список магазинов, которые нужны в отчете.
        /// </summary>
        /// <value>Список магазинов, которые нужны в отчете.</value>
        [DataMember(Name = "campaignIds", EmitDefaultValue = true)]
        public List<long> CampaignIds { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GenerateUnitedNettingReportRequest {\n");
            sb.Append("  BusinessId: ").Append(BusinessId).Append("\n");
            sb.Append("  DateTimeFrom: ").Append(DateTimeFrom).Append("\n");
            sb.Append("  DateTimeTo: ").Append(DateTimeTo).Append("\n");
            sb.Append("  DateFrom: ").Append(DateFrom).Append("\n");
            sb.Append("  DateTo: ").Append(DateTo).Append("\n");
            sb.Append("  BankOrderId: ").Append(BankOrderId).Append("\n");
            sb.Append("  BankOrderDateTime: ").Append(BankOrderDateTime).Append("\n");
            sb.Append("  PlacementPrograms: ").Append(PlacementPrograms).Append("\n");
            sb.Append("  Inns: ").Append(Inns).Append("\n");
            sb.Append("  CampaignIds: ").Append(CampaignIds).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
