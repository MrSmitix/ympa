/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ympa_csharp_client.Client.OpenAPIDateConverter;

namespace ympa_csharp_client.Model
{
    /// <summary>
    /// Статус публикации товара:  * &#x60;READY&#x60; — товар прошел модерацию. Чтобы разместить его на Маркете, установите для него цену. * &#x60;IN_WORK&#x60; — товар проходит модерацию. Это занимает несколько дней. * &#x60;NEED_CONTENT&#x60; — для товара без SKU на Маркете &#x60;marketSku&#x60; нужно найти карточку самостоятельно (через API или кабинет продавца на Маркете) или создать ее, если товар еще не продается на Маркете. * &#x60;NEED_INFO&#x60; — товар не прошел модерацию из-за ошибок или недостающих сведений в описании товара. Информация о причинах отклонения возвращается в параметре &#x60;notes&#x60;. * &#x60;REJECTED&#x60; — товар не прошел модерацию, так как Маркет не планирует размещать подобные товары. * &#x60;SUSPENDED&#x60; — товар не прошел модерацию, так как Маркет пока не размещает подобные товары. 
    /// </summary>
    /// <value>Статус публикации товара:  * &#x60;READY&#x60; — товар прошел модерацию. Чтобы разместить его на Маркете, установите для него цену. * &#x60;IN_WORK&#x60; — товар проходит модерацию. Это занимает несколько дней. * &#x60;NEED_CONTENT&#x60; — для товара без SKU на Маркете &#x60;marketSku&#x60; нужно найти карточку самостоятельно (через API или кабинет продавца на Маркете) или создать ее, если товар еще не продается на Маркете. * &#x60;NEED_INFO&#x60; — товар не прошел модерацию из-за ошибок или недостающих сведений в описании товара. Информация о причинах отклонения возвращается в параметре &#x60;notes&#x60;. * &#x60;REJECTED&#x60; — товар не прошел модерацию, так как Маркет не планирует размещать подобные товары. * &#x60;SUSPENDED&#x60; — товар не прошел модерацию, так как Маркет пока не размещает подобные товары. </value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum OfferProcessingStatusType
    {
        /// <summary>
        /// Enum UNKNOWN for value: UNKNOWN
        /// </summary>
        [EnumMember(Value = "UNKNOWN")]
        UNKNOWN,

        /// <summary>
        /// Enum READY for value: READY
        /// </summary>
        [EnumMember(Value = "READY")]
        READY,

        /// <summary>
        /// Enum INWORK for value: IN_WORK
        /// </summary>
        [EnumMember(Value = "IN_WORK")]
        INWORK,

        /// <summary>
        /// Enum NEEDINFO for value: NEED_INFO
        /// </summary>
        [EnumMember(Value = "NEED_INFO")]
        NEEDINFO,

        /// <summary>
        /// Enum NEEDMAPPING for value: NEED_MAPPING
        /// </summary>
        [EnumMember(Value = "NEED_MAPPING")]
        NEEDMAPPING,

        /// <summary>
        /// Enum NEEDCONTENT for value: NEED_CONTENT
        /// </summary>
        [EnumMember(Value = "NEED_CONTENT")]
        NEEDCONTENT,

        /// <summary>
        /// Enum CONTENTPROCESSING for value: CONTENT_PROCESSING
        /// </summary>
        [EnumMember(Value = "CONTENT_PROCESSING")]
        CONTENTPROCESSING,

        /// <summary>
        /// Enum SUSPENDED for value: SUSPENDED
        /// </summary>
        [EnumMember(Value = "SUSPENDED")]
        SUSPENDED,

        /// <summary>
        /// Enum REJECTED for value: REJECTED
        /// </summary>
        [EnumMember(Value = "REJECTED")]
        REJECTED,

        /// <summary>
        /// Enum REVIEW for value: REVIEW
        /// </summary>
        [EnumMember(Value = "REVIEW")]
        REVIEW,

        /// <summary>
        /// Enum CREATEERROR for value: CREATE_ERROR
        /// </summary>
        [EnumMember(Value = "CREATE_ERROR")]
        CREATEERROR,

        /// <summary>
        /// Enum UPDATEERROR for value: UPDATE_ERROR
        /// </summary>
        [EnumMember(Value = "UPDATE_ERROR")]
        UPDATEERROR
    }

}
