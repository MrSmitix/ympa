/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ympa_csharp_client.Client.OpenAPIDateConverter;

namespace ympa_csharp_client.Model
{
    /// <summary>
    /// Настройки магазина.
    /// </summary>
    [DataContract(Name = "CampaignSettingsDTO")]
    public partial class CampaignSettingsDTO : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CampaignSettingsDTO" /> class.
        /// </summary>
        /// <param name="countryRegion">Идентификатор региона, в котором находится магазин..</param>
        /// <param name="shopName">Наименование магазина на Яндекс Маркете. Если наименование отсутствует, значение параметра выводится — &#x60;null&#x60;. .</param>
        /// <param name="showInContext">Признак размещения магазина на сайтах партнеров Яндекс Дистрибуции. Возможные значения: * &#x60;false&#x60; — магазин не размещен на сайтах партнеров Яндекс Дистрибуции. * &#x60;true&#x60; — магазин размещен на сайтах партнеров Яндекс Дистрибуции. .</param>
        /// <param name="showInPremium">Признак показа предложений магазина в рекламном блоке над результатами поиска (cпецразмещение). Возможные значения: * &#x60;false&#x60; — предложения не показываются в блоке cпецразмещения. * &#x60;true&#x60; — предложения показываются в блоке cпецразмещения. .</param>
        /// <param name="useOpenStat">Признак использования внешней интернет-статистики. Возможные значения: * &#x60;false&#x60; — внешняя интернет-статистика не используется. * &#x60;true&#x60; — внешняя интернет-статистика используется. .</param>
        /// <param name="localRegion">localRegion.</param>
        public CampaignSettingsDTO(long countryRegion = default(long), string shopName = default(string), bool showInContext = default(bool), bool showInPremium = default(bool), bool useOpenStat = default(bool), CampaignSettingsLocalRegionDTO localRegion = default(CampaignSettingsLocalRegionDTO))
        {
            this.CountryRegion = countryRegion;
            this.ShopName = shopName;
            this.ShowInContext = showInContext;
            this.ShowInPremium = showInPremium;
            this.UseOpenStat = useOpenStat;
            this.LocalRegion = localRegion;
        }

        /// <summary>
        /// Идентификатор региона, в котором находится магазин.
        /// </summary>
        /// <value>Идентификатор региона, в котором находится магазин.</value>
        [DataMember(Name = "countryRegion", EmitDefaultValue = false)]
        public long CountryRegion { get; set; }

        /// <summary>
        /// Наименование магазина на Яндекс Маркете. Если наименование отсутствует, значение параметра выводится — &#x60;null&#x60;. 
        /// </summary>
        /// <value>Наименование магазина на Яндекс Маркете. Если наименование отсутствует, значение параметра выводится — &#x60;null&#x60;. </value>
        [DataMember(Name = "shopName", EmitDefaultValue = false)]
        public string ShopName { get; set; }

        /// <summary>
        /// Признак размещения магазина на сайтах партнеров Яндекс Дистрибуции. Возможные значения: * &#x60;false&#x60; — магазин не размещен на сайтах партнеров Яндекс Дистрибуции. * &#x60;true&#x60; — магазин размещен на сайтах партнеров Яндекс Дистрибуции. 
        /// </summary>
        /// <value>Признак размещения магазина на сайтах партнеров Яндекс Дистрибуции. Возможные значения: * &#x60;false&#x60; — магазин не размещен на сайтах партнеров Яндекс Дистрибуции. * &#x60;true&#x60; — магазин размещен на сайтах партнеров Яндекс Дистрибуции. </value>
        [DataMember(Name = "showInContext", EmitDefaultValue = true)]
        public bool ShowInContext { get; set; }

        /// <summary>
        /// Признак показа предложений магазина в рекламном блоке над результатами поиска (cпецразмещение). Возможные значения: * &#x60;false&#x60; — предложения не показываются в блоке cпецразмещения. * &#x60;true&#x60; — предложения показываются в блоке cпецразмещения. 
        /// </summary>
        /// <value>Признак показа предложений магазина в рекламном блоке над результатами поиска (cпецразмещение). Возможные значения: * &#x60;false&#x60; — предложения не показываются в блоке cпецразмещения. * &#x60;true&#x60; — предложения показываются в блоке cпецразмещения. </value>
        [DataMember(Name = "showInPremium", EmitDefaultValue = true)]
        public bool ShowInPremium { get; set; }

        /// <summary>
        /// Признак использования внешней интернет-статистики. Возможные значения: * &#x60;false&#x60; — внешняя интернет-статистика не используется. * &#x60;true&#x60; — внешняя интернет-статистика используется. 
        /// </summary>
        /// <value>Признак использования внешней интернет-статистики. Возможные значения: * &#x60;false&#x60; — внешняя интернет-статистика не используется. * &#x60;true&#x60; — внешняя интернет-статистика используется. </value>
        [DataMember(Name = "useOpenStat", EmitDefaultValue = true)]
        public bool UseOpenStat { get; set; }

        /// <summary>
        /// Gets or Sets LocalRegion
        /// </summary>
        [DataMember(Name = "localRegion", EmitDefaultValue = false)]
        public CampaignSettingsLocalRegionDTO LocalRegion { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CampaignSettingsDTO {\n");
            sb.Append("  CountryRegion: ").Append(CountryRegion).Append("\n");
            sb.Append("  ShopName: ").Append(ShopName).Append("\n");
            sb.Append("  ShowInContext: ").Append(ShowInContext).Append("\n");
            sb.Append("  ShowInPremium: ").Append(ShowInPremium).Append("\n");
            sb.Append("  UseOpenStat: ").Append(UseOpenStat).Append("\n");
            sb.Append("  LocalRegion: ").Append(LocalRegion).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
