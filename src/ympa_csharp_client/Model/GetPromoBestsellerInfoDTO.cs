/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ympa_csharp_client.Client.OpenAPIDateConverter;

namespace ympa_csharp_client.Model
{
    /// <summary>
    /// Информация об акции «Бестселлеры Маркета».
    /// </summary>
    [DataContract(Name = "GetPromoBestsellerInfoDTO")]
    public partial class GetPromoBestsellerInfoDTO : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetPromoBestsellerInfoDTO" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected GetPromoBestsellerInfoDTO() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetPromoBestsellerInfoDTO" /> class.
        /// </summary>
        /// <param name="bestseller">Является ли акция «Бестселлером Маркета». Подробнее об этой акции читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/bestsellers). (required).</param>
        /// <param name="entryDeadline">До какой даты можно добавить товар в акцию «Бестселлеры Маркета».  Параметр возвращается только для текущих и будущих акций «Бестселлеры Маркета». .</param>
        public GetPromoBestsellerInfoDTO(bool bestseller = default(bool), DateTime entryDeadline = default(DateTime))
        {
            this.Bestseller = bestseller;
            this.EntryDeadline = entryDeadline;
        }

        /// <summary>
        /// Является ли акция «Бестселлером Маркета». Подробнее об этой акции читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/bestsellers).
        /// </summary>
        /// <value>Является ли акция «Бестселлером Маркета». Подробнее об этой акции читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/bestsellers).</value>
        [DataMember(Name = "bestseller", IsRequired = true, EmitDefaultValue = true)]
        public bool Bestseller { get; set; }

        /// <summary>
        /// До какой даты можно добавить товар в акцию «Бестселлеры Маркета».  Параметр возвращается только для текущих и будущих акций «Бестселлеры Маркета». 
        /// </summary>
        /// <value>До какой даты можно добавить товар в акцию «Бестселлеры Маркета».  Параметр возвращается только для текущих и будущих акций «Бестселлеры Маркета». </value>
        [DataMember(Name = "entryDeadline", EmitDefaultValue = false)]
        public DateTime EntryDeadline { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GetPromoBestsellerInfoDTO {\n");
            sb.Append("  Bestseller: ").Append(Bestseller).Append("\n");
            sb.Append("  EntryDeadline: ").Append(EntryDeadline).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
