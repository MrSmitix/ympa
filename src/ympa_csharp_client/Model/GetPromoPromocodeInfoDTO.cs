/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ympa_csharp_client.Client.OpenAPIDateConverter;

namespace ympa_csharp_client.Model
{
    /// <summary>
    /// Информация для типа &#x60;MARKET_PROMOCODE&#x60;.  Параметр заполняется только для этого типа акции. 
    /// </summary>
    [DataContract(Name = "GetPromoPromocodeInfoDTO")]
    public partial class GetPromoPromocodeInfoDTO : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetPromoPromocodeInfoDTO" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected GetPromoPromocodeInfoDTO() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetPromoPromocodeInfoDTO" /> class.
        /// </summary>
        /// <param name="promocode">Промокод. (required).</param>
        /// <param name="discount">Процент скидки по промокоду. (required).</param>
        public GetPromoPromocodeInfoDTO(string promocode = default(string), int discount = default(int))
        {
            // to ensure "promocode" is required (not null)
            if (promocode == null)
            {
                throw new ArgumentNullException("promocode is a required property for GetPromoPromocodeInfoDTO and cannot be null");
            }
            this.Promocode = promocode;
            this.Discount = discount;
        }

        /// <summary>
        /// Промокод.
        /// </summary>
        /// <value>Промокод.</value>
        [DataMember(Name = "promocode", IsRequired = true, EmitDefaultValue = true)]
        public string Promocode { get; set; }

        /// <summary>
        /// Процент скидки по промокоду.
        /// </summary>
        /// <value>Процент скидки по промокоду.</value>
        [DataMember(Name = "discount", IsRequired = true, EmitDefaultValue = true)]
        public int Discount { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GetPromoPromocodeInfoDTO {\n");
            sb.Append("  Promocode: ").Append(Promocode).Append("\n");
            sb.Append("  Discount: ").Append(Discount).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
