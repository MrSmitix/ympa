/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ympa_csharp_client.Client.OpenAPIDateConverter;

namespace ympa_csharp_client.Model
{
    /// <summary>
    /// Данные для печати ярлыка.
    /// </summary>
    [DataContract(Name = "OrderLabelDTO")]
    public partial class OrderLabelDTO : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderLabelDTO" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected OrderLabelDTO() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderLabelDTO" /> class.
        /// </summary>
        /// <param name="orderId">Идентификатор заказа. (required).</param>
        /// <param name="placesNumber">Количество коробок в заказе. (required).</param>
        /// <param name="url">URL файла с ярлыками‑наклейками на все коробки в заказе.  Соответствует URL, по которому выполняется запрос [GET campaigns/{campaignId}/orders/{orderId}/delivery/labels](../../reference/orders/generateOrderLabels.md).  (required).</param>
        /// <param name="parcelBoxLabels">Информация на ярлыке. (required).</param>
        public OrderLabelDTO(long orderId = default(long), int placesNumber = default(int), string url = default(string), List<ParcelBoxLabelDTO> parcelBoxLabels = default(List<ParcelBoxLabelDTO>))
        {
            this.OrderId = orderId;
            this.PlacesNumber = placesNumber;
            // to ensure "url" is required (not null)
            if (url == null)
            {
                throw new ArgumentNullException("url is a required property for OrderLabelDTO and cannot be null");
            }
            this.Url = url;
            // to ensure "parcelBoxLabels" is required (not null)
            if (parcelBoxLabels == null)
            {
                throw new ArgumentNullException("parcelBoxLabels is a required property for OrderLabelDTO and cannot be null");
            }
            this.ParcelBoxLabels = parcelBoxLabels;
        }

        /// <summary>
        /// Идентификатор заказа.
        /// </summary>
        /// <value>Идентификатор заказа.</value>
        [DataMember(Name = "orderId", IsRequired = true, EmitDefaultValue = true)]
        public long OrderId { get; set; }

        /// <summary>
        /// Количество коробок в заказе.
        /// </summary>
        /// <value>Количество коробок в заказе.</value>
        [DataMember(Name = "placesNumber", IsRequired = true, EmitDefaultValue = true)]
        public int PlacesNumber { get; set; }

        /// <summary>
        /// URL файла с ярлыками‑наклейками на все коробки в заказе.  Соответствует URL, по которому выполняется запрос [GET campaigns/{campaignId}/orders/{orderId}/delivery/labels](../../reference/orders/generateOrderLabels.md). 
        /// </summary>
        /// <value>URL файла с ярлыками‑наклейками на все коробки в заказе.  Соответствует URL, по которому выполняется запрос [GET campaigns/{campaignId}/orders/{orderId}/delivery/labels](../../reference/orders/generateOrderLabels.md). </value>
        [DataMember(Name = "url", IsRequired = true, EmitDefaultValue = true)]
        public string Url { get; set; }

        /// <summary>
        /// Информация на ярлыке.
        /// </summary>
        /// <value>Информация на ярлыке.</value>
        [DataMember(Name = "parcelBoxLabels", IsRequired = true, EmitDefaultValue = true)]
        public List<ParcelBoxLabelDTO> ParcelBoxLabels { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OrderLabelDTO {\n");
            sb.Append("  OrderId: ").Append(OrderId).Append("\n");
            sb.Append("  PlacesNumber: ").Append(PlacesNumber).Append("\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("  ParcelBoxLabels: ").Append(ParcelBoxLabels).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
