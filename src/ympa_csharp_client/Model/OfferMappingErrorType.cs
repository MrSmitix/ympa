/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ympa_csharp_client.Client.OpenAPIDateConverter;

namespace ympa_csharp_client.Model
{
    /// <summary>
    /// Типы ошибок:  * &#x60;UNKNOWN_CATEGORY&#x60; — указана неизвестная категория. * &#x60;CATEGORY_MISMATCH&#x60; — указана категория, которая не совпадает с категорией товара. * &#x60;EMPTY_MARKET_CATEGORY&#x60; — не указана категория Маркета при передаче характеристик категории. * &#x60;UNKNOWN_PARAMETER&#x60; — передана характеристика, которой нет среди характеристик категории. * &#x60;UNEXPECTED_BOOLEAN_VALUE&#x60; — вместо boolean-значения передано что-то другое. * &#x60;NUMBER_FORMAT&#x60; — передана строка, не обозначающая число, вместо числа. * &#x60;VALUE_BLANK&#x60; — передано пустое значение. * &#x60;INVALID_UNIT_ID&#x60; — передана единица измерения, недопустимая для характеристики. * &#x60;INVALID_GROUP_ID_LENGTH&#x60; — в названии превышено допустимое значение символов — 255. * &#x60;INVALID_GROUP_ID_CHARACTERS&#x60; — переданы [недопустимые символы](*ascii-code). * &#x60;INVALID_PICKER_URL&#x60; — передана ссылка на изображение для миниатюры, которой нет в переданных ссылках на изображение товара. 
    /// </summary>
    /// <value>Типы ошибок:  * &#x60;UNKNOWN_CATEGORY&#x60; — указана неизвестная категория. * &#x60;CATEGORY_MISMATCH&#x60; — указана категория, которая не совпадает с категорией товара. * &#x60;EMPTY_MARKET_CATEGORY&#x60; — не указана категория Маркета при передаче характеристик категории. * &#x60;UNKNOWN_PARAMETER&#x60; — передана характеристика, которой нет среди характеристик категории. * &#x60;UNEXPECTED_BOOLEAN_VALUE&#x60; — вместо boolean-значения передано что-то другое. * &#x60;NUMBER_FORMAT&#x60; — передана строка, не обозначающая число, вместо числа. * &#x60;VALUE_BLANK&#x60; — передано пустое значение. * &#x60;INVALID_UNIT_ID&#x60; — передана единица измерения, недопустимая для характеристики. * &#x60;INVALID_GROUP_ID_LENGTH&#x60; — в названии превышено допустимое значение символов — 255. * &#x60;INVALID_GROUP_ID_CHARACTERS&#x60; — переданы [недопустимые символы](*ascii-code). * &#x60;INVALID_PICKER_URL&#x60; — передана ссылка на изображение для миниатюры, которой нет в переданных ссылках на изображение товара. </value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum OfferMappingErrorType
    {
        /// <summary>
        /// Enum UNKNOWNCATEGORY for value: UNKNOWN_CATEGORY
        /// </summary>
        [EnumMember(Value = "UNKNOWN_CATEGORY")]
        UNKNOWNCATEGORY = 1,

        /// <summary>
        /// Enum CATEGORYMISMATCH for value: CATEGORY_MISMATCH
        /// </summary>
        [EnumMember(Value = "CATEGORY_MISMATCH")]
        CATEGORYMISMATCH = 2,

        /// <summary>
        /// Enum EMPTYMARKETCATEGORY for value: EMPTY_MARKET_CATEGORY
        /// </summary>
        [EnumMember(Value = "EMPTY_MARKET_CATEGORY")]
        EMPTYMARKETCATEGORY = 3,

        /// <summary>
        /// Enum UNKNOWNPARAMETER for value: UNKNOWN_PARAMETER
        /// </summary>
        [EnumMember(Value = "UNKNOWN_PARAMETER")]
        UNKNOWNPARAMETER = 4,

        /// <summary>
        /// Enum UNEXPECTEDBOOLEANVALUE for value: UNEXPECTED_BOOLEAN_VALUE
        /// </summary>
        [EnumMember(Value = "UNEXPECTED_BOOLEAN_VALUE")]
        UNEXPECTEDBOOLEANVALUE = 5,

        /// <summary>
        /// Enum NUMBERFORMAT for value: NUMBER_FORMAT
        /// </summary>
        [EnumMember(Value = "NUMBER_FORMAT")]
        NUMBERFORMAT = 6,

        /// <summary>
        /// Enum VALUEBLANK for value: VALUE_BLANK
        /// </summary>
        [EnumMember(Value = "VALUE_BLANK")]
        VALUEBLANK = 7,

        /// <summary>
        /// Enum INVALIDUNITID for value: INVALID_UNIT_ID
        /// </summary>
        [EnumMember(Value = "INVALID_UNIT_ID")]
        INVALIDUNITID = 8,

        /// <summary>
        /// Enum INVALIDGROUPIDLENGTH for value: INVALID_GROUP_ID_LENGTH
        /// </summary>
        [EnumMember(Value = "INVALID_GROUP_ID_LENGTH")]
        INVALIDGROUPIDLENGTH = 9,

        /// <summary>
        /// Enum INVALIDGROUPIDCHARACTERS for value: INVALID_GROUP_ID_CHARACTERS
        /// </summary>
        [EnumMember(Value = "INVALID_GROUP_ID_CHARACTERS")]
        INVALIDGROUPIDCHARACTERS = 10,

        /// <summary>
        /// Enum INVALIDPICKERURL for value: INVALID_PICKER_URL
        /// </summary>
        [EnumMember(Value = "INVALID_PICKER_URL")]
        INVALIDPICKERURL = 11
    }

}
