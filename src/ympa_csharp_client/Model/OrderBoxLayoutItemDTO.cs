/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ympa_csharp_client.Client.OpenAPIDateConverter;

namespace ympa_csharp_client.Model
{
    /// <summary>
    /// Информация о товаре в коробке.
    /// </summary>
    [DataContract(Name = "OrderBoxLayoutItemDTO")]
    public partial class OrderBoxLayoutItemDTO : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderBoxLayoutItemDTO" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected OrderBoxLayoutItemDTO() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderBoxLayoutItemDTO" /> class.
        /// </summary>
        /// <param name="id">Идентификатор товара в заказе.  {% cut \&quot;Где его взять\&quot; %}  Идентификатор приходит в ответе на запрос [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) и в запросе Маркета [POST order/accept](../../pushapi/reference/orderAccept.md) — параметр &#x60;id&#x60; в &#x60;items&#x60;.  {% endcut %}    (required).</param>
        /// <param name="fullCount">Количество единиц товара в коробке.  Используйте это поле, если в коробке поедут целые товары, не разделенные на части. Не используйте это поле одновременно с &#x60;partialCount&#x60;. .</param>
        /// <param name="partialCount">partialCount.</param>
        /// <param name="instances">Переданные вами коды маркировки..</param>
        public OrderBoxLayoutItemDTO(long id = default(long), int fullCount = default(int), OrderBoxLayoutPartialCountDTO partialCount = default(OrderBoxLayoutPartialCountDTO), List<BriefOrderItemInstanceDTO> instances = default(List<BriefOrderItemInstanceDTO>))
        {
            this.Id = id;
            this.FullCount = fullCount;
            this.PartialCount = partialCount;
            this.Instances = instances;
        }

        /// <summary>
        /// Идентификатор товара в заказе.  {% cut \&quot;Где его взять\&quot; %}  Идентификатор приходит в ответе на запрос [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) и в запросе Маркета [POST order/accept](../../pushapi/reference/orderAccept.md) — параметр &#x60;id&#x60; в &#x60;items&#x60;.  {% endcut %}   
        /// </summary>
        /// <value>Идентификатор товара в заказе.  {% cut \&quot;Где его взять\&quot; %}  Идентификатор приходит в ответе на запрос [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) и в запросе Маркета [POST order/accept](../../pushapi/reference/orderAccept.md) — параметр &#x60;id&#x60; в &#x60;items&#x60;.  {% endcut %}   </value>
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = true)]
        public long Id { get; set; }

        /// <summary>
        /// Количество единиц товара в коробке.  Используйте это поле, если в коробке поедут целые товары, не разделенные на части. Не используйте это поле одновременно с &#x60;partialCount&#x60;. 
        /// </summary>
        /// <value>Количество единиц товара в коробке.  Используйте это поле, если в коробке поедут целые товары, не разделенные на части. Не используйте это поле одновременно с &#x60;partialCount&#x60;. </value>
        [DataMember(Name = "fullCount", EmitDefaultValue = false)]
        public int FullCount { get; set; }

        /// <summary>
        /// Gets or Sets PartialCount
        /// </summary>
        [DataMember(Name = "partialCount", EmitDefaultValue = false)]
        public OrderBoxLayoutPartialCountDTO PartialCount { get; set; }

        /// <summary>
        /// Переданные вами коды маркировки.
        /// </summary>
        /// <value>Переданные вами коды маркировки.</value>
        [DataMember(Name = "instances", EmitDefaultValue = true)]
        public List<BriefOrderItemInstanceDTO> Instances { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OrderBoxLayoutItemDTO {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  FullCount: ").Append(FullCount).Append("\n");
            sb.Append("  PartialCount: ").Append(PartialCount).Append("\n");
            sb.Append("  Instances: ").Append(Instances).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // FullCount (int) minimum
            if (this.FullCount < (int)1)
            {
                yield return new ValidationResult("Invalid value for FullCount, must be a value greater than or equal to 1.", new [] { "FullCount" });
            }

            yield break;
        }
    }

}
