/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ympa_csharp_client.Client.OpenAPIDateConverter;

namespace ympa_csharp_client.Model
{
    /// <summary>
    /// Лимит на установку кванта и минимального количества товаров по категориям. 
    /// </summary>
    [DataContract(Name = "MaxSaleQuantumDTO")]
    public partial class MaxSaleQuantumDTO : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MaxSaleQuantumDTO" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected MaxSaleQuantumDTO() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="MaxSaleQuantumDTO" /> class.
        /// </summary>
        /// <param name="id">Идентификатор категории. (required).</param>
        /// <param name="name">Название категории..</param>
        /// <param name="maxSaleQuantum">Лимит на установку кванта и минимального количества товаров..</param>
        public MaxSaleQuantumDTO(long id = default(long), string name = default(string), int maxSaleQuantum = default(int))
        {
            this.Id = id;
            this.Name = name;
            this.MaxSaleQuantum = maxSaleQuantum;
        }

        /// <summary>
        /// Идентификатор категории.
        /// </summary>
        /// <value>Идентификатор категории.</value>
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = true)]
        public long Id { get; set; }

        /// <summary>
        /// Название категории.
        /// </summary>
        /// <value>Название категории.</value>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Лимит на установку кванта и минимального количества товаров.
        /// </summary>
        /// <value>Лимит на установку кванта и минимального количества товаров.</value>
        [DataMember(Name = "maxSaleQuantum", EmitDefaultValue = false)]
        public int MaxSaleQuantum { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class MaxSaleQuantumDTO {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  MaxSaleQuantum: ").Append(MaxSaleQuantum).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
