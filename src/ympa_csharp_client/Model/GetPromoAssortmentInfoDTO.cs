/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ympa_csharp_client.Client.OpenAPIDateConverter;

namespace ympa_csharp_client.Model
{
    /// <summary>
    /// Информация о товарах в акции.
    /// </summary>
    [DataContract(Name = "GetPromoAssortmentInfoDTO")]
    public partial class GetPromoAssortmentInfoDTO : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetPromoAssortmentInfoDTO" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected GetPromoAssortmentInfoDTO() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetPromoAssortmentInfoDTO" /> class.
        /// </summary>
        /// <param name="activeOffers">Количество товаров, которые участвуют или участвовали в акции.  Учитываются только товары, которые были добавлены вручную.  Об автоматическом и ручном добавлении товаров в акцию читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/index).  (required).</param>
        /// <param name="potentialOffers">Количество доступных товаров в акции.  Параметр возвращается только для текущих и будущих акций. .</param>
        /// <param name="processing">Есть ли изменения в ассортименте, которые еще не применились. Сохранение изменений занимает некоторое время.  Параметр возвращается только для текущих и будущих акций. .</param>
        public GetPromoAssortmentInfoDTO(int activeOffers = default(int), int potentialOffers = default(int), bool processing = default(bool))
        {
            this.ActiveOffers = activeOffers;
            this.PotentialOffers = potentialOffers;
            this.Processing = processing;
        }

        /// <summary>
        /// Количество товаров, которые участвуют или участвовали в акции.  Учитываются только товары, которые были добавлены вручную.  Об автоматическом и ручном добавлении товаров в акцию читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/index). 
        /// </summary>
        /// <value>Количество товаров, которые участвуют или участвовали в акции.  Учитываются только товары, которые были добавлены вручную.  Об автоматическом и ручном добавлении товаров в акцию читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/index). </value>
        [DataMember(Name = "activeOffers", IsRequired = true, EmitDefaultValue = true)]
        public int ActiveOffers { get; set; }

        /// <summary>
        /// Количество доступных товаров в акции.  Параметр возвращается только для текущих и будущих акций. 
        /// </summary>
        /// <value>Количество доступных товаров в акции.  Параметр возвращается только для текущих и будущих акций. </value>
        [DataMember(Name = "potentialOffers", EmitDefaultValue = false)]
        public int PotentialOffers { get; set; }

        /// <summary>
        /// Есть ли изменения в ассортименте, которые еще не применились. Сохранение изменений занимает некоторое время.  Параметр возвращается только для текущих и будущих акций. 
        /// </summary>
        /// <value>Есть ли изменения в ассортименте, которые еще не применились. Сохранение изменений занимает некоторое время.  Параметр возвращается только для текущих и будущих акций. </value>
        [DataMember(Name = "processing", EmitDefaultValue = true)]
        public bool Processing { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GetPromoAssortmentInfoDTO {\n");
            sb.Append("  ActiveOffers: ").Append(ActiveOffers).Append("\n");
            sb.Append("  PotentialOffers: ").Append(PotentialOffers).Append("\n");
            sb.Append("  Processing: ").Append(Processing).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
