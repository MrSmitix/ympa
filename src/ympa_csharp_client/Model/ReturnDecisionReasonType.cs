/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ympa_csharp_client.Client.OpenAPIDateConverter;

namespace ympa_csharp_client.Model
{
    /// <summary>
    /// Причины возврата:  * &#x60;BAD_QUALITY&#x60; — бракованный товар (есть недостатки).  * &#x60;DO_NOT_FIT&#x60; — товар не подошел.  * &#x60;WRONG_ITEM&#x60; — привезли не тот товар.  * &#x60;DAMAGE_DELIVERY&#x60; — товар поврежден при доставке.  * &#x60;LOYALTY_FAIL&#x60; — невозможно установить виновного в браке/пересорте.  * &#x60;CONTENT_FAIL&#x60; — ошибочное описание товара по вине Маркета.  * &#x60;UNKNOWN&#x60; — причина не известна. 
    /// </summary>
    /// <value>Причины возврата:  * &#x60;BAD_QUALITY&#x60; — бракованный товар (есть недостатки).  * &#x60;DO_NOT_FIT&#x60; — товар не подошел.  * &#x60;WRONG_ITEM&#x60; — привезли не тот товар.  * &#x60;DAMAGE_DELIVERY&#x60; — товар поврежден при доставке.  * &#x60;LOYALTY_FAIL&#x60; — невозможно установить виновного в браке/пересорте.  * &#x60;CONTENT_FAIL&#x60; — ошибочное описание товара по вине Маркета.  * &#x60;UNKNOWN&#x60; — причина не известна. </value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ReturnDecisionReasonType
    {
        /// <summary>
        /// Enum BADQUALITY for value: BAD_QUALITY
        /// </summary>
        [EnumMember(Value = "BAD_QUALITY")]
        BADQUALITY = 1,

        /// <summary>
        /// Enum DOESNOTFIT for value: DOES_NOT_FIT
        /// </summary>
        [EnumMember(Value = "DOES_NOT_FIT")]
        DOESNOTFIT = 2,

        /// <summary>
        /// Enum WRONGITEM for value: WRONG_ITEM
        /// </summary>
        [EnumMember(Value = "WRONG_ITEM")]
        WRONGITEM = 3,

        /// <summary>
        /// Enum DAMAGEDELIVERY for value: DAMAGE_DELIVERY
        /// </summary>
        [EnumMember(Value = "DAMAGE_DELIVERY")]
        DAMAGEDELIVERY = 4,

        /// <summary>
        /// Enum LOYALTYFAIL for value: LOYALTY_FAIL
        /// </summary>
        [EnumMember(Value = "LOYALTY_FAIL")]
        LOYALTYFAIL = 5,

        /// <summary>
        /// Enum CONTENTFAIL for value: CONTENT_FAIL
        /// </summary>
        [EnumMember(Value = "CONTENT_FAIL")]
        CONTENTFAIL = 6,

        /// <summary>
        /// Enum UNKNOWN for value: UNKNOWN
        /// </summary>
        [EnumMember(Value = "UNKNOWN")]
        UNKNOWN = 7
    }

}
