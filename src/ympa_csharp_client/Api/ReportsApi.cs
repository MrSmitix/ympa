/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using ympa_csharp_client.Client;
using ympa_csharp_client.Client.Auth;
using ympa_csharp_client.Model;

namespace ympa_csharp_client.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IReportsApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Отчет по бусту продаж
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **сводного отчета по бусту продаж** за заданный период. Отчет содержит информацию по всем кампаниям, созданным и через API, и в кабинете.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateBoostConsolidatedRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GenerateReportResponse</returns>
        GenerateReportResponse GenerateBoostConsolidatedReport(GenerateBoostConsolidatedRequest generateBoostConsolidatedRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0);

        /// <summary>
        /// Отчет по бусту продаж
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **сводного отчета по бусту продаж** за заданный период. Отчет содержит информацию по всем кампаниям, созданным и через API, и в кабинете.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateBoostConsolidatedRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GenerateReportResponse</returns>
        ApiResponse<GenerateReportResponse> GenerateBoostConsolidatedReportWithHttpInfo(GenerateBoostConsolidatedRequest generateBoostConsolidatedRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0);
        /// <summary>
        /// Отчет «Конкурентная позиция»
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета «Конкурентная позиция»** за заданный период. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/analytics/competitors.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  {% note info \&quot;Значение -1 в отчете\&quot; %}  Если в CSV-файле в столбце **POSITION** стоит -1, в этот день не было заказов с товарами в указанной категории.  {% endnote %}  |**⚙️ Лимит:** 10 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateCompetitorsPositionReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GenerateReportResponse</returns>
        GenerateReportResponse GenerateCompetitorsPositionReport(GenerateCompetitorsPositionReportRequest generateCompetitorsPositionReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0);

        /// <summary>
        /// Отчет «Конкурентная позиция»
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета «Конкурентная позиция»** за заданный период. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/analytics/competitors.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  {% note info \&quot;Значение -1 в отчете\&quot; %}  Если в CSV-файле в столбце **POSITION** стоит -1, в этот день не было заказов с товарами в указанной категории.  {% endnote %}  |**⚙️ Лимит:** 10 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateCompetitorsPositionReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GenerateReportResponse</returns>
        ApiResponse<GenerateReportResponse> GenerateCompetitorsPositionReportWithHttpInfo(GenerateCompetitorsPositionReportRequest generateCompetitorsPositionReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0);
        /// <summary>
        /// Отчет по отзывам о товарах
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета по отзывам о товарах**. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/marketing/plus-reviews#stat)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateGoodsFeedbackRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GenerateReportResponse</returns>
        GenerateReportResponse GenerateGoodsFeedbackReport(GenerateGoodsFeedbackRequest generateGoodsFeedbackRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0);

        /// <summary>
        /// Отчет по отзывам о товарах
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета по отзывам о товарах**. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/marketing/plus-reviews#stat)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateGoodsFeedbackRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GenerateReportResponse</returns>
        ApiResponse<GenerateReportResponse> GenerateGoodsFeedbackReportWithHttpInfo(GenerateGoodsFeedbackRequest generateGoodsFeedbackRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0);
        /// <summary>
        /// Отчет по движению товаров
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета по движению товаров**. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#flow)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateGoodsMovementReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GenerateReportResponse</returns>
        GenerateReportResponse GenerateGoodsMovementReport(GenerateGoodsMovementReportRequest generateGoodsMovementReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0);

        /// <summary>
        /// Отчет по движению товаров
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета по движению товаров**. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#flow)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateGoodsMovementReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GenerateReportResponse</returns>
        ApiResponse<GenerateReportResponse> GenerateGoodsMovementReportWithHttpInfo(GenerateGoodsMovementReportRequest generateGoodsMovementReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0);
        /// <summary>
        /// Отчет по реализации
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета по реализации** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#sales-report)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateGoodsRealizationReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GenerateReportResponse</returns>
        GenerateReportResponse GenerateGoodsRealizationReport(GenerateGoodsRealizationReportRequest generateGoodsRealizationReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0);

        /// <summary>
        /// Отчет по реализации
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета по реализации** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#sales-report)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateGoodsRealizationReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GenerateReportResponse</returns>
        ApiResponse<GenerateReportResponse> GenerateGoodsRealizationReportWithHttpInfo(GenerateGoodsRealizationReportRequest generateGoodsRealizationReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0);
        /// <summary>
        /// Отчет по оборачиваемости
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета по оборачиваемости** за заданную дату.  [Что это за отчет](https://yandex.ru/support/marketplace/analytics/turnover.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateGoodsTurnoverRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GenerateReportResponse</returns>
        GenerateReportResponse GenerateGoodsTurnoverReport(GenerateGoodsTurnoverRequest generateGoodsTurnoverRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0);

        /// <summary>
        /// Отчет по оборачиваемости
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета по оборачиваемости** за заданную дату.  [Что это за отчет](https://yandex.ru/support/marketplace/analytics/turnover.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateGoodsTurnoverRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GenerateReportResponse</returns>
        ApiResponse<GenerateReportResponse> GenerateGoodsTurnoverReportWithHttpInfo(GenerateGoodsTurnoverRequest generateGoodsTurnoverRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0);
        /// <summary>
        /// Готовые ярлыки‑наклейки на все коробки в нескольких заказах
        /// </summary>
        /// <remarks>
        /// Запускает генерацию PDF-файла с ярлыками для переданных заказов. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  Узнать статус генерации и получить ссылку на готовый файл можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 1000 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateMassOrderLabelsRequest"></param>
        /// <param name="format">Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A7. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GenerateReportResponse</returns>
        GenerateReportResponse GenerateMassOrderLabelsReport(GenerateMassOrderLabelsRequest generateMassOrderLabelsRequest, PageFormatType? format = default(PageFormatType?), int operationIndex = 0);

        /// <summary>
        /// Готовые ярлыки‑наклейки на все коробки в нескольких заказах
        /// </summary>
        /// <remarks>
        /// Запускает генерацию PDF-файла с ярлыками для переданных заказов. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  Узнать статус генерации и получить ссылку на готовый файл можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 1000 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateMassOrderLabelsRequest"></param>
        /// <param name="format">Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A7. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GenerateReportResponse</returns>
        ApiResponse<GenerateReportResponse> GenerateMassOrderLabelsReportWithHttpInfo(GenerateMassOrderLabelsRequest generateMassOrderLabelsRequest, PageFormatType? format = default(PageFormatType?), int operationIndex = 0);
        /// <summary>
        /// Отчет «Цены на рынке»
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета «Цены на рынке»**.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generatePricesReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GenerateReportResponse</returns>
        GenerateReportResponse GeneratePricesReport(GeneratePricesReportRequest generatePricesReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0);

        /// <summary>
        /// Отчет «Цены на рынке»
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета «Цены на рынке»**.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generatePricesReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GenerateReportResponse</returns>
        ApiResponse<GenerateReportResponse> GeneratePricesReportWithHttpInfo(GeneratePricesReportRequest generatePricesReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0);
        /// <summary>
        /// Отчет по полкам
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **сводного отчета по полкам** — рекламным блокам с баннером или видео и набором товаров. Подробнее о них читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/shelf).  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateShelfsStatisticsRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GenerateReportResponse</returns>
        GenerateReportResponse GenerateShelfsStatisticsReport(GenerateShelfsStatisticsRequest generateShelfsStatisticsRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0);

        /// <summary>
        /// Отчет по полкам
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **сводного отчета по полкам** — рекламным блокам с баннером или видео и набором товаров. Подробнее о них читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/shelf).  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateShelfsStatisticsRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GenerateReportResponse</returns>
        ApiResponse<GenerateReportResponse> GenerateShelfsStatisticsReportWithHttpInfo(GenerateShelfsStatisticsRequest generateShelfsStatisticsRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0);
        /// <summary>
        /// Получение листа сборки
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **листа сборки** для отгрузки.  Узнать статус генерации и получить ссылку на готовый документ можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateShipmentListDocumentReportRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GenerateReportResponse</returns>
        GenerateReportResponse GenerateShipmentListDocumentReport(GenerateShipmentListDocumentReportRequest generateShipmentListDocumentReportRequest, int operationIndex = 0);

        /// <summary>
        /// Получение листа сборки
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **листа сборки** для отгрузки.  Узнать статус генерации и получить ссылку на готовый документ можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateShipmentListDocumentReportRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GenerateReportResponse</returns>
        ApiResponse<GenerateReportResponse> GenerateShipmentListDocumentReportWithHttpInfo(GenerateShipmentListDocumentReportRequest generateShipmentListDocumentReportRequest, int operationIndex = 0);
        /// <summary>
        /// Отчет «Аналитика продаж»
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета «Аналитика продаж»** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/shows-sales.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 10 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateShowsSalesReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GenerateReportResponse</returns>
        GenerateReportResponse GenerateShowsSalesReport(GenerateShowsSalesReportRequest generateShowsSalesReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0);

        /// <summary>
        /// Отчет «Аналитика продаж»
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета «Аналитика продаж»** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/shows-sales.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 10 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateShowsSalesReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GenerateReportResponse</returns>
        ApiResponse<GenerateReportResponse> GenerateShowsSalesReportWithHttpInfo(GenerateShowsSalesReportRequest generateShowsSalesReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0);
        /// <summary>
        /// Отчет по остаткам на складах
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета по остаткам на складах**. Отчет содержит данные:  * Для модели FBY — об остатках на складах Маркета. * Для остальных моделей — об остатках на соответствующем складе магазина.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateStocksOnWarehousesReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GenerateReportResponse</returns>
        GenerateReportResponse GenerateStocksOnWarehousesReport(GenerateStocksOnWarehousesReportRequest generateStocksOnWarehousesReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0);

        /// <summary>
        /// Отчет по остаткам на складах
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета по остаткам на складах**. Отчет содержит данные:  * Для модели FBY — об остатках на складах Маркета. * Для остальных моделей — об остатках на соответствующем складе магазина.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateStocksOnWarehousesReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GenerateReportResponse</returns>
        ApiResponse<GenerateReportResponse> GenerateStocksOnWarehousesReportWithHttpInfo(GenerateStocksOnWarehousesReportRequest generateStocksOnWarehousesReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0);
        /// <summary>
        /// Отчет по стоимости услуг
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета по стоимости услуг** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports.html)  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**               |**Какие поля нужны**             | |- -- -- -- -- -- -- -- -- -- -- -- -- -- --|- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --| |По дате начисления услуги    |&#x60;dateFrom&#x60; и &#x60;dateTo&#x60;            | |По дате формирования акта    |&#x60;year&#x60; и &#x60;month&#x60;                 |  Заказать отчеты обоих типов одним запросом нельзя.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateUnitedMarketplaceServicesReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GenerateReportResponse</returns>
        GenerateReportResponse GenerateUnitedMarketplaceServicesReport(GenerateUnitedMarketplaceServicesReportRequest generateUnitedMarketplaceServicesReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0);

        /// <summary>
        /// Отчет по стоимости услуг
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета по стоимости услуг** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports.html)  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**               |**Какие поля нужны**             | |- -- -- -- -- -- -- -- -- -- -- -- -- -- --|- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --| |По дате начисления услуги    |&#x60;dateFrom&#x60; и &#x60;dateTo&#x60;            | |По дате формирования акта    |&#x60;year&#x60; и &#x60;month&#x60;                 |  Заказать отчеты обоих типов одним запросом нельзя.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateUnitedMarketplaceServicesReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GenerateReportResponse</returns>
        ApiResponse<GenerateReportResponse> GenerateUnitedMarketplaceServicesReportWithHttpInfo(GenerateUnitedMarketplaceServicesReportRequest generateUnitedMarketplaceServicesReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0);
        /// <summary>
        /// Отчет по платежам
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета по платежам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/transactions.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**           |**Какие поля нужны**                   | |- -- -- -- -- -- -- -- -- -- -- -- --|- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --| |О платежах за период     |&#x60;dateFrom&#x60; и &#x60;dateTo&#x60;                  | |О платежном поручении    |&#x60;bankOrderId&#x60; и &#x60;bankOrderDateTime&#x60;    |  Заказать отчеты обоих типов одним запросом нельзя.  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateUnitedNettingReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GenerateReportResponse</returns>
        GenerateReportResponse GenerateUnitedNettingReport(GenerateUnitedNettingReportRequest generateUnitedNettingReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0);

        /// <summary>
        /// Отчет по платежам
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета по платежам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/transactions.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**           |**Какие поля нужны**                   | |- -- -- -- -- -- -- -- -- -- -- -- --|- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --| |О платежах за период     |&#x60;dateFrom&#x60; и &#x60;dateTo&#x60;                  | |О платежном поручении    |&#x60;bankOrderId&#x60; и &#x60;bankOrderDateTime&#x60;    |  Заказать отчеты обоих типов одним запросом нельзя.  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateUnitedNettingReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GenerateReportResponse</returns>
        ApiResponse<GenerateReportResponse> GenerateUnitedNettingReportWithHttpInfo(GenerateUnitedNettingReportRequest generateUnitedNettingReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0);
        /// <summary>
        /// Отчет по заказам
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета по заказам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/orders.html)  {% note info \&quot;\&quot; %}  Это новый отчет. Раньше мы так называли генерацию детальной информации по заказам. [Как получить детальную информацию по заказам](../../reference/stats/getOrdersStats.md)  {% endnote %}  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateUnitedOrdersRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GenerateReportResponse</returns>
        GenerateReportResponse GenerateUnitedOrdersReport(GenerateUnitedOrdersRequest generateUnitedOrdersRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0);

        /// <summary>
        /// Отчет по заказам
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета по заказам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/orders.html)  {% note info \&quot;\&quot; %}  Это новый отчет. Раньше мы так называли генерацию детальной информации по заказам. [Как получить детальную информацию по заказам](../../reference/stats/getOrdersStats.md)  {% endnote %}  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateUnitedOrdersRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GenerateReportResponse</returns>
        ApiResponse<GenerateReportResponse> GenerateUnitedOrdersReportWithHttpInfo(GenerateUnitedOrdersRequest generateUnitedOrdersRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0);
        /// <summary>
        /// Получение заданного отчета
        /// </summary>
        /// <remarks>
        /// Возвращает статус генерации заданного отчета и, если отчет готов, ссылку для скачивания.  Чтобы воспользоваться этим запросом, вначале нужно запустить генерацию отчета. [Инструкция](../../step-by-step/reports.md)  |**⚙️ Лимит:** 100 запросов в минуту| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="reportId">Идентификатор отчета, который вы получили после запуска генерации. </param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GetReportInfoResponse</returns>
        GetReportInfoResponse GetReportInfo(string reportId, int operationIndex = 0);

        /// <summary>
        /// Получение заданного отчета
        /// </summary>
        /// <remarks>
        /// Возвращает статус генерации заданного отчета и, если отчет готов, ссылку для скачивания.  Чтобы воспользоваться этим запросом, вначале нужно запустить генерацию отчета. [Инструкция](../../step-by-step/reports.md)  |**⚙️ Лимит:** 100 запросов в минуту| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="reportId">Идентификатор отчета, который вы получили после запуска генерации. </param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GetReportInfoResponse</returns>
        ApiResponse<GetReportInfoResponse> GetReportInfoWithHttpInfo(string reportId, int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IReportsApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Отчет по бусту продаж
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **сводного отчета по бусту продаж** за заданный период. Отчет содержит информацию по всем кампаниям, созданным и через API, и в кабинете.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateBoostConsolidatedRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GenerateReportResponse</returns>
        System.Threading.Tasks.Task<GenerateReportResponse> GenerateBoostConsolidatedReportAsync(GenerateBoostConsolidatedRequest generateBoostConsolidatedRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Отчет по бусту продаж
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **сводного отчета по бусту продаж** за заданный период. Отчет содержит информацию по всем кампаниям, созданным и через API, и в кабинете.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateBoostConsolidatedRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GenerateReportResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<GenerateReportResponse>> GenerateBoostConsolidatedReportWithHttpInfoAsync(GenerateBoostConsolidatedRequest generateBoostConsolidatedRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Отчет «Конкурентная позиция»
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета «Конкурентная позиция»** за заданный период. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/analytics/competitors.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  {% note info \&quot;Значение -1 в отчете\&quot; %}  Если в CSV-файле в столбце **POSITION** стоит -1, в этот день не было заказов с товарами в указанной категории.  {% endnote %}  |**⚙️ Лимит:** 10 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateCompetitorsPositionReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GenerateReportResponse</returns>
        System.Threading.Tasks.Task<GenerateReportResponse> GenerateCompetitorsPositionReportAsync(GenerateCompetitorsPositionReportRequest generateCompetitorsPositionReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Отчет «Конкурентная позиция»
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета «Конкурентная позиция»** за заданный период. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/analytics/competitors.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  {% note info \&quot;Значение -1 в отчете\&quot; %}  Если в CSV-файле в столбце **POSITION** стоит -1, в этот день не было заказов с товарами в указанной категории.  {% endnote %}  |**⚙️ Лимит:** 10 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateCompetitorsPositionReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GenerateReportResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<GenerateReportResponse>> GenerateCompetitorsPositionReportWithHttpInfoAsync(GenerateCompetitorsPositionReportRequest generateCompetitorsPositionReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Отчет по отзывам о товарах
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета по отзывам о товарах**. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/marketing/plus-reviews#stat)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateGoodsFeedbackRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GenerateReportResponse</returns>
        System.Threading.Tasks.Task<GenerateReportResponse> GenerateGoodsFeedbackReportAsync(GenerateGoodsFeedbackRequest generateGoodsFeedbackRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Отчет по отзывам о товарах
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета по отзывам о товарах**. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/marketing/plus-reviews#stat)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateGoodsFeedbackRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GenerateReportResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<GenerateReportResponse>> GenerateGoodsFeedbackReportWithHttpInfoAsync(GenerateGoodsFeedbackRequest generateGoodsFeedbackRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Отчет по движению товаров
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета по движению товаров**. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#flow)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateGoodsMovementReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GenerateReportResponse</returns>
        System.Threading.Tasks.Task<GenerateReportResponse> GenerateGoodsMovementReportAsync(GenerateGoodsMovementReportRequest generateGoodsMovementReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Отчет по движению товаров
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета по движению товаров**. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#flow)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateGoodsMovementReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GenerateReportResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<GenerateReportResponse>> GenerateGoodsMovementReportWithHttpInfoAsync(GenerateGoodsMovementReportRequest generateGoodsMovementReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Отчет по реализации
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета по реализации** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#sales-report)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateGoodsRealizationReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GenerateReportResponse</returns>
        System.Threading.Tasks.Task<GenerateReportResponse> GenerateGoodsRealizationReportAsync(GenerateGoodsRealizationReportRequest generateGoodsRealizationReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Отчет по реализации
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета по реализации** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#sales-report)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateGoodsRealizationReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GenerateReportResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<GenerateReportResponse>> GenerateGoodsRealizationReportWithHttpInfoAsync(GenerateGoodsRealizationReportRequest generateGoodsRealizationReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Отчет по оборачиваемости
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета по оборачиваемости** за заданную дату.  [Что это за отчет](https://yandex.ru/support/marketplace/analytics/turnover.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateGoodsTurnoverRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GenerateReportResponse</returns>
        System.Threading.Tasks.Task<GenerateReportResponse> GenerateGoodsTurnoverReportAsync(GenerateGoodsTurnoverRequest generateGoodsTurnoverRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Отчет по оборачиваемости
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета по оборачиваемости** за заданную дату.  [Что это за отчет](https://yandex.ru/support/marketplace/analytics/turnover.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateGoodsTurnoverRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GenerateReportResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<GenerateReportResponse>> GenerateGoodsTurnoverReportWithHttpInfoAsync(GenerateGoodsTurnoverRequest generateGoodsTurnoverRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Готовые ярлыки‑наклейки на все коробки в нескольких заказах
        /// </summary>
        /// <remarks>
        /// Запускает генерацию PDF-файла с ярлыками для переданных заказов. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  Узнать статус генерации и получить ссылку на готовый файл можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 1000 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateMassOrderLabelsRequest"></param>
        /// <param name="format">Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A7. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GenerateReportResponse</returns>
        System.Threading.Tasks.Task<GenerateReportResponse> GenerateMassOrderLabelsReportAsync(GenerateMassOrderLabelsRequest generateMassOrderLabelsRequest, PageFormatType? format = default(PageFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Готовые ярлыки‑наклейки на все коробки в нескольких заказах
        /// </summary>
        /// <remarks>
        /// Запускает генерацию PDF-файла с ярлыками для переданных заказов. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  Узнать статус генерации и получить ссылку на готовый файл можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 1000 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateMassOrderLabelsRequest"></param>
        /// <param name="format">Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A7. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GenerateReportResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<GenerateReportResponse>> GenerateMassOrderLabelsReportWithHttpInfoAsync(GenerateMassOrderLabelsRequest generateMassOrderLabelsRequest, PageFormatType? format = default(PageFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Отчет «Цены на рынке»
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета «Цены на рынке»**.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generatePricesReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GenerateReportResponse</returns>
        System.Threading.Tasks.Task<GenerateReportResponse> GeneratePricesReportAsync(GeneratePricesReportRequest generatePricesReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Отчет «Цены на рынке»
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета «Цены на рынке»**.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generatePricesReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GenerateReportResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<GenerateReportResponse>> GeneratePricesReportWithHttpInfoAsync(GeneratePricesReportRequest generatePricesReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Отчет по полкам
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **сводного отчета по полкам** — рекламным блокам с баннером или видео и набором товаров. Подробнее о них читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/shelf).  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateShelfsStatisticsRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GenerateReportResponse</returns>
        System.Threading.Tasks.Task<GenerateReportResponse> GenerateShelfsStatisticsReportAsync(GenerateShelfsStatisticsRequest generateShelfsStatisticsRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Отчет по полкам
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **сводного отчета по полкам** — рекламным блокам с баннером или видео и набором товаров. Подробнее о них читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/shelf).  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateShelfsStatisticsRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GenerateReportResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<GenerateReportResponse>> GenerateShelfsStatisticsReportWithHttpInfoAsync(GenerateShelfsStatisticsRequest generateShelfsStatisticsRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Получение листа сборки
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **листа сборки** для отгрузки.  Узнать статус генерации и получить ссылку на готовый документ можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateShipmentListDocumentReportRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GenerateReportResponse</returns>
        System.Threading.Tasks.Task<GenerateReportResponse> GenerateShipmentListDocumentReportAsync(GenerateShipmentListDocumentReportRequest generateShipmentListDocumentReportRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Получение листа сборки
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **листа сборки** для отгрузки.  Узнать статус генерации и получить ссылку на готовый документ можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateShipmentListDocumentReportRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GenerateReportResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<GenerateReportResponse>> GenerateShipmentListDocumentReportWithHttpInfoAsync(GenerateShipmentListDocumentReportRequest generateShipmentListDocumentReportRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Отчет «Аналитика продаж»
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета «Аналитика продаж»** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/shows-sales.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 10 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateShowsSalesReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GenerateReportResponse</returns>
        System.Threading.Tasks.Task<GenerateReportResponse> GenerateShowsSalesReportAsync(GenerateShowsSalesReportRequest generateShowsSalesReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Отчет «Аналитика продаж»
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета «Аналитика продаж»** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/shows-sales.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 10 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateShowsSalesReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GenerateReportResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<GenerateReportResponse>> GenerateShowsSalesReportWithHttpInfoAsync(GenerateShowsSalesReportRequest generateShowsSalesReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Отчет по остаткам на складах
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета по остаткам на складах**. Отчет содержит данные:  * Для модели FBY — об остатках на складах Маркета. * Для остальных моделей — об остатках на соответствующем складе магазина.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateStocksOnWarehousesReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GenerateReportResponse</returns>
        System.Threading.Tasks.Task<GenerateReportResponse> GenerateStocksOnWarehousesReportAsync(GenerateStocksOnWarehousesReportRequest generateStocksOnWarehousesReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Отчет по остаткам на складах
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета по остаткам на складах**. Отчет содержит данные:  * Для модели FBY — об остатках на складах Маркета. * Для остальных моделей — об остатках на соответствующем складе магазина.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateStocksOnWarehousesReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GenerateReportResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<GenerateReportResponse>> GenerateStocksOnWarehousesReportWithHttpInfoAsync(GenerateStocksOnWarehousesReportRequest generateStocksOnWarehousesReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Отчет по стоимости услуг
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета по стоимости услуг** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports.html)  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**               |**Какие поля нужны**             | |- -- -- -- -- -- -- -- -- -- -- -- -- -- --|- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --| |По дате начисления услуги    |&#x60;dateFrom&#x60; и &#x60;dateTo&#x60;            | |По дате формирования акта    |&#x60;year&#x60; и &#x60;month&#x60;                 |  Заказать отчеты обоих типов одним запросом нельзя.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateUnitedMarketplaceServicesReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GenerateReportResponse</returns>
        System.Threading.Tasks.Task<GenerateReportResponse> GenerateUnitedMarketplaceServicesReportAsync(GenerateUnitedMarketplaceServicesReportRequest generateUnitedMarketplaceServicesReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Отчет по стоимости услуг
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета по стоимости услуг** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports.html)  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**               |**Какие поля нужны**             | |- -- -- -- -- -- -- -- -- -- -- -- -- -- --|- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --| |По дате начисления услуги    |&#x60;dateFrom&#x60; и &#x60;dateTo&#x60;            | |По дате формирования акта    |&#x60;year&#x60; и &#x60;month&#x60;                 |  Заказать отчеты обоих типов одним запросом нельзя.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateUnitedMarketplaceServicesReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GenerateReportResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<GenerateReportResponse>> GenerateUnitedMarketplaceServicesReportWithHttpInfoAsync(GenerateUnitedMarketplaceServicesReportRequest generateUnitedMarketplaceServicesReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Отчет по платежам
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета по платежам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/transactions.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**           |**Какие поля нужны**                   | |- -- -- -- -- -- -- -- -- -- -- -- --|- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --| |О платежах за период     |&#x60;dateFrom&#x60; и &#x60;dateTo&#x60;                  | |О платежном поручении    |&#x60;bankOrderId&#x60; и &#x60;bankOrderDateTime&#x60;    |  Заказать отчеты обоих типов одним запросом нельзя.  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateUnitedNettingReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GenerateReportResponse</returns>
        System.Threading.Tasks.Task<GenerateReportResponse> GenerateUnitedNettingReportAsync(GenerateUnitedNettingReportRequest generateUnitedNettingReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Отчет по платежам
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета по платежам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/transactions.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**           |**Какие поля нужны**                   | |- -- -- -- -- -- -- -- -- -- -- -- --|- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --| |О платежах за период     |&#x60;dateFrom&#x60; и &#x60;dateTo&#x60;                  | |О платежном поручении    |&#x60;bankOrderId&#x60; и &#x60;bankOrderDateTime&#x60;    |  Заказать отчеты обоих типов одним запросом нельзя.  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateUnitedNettingReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GenerateReportResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<GenerateReportResponse>> GenerateUnitedNettingReportWithHttpInfoAsync(GenerateUnitedNettingReportRequest generateUnitedNettingReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Отчет по заказам
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета по заказам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/orders.html)  {% note info \&quot;\&quot; %}  Это новый отчет. Раньше мы так называли генерацию детальной информации по заказам. [Как получить детальную информацию по заказам](../../reference/stats/getOrdersStats.md)  {% endnote %}  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateUnitedOrdersRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GenerateReportResponse</returns>
        System.Threading.Tasks.Task<GenerateReportResponse> GenerateUnitedOrdersReportAsync(GenerateUnitedOrdersRequest generateUnitedOrdersRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Отчет по заказам
        /// </summary>
        /// <remarks>
        /// Запускает генерацию **отчета по заказам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/orders.html)  {% note info \&quot;\&quot; %}  Это новый отчет. Раньше мы так называли генерацию детальной информации по заказам. [Как получить детальную информацию по заказам](../../reference/stats/getOrdersStats.md)  {% endnote %}  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateUnitedOrdersRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GenerateReportResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<GenerateReportResponse>> GenerateUnitedOrdersReportWithHttpInfoAsync(GenerateUnitedOrdersRequest generateUnitedOrdersRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Получение заданного отчета
        /// </summary>
        /// <remarks>
        /// Возвращает статус генерации заданного отчета и, если отчет готов, ссылку для скачивания.  Чтобы воспользоваться этим запросом, вначале нужно запустить генерацию отчета. [Инструкция](../../step-by-step/reports.md)  |**⚙️ Лимит:** 100 запросов в минуту| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="reportId">Идентификатор отчета, который вы получили после запуска генерации. </param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GetReportInfoResponse</returns>
        System.Threading.Tasks.Task<GetReportInfoResponse> GetReportInfoAsync(string reportId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Получение заданного отчета
        /// </summary>
        /// <remarks>
        /// Возвращает статус генерации заданного отчета и, если отчет готов, ссылку для скачивания.  Чтобы воспользоваться этим запросом, вначале нужно запустить генерацию отчета. [Инструкция](../../step-by-step/reports.md)  |**⚙️ Лимит:** 100 запросов в минуту| |-| 
        /// </remarks>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="reportId">Идентификатор отчета, который вы получили после запуска генерации. </param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GetReportInfoResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<GetReportInfoResponse>> GetReportInfoWithHttpInfoAsync(string reportId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IReportsApi : IReportsApiSync, IReportsApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class ReportsApi : IReportsApi
    {
        private ympa_csharp_client.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="ReportsApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ReportsApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ReportsApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ReportsApi(string basePath)
        {
            this.Configuration = ympa_csharp_client.Client.Configuration.MergeConfigurations(
                ympa_csharp_client.Client.GlobalConfiguration.Instance,
                new ympa_csharp_client.Client.Configuration { BasePath = basePath }
            );
            this.Client = new ympa_csharp_client.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new ympa_csharp_client.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = ympa_csharp_client.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ReportsApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public ReportsApi(ympa_csharp_client.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = ympa_csharp_client.Client.Configuration.MergeConfigurations(
                ympa_csharp_client.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new ympa_csharp_client.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new ympa_csharp_client.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = ympa_csharp_client.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ReportsApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public ReportsApi(ympa_csharp_client.Client.ISynchronousClient client, ympa_csharp_client.Client.IAsynchronousClient asyncClient, ympa_csharp_client.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = ympa_csharp_client.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public ympa_csharp_client.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public ympa_csharp_client.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public ympa_csharp_client.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public ympa_csharp_client.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Отчет по бусту продаж Запускает генерацию **сводного отчета по бусту продаж** за заданный период. Отчет содержит информацию по всем кампаниям, созданным и через API, и в кабинете.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateBoostConsolidatedRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GenerateReportResponse</returns>
        public GenerateReportResponse GenerateBoostConsolidatedReport(GenerateBoostConsolidatedRequest generateBoostConsolidatedRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0)
        {
            ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> localVarResponse = GenerateBoostConsolidatedReportWithHttpInfo(generateBoostConsolidatedRequest, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Отчет по бусту продаж Запускает генерацию **сводного отчета по бусту продаж** за заданный период. Отчет содержит информацию по всем кампаниям, созданным и через API, и в кабинете.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateBoostConsolidatedRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GenerateReportResponse</returns>
        public ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> GenerateBoostConsolidatedReportWithHttpInfo(GenerateBoostConsolidatedRequest generateBoostConsolidatedRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0)
        {
            // verify the required parameter 'generateBoostConsolidatedRequest' is set
            if (generateBoostConsolidatedRequest == null)
            {
                throw new ympa_csharp_client.Client.ApiException(400, "Missing required parameter 'generateBoostConsolidatedRequest' when calling ReportsApi->GenerateBoostConsolidatedReport");
            }

            ympa_csharp_client.Client.RequestOptions localVarRequestOptions = new ympa_csharp_client.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ympa_csharp_client.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ympa_csharp_client.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(ympa_csharp_client.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }
            localVarRequestOptions.Data = generateBoostConsolidatedRequest;

            localVarRequestOptions.Operation = "ReportsApi.GenerateBoostConsolidatedReport";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (OAuth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<GenerateReportResponse>("/reports/boost-consolidated/generate", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GenerateBoostConsolidatedReport", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Отчет по бусту продаж Запускает генерацию **сводного отчета по бусту продаж** за заданный период. Отчет содержит информацию по всем кампаниям, созданным и через API, и в кабинете.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateBoostConsolidatedRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GenerateReportResponse</returns>
        public async System.Threading.Tasks.Task<GenerateReportResponse> GenerateBoostConsolidatedReportAsync(GenerateBoostConsolidatedRequest generateBoostConsolidatedRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> localVarResponse = await GenerateBoostConsolidatedReportWithHttpInfoAsync(generateBoostConsolidatedRequest, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Отчет по бусту продаж Запускает генерацию **сводного отчета по бусту продаж** за заданный период. Отчет содержит информацию по всем кампаниям, созданным и через API, и в кабинете.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateBoostConsolidatedRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GenerateReportResponse)</returns>
        public async System.Threading.Tasks.Task<ympa_csharp_client.Client.ApiResponse<GenerateReportResponse>> GenerateBoostConsolidatedReportWithHttpInfoAsync(GenerateBoostConsolidatedRequest generateBoostConsolidatedRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'generateBoostConsolidatedRequest' is set
            if (generateBoostConsolidatedRequest == null)
            {
                throw new ympa_csharp_client.Client.ApiException(400, "Missing required parameter 'generateBoostConsolidatedRequest' when calling ReportsApi->GenerateBoostConsolidatedReport");
            }


            ympa_csharp_client.Client.RequestOptions localVarRequestOptions = new ympa_csharp_client.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ympa_csharp_client.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ympa_csharp_client.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(ympa_csharp_client.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }
            localVarRequestOptions.Data = generateBoostConsolidatedRequest;

            localVarRequestOptions.Operation = "ReportsApi.GenerateBoostConsolidatedReport";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (OAuth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<GenerateReportResponse>("/reports/boost-consolidated/generate", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GenerateBoostConsolidatedReport", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Отчет «Конкурентная позиция» Запускает генерацию **отчета «Конкурентная позиция»** за заданный период. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/analytics/competitors.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  {% note info \&quot;Значение -1 в отчете\&quot; %}  Если в CSV-файле в столбце **POSITION** стоит -1, в этот день не было заказов с товарами в указанной категории.  {% endnote %}  |**⚙️ Лимит:** 10 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateCompetitorsPositionReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GenerateReportResponse</returns>
        public GenerateReportResponse GenerateCompetitorsPositionReport(GenerateCompetitorsPositionReportRequest generateCompetitorsPositionReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0)
        {
            ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> localVarResponse = GenerateCompetitorsPositionReportWithHttpInfo(generateCompetitorsPositionReportRequest, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Отчет «Конкурентная позиция» Запускает генерацию **отчета «Конкурентная позиция»** за заданный период. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/analytics/competitors.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  {% note info \&quot;Значение -1 в отчете\&quot; %}  Если в CSV-файле в столбце **POSITION** стоит -1, в этот день не было заказов с товарами в указанной категории.  {% endnote %}  |**⚙️ Лимит:** 10 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateCompetitorsPositionReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GenerateReportResponse</returns>
        public ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> GenerateCompetitorsPositionReportWithHttpInfo(GenerateCompetitorsPositionReportRequest generateCompetitorsPositionReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0)
        {
            // verify the required parameter 'generateCompetitorsPositionReportRequest' is set
            if (generateCompetitorsPositionReportRequest == null)
            {
                throw new ympa_csharp_client.Client.ApiException(400, "Missing required parameter 'generateCompetitorsPositionReportRequest' when calling ReportsApi->GenerateCompetitorsPositionReport");
            }

            ympa_csharp_client.Client.RequestOptions localVarRequestOptions = new ympa_csharp_client.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ympa_csharp_client.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ympa_csharp_client.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(ympa_csharp_client.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }
            localVarRequestOptions.Data = generateCompetitorsPositionReportRequest;

            localVarRequestOptions.Operation = "ReportsApi.GenerateCompetitorsPositionReport";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (OAuth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<GenerateReportResponse>("/reports/competitors-position/generate", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GenerateCompetitorsPositionReport", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Отчет «Конкурентная позиция» Запускает генерацию **отчета «Конкурентная позиция»** за заданный период. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/analytics/competitors.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  {% note info \&quot;Значение -1 в отчете\&quot; %}  Если в CSV-файле в столбце **POSITION** стоит -1, в этот день не было заказов с товарами в указанной категории.  {% endnote %}  |**⚙️ Лимит:** 10 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateCompetitorsPositionReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GenerateReportResponse</returns>
        public async System.Threading.Tasks.Task<GenerateReportResponse> GenerateCompetitorsPositionReportAsync(GenerateCompetitorsPositionReportRequest generateCompetitorsPositionReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> localVarResponse = await GenerateCompetitorsPositionReportWithHttpInfoAsync(generateCompetitorsPositionReportRequest, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Отчет «Конкурентная позиция» Запускает генерацию **отчета «Конкурентная позиция»** за заданный период. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/analytics/competitors.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  {% note info \&quot;Значение -1 в отчете\&quot; %}  Если в CSV-файле в столбце **POSITION** стоит -1, в этот день не было заказов с товарами в указанной категории.  {% endnote %}  |**⚙️ Лимит:** 10 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateCompetitorsPositionReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GenerateReportResponse)</returns>
        public async System.Threading.Tasks.Task<ympa_csharp_client.Client.ApiResponse<GenerateReportResponse>> GenerateCompetitorsPositionReportWithHttpInfoAsync(GenerateCompetitorsPositionReportRequest generateCompetitorsPositionReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'generateCompetitorsPositionReportRequest' is set
            if (generateCompetitorsPositionReportRequest == null)
            {
                throw new ympa_csharp_client.Client.ApiException(400, "Missing required parameter 'generateCompetitorsPositionReportRequest' when calling ReportsApi->GenerateCompetitorsPositionReport");
            }


            ympa_csharp_client.Client.RequestOptions localVarRequestOptions = new ympa_csharp_client.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ympa_csharp_client.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ympa_csharp_client.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(ympa_csharp_client.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }
            localVarRequestOptions.Data = generateCompetitorsPositionReportRequest;

            localVarRequestOptions.Operation = "ReportsApi.GenerateCompetitorsPositionReport";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (OAuth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<GenerateReportResponse>("/reports/competitors-position/generate", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GenerateCompetitorsPositionReport", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Отчет по отзывам о товарах Запускает генерацию **отчета по отзывам о товарах**. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/marketing/plus-reviews#stat)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateGoodsFeedbackRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GenerateReportResponse</returns>
        public GenerateReportResponse GenerateGoodsFeedbackReport(GenerateGoodsFeedbackRequest generateGoodsFeedbackRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0)
        {
            ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> localVarResponse = GenerateGoodsFeedbackReportWithHttpInfo(generateGoodsFeedbackRequest, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Отчет по отзывам о товарах Запускает генерацию **отчета по отзывам о товарах**. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/marketing/plus-reviews#stat)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateGoodsFeedbackRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GenerateReportResponse</returns>
        public ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> GenerateGoodsFeedbackReportWithHttpInfo(GenerateGoodsFeedbackRequest generateGoodsFeedbackRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0)
        {
            // verify the required parameter 'generateGoodsFeedbackRequest' is set
            if (generateGoodsFeedbackRequest == null)
            {
                throw new ympa_csharp_client.Client.ApiException(400, "Missing required parameter 'generateGoodsFeedbackRequest' when calling ReportsApi->GenerateGoodsFeedbackReport");
            }

            ympa_csharp_client.Client.RequestOptions localVarRequestOptions = new ympa_csharp_client.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ympa_csharp_client.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ympa_csharp_client.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(ympa_csharp_client.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }
            localVarRequestOptions.Data = generateGoodsFeedbackRequest;

            localVarRequestOptions.Operation = "ReportsApi.GenerateGoodsFeedbackReport";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (OAuth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<GenerateReportResponse>("/reports/goods-feedback/generate", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GenerateGoodsFeedbackReport", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Отчет по отзывам о товарах Запускает генерацию **отчета по отзывам о товарах**. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/marketing/plus-reviews#stat)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateGoodsFeedbackRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GenerateReportResponse</returns>
        public async System.Threading.Tasks.Task<GenerateReportResponse> GenerateGoodsFeedbackReportAsync(GenerateGoodsFeedbackRequest generateGoodsFeedbackRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> localVarResponse = await GenerateGoodsFeedbackReportWithHttpInfoAsync(generateGoodsFeedbackRequest, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Отчет по отзывам о товарах Запускает генерацию **отчета по отзывам о товарах**. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/marketing/plus-reviews#stat)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateGoodsFeedbackRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GenerateReportResponse)</returns>
        public async System.Threading.Tasks.Task<ympa_csharp_client.Client.ApiResponse<GenerateReportResponse>> GenerateGoodsFeedbackReportWithHttpInfoAsync(GenerateGoodsFeedbackRequest generateGoodsFeedbackRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'generateGoodsFeedbackRequest' is set
            if (generateGoodsFeedbackRequest == null)
            {
                throw new ympa_csharp_client.Client.ApiException(400, "Missing required parameter 'generateGoodsFeedbackRequest' when calling ReportsApi->GenerateGoodsFeedbackReport");
            }


            ympa_csharp_client.Client.RequestOptions localVarRequestOptions = new ympa_csharp_client.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ympa_csharp_client.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ympa_csharp_client.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(ympa_csharp_client.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }
            localVarRequestOptions.Data = generateGoodsFeedbackRequest;

            localVarRequestOptions.Operation = "ReportsApi.GenerateGoodsFeedbackReport";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (OAuth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<GenerateReportResponse>("/reports/goods-feedback/generate", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GenerateGoodsFeedbackReport", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Отчет по движению товаров Запускает генерацию **отчета по движению товаров**. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#flow)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateGoodsMovementReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GenerateReportResponse</returns>
        public GenerateReportResponse GenerateGoodsMovementReport(GenerateGoodsMovementReportRequest generateGoodsMovementReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0)
        {
            ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> localVarResponse = GenerateGoodsMovementReportWithHttpInfo(generateGoodsMovementReportRequest, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Отчет по движению товаров Запускает генерацию **отчета по движению товаров**. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#flow)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateGoodsMovementReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GenerateReportResponse</returns>
        public ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> GenerateGoodsMovementReportWithHttpInfo(GenerateGoodsMovementReportRequest generateGoodsMovementReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0)
        {
            // verify the required parameter 'generateGoodsMovementReportRequest' is set
            if (generateGoodsMovementReportRequest == null)
            {
                throw new ympa_csharp_client.Client.ApiException(400, "Missing required parameter 'generateGoodsMovementReportRequest' when calling ReportsApi->GenerateGoodsMovementReport");
            }

            ympa_csharp_client.Client.RequestOptions localVarRequestOptions = new ympa_csharp_client.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ympa_csharp_client.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ympa_csharp_client.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(ympa_csharp_client.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }
            localVarRequestOptions.Data = generateGoodsMovementReportRequest;

            localVarRequestOptions.Operation = "ReportsApi.GenerateGoodsMovementReport";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (OAuth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<GenerateReportResponse>("/reports/goods-movement/generate", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GenerateGoodsMovementReport", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Отчет по движению товаров Запускает генерацию **отчета по движению товаров**. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#flow)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateGoodsMovementReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GenerateReportResponse</returns>
        public async System.Threading.Tasks.Task<GenerateReportResponse> GenerateGoodsMovementReportAsync(GenerateGoodsMovementReportRequest generateGoodsMovementReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> localVarResponse = await GenerateGoodsMovementReportWithHttpInfoAsync(generateGoodsMovementReportRequest, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Отчет по движению товаров Запускает генерацию **отчета по движению товаров**. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#flow)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateGoodsMovementReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GenerateReportResponse)</returns>
        public async System.Threading.Tasks.Task<ympa_csharp_client.Client.ApiResponse<GenerateReportResponse>> GenerateGoodsMovementReportWithHttpInfoAsync(GenerateGoodsMovementReportRequest generateGoodsMovementReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'generateGoodsMovementReportRequest' is set
            if (generateGoodsMovementReportRequest == null)
            {
                throw new ympa_csharp_client.Client.ApiException(400, "Missing required parameter 'generateGoodsMovementReportRequest' when calling ReportsApi->GenerateGoodsMovementReport");
            }


            ympa_csharp_client.Client.RequestOptions localVarRequestOptions = new ympa_csharp_client.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ympa_csharp_client.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ympa_csharp_client.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(ympa_csharp_client.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }
            localVarRequestOptions.Data = generateGoodsMovementReportRequest;

            localVarRequestOptions.Operation = "ReportsApi.GenerateGoodsMovementReport";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (OAuth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<GenerateReportResponse>("/reports/goods-movement/generate", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GenerateGoodsMovementReport", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Отчет по реализации Запускает генерацию **отчета по реализации** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#sales-report)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateGoodsRealizationReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GenerateReportResponse</returns>
        public GenerateReportResponse GenerateGoodsRealizationReport(GenerateGoodsRealizationReportRequest generateGoodsRealizationReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0)
        {
            ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> localVarResponse = GenerateGoodsRealizationReportWithHttpInfo(generateGoodsRealizationReportRequest, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Отчет по реализации Запускает генерацию **отчета по реализации** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#sales-report)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateGoodsRealizationReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GenerateReportResponse</returns>
        public ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> GenerateGoodsRealizationReportWithHttpInfo(GenerateGoodsRealizationReportRequest generateGoodsRealizationReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0)
        {
            // verify the required parameter 'generateGoodsRealizationReportRequest' is set
            if (generateGoodsRealizationReportRequest == null)
            {
                throw new ympa_csharp_client.Client.ApiException(400, "Missing required parameter 'generateGoodsRealizationReportRequest' when calling ReportsApi->GenerateGoodsRealizationReport");
            }

            ympa_csharp_client.Client.RequestOptions localVarRequestOptions = new ympa_csharp_client.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ympa_csharp_client.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ympa_csharp_client.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(ympa_csharp_client.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }
            localVarRequestOptions.Data = generateGoodsRealizationReportRequest;

            localVarRequestOptions.Operation = "ReportsApi.GenerateGoodsRealizationReport";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (OAuth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<GenerateReportResponse>("/reports/goods-realization/generate", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GenerateGoodsRealizationReport", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Отчет по реализации Запускает генерацию **отчета по реализации** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#sales-report)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateGoodsRealizationReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GenerateReportResponse</returns>
        public async System.Threading.Tasks.Task<GenerateReportResponse> GenerateGoodsRealizationReportAsync(GenerateGoodsRealizationReportRequest generateGoodsRealizationReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> localVarResponse = await GenerateGoodsRealizationReportWithHttpInfoAsync(generateGoodsRealizationReportRequest, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Отчет по реализации Запускает генерацию **отчета по реализации** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#sales-report)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateGoodsRealizationReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GenerateReportResponse)</returns>
        public async System.Threading.Tasks.Task<ympa_csharp_client.Client.ApiResponse<GenerateReportResponse>> GenerateGoodsRealizationReportWithHttpInfoAsync(GenerateGoodsRealizationReportRequest generateGoodsRealizationReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'generateGoodsRealizationReportRequest' is set
            if (generateGoodsRealizationReportRequest == null)
            {
                throw new ympa_csharp_client.Client.ApiException(400, "Missing required parameter 'generateGoodsRealizationReportRequest' when calling ReportsApi->GenerateGoodsRealizationReport");
            }


            ympa_csharp_client.Client.RequestOptions localVarRequestOptions = new ympa_csharp_client.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ympa_csharp_client.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ympa_csharp_client.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(ympa_csharp_client.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }
            localVarRequestOptions.Data = generateGoodsRealizationReportRequest;

            localVarRequestOptions.Operation = "ReportsApi.GenerateGoodsRealizationReport";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (OAuth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<GenerateReportResponse>("/reports/goods-realization/generate", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GenerateGoodsRealizationReport", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Отчет по оборачиваемости Запускает генерацию **отчета по оборачиваемости** за заданную дату.  [Что это за отчет](https://yandex.ru/support/marketplace/analytics/turnover.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateGoodsTurnoverRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GenerateReportResponse</returns>
        public GenerateReportResponse GenerateGoodsTurnoverReport(GenerateGoodsTurnoverRequest generateGoodsTurnoverRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0)
        {
            ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> localVarResponse = GenerateGoodsTurnoverReportWithHttpInfo(generateGoodsTurnoverRequest, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Отчет по оборачиваемости Запускает генерацию **отчета по оборачиваемости** за заданную дату.  [Что это за отчет](https://yandex.ru/support/marketplace/analytics/turnover.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateGoodsTurnoverRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GenerateReportResponse</returns>
        public ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> GenerateGoodsTurnoverReportWithHttpInfo(GenerateGoodsTurnoverRequest generateGoodsTurnoverRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0)
        {
            // verify the required parameter 'generateGoodsTurnoverRequest' is set
            if (generateGoodsTurnoverRequest == null)
            {
                throw new ympa_csharp_client.Client.ApiException(400, "Missing required parameter 'generateGoodsTurnoverRequest' when calling ReportsApi->GenerateGoodsTurnoverReport");
            }

            ympa_csharp_client.Client.RequestOptions localVarRequestOptions = new ympa_csharp_client.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ympa_csharp_client.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ympa_csharp_client.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(ympa_csharp_client.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }
            localVarRequestOptions.Data = generateGoodsTurnoverRequest;

            localVarRequestOptions.Operation = "ReportsApi.GenerateGoodsTurnoverReport";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (OAuth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<GenerateReportResponse>("/reports/goods-turnover/generate", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GenerateGoodsTurnoverReport", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Отчет по оборачиваемости Запускает генерацию **отчета по оборачиваемости** за заданную дату.  [Что это за отчет](https://yandex.ru/support/marketplace/analytics/turnover.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateGoodsTurnoverRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GenerateReportResponse</returns>
        public async System.Threading.Tasks.Task<GenerateReportResponse> GenerateGoodsTurnoverReportAsync(GenerateGoodsTurnoverRequest generateGoodsTurnoverRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> localVarResponse = await GenerateGoodsTurnoverReportWithHttpInfoAsync(generateGoodsTurnoverRequest, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Отчет по оборачиваемости Запускает генерацию **отчета по оборачиваемости** за заданную дату.  [Что это за отчет](https://yandex.ru/support/marketplace/analytics/turnover.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateGoodsTurnoverRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GenerateReportResponse)</returns>
        public async System.Threading.Tasks.Task<ympa_csharp_client.Client.ApiResponse<GenerateReportResponse>> GenerateGoodsTurnoverReportWithHttpInfoAsync(GenerateGoodsTurnoverRequest generateGoodsTurnoverRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'generateGoodsTurnoverRequest' is set
            if (generateGoodsTurnoverRequest == null)
            {
                throw new ympa_csharp_client.Client.ApiException(400, "Missing required parameter 'generateGoodsTurnoverRequest' when calling ReportsApi->GenerateGoodsTurnoverReport");
            }


            ympa_csharp_client.Client.RequestOptions localVarRequestOptions = new ympa_csharp_client.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ympa_csharp_client.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ympa_csharp_client.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(ympa_csharp_client.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }
            localVarRequestOptions.Data = generateGoodsTurnoverRequest;

            localVarRequestOptions.Operation = "ReportsApi.GenerateGoodsTurnoverReport";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (OAuth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<GenerateReportResponse>("/reports/goods-turnover/generate", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GenerateGoodsTurnoverReport", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Готовые ярлыки‑наклейки на все коробки в нескольких заказах Запускает генерацию PDF-файла с ярлыками для переданных заказов. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  Узнать статус генерации и получить ссылку на готовый файл можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 1000 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateMassOrderLabelsRequest"></param>
        /// <param name="format">Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A7. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GenerateReportResponse</returns>
        public GenerateReportResponse GenerateMassOrderLabelsReport(GenerateMassOrderLabelsRequest generateMassOrderLabelsRequest, PageFormatType? format = default(PageFormatType?), int operationIndex = 0)
        {
            ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> localVarResponse = GenerateMassOrderLabelsReportWithHttpInfo(generateMassOrderLabelsRequest, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Готовые ярлыки‑наклейки на все коробки в нескольких заказах Запускает генерацию PDF-файла с ярлыками для переданных заказов. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  Узнать статус генерации и получить ссылку на готовый файл можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 1000 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateMassOrderLabelsRequest"></param>
        /// <param name="format">Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A7. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GenerateReportResponse</returns>
        public ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> GenerateMassOrderLabelsReportWithHttpInfo(GenerateMassOrderLabelsRequest generateMassOrderLabelsRequest, PageFormatType? format = default(PageFormatType?), int operationIndex = 0)
        {
            // verify the required parameter 'generateMassOrderLabelsRequest' is set
            if (generateMassOrderLabelsRequest == null)
            {
                throw new ympa_csharp_client.Client.ApiException(400, "Missing required parameter 'generateMassOrderLabelsRequest' when calling ReportsApi->GenerateMassOrderLabelsReport");
            }

            ympa_csharp_client.Client.RequestOptions localVarRequestOptions = new ympa_csharp_client.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ympa_csharp_client.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ympa_csharp_client.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(ympa_csharp_client.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }
            localVarRequestOptions.Data = generateMassOrderLabelsRequest;

            localVarRequestOptions.Operation = "ReportsApi.GenerateMassOrderLabelsReport";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (OAuth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<GenerateReportResponse>("/reports/documents/labels/generate", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GenerateMassOrderLabelsReport", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Готовые ярлыки‑наклейки на все коробки в нескольких заказах Запускает генерацию PDF-файла с ярлыками для переданных заказов. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  Узнать статус генерации и получить ссылку на готовый файл можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 1000 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateMassOrderLabelsRequest"></param>
        /// <param name="format">Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A7. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GenerateReportResponse</returns>
        public async System.Threading.Tasks.Task<GenerateReportResponse> GenerateMassOrderLabelsReportAsync(GenerateMassOrderLabelsRequest generateMassOrderLabelsRequest, PageFormatType? format = default(PageFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> localVarResponse = await GenerateMassOrderLabelsReportWithHttpInfoAsync(generateMassOrderLabelsRequest, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Готовые ярлыки‑наклейки на все коробки в нескольких заказах Запускает генерацию PDF-файла с ярлыками для переданных заказов. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  Узнать статус генерации и получить ссылку на готовый файл можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 1000 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateMassOrderLabelsRequest"></param>
        /// <param name="format">Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A7. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GenerateReportResponse)</returns>
        public async System.Threading.Tasks.Task<ympa_csharp_client.Client.ApiResponse<GenerateReportResponse>> GenerateMassOrderLabelsReportWithHttpInfoAsync(GenerateMassOrderLabelsRequest generateMassOrderLabelsRequest, PageFormatType? format = default(PageFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'generateMassOrderLabelsRequest' is set
            if (generateMassOrderLabelsRequest == null)
            {
                throw new ympa_csharp_client.Client.ApiException(400, "Missing required parameter 'generateMassOrderLabelsRequest' when calling ReportsApi->GenerateMassOrderLabelsReport");
            }


            ympa_csharp_client.Client.RequestOptions localVarRequestOptions = new ympa_csharp_client.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ympa_csharp_client.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ympa_csharp_client.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(ympa_csharp_client.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }
            localVarRequestOptions.Data = generateMassOrderLabelsRequest;

            localVarRequestOptions.Operation = "ReportsApi.GenerateMassOrderLabelsReport";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (OAuth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<GenerateReportResponse>("/reports/documents/labels/generate", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GenerateMassOrderLabelsReport", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Отчет «Цены на рынке» Запускает генерацию **отчета «Цены на рынке»**.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generatePricesReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GenerateReportResponse</returns>
        public GenerateReportResponse GeneratePricesReport(GeneratePricesReportRequest generatePricesReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0)
        {
            ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> localVarResponse = GeneratePricesReportWithHttpInfo(generatePricesReportRequest, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Отчет «Цены на рынке» Запускает генерацию **отчета «Цены на рынке»**.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generatePricesReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GenerateReportResponse</returns>
        public ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> GeneratePricesReportWithHttpInfo(GeneratePricesReportRequest generatePricesReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0)
        {
            // verify the required parameter 'generatePricesReportRequest' is set
            if (generatePricesReportRequest == null)
            {
                throw new ympa_csharp_client.Client.ApiException(400, "Missing required parameter 'generatePricesReportRequest' when calling ReportsApi->GeneratePricesReport");
            }

            ympa_csharp_client.Client.RequestOptions localVarRequestOptions = new ympa_csharp_client.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ympa_csharp_client.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ympa_csharp_client.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(ympa_csharp_client.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }
            localVarRequestOptions.Data = generatePricesReportRequest;

            localVarRequestOptions.Operation = "ReportsApi.GeneratePricesReport";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (OAuth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<GenerateReportResponse>("/reports/prices/generate", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GeneratePricesReport", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Отчет «Цены на рынке» Запускает генерацию **отчета «Цены на рынке»**.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generatePricesReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GenerateReportResponse</returns>
        public async System.Threading.Tasks.Task<GenerateReportResponse> GeneratePricesReportAsync(GeneratePricesReportRequest generatePricesReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> localVarResponse = await GeneratePricesReportWithHttpInfoAsync(generatePricesReportRequest, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Отчет «Цены на рынке» Запускает генерацию **отчета «Цены на рынке»**.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generatePricesReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GenerateReportResponse)</returns>
        public async System.Threading.Tasks.Task<ympa_csharp_client.Client.ApiResponse<GenerateReportResponse>> GeneratePricesReportWithHttpInfoAsync(GeneratePricesReportRequest generatePricesReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'generatePricesReportRequest' is set
            if (generatePricesReportRequest == null)
            {
                throw new ympa_csharp_client.Client.ApiException(400, "Missing required parameter 'generatePricesReportRequest' when calling ReportsApi->GeneratePricesReport");
            }


            ympa_csharp_client.Client.RequestOptions localVarRequestOptions = new ympa_csharp_client.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ympa_csharp_client.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ympa_csharp_client.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(ympa_csharp_client.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }
            localVarRequestOptions.Data = generatePricesReportRequest;

            localVarRequestOptions.Operation = "ReportsApi.GeneratePricesReport";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (OAuth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<GenerateReportResponse>("/reports/prices/generate", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GeneratePricesReport", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Отчет по полкам Запускает генерацию **сводного отчета по полкам** — рекламным блокам с баннером или видео и набором товаров. Подробнее о них читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/shelf).  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateShelfsStatisticsRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GenerateReportResponse</returns>
        public GenerateReportResponse GenerateShelfsStatisticsReport(GenerateShelfsStatisticsRequest generateShelfsStatisticsRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0)
        {
            ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> localVarResponse = GenerateShelfsStatisticsReportWithHttpInfo(generateShelfsStatisticsRequest, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Отчет по полкам Запускает генерацию **сводного отчета по полкам** — рекламным блокам с баннером или видео и набором товаров. Подробнее о них читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/shelf).  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateShelfsStatisticsRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GenerateReportResponse</returns>
        public ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> GenerateShelfsStatisticsReportWithHttpInfo(GenerateShelfsStatisticsRequest generateShelfsStatisticsRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0)
        {
            // verify the required parameter 'generateShelfsStatisticsRequest' is set
            if (generateShelfsStatisticsRequest == null)
            {
                throw new ympa_csharp_client.Client.ApiException(400, "Missing required parameter 'generateShelfsStatisticsRequest' when calling ReportsApi->GenerateShelfsStatisticsReport");
            }

            ympa_csharp_client.Client.RequestOptions localVarRequestOptions = new ympa_csharp_client.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ympa_csharp_client.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ympa_csharp_client.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(ympa_csharp_client.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }
            localVarRequestOptions.Data = generateShelfsStatisticsRequest;

            localVarRequestOptions.Operation = "ReportsApi.GenerateShelfsStatisticsReport";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (OAuth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<GenerateReportResponse>("/reports/shelf-statistics/generate", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GenerateShelfsStatisticsReport", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Отчет по полкам Запускает генерацию **сводного отчета по полкам** — рекламным блокам с баннером или видео и набором товаров. Подробнее о них читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/shelf).  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateShelfsStatisticsRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GenerateReportResponse</returns>
        public async System.Threading.Tasks.Task<GenerateReportResponse> GenerateShelfsStatisticsReportAsync(GenerateShelfsStatisticsRequest generateShelfsStatisticsRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> localVarResponse = await GenerateShelfsStatisticsReportWithHttpInfoAsync(generateShelfsStatisticsRequest, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Отчет по полкам Запускает генерацию **сводного отчета по полкам** — рекламным блокам с баннером или видео и набором товаров. Подробнее о них читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/shelf).  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateShelfsStatisticsRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GenerateReportResponse)</returns>
        public async System.Threading.Tasks.Task<ympa_csharp_client.Client.ApiResponse<GenerateReportResponse>> GenerateShelfsStatisticsReportWithHttpInfoAsync(GenerateShelfsStatisticsRequest generateShelfsStatisticsRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'generateShelfsStatisticsRequest' is set
            if (generateShelfsStatisticsRequest == null)
            {
                throw new ympa_csharp_client.Client.ApiException(400, "Missing required parameter 'generateShelfsStatisticsRequest' when calling ReportsApi->GenerateShelfsStatisticsReport");
            }


            ympa_csharp_client.Client.RequestOptions localVarRequestOptions = new ympa_csharp_client.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ympa_csharp_client.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ympa_csharp_client.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(ympa_csharp_client.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }
            localVarRequestOptions.Data = generateShelfsStatisticsRequest;

            localVarRequestOptions.Operation = "ReportsApi.GenerateShelfsStatisticsReport";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (OAuth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<GenerateReportResponse>("/reports/shelf-statistics/generate", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GenerateShelfsStatisticsReport", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Получение листа сборки Запускает генерацию **листа сборки** для отгрузки.  Узнать статус генерации и получить ссылку на готовый документ можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateShipmentListDocumentReportRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GenerateReportResponse</returns>
        public GenerateReportResponse GenerateShipmentListDocumentReport(GenerateShipmentListDocumentReportRequest generateShipmentListDocumentReportRequest, int operationIndex = 0)
        {
            ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> localVarResponse = GenerateShipmentListDocumentReportWithHttpInfo(generateShipmentListDocumentReportRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Получение листа сборки Запускает генерацию **листа сборки** для отгрузки.  Узнать статус генерации и получить ссылку на готовый документ можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateShipmentListDocumentReportRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GenerateReportResponse</returns>
        public ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> GenerateShipmentListDocumentReportWithHttpInfo(GenerateShipmentListDocumentReportRequest generateShipmentListDocumentReportRequest, int operationIndex = 0)
        {
            // verify the required parameter 'generateShipmentListDocumentReportRequest' is set
            if (generateShipmentListDocumentReportRequest == null)
            {
                throw new ympa_csharp_client.Client.ApiException(400, "Missing required parameter 'generateShipmentListDocumentReportRequest' when calling ReportsApi->GenerateShipmentListDocumentReport");
            }

            ympa_csharp_client.Client.RequestOptions localVarRequestOptions = new ympa_csharp_client.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ympa_csharp_client.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ympa_csharp_client.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = generateShipmentListDocumentReportRequest;

            localVarRequestOptions.Operation = "ReportsApi.GenerateShipmentListDocumentReport";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (OAuth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<GenerateReportResponse>("/reports/documents/shipment-list/generate", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GenerateShipmentListDocumentReport", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Получение листа сборки Запускает генерацию **листа сборки** для отгрузки.  Узнать статус генерации и получить ссылку на готовый документ можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateShipmentListDocumentReportRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GenerateReportResponse</returns>
        public async System.Threading.Tasks.Task<GenerateReportResponse> GenerateShipmentListDocumentReportAsync(GenerateShipmentListDocumentReportRequest generateShipmentListDocumentReportRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> localVarResponse = await GenerateShipmentListDocumentReportWithHttpInfoAsync(generateShipmentListDocumentReportRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Получение листа сборки Запускает генерацию **листа сборки** для отгрузки.  Узнать статус генерации и получить ссылку на готовый документ можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateShipmentListDocumentReportRequest"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GenerateReportResponse)</returns>
        public async System.Threading.Tasks.Task<ympa_csharp_client.Client.ApiResponse<GenerateReportResponse>> GenerateShipmentListDocumentReportWithHttpInfoAsync(GenerateShipmentListDocumentReportRequest generateShipmentListDocumentReportRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'generateShipmentListDocumentReportRequest' is set
            if (generateShipmentListDocumentReportRequest == null)
            {
                throw new ympa_csharp_client.Client.ApiException(400, "Missing required parameter 'generateShipmentListDocumentReportRequest' when calling ReportsApi->GenerateShipmentListDocumentReport");
            }


            ympa_csharp_client.Client.RequestOptions localVarRequestOptions = new ympa_csharp_client.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ympa_csharp_client.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ympa_csharp_client.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = generateShipmentListDocumentReportRequest;

            localVarRequestOptions.Operation = "ReportsApi.GenerateShipmentListDocumentReport";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (OAuth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<GenerateReportResponse>("/reports/documents/shipment-list/generate", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GenerateShipmentListDocumentReport", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Отчет «Аналитика продаж» Запускает генерацию **отчета «Аналитика продаж»** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/shows-sales.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 10 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateShowsSalesReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GenerateReportResponse</returns>
        public GenerateReportResponse GenerateShowsSalesReport(GenerateShowsSalesReportRequest generateShowsSalesReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0)
        {
            ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> localVarResponse = GenerateShowsSalesReportWithHttpInfo(generateShowsSalesReportRequest, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Отчет «Аналитика продаж» Запускает генерацию **отчета «Аналитика продаж»** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/shows-sales.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 10 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateShowsSalesReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GenerateReportResponse</returns>
        public ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> GenerateShowsSalesReportWithHttpInfo(GenerateShowsSalesReportRequest generateShowsSalesReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0)
        {
            // verify the required parameter 'generateShowsSalesReportRequest' is set
            if (generateShowsSalesReportRequest == null)
            {
                throw new ympa_csharp_client.Client.ApiException(400, "Missing required parameter 'generateShowsSalesReportRequest' when calling ReportsApi->GenerateShowsSalesReport");
            }

            ympa_csharp_client.Client.RequestOptions localVarRequestOptions = new ympa_csharp_client.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ympa_csharp_client.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ympa_csharp_client.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(ympa_csharp_client.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }
            localVarRequestOptions.Data = generateShowsSalesReportRequest;

            localVarRequestOptions.Operation = "ReportsApi.GenerateShowsSalesReport";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (OAuth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<GenerateReportResponse>("/reports/shows-sales/generate", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GenerateShowsSalesReport", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Отчет «Аналитика продаж» Запускает генерацию **отчета «Аналитика продаж»** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/shows-sales.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 10 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateShowsSalesReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GenerateReportResponse</returns>
        public async System.Threading.Tasks.Task<GenerateReportResponse> GenerateShowsSalesReportAsync(GenerateShowsSalesReportRequest generateShowsSalesReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> localVarResponse = await GenerateShowsSalesReportWithHttpInfoAsync(generateShowsSalesReportRequest, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Отчет «Аналитика продаж» Запускает генерацию **отчета «Аналитика продаж»** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/shows-sales.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 10 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateShowsSalesReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GenerateReportResponse)</returns>
        public async System.Threading.Tasks.Task<ympa_csharp_client.Client.ApiResponse<GenerateReportResponse>> GenerateShowsSalesReportWithHttpInfoAsync(GenerateShowsSalesReportRequest generateShowsSalesReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'generateShowsSalesReportRequest' is set
            if (generateShowsSalesReportRequest == null)
            {
                throw new ympa_csharp_client.Client.ApiException(400, "Missing required parameter 'generateShowsSalesReportRequest' when calling ReportsApi->GenerateShowsSalesReport");
            }


            ympa_csharp_client.Client.RequestOptions localVarRequestOptions = new ympa_csharp_client.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ympa_csharp_client.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ympa_csharp_client.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(ympa_csharp_client.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }
            localVarRequestOptions.Data = generateShowsSalesReportRequest;

            localVarRequestOptions.Operation = "ReportsApi.GenerateShowsSalesReport";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (OAuth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<GenerateReportResponse>("/reports/shows-sales/generate", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GenerateShowsSalesReport", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Отчет по остаткам на складах Запускает генерацию **отчета по остаткам на складах**. Отчет содержит данные:  * Для модели FBY — об остатках на складах Маркета. * Для остальных моделей — об остатках на соответствующем складе магазина.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateStocksOnWarehousesReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GenerateReportResponse</returns>
        public GenerateReportResponse GenerateStocksOnWarehousesReport(GenerateStocksOnWarehousesReportRequest generateStocksOnWarehousesReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0)
        {
            ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> localVarResponse = GenerateStocksOnWarehousesReportWithHttpInfo(generateStocksOnWarehousesReportRequest, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Отчет по остаткам на складах Запускает генерацию **отчета по остаткам на складах**. Отчет содержит данные:  * Для модели FBY — об остатках на складах Маркета. * Для остальных моделей — об остатках на соответствующем складе магазина.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateStocksOnWarehousesReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GenerateReportResponse</returns>
        public ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> GenerateStocksOnWarehousesReportWithHttpInfo(GenerateStocksOnWarehousesReportRequest generateStocksOnWarehousesReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0)
        {
            // verify the required parameter 'generateStocksOnWarehousesReportRequest' is set
            if (generateStocksOnWarehousesReportRequest == null)
            {
                throw new ympa_csharp_client.Client.ApiException(400, "Missing required parameter 'generateStocksOnWarehousesReportRequest' when calling ReportsApi->GenerateStocksOnWarehousesReport");
            }

            ympa_csharp_client.Client.RequestOptions localVarRequestOptions = new ympa_csharp_client.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ympa_csharp_client.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ympa_csharp_client.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(ympa_csharp_client.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }
            localVarRequestOptions.Data = generateStocksOnWarehousesReportRequest;

            localVarRequestOptions.Operation = "ReportsApi.GenerateStocksOnWarehousesReport";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (OAuth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<GenerateReportResponse>("/reports/stocks-on-warehouses/generate", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GenerateStocksOnWarehousesReport", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Отчет по остаткам на складах Запускает генерацию **отчета по остаткам на складах**. Отчет содержит данные:  * Для модели FBY — об остатках на складах Маркета. * Для остальных моделей — об остатках на соответствующем складе магазина.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateStocksOnWarehousesReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GenerateReportResponse</returns>
        public async System.Threading.Tasks.Task<GenerateReportResponse> GenerateStocksOnWarehousesReportAsync(GenerateStocksOnWarehousesReportRequest generateStocksOnWarehousesReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> localVarResponse = await GenerateStocksOnWarehousesReportWithHttpInfoAsync(generateStocksOnWarehousesReportRequest, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Отчет по остаткам на складах Запускает генерацию **отчета по остаткам на складах**. Отчет содержит данные:  * Для модели FBY — об остатках на складах Маркета. * Для остальных моделей — об остатках на соответствующем складе магазина.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateStocksOnWarehousesReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GenerateReportResponse)</returns>
        public async System.Threading.Tasks.Task<ympa_csharp_client.Client.ApiResponse<GenerateReportResponse>> GenerateStocksOnWarehousesReportWithHttpInfoAsync(GenerateStocksOnWarehousesReportRequest generateStocksOnWarehousesReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'generateStocksOnWarehousesReportRequest' is set
            if (generateStocksOnWarehousesReportRequest == null)
            {
                throw new ympa_csharp_client.Client.ApiException(400, "Missing required parameter 'generateStocksOnWarehousesReportRequest' when calling ReportsApi->GenerateStocksOnWarehousesReport");
            }


            ympa_csharp_client.Client.RequestOptions localVarRequestOptions = new ympa_csharp_client.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ympa_csharp_client.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ympa_csharp_client.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(ympa_csharp_client.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }
            localVarRequestOptions.Data = generateStocksOnWarehousesReportRequest;

            localVarRequestOptions.Operation = "ReportsApi.GenerateStocksOnWarehousesReport";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (OAuth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<GenerateReportResponse>("/reports/stocks-on-warehouses/generate", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GenerateStocksOnWarehousesReport", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Отчет по стоимости услуг Запускает генерацию **отчета по стоимости услуг** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports.html)  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**               |**Какие поля нужны**             | |- -- -- -- -- -- -- -- -- -- -- -- -- -- --|- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --| |По дате начисления услуги    |&#x60;dateFrom&#x60; и &#x60;dateTo&#x60;            | |По дате формирования акта    |&#x60;year&#x60; и &#x60;month&#x60;                 |  Заказать отчеты обоих типов одним запросом нельзя.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateUnitedMarketplaceServicesReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GenerateReportResponse</returns>
        public GenerateReportResponse GenerateUnitedMarketplaceServicesReport(GenerateUnitedMarketplaceServicesReportRequest generateUnitedMarketplaceServicesReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0)
        {
            ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> localVarResponse = GenerateUnitedMarketplaceServicesReportWithHttpInfo(generateUnitedMarketplaceServicesReportRequest, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Отчет по стоимости услуг Запускает генерацию **отчета по стоимости услуг** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports.html)  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**               |**Какие поля нужны**             | |- -- -- -- -- -- -- -- -- -- -- -- -- -- --|- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --| |По дате начисления услуги    |&#x60;dateFrom&#x60; и &#x60;dateTo&#x60;            | |По дате формирования акта    |&#x60;year&#x60; и &#x60;month&#x60;                 |  Заказать отчеты обоих типов одним запросом нельзя.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateUnitedMarketplaceServicesReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GenerateReportResponse</returns>
        public ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> GenerateUnitedMarketplaceServicesReportWithHttpInfo(GenerateUnitedMarketplaceServicesReportRequest generateUnitedMarketplaceServicesReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0)
        {
            // verify the required parameter 'generateUnitedMarketplaceServicesReportRequest' is set
            if (generateUnitedMarketplaceServicesReportRequest == null)
            {
                throw new ympa_csharp_client.Client.ApiException(400, "Missing required parameter 'generateUnitedMarketplaceServicesReportRequest' when calling ReportsApi->GenerateUnitedMarketplaceServicesReport");
            }

            ympa_csharp_client.Client.RequestOptions localVarRequestOptions = new ympa_csharp_client.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ympa_csharp_client.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ympa_csharp_client.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(ympa_csharp_client.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }
            localVarRequestOptions.Data = generateUnitedMarketplaceServicesReportRequest;

            localVarRequestOptions.Operation = "ReportsApi.GenerateUnitedMarketplaceServicesReport";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (OAuth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<GenerateReportResponse>("/reports/united-marketplace-services/generate", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GenerateUnitedMarketplaceServicesReport", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Отчет по стоимости услуг Запускает генерацию **отчета по стоимости услуг** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports.html)  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**               |**Какие поля нужны**             | |- -- -- -- -- -- -- -- -- -- -- -- -- -- --|- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --| |По дате начисления услуги    |&#x60;dateFrom&#x60; и &#x60;dateTo&#x60;            | |По дате формирования акта    |&#x60;year&#x60; и &#x60;month&#x60;                 |  Заказать отчеты обоих типов одним запросом нельзя.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateUnitedMarketplaceServicesReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GenerateReportResponse</returns>
        public async System.Threading.Tasks.Task<GenerateReportResponse> GenerateUnitedMarketplaceServicesReportAsync(GenerateUnitedMarketplaceServicesReportRequest generateUnitedMarketplaceServicesReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> localVarResponse = await GenerateUnitedMarketplaceServicesReportWithHttpInfoAsync(generateUnitedMarketplaceServicesReportRequest, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Отчет по стоимости услуг Запускает генерацию **отчета по стоимости услуг** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports.html)  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**               |**Какие поля нужны**             | |- -- -- -- -- -- -- -- -- -- -- -- -- -- --|- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --| |По дате начисления услуги    |&#x60;dateFrom&#x60; и &#x60;dateTo&#x60;            | |По дате формирования акта    |&#x60;year&#x60; и &#x60;month&#x60;                 |  Заказать отчеты обоих типов одним запросом нельзя.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateUnitedMarketplaceServicesReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GenerateReportResponse)</returns>
        public async System.Threading.Tasks.Task<ympa_csharp_client.Client.ApiResponse<GenerateReportResponse>> GenerateUnitedMarketplaceServicesReportWithHttpInfoAsync(GenerateUnitedMarketplaceServicesReportRequest generateUnitedMarketplaceServicesReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'generateUnitedMarketplaceServicesReportRequest' is set
            if (generateUnitedMarketplaceServicesReportRequest == null)
            {
                throw new ympa_csharp_client.Client.ApiException(400, "Missing required parameter 'generateUnitedMarketplaceServicesReportRequest' when calling ReportsApi->GenerateUnitedMarketplaceServicesReport");
            }


            ympa_csharp_client.Client.RequestOptions localVarRequestOptions = new ympa_csharp_client.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ympa_csharp_client.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ympa_csharp_client.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(ympa_csharp_client.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }
            localVarRequestOptions.Data = generateUnitedMarketplaceServicesReportRequest;

            localVarRequestOptions.Operation = "ReportsApi.GenerateUnitedMarketplaceServicesReport";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (OAuth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<GenerateReportResponse>("/reports/united-marketplace-services/generate", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GenerateUnitedMarketplaceServicesReport", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Отчет по платежам Запускает генерацию **отчета по платежам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/transactions.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**           |**Какие поля нужны**                   | |- -- -- -- -- -- -- -- -- -- -- -- --|- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --| |О платежах за период     |&#x60;dateFrom&#x60; и &#x60;dateTo&#x60;                  | |О платежном поручении    |&#x60;bankOrderId&#x60; и &#x60;bankOrderDateTime&#x60;    |  Заказать отчеты обоих типов одним запросом нельзя.  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateUnitedNettingReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GenerateReportResponse</returns>
        public GenerateReportResponse GenerateUnitedNettingReport(GenerateUnitedNettingReportRequest generateUnitedNettingReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0)
        {
            ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> localVarResponse = GenerateUnitedNettingReportWithHttpInfo(generateUnitedNettingReportRequest, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Отчет по платежам Запускает генерацию **отчета по платежам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/transactions.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**           |**Какие поля нужны**                   | |- -- -- -- -- -- -- -- -- -- -- -- --|- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --| |О платежах за период     |&#x60;dateFrom&#x60; и &#x60;dateTo&#x60;                  | |О платежном поручении    |&#x60;bankOrderId&#x60; и &#x60;bankOrderDateTime&#x60;    |  Заказать отчеты обоих типов одним запросом нельзя.  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateUnitedNettingReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GenerateReportResponse</returns>
        public ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> GenerateUnitedNettingReportWithHttpInfo(GenerateUnitedNettingReportRequest generateUnitedNettingReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0)
        {
            // verify the required parameter 'generateUnitedNettingReportRequest' is set
            if (generateUnitedNettingReportRequest == null)
            {
                throw new ympa_csharp_client.Client.ApiException(400, "Missing required parameter 'generateUnitedNettingReportRequest' when calling ReportsApi->GenerateUnitedNettingReport");
            }

            ympa_csharp_client.Client.RequestOptions localVarRequestOptions = new ympa_csharp_client.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ympa_csharp_client.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ympa_csharp_client.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(ympa_csharp_client.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }
            localVarRequestOptions.Data = generateUnitedNettingReportRequest;

            localVarRequestOptions.Operation = "ReportsApi.GenerateUnitedNettingReport";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (OAuth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<GenerateReportResponse>("/reports/united-netting/generate", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GenerateUnitedNettingReport", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Отчет по платежам Запускает генерацию **отчета по платежам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/transactions.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**           |**Какие поля нужны**                   | |- -- -- -- -- -- -- -- -- -- -- -- --|- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --| |О платежах за период     |&#x60;dateFrom&#x60; и &#x60;dateTo&#x60;                  | |О платежном поручении    |&#x60;bankOrderId&#x60; и &#x60;bankOrderDateTime&#x60;    |  Заказать отчеты обоих типов одним запросом нельзя.  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateUnitedNettingReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GenerateReportResponse</returns>
        public async System.Threading.Tasks.Task<GenerateReportResponse> GenerateUnitedNettingReportAsync(GenerateUnitedNettingReportRequest generateUnitedNettingReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> localVarResponse = await GenerateUnitedNettingReportWithHttpInfoAsync(generateUnitedNettingReportRequest, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Отчет по платежам Запускает генерацию **отчета по платежам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/transactions.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**           |**Какие поля нужны**                   | |- -- -- -- -- -- -- -- -- -- -- -- --|- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --| |О платежах за период     |&#x60;dateFrom&#x60; и &#x60;dateTo&#x60;                  | |О платежном поручении    |&#x60;bankOrderId&#x60; и &#x60;bankOrderDateTime&#x60;    |  Заказать отчеты обоих типов одним запросом нельзя.  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateUnitedNettingReportRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GenerateReportResponse)</returns>
        public async System.Threading.Tasks.Task<ympa_csharp_client.Client.ApiResponse<GenerateReportResponse>> GenerateUnitedNettingReportWithHttpInfoAsync(GenerateUnitedNettingReportRequest generateUnitedNettingReportRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'generateUnitedNettingReportRequest' is set
            if (generateUnitedNettingReportRequest == null)
            {
                throw new ympa_csharp_client.Client.ApiException(400, "Missing required parameter 'generateUnitedNettingReportRequest' when calling ReportsApi->GenerateUnitedNettingReport");
            }


            ympa_csharp_client.Client.RequestOptions localVarRequestOptions = new ympa_csharp_client.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ympa_csharp_client.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ympa_csharp_client.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(ympa_csharp_client.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }
            localVarRequestOptions.Data = generateUnitedNettingReportRequest;

            localVarRequestOptions.Operation = "ReportsApi.GenerateUnitedNettingReport";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (OAuth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<GenerateReportResponse>("/reports/united-netting/generate", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GenerateUnitedNettingReport", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Отчет по заказам Запускает генерацию **отчета по заказам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/orders.html)  {% note info \&quot;\&quot; %}  Это новый отчет. Раньше мы так называли генерацию детальной информации по заказам. [Как получить детальную информацию по заказам](../../reference/stats/getOrdersStats.md)  {% endnote %}  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateUnitedOrdersRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GenerateReportResponse</returns>
        public GenerateReportResponse GenerateUnitedOrdersReport(GenerateUnitedOrdersRequest generateUnitedOrdersRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0)
        {
            ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> localVarResponse = GenerateUnitedOrdersReportWithHttpInfo(generateUnitedOrdersRequest, format);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Отчет по заказам Запускает генерацию **отчета по заказам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/orders.html)  {% note info \&quot;\&quot; %}  Это новый отчет. Раньше мы так называли генерацию детальной информации по заказам. [Как получить детальную информацию по заказам](../../reference/stats/getOrdersStats.md)  {% endnote %}  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateUnitedOrdersRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GenerateReportResponse</returns>
        public ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> GenerateUnitedOrdersReportWithHttpInfo(GenerateUnitedOrdersRequest generateUnitedOrdersRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0)
        {
            // verify the required parameter 'generateUnitedOrdersRequest' is set
            if (generateUnitedOrdersRequest == null)
            {
                throw new ympa_csharp_client.Client.ApiException(400, "Missing required parameter 'generateUnitedOrdersRequest' when calling ReportsApi->GenerateUnitedOrdersReport");
            }

            ympa_csharp_client.Client.RequestOptions localVarRequestOptions = new ympa_csharp_client.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ympa_csharp_client.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ympa_csharp_client.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(ympa_csharp_client.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }
            localVarRequestOptions.Data = generateUnitedOrdersRequest;

            localVarRequestOptions.Operation = "ReportsApi.GenerateUnitedOrdersReport";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (OAuth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<GenerateReportResponse>("/reports/united-orders/generate", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GenerateUnitedOrdersReport", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Отчет по заказам Запускает генерацию **отчета по заказам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/orders.html)  {% note info \&quot;\&quot; %}  Это новый отчет. Раньше мы так называли генерацию детальной информации по заказам. [Как получить детальную информацию по заказам](../../reference/stats/getOrdersStats.md)  {% endnote %}  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateUnitedOrdersRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GenerateReportResponse</returns>
        public async System.Threading.Tasks.Task<GenerateReportResponse> GenerateUnitedOrdersReportAsync(GenerateUnitedOrdersRequest generateUnitedOrdersRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            ympa_csharp_client.Client.ApiResponse<GenerateReportResponse> localVarResponse = await GenerateUnitedOrdersReportWithHttpInfoAsync(generateUnitedOrdersRequest, format, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Отчет по заказам Запускает генерацию **отчета по заказам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/orders.html)  {% note info \&quot;\&quot; %}  Это новый отчет. Раньше мы так называли генерацию детальной информации по заказам. [Как получить детальную информацию по заказам](../../reference/stats/getOrdersStats.md)  {% endnote %}  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="generateUnitedOrdersRequest"></param>
        /// <param name="format">Формат отчета. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GenerateReportResponse)</returns>
        public async System.Threading.Tasks.Task<ympa_csharp_client.Client.ApiResponse<GenerateReportResponse>> GenerateUnitedOrdersReportWithHttpInfoAsync(GenerateUnitedOrdersRequest generateUnitedOrdersRequest, ReportFormatType? format = default(ReportFormatType?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'generateUnitedOrdersRequest' is set
            if (generateUnitedOrdersRequest == null)
            {
                throw new ympa_csharp_client.Client.ApiException(400, "Missing required parameter 'generateUnitedOrdersRequest' when calling ReportsApi->GenerateUnitedOrdersReport");
            }


            ympa_csharp_client.Client.RequestOptions localVarRequestOptions = new ympa_csharp_client.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ympa_csharp_client.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ympa_csharp_client.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (format != null)
            {
                localVarRequestOptions.QueryParameters.Add(ympa_csharp_client.Client.ClientUtils.ParameterToMultiMap("", "format", format));
            }
            localVarRequestOptions.Data = generateUnitedOrdersRequest;

            localVarRequestOptions.Operation = "ReportsApi.GenerateUnitedOrdersReport";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (OAuth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<GenerateReportResponse>("/reports/united-orders/generate", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GenerateUnitedOrdersReport", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Получение заданного отчета Возвращает статус генерации заданного отчета и, если отчет готов, ссылку для скачивания.  Чтобы воспользоваться этим запросом, вначале нужно запустить генерацию отчета. [Инструкция](../../step-by-step/reports.md)  |**⚙️ Лимит:** 100 запросов в минуту| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="reportId">Идентификатор отчета, который вы получили после запуска генерации. </param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GetReportInfoResponse</returns>
        public GetReportInfoResponse GetReportInfo(string reportId, int operationIndex = 0)
        {
            ympa_csharp_client.Client.ApiResponse<GetReportInfoResponse> localVarResponse = GetReportInfoWithHttpInfo(reportId);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Получение заданного отчета Возвращает статус генерации заданного отчета и, если отчет готов, ссылку для скачивания.  Чтобы воспользоваться этим запросом, вначале нужно запустить генерацию отчета. [Инструкция](../../step-by-step/reports.md)  |**⚙️ Лимит:** 100 запросов в минуту| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="reportId">Идентификатор отчета, который вы получили после запуска генерации. </param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GetReportInfoResponse</returns>
        public ympa_csharp_client.Client.ApiResponse<GetReportInfoResponse> GetReportInfoWithHttpInfo(string reportId, int operationIndex = 0)
        {
            // verify the required parameter 'reportId' is set
            if (reportId == null)
            {
                throw new ympa_csharp_client.Client.ApiException(400, "Missing required parameter 'reportId' when calling ReportsApi->GetReportInfo");
            }

            ympa_csharp_client.Client.RequestOptions localVarRequestOptions = new ympa_csharp_client.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ympa_csharp_client.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ympa_csharp_client.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("reportId", ympa_csharp_client.Client.ClientUtils.ParameterToString(reportId)); // path parameter

            localVarRequestOptions.Operation = "ReportsApi.GetReportInfo";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (OAuth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<GetReportInfoResponse>("/reports/info/{reportId}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetReportInfo", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Получение заданного отчета Возвращает статус генерации заданного отчета и, если отчет готов, ссылку для скачивания.  Чтобы воспользоваться этим запросом, вначале нужно запустить генерацию отчета. [Инструкция](../../step-by-step/reports.md)  |**⚙️ Лимит:** 100 запросов в минуту| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="reportId">Идентификатор отчета, который вы получили после запуска генерации. </param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GetReportInfoResponse</returns>
        public async System.Threading.Tasks.Task<GetReportInfoResponse> GetReportInfoAsync(string reportId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            ympa_csharp_client.Client.ApiResponse<GetReportInfoResponse> localVarResponse = await GetReportInfoWithHttpInfoAsync(reportId, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Получение заданного отчета Возвращает статус генерации заданного отчета и, если отчет готов, ссылку для скачивания.  Чтобы воспользоваться этим запросом, вначале нужно запустить генерацию отчета. [Инструкция](../../step-by-step/reports.md)  |**⚙️ Лимит:** 100 запросов в минуту| |-| 
        /// </summary>
        /// <exception cref="ympa_csharp_client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="reportId">Идентификатор отчета, который вы получили после запуска генерации. </param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GetReportInfoResponse)</returns>
        public async System.Threading.Tasks.Task<ympa_csharp_client.Client.ApiResponse<GetReportInfoResponse>> GetReportInfoWithHttpInfoAsync(string reportId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'reportId' is set
            if (reportId == null)
            {
                throw new ympa_csharp_client.Client.ApiException(400, "Missing required parameter 'reportId' when calling ReportsApi->GetReportInfo");
            }


            ympa_csharp_client.Client.RequestOptions localVarRequestOptions = new ympa_csharp_client.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ympa_csharp_client.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ympa_csharp_client.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("reportId", ympa_csharp_client.Client.ClientUtils.ParameterToString(reportId)); // path parameter

            localVarRequestOptions.Operation = "ReportsApi.GetReportInfo";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (OAuth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<GetReportInfoResponse>("/reports/info/{reportId}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetReportInfo", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
