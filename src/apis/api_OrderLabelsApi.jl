# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct OrderLabelsApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `OrderLabelsApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ OrderLabelsApi }) = "https://api.partner.market.yandex.ru"

const _returntypes_generate_order_label_OrderLabelsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => String,
    Regex("^" * replace("400", "x"=>".") * "\$") => ApiClientDataErrorResponse,
    Regex("^" * replace("401", "x"=>".") * "\$") => ApiUnauthorizedErrorResponse,
    Regex("^" * replace("403", "x"=>".") * "\$") => ApiForbiddenErrorResponse,
    Regex("^" * replace("404", "x"=>".") * "\$") => ApiNotFoundErrorResponse,
    Regex("^" * replace("420", "x"=>".") * "\$") => ApiLimitErrorResponse,
    Regex("^" * replace("500", "x"=>".") * "\$") => ApiServerErrorResponse,
)

function _oacinternal_generate_order_label(_api::OrderLabelsApi, campaign_id::Int64, order_id::Int64, shipment_id::Int64, box_id::Int64; format=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_generate_order_label_OrderLabelsApi, "/campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes/{boxId}/label", ["OAuth", ])
    OpenAPI.Clients.set_param(_ctx.path, "campaignId", campaign_id)  # type Int64
    OpenAPI.Clients.set_param(_ctx.path, "orderId", order_id)  # type Int64
    OpenAPI.Clients.set_param(_ctx.path, "shipmentId", shipment_id)  # type Int64
    OpenAPI.Clients.set_param(_ctx.path, "boxId", box_id)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "format", format; style="", is_explode=false)  # type PageFormatType
    OpenAPI.Clients.set_header_accept(_ctx, ["application/pdf", "application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Готовый ярлык‑наклейка для коробки в заказе

Формирует ярлык‑наклейку для коробки в заказе и возвращает ярлык в PDF‑файле.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| 

Params:
- campaign_id::Int64 (required)
- order_id::Int64 (required)
- shipment_id::Int64 (required)
- box_id::Int64 (required)
- format::PageFormatType

Return: String, OpenAPI.Clients.ApiResponse
"""
function generate_order_label(_api::OrderLabelsApi, campaign_id::Int64, order_id::Int64, shipment_id::Int64, box_id::Int64; format=nothing, _mediaType=nothing)
    _ctx = _oacinternal_generate_order_label(_api, campaign_id, order_id, shipment_id, box_id; format=format, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function generate_order_label(_api::OrderLabelsApi, response_stream::Channel, campaign_id::Int64, order_id::Int64, shipment_id::Int64, box_id::Int64; format=nothing, _mediaType=nothing)
    _ctx = _oacinternal_generate_order_label(_api, campaign_id, order_id, shipment_id, box_id; format=format, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_generate_order_labels_OrderLabelsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => String,
    Regex("^" * replace("400", "x"=>".") * "\$") => ApiClientDataErrorResponse,
    Regex("^" * replace("401", "x"=>".") * "\$") => ApiUnauthorizedErrorResponse,
    Regex("^" * replace("403", "x"=>".") * "\$") => ApiForbiddenErrorResponse,
    Regex("^" * replace("404", "x"=>".") * "\$") => ApiNotFoundErrorResponse,
    Regex("^" * replace("420", "x"=>".") * "\$") => ApiLimitErrorResponse,
    Regex("^" * replace("500", "x"=>".") * "\$") => ApiServerErrorResponse,
)

function _oacinternal_generate_order_labels(_api::OrderLabelsApi, campaign_id::Int64, order_id::Int64; format=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_generate_order_labels_OrderLabelsApi, "/campaigns/{campaignId}/orders/{orderId}/delivery/labels", ["OAuth", ])
    OpenAPI.Clients.set_param(_ctx.path, "campaignId", campaign_id)  # type Int64
    OpenAPI.Clients.set_param(_ctx.path, "orderId", order_id)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "format", format; style="", is_explode=false)  # type PageFormatType
    OpenAPI.Clients.set_header_accept(_ctx, ["application/pdf", "application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Готовые ярлыки‑наклейки на все коробки в одном заказе

Возвращает PDF-файл с ярлыками, которые нужно наклеить на коробки перед отгрузкой. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  На вход нужно передать идентификатор заказа и один необязательный параметр, который управляет версткой PDF-файла.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| 

Params:
- campaign_id::Int64 (required)
- order_id::Int64 (required)
- format::PageFormatType

Return: String, OpenAPI.Clients.ApiResponse
"""
function generate_order_labels(_api::OrderLabelsApi, campaign_id::Int64, order_id::Int64; format=nothing, _mediaType=nothing)
    _ctx = _oacinternal_generate_order_labels(_api, campaign_id, order_id; format=format, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function generate_order_labels(_api::OrderLabelsApi, response_stream::Channel, campaign_id::Int64, order_id::Int64; format=nothing, _mediaType=nothing)
    _ctx = _oacinternal_generate_order_labels(_api, campaign_id, order_id; format=format, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_get_order_labels_data_OrderLabelsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => GetOrderLabelsDataResponse,
    Regex("^" * replace("400", "x"=>".") * "\$") => ApiClientDataErrorResponse,
    Regex("^" * replace("401", "x"=>".") * "\$") => ApiUnauthorizedErrorResponse,
    Regex("^" * replace("403", "x"=>".") * "\$") => ApiForbiddenErrorResponse,
    Regex("^" * replace("404", "x"=>".") * "\$") => ApiNotFoundErrorResponse,
    Regex("^" * replace("420", "x"=>".") * "\$") => ApiLimitErrorResponse,
    Regex("^" * replace("500", "x"=>".") * "\$") => ApiServerErrorResponse,
)

function _oacinternal_get_order_labels_data(_api::OrderLabelsApi, campaign_id::Int64, order_id::Int64; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_order_labels_data_OrderLabelsApi, "/campaigns/{campaignId}/orders/{orderId}/delivery/labels/data", ["OAuth", ])
    OpenAPI.Clients.set_param(_ctx.path, "campaignId", campaign_id)  # type Int64
    OpenAPI.Clients.set_param(_ctx.path, "orderId", order_id)  # type Int64
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Данные для самостоятельного изготовления ярлыков

Возвращает информацию на ярлыках, которые клеятся на коробки в заказе.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| 

Params:
- campaign_id::Int64 (required)
- order_id::Int64 (required)

Return: GetOrderLabelsDataResponse, OpenAPI.Clients.ApiResponse
"""
function get_order_labels_data(_api::OrderLabelsApi, campaign_id::Int64, order_id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_get_order_labels_data(_api, campaign_id, order_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_order_labels_data(_api::OrderLabelsApi, response_stream::Channel, campaign_id::Int64, order_id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_get_order_labels_data(_api, campaign_id, order_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export generate_order_label
export generate_order_labels
export get_order_labels_data
