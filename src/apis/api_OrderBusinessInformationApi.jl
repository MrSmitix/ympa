# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct OrderBusinessInformationApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `OrderBusinessInformationApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ OrderBusinessInformationApi }) = "https://api.partner.market.yandex.ru"

const _returntypes_get_order_business_buyer_info_OrderBusinessInformationApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => GetBusinessBuyerInfoResponse,
    Regex("^" * replace("400", "x"=>".") * "\$") => ApiClientDataErrorResponse,
    Regex("^" * replace("401", "x"=>".") * "\$") => ApiUnauthorizedErrorResponse,
    Regex("^" * replace("403", "x"=>".") * "\$") => ApiForbiddenErrorResponse,
    Regex("^" * replace("404", "x"=>".") * "\$") => ApiNotFoundErrorResponse,
    Regex("^" * replace("420", "x"=>".") * "\$") => ApiLimitErrorResponse,
    Regex("^" * replace("500", "x"=>".") * "\$") => ApiServerErrorResponse,
)

function _oacinternal_get_order_business_buyer_info(_api::OrderBusinessInformationApi, campaign_id::Int64, order_id::Int64; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_get_order_business_buyer_info_OrderBusinessInformationApi, "/campaigns/{campaignId}/orders/{orderId}/business-buyer", ["OAuth", ])
    OpenAPI.Clients.set_param(_ctx.path, "campaignId", campaign_id)  # type Int64
    OpenAPI.Clients.set_param(_ctx.path, "orderId", order_id)  # type Int64
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Информация о покупателе — юридическом лице

Возвращает информацию о покупателе по идентификатору заказа.  {% note info \"\" %}  Чтобы получить информацию о покупателе, который является физическим лицом, воспользуйтесь запросом [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).  {% endnote %}  Получить данные можно, только если заказ находится в статусе `PROCESSING`, `DELIVERY`, `PICKUP` или `DELIVERED`.  Если у вас настроена работа с push-компонентом, Маркет отправит уведомление о смене статуса заказа с помощью запроса [POST order/status](../../pushapi/reference/postOrderStatus.md).  |**⚙️ Лимит:** 3 000 запросов в час| |-| 

Params:
- campaign_id::Int64 (required)
- order_id::Int64 (required)

Return: GetBusinessBuyerInfoResponse, OpenAPI.Clients.ApiResponse
"""
function get_order_business_buyer_info(_api::OrderBusinessInformationApi, campaign_id::Int64, order_id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_get_order_business_buyer_info(_api, campaign_id, order_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_order_business_buyer_info(_api::OrderBusinessInformationApi, response_stream::Channel, campaign_id::Int64, order_id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_get_order_business_buyer_info(_api, campaign_id, order_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_get_order_business_documents_info_OrderBusinessInformationApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => GetBusinessDocumentsInfoResponse,
    Regex("^" * replace("400", "x"=>".") * "\$") => ApiClientDataErrorResponse,
    Regex("^" * replace("401", "x"=>".") * "\$") => ApiUnauthorizedErrorResponse,
    Regex("^" * replace("403", "x"=>".") * "\$") => ApiForbiddenErrorResponse,
    Regex("^" * replace("404", "x"=>".") * "\$") => ApiNotFoundErrorResponse,
    Regex("^" * replace("420", "x"=>".") * "\$") => ApiLimitErrorResponse,
    Regex("^" * replace("500", "x"=>".") * "\$") => ApiServerErrorResponse,
)

function _oacinternal_get_order_business_documents_info(_api::OrderBusinessInformationApi, campaign_id::Int64, order_id::Int64; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_get_order_business_documents_info_OrderBusinessInformationApi, "/campaigns/{campaignId}/orders/{orderId}/documents", ["OAuth", ])
    OpenAPI.Clients.set_param(_ctx.path, "campaignId", campaign_id)  # type Int64
    OpenAPI.Clients.set_param(_ctx.path, "orderId", order_id)  # type Int64
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Информация о документах

Возвращает информацию о документах по идентификатору заказа.  Получить данные можно после того, как заказ перейдет в статус `DELIVERED`.  Если у вас настроена работа с push-компонентом, Маркет отправит уведомление о смене статуса заказа с помощью запроса [POST order/status](../../pushapi/reference/postOrderStatus.md).  |**⚙️ Лимит:** 3 000 запросов в час| |-| 

Params:
- campaign_id::Int64 (required)
- order_id::Int64 (required)

Return: GetBusinessDocumentsInfoResponse, OpenAPI.Clients.ApiResponse
"""
function get_order_business_documents_info(_api::OrderBusinessInformationApi, campaign_id::Int64, order_id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_get_order_business_documents_info(_api, campaign_id, order_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_order_business_documents_info(_api::OrderBusinessInformationApi, response_stream::Channel, campaign_id::Int64, order_id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_get_order_business_documents_info(_api, campaign_id, order_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export get_order_business_buyer_info
export get_order_business_documents_info
