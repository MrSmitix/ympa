# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct ReportsApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `ReportsApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ ReportsApi }) = "https://api.partner.market.yandex.ru"

const _returntypes_generate_boost_consolidated_report_ReportsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => GenerateReportResponse,
    Regex("^" * replace("400", "x"=>".") * "\$") => ApiClientDataErrorResponse,
    Regex("^" * replace("401", "x"=>".") * "\$") => ApiUnauthorizedErrorResponse,
    Regex("^" * replace("403", "x"=>".") * "\$") => ApiForbiddenErrorResponse,
    Regex("^" * replace("420", "x"=>".") * "\$") => ApiLimitErrorResponse,
    Regex("^" * replace("500", "x"=>".") * "\$") => ApiServerErrorResponse,
)

function _oacinternal_generate_boost_consolidated_report(_api::ReportsApi, generate_boost_consolidated_request::GenerateBoostConsolidatedRequest; format=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_generate_boost_consolidated_report_ReportsApi, "/reports/boost-consolidated/generate", ["OAuth", ], generate_boost_consolidated_request)
    OpenAPI.Clients.set_param(_ctx.query, "format", format; style="", is_explode=false)  # type ReportFormatType
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Отчет по бусту продаж

Запускает генерацию **сводного отчета по бусту продаж** за заданный период. Отчет содержит информацию по всем кампаниям, созданным и через API, и в кабинете.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 

Params:
- generate_boost_consolidated_request::GenerateBoostConsolidatedRequest (required)
- format::ReportFormatType

Return: GenerateReportResponse, OpenAPI.Clients.ApiResponse
"""
function generate_boost_consolidated_report(_api::ReportsApi, generate_boost_consolidated_request::GenerateBoostConsolidatedRequest; format=nothing, _mediaType=nothing)
    _ctx = _oacinternal_generate_boost_consolidated_report(_api, generate_boost_consolidated_request; format=format, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function generate_boost_consolidated_report(_api::ReportsApi, response_stream::Channel, generate_boost_consolidated_request::GenerateBoostConsolidatedRequest; format=nothing, _mediaType=nothing)
    _ctx = _oacinternal_generate_boost_consolidated_report(_api, generate_boost_consolidated_request; format=format, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_generate_competitors_position_report_ReportsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => GenerateReportResponse,
    Regex("^" * replace("400", "x"=>".") * "\$") => ApiClientDataErrorResponse,
    Regex("^" * replace("401", "x"=>".") * "\$") => ApiUnauthorizedErrorResponse,
    Regex("^" * replace("403", "x"=>".") * "\$") => ApiForbiddenErrorResponse,
    Regex("^" * replace("420", "x"=>".") * "\$") => ApiLimitErrorResponse,
    Regex("^" * replace("500", "x"=>".") * "\$") => ApiServerErrorResponse,
)

function _oacinternal_generate_competitors_position_report(_api::ReportsApi, generate_competitors_position_report_request::GenerateCompetitorsPositionReportRequest; format=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_generate_competitors_position_report_ReportsApi, "/reports/competitors-position/generate", ["OAuth", ], generate_competitors_position_report_request)
    OpenAPI.Clients.set_param(_ctx.query, "format", format; style="", is_explode=false)  # type ReportFormatType
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Отчет «Конкурентная позиция»

Запускает генерацию **отчета «Конкурентная позиция»** за заданный период. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/analytics/competitors.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  {% note info \"Значение -1 в отчете\" %}  Если в CSV-файле в столбце **POSITION** стоит -1, в этот день не было заказов с товарами в указанной категории.  {% endnote %}  |**⚙️ Лимит:** 10 запросов в час| |-| 

Params:
- generate_competitors_position_report_request::GenerateCompetitorsPositionReportRequest (required)
- format::ReportFormatType

Return: GenerateReportResponse, OpenAPI.Clients.ApiResponse
"""
function generate_competitors_position_report(_api::ReportsApi, generate_competitors_position_report_request::GenerateCompetitorsPositionReportRequest; format=nothing, _mediaType=nothing)
    _ctx = _oacinternal_generate_competitors_position_report(_api, generate_competitors_position_report_request; format=format, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function generate_competitors_position_report(_api::ReportsApi, response_stream::Channel, generate_competitors_position_report_request::GenerateCompetitorsPositionReportRequest; format=nothing, _mediaType=nothing)
    _ctx = _oacinternal_generate_competitors_position_report(_api, generate_competitors_position_report_request; format=format, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_generate_goods_feedback_report_ReportsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => GenerateReportResponse,
    Regex("^" * replace("400", "x"=>".") * "\$") => ApiClientDataErrorResponse,
    Regex("^" * replace("401", "x"=>".") * "\$") => ApiUnauthorizedErrorResponse,
    Regex("^" * replace("403", "x"=>".") * "\$") => ApiForbiddenErrorResponse,
    Regex("^" * replace("420", "x"=>".") * "\$") => ApiLimitErrorResponse,
    Regex("^" * replace("500", "x"=>".") * "\$") => ApiServerErrorResponse,
)

function _oacinternal_generate_goods_feedback_report(_api::ReportsApi, generate_goods_feedback_request::GenerateGoodsFeedbackRequest; format=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_generate_goods_feedback_report_ReportsApi, "/reports/goods-feedback/generate", ["OAuth", ], generate_goods_feedback_request)
    OpenAPI.Clients.set_param(_ctx.query, "format", format; style="", is_explode=false)  # type ReportFormatType
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Отчет по отзывам о товарах

Запускает генерацию **отчета по отзывам о товарах**. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/marketing/plus-reviews#stat)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 

Params:
- generate_goods_feedback_request::GenerateGoodsFeedbackRequest (required)
- format::ReportFormatType

Return: GenerateReportResponse, OpenAPI.Clients.ApiResponse
"""
function generate_goods_feedback_report(_api::ReportsApi, generate_goods_feedback_request::GenerateGoodsFeedbackRequest; format=nothing, _mediaType=nothing)
    _ctx = _oacinternal_generate_goods_feedback_report(_api, generate_goods_feedback_request; format=format, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function generate_goods_feedback_report(_api::ReportsApi, response_stream::Channel, generate_goods_feedback_request::GenerateGoodsFeedbackRequest; format=nothing, _mediaType=nothing)
    _ctx = _oacinternal_generate_goods_feedback_report(_api, generate_goods_feedback_request; format=format, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_generate_goods_movement_report_ReportsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => GenerateReportResponse,
    Regex("^" * replace("400", "x"=>".") * "\$") => ApiClientDataErrorResponse,
    Regex("^" * replace("401", "x"=>".") * "\$") => ApiUnauthorizedErrorResponse,
    Regex("^" * replace("403", "x"=>".") * "\$") => ApiForbiddenErrorResponse,
    Regex("^" * replace("420", "x"=>".") * "\$") => ApiLimitErrorResponse,
    Regex("^" * replace("500", "x"=>".") * "\$") => ApiServerErrorResponse,
)

function _oacinternal_generate_goods_movement_report(_api::ReportsApi, generate_goods_movement_report_request::GenerateGoodsMovementReportRequest; format=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_generate_goods_movement_report_ReportsApi, "/reports/goods-movement/generate", ["OAuth", ], generate_goods_movement_report_request)
    OpenAPI.Clients.set_param(_ctx.query, "format", format; style="", is_explode=false)  # type ReportFormatType
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Отчет по движению товаров

Запускает генерацию **отчета по движению товаров**. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#flow)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 

Params:
- generate_goods_movement_report_request::GenerateGoodsMovementReportRequest (required)
- format::ReportFormatType

Return: GenerateReportResponse, OpenAPI.Clients.ApiResponse
"""
function generate_goods_movement_report(_api::ReportsApi, generate_goods_movement_report_request::GenerateGoodsMovementReportRequest; format=nothing, _mediaType=nothing)
    _ctx = _oacinternal_generate_goods_movement_report(_api, generate_goods_movement_report_request; format=format, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function generate_goods_movement_report(_api::ReportsApi, response_stream::Channel, generate_goods_movement_report_request::GenerateGoodsMovementReportRequest; format=nothing, _mediaType=nothing)
    _ctx = _oacinternal_generate_goods_movement_report(_api, generate_goods_movement_report_request; format=format, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_generate_goods_realization_report_ReportsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => GenerateReportResponse,
    Regex("^" * replace("400", "x"=>".") * "\$") => ApiClientDataErrorResponse,
    Regex("^" * replace("401", "x"=>".") * "\$") => ApiUnauthorizedErrorResponse,
    Regex("^" * replace("403", "x"=>".") * "\$") => ApiForbiddenErrorResponse,
    Regex("^" * replace("420", "x"=>".") * "\$") => ApiLimitErrorResponse,
    Regex("^" * replace("500", "x"=>".") * "\$") => ApiServerErrorResponse,
)

function _oacinternal_generate_goods_realization_report(_api::ReportsApi, generate_goods_realization_report_request::GenerateGoodsRealizationReportRequest; format=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_generate_goods_realization_report_ReportsApi, "/reports/goods-realization/generate", ["OAuth", ], generate_goods_realization_report_request)
    OpenAPI.Clients.set_param(_ctx.query, "format", format; style="", is_explode=false)  # type ReportFormatType
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Отчет по реализации

Запускает генерацию **отчета по реализации** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#sales-report)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 

Params:
- generate_goods_realization_report_request::GenerateGoodsRealizationReportRequest (required)
- format::ReportFormatType

Return: GenerateReportResponse, OpenAPI.Clients.ApiResponse
"""
function generate_goods_realization_report(_api::ReportsApi, generate_goods_realization_report_request::GenerateGoodsRealizationReportRequest; format=nothing, _mediaType=nothing)
    _ctx = _oacinternal_generate_goods_realization_report(_api, generate_goods_realization_report_request; format=format, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function generate_goods_realization_report(_api::ReportsApi, response_stream::Channel, generate_goods_realization_report_request::GenerateGoodsRealizationReportRequest; format=nothing, _mediaType=nothing)
    _ctx = _oacinternal_generate_goods_realization_report(_api, generate_goods_realization_report_request; format=format, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_generate_goods_turnover_report_ReportsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => GenerateReportResponse,
    Regex("^" * replace("400", "x"=>".") * "\$") => ApiClientDataErrorResponse,
    Regex("^" * replace("401", "x"=>".") * "\$") => ApiUnauthorizedErrorResponse,
    Regex("^" * replace("403", "x"=>".") * "\$") => ApiForbiddenErrorResponse,
    Regex("^" * replace("420", "x"=>".") * "\$") => ApiLimitErrorResponse,
    Regex("^" * replace("500", "x"=>".") * "\$") => ApiServerErrorResponse,
)

function _oacinternal_generate_goods_turnover_report(_api::ReportsApi, generate_goods_turnover_request::GenerateGoodsTurnoverRequest; format=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_generate_goods_turnover_report_ReportsApi, "/reports/goods-turnover/generate", ["OAuth", ], generate_goods_turnover_request)
    OpenAPI.Clients.set_param(_ctx.query, "format", format; style="", is_explode=false)  # type ReportFormatType
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Отчет по оборачиваемости

Запускает генерацию **отчета по оборачиваемости** за заданную дату.  [Что это за отчет](https://yandex.ru/support/marketplace/analytics/turnover.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 

Params:
- generate_goods_turnover_request::GenerateGoodsTurnoverRequest (required)
- format::ReportFormatType

Return: GenerateReportResponse, OpenAPI.Clients.ApiResponse
"""
function generate_goods_turnover_report(_api::ReportsApi, generate_goods_turnover_request::GenerateGoodsTurnoverRequest; format=nothing, _mediaType=nothing)
    _ctx = _oacinternal_generate_goods_turnover_report(_api, generate_goods_turnover_request; format=format, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function generate_goods_turnover_report(_api::ReportsApi, response_stream::Channel, generate_goods_turnover_request::GenerateGoodsTurnoverRequest; format=nothing, _mediaType=nothing)
    _ctx = _oacinternal_generate_goods_turnover_report(_api, generate_goods_turnover_request; format=format, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_generate_mass_order_labels_report_ReportsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => GenerateReportResponse,
    Regex("^" * replace("400", "x"=>".") * "\$") => ApiClientDataErrorResponse,
    Regex("^" * replace("401", "x"=>".") * "\$") => ApiUnauthorizedErrorResponse,
    Regex("^" * replace("403", "x"=>".") * "\$") => ApiForbiddenErrorResponse,
    Regex("^" * replace("420", "x"=>".") * "\$") => ApiLimitErrorResponse,
    Regex("^" * replace("500", "x"=>".") * "\$") => ApiServerErrorResponse,
)

function _oacinternal_generate_mass_order_labels_report(_api::ReportsApi, generate_mass_order_labels_request::GenerateMassOrderLabelsRequest; format=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_generate_mass_order_labels_report_ReportsApi, "/reports/documents/labels/generate", ["OAuth", ], generate_mass_order_labels_request)
    OpenAPI.Clients.set_param(_ctx.query, "format", format; style="", is_explode=false)  # type PageFormatType
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Готовые ярлыки‑наклейки на все коробки в нескольких заказах

Запускает генерацию PDF-файла с ярлыками для переданных заказов. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  Узнать статус генерации и получить ссылку на готовый файл можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 1000 запросов в час| |-| 

Params:
- generate_mass_order_labels_request::GenerateMassOrderLabelsRequest (required)
- format::PageFormatType

Return: GenerateReportResponse, OpenAPI.Clients.ApiResponse
"""
function generate_mass_order_labels_report(_api::ReportsApi, generate_mass_order_labels_request::GenerateMassOrderLabelsRequest; format=nothing, _mediaType=nothing)
    _ctx = _oacinternal_generate_mass_order_labels_report(_api, generate_mass_order_labels_request; format=format, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function generate_mass_order_labels_report(_api::ReportsApi, response_stream::Channel, generate_mass_order_labels_request::GenerateMassOrderLabelsRequest; format=nothing, _mediaType=nothing)
    _ctx = _oacinternal_generate_mass_order_labels_report(_api, generate_mass_order_labels_request; format=format, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_generate_prices_report_ReportsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => GenerateReportResponse,
    Regex("^" * replace("400", "x"=>".") * "\$") => ApiClientDataErrorResponse,
    Regex("^" * replace("401", "x"=>".") * "\$") => ApiUnauthorizedErrorResponse,
    Regex("^" * replace("403", "x"=>".") * "\$") => ApiForbiddenErrorResponse,
    Regex("^" * replace("420", "x"=>".") * "\$") => ApiLimitErrorResponse,
    Regex("^" * replace("500", "x"=>".") * "\$") => ApiServerErrorResponse,
)

function _oacinternal_generate_prices_report(_api::ReportsApi, generate_prices_report_request::GeneratePricesReportRequest; format=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_generate_prices_report_ReportsApi, "/reports/prices/generate", ["OAuth", ], generate_prices_report_request)
    OpenAPI.Clients.set_param(_ctx.query, "format", format; style="", is_explode=false)  # type ReportFormatType
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Отчет «Цены на рынке»

Запускает генерацию **отчета «Цены на рынке»**.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 

Params:
- generate_prices_report_request::GeneratePricesReportRequest (required)
- format::ReportFormatType

Return: GenerateReportResponse, OpenAPI.Clients.ApiResponse
"""
function generate_prices_report(_api::ReportsApi, generate_prices_report_request::GeneratePricesReportRequest; format=nothing, _mediaType=nothing)
    _ctx = _oacinternal_generate_prices_report(_api, generate_prices_report_request; format=format, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function generate_prices_report(_api::ReportsApi, response_stream::Channel, generate_prices_report_request::GeneratePricesReportRequest; format=nothing, _mediaType=nothing)
    _ctx = _oacinternal_generate_prices_report(_api, generate_prices_report_request; format=format, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_generate_shelfs_statistics_report_ReportsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => GenerateReportResponse,
    Regex("^" * replace("400", "x"=>".") * "\$") => ApiClientDataErrorResponse,
    Regex("^" * replace("401", "x"=>".") * "\$") => ApiUnauthorizedErrorResponse,
    Regex("^" * replace("403", "x"=>".") * "\$") => ApiForbiddenErrorResponse,
    Regex("^" * replace("420", "x"=>".") * "\$") => ApiLimitErrorResponse,
    Regex("^" * replace("500", "x"=>".") * "\$") => ApiServerErrorResponse,
)

function _oacinternal_generate_shelfs_statistics_report(_api::ReportsApi, generate_shelfs_statistics_request::GenerateShelfsStatisticsRequest; format=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_generate_shelfs_statistics_report_ReportsApi, "/reports/shelf-statistics/generate", ["OAuth", ], generate_shelfs_statistics_request)
    OpenAPI.Clients.set_param(_ctx.query, "format", format; style="", is_explode=false)  # type ReportFormatType
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Отчет по полкам

Запускает генерацию **сводного отчета по полкам** — рекламным блокам с баннером или видео и набором товаров. Подробнее о них читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/shelf).  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 

Params:
- generate_shelfs_statistics_request::GenerateShelfsStatisticsRequest (required)
- format::ReportFormatType

Return: GenerateReportResponse, OpenAPI.Clients.ApiResponse
"""
function generate_shelfs_statistics_report(_api::ReportsApi, generate_shelfs_statistics_request::GenerateShelfsStatisticsRequest; format=nothing, _mediaType=nothing)
    _ctx = _oacinternal_generate_shelfs_statistics_report(_api, generate_shelfs_statistics_request; format=format, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function generate_shelfs_statistics_report(_api::ReportsApi, response_stream::Channel, generate_shelfs_statistics_request::GenerateShelfsStatisticsRequest; format=nothing, _mediaType=nothing)
    _ctx = _oacinternal_generate_shelfs_statistics_report(_api, generate_shelfs_statistics_request; format=format, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_generate_shipment_list_document_report_ReportsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => GenerateReportResponse,
    Regex("^" * replace("400", "x"=>".") * "\$") => ApiClientDataErrorResponse,
    Regex("^" * replace("401", "x"=>".") * "\$") => ApiUnauthorizedErrorResponse,
    Regex("^" * replace("403", "x"=>".") * "\$") => ApiForbiddenErrorResponse,
    Regex("^" * replace("420", "x"=>".") * "\$") => ApiLimitErrorResponse,
    Regex("^" * replace("500", "x"=>".") * "\$") => ApiServerErrorResponse,
)

function _oacinternal_generate_shipment_list_document_report(_api::ReportsApi, generate_shipment_list_document_report_request::GenerateShipmentListDocumentReportRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_generate_shipment_list_document_report_ReportsApi, "/reports/documents/shipment-list/generate", ["OAuth", ], generate_shipment_list_document_report_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Получение листа сборки

Запускает генерацию **листа сборки** для отгрузки.  Узнать статус генерации и получить ссылку на готовый документ можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 

Params:
- generate_shipment_list_document_report_request::GenerateShipmentListDocumentReportRequest (required)

Return: GenerateReportResponse, OpenAPI.Clients.ApiResponse
"""
function generate_shipment_list_document_report(_api::ReportsApi, generate_shipment_list_document_report_request::GenerateShipmentListDocumentReportRequest; _mediaType=nothing)
    _ctx = _oacinternal_generate_shipment_list_document_report(_api, generate_shipment_list_document_report_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function generate_shipment_list_document_report(_api::ReportsApi, response_stream::Channel, generate_shipment_list_document_report_request::GenerateShipmentListDocumentReportRequest; _mediaType=nothing)
    _ctx = _oacinternal_generate_shipment_list_document_report(_api, generate_shipment_list_document_report_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_generate_shows_sales_report_ReportsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => GenerateReportResponse,
    Regex("^" * replace("400", "x"=>".") * "\$") => ApiClientDataErrorResponse,
    Regex("^" * replace("401", "x"=>".") * "\$") => ApiUnauthorizedErrorResponse,
    Regex("^" * replace("403", "x"=>".") * "\$") => ApiForbiddenErrorResponse,
    Regex("^" * replace("420", "x"=>".") * "\$") => ApiLimitErrorResponse,
    Regex("^" * replace("500", "x"=>".") * "\$") => ApiServerErrorResponse,
)

function _oacinternal_generate_shows_sales_report(_api::ReportsApi, generate_shows_sales_report_request::GenerateShowsSalesReportRequest; format=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_generate_shows_sales_report_ReportsApi, "/reports/shows-sales/generate", ["OAuth", ], generate_shows_sales_report_request)
    OpenAPI.Clients.set_param(_ctx.query, "format", format; style="", is_explode=false)  # type ReportFormatType
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Отчет «Аналитика продаж»

Запускает генерацию **отчета «Аналитика продаж»** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/shows-sales.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 10 запросов в час| |-| 

Params:
- generate_shows_sales_report_request::GenerateShowsSalesReportRequest (required)
- format::ReportFormatType

Return: GenerateReportResponse, OpenAPI.Clients.ApiResponse
"""
function generate_shows_sales_report(_api::ReportsApi, generate_shows_sales_report_request::GenerateShowsSalesReportRequest; format=nothing, _mediaType=nothing)
    _ctx = _oacinternal_generate_shows_sales_report(_api, generate_shows_sales_report_request; format=format, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function generate_shows_sales_report(_api::ReportsApi, response_stream::Channel, generate_shows_sales_report_request::GenerateShowsSalesReportRequest; format=nothing, _mediaType=nothing)
    _ctx = _oacinternal_generate_shows_sales_report(_api, generate_shows_sales_report_request; format=format, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_generate_stocks_on_warehouses_report_ReportsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => GenerateReportResponse,
    Regex("^" * replace("400", "x"=>".") * "\$") => ApiClientDataErrorResponse,
    Regex("^" * replace("401", "x"=>".") * "\$") => ApiUnauthorizedErrorResponse,
    Regex("^" * replace("403", "x"=>".") * "\$") => ApiForbiddenErrorResponse,
    Regex("^" * replace("420", "x"=>".") * "\$") => ApiLimitErrorResponse,
    Regex("^" * replace("500", "x"=>".") * "\$") => ApiServerErrorResponse,
)

function _oacinternal_generate_stocks_on_warehouses_report(_api::ReportsApi, generate_stocks_on_warehouses_report_request::GenerateStocksOnWarehousesReportRequest; format=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_generate_stocks_on_warehouses_report_ReportsApi, "/reports/stocks-on-warehouses/generate", ["OAuth", ], generate_stocks_on_warehouses_report_request)
    OpenAPI.Clients.set_param(_ctx.query, "format", format; style="", is_explode=false)  # type ReportFormatType
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Отчет по остаткам на складах

Запускает генерацию **отчета по остаткам на складах**. Отчет содержит данные:  * Для модели FBY — об остатках на складах Маркета. * Для остальных моделей — об остатках на соответствующем складе магазина.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 

Params:
- generate_stocks_on_warehouses_report_request::GenerateStocksOnWarehousesReportRequest (required)
- format::ReportFormatType

Return: GenerateReportResponse, OpenAPI.Clients.ApiResponse
"""
function generate_stocks_on_warehouses_report(_api::ReportsApi, generate_stocks_on_warehouses_report_request::GenerateStocksOnWarehousesReportRequest; format=nothing, _mediaType=nothing)
    _ctx = _oacinternal_generate_stocks_on_warehouses_report(_api, generate_stocks_on_warehouses_report_request; format=format, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function generate_stocks_on_warehouses_report(_api::ReportsApi, response_stream::Channel, generate_stocks_on_warehouses_report_request::GenerateStocksOnWarehousesReportRequest; format=nothing, _mediaType=nothing)
    _ctx = _oacinternal_generate_stocks_on_warehouses_report(_api, generate_stocks_on_warehouses_report_request; format=format, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_generate_united_marketplace_services_report_ReportsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => GenerateReportResponse,
    Regex("^" * replace("400", "x"=>".") * "\$") => ApiClientDataErrorResponse,
    Regex("^" * replace("401", "x"=>".") * "\$") => ApiUnauthorizedErrorResponse,
    Regex("^" * replace("403", "x"=>".") * "\$") => ApiForbiddenErrorResponse,
    Regex("^" * replace("420", "x"=>".") * "\$") => ApiLimitErrorResponse,
    Regex("^" * replace("500", "x"=>".") * "\$") => ApiServerErrorResponse,
)

function _oacinternal_generate_united_marketplace_services_report(_api::ReportsApi, generate_united_marketplace_services_report_request::GenerateUnitedMarketplaceServicesReportRequest; format=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_generate_united_marketplace_services_report_ReportsApi, "/reports/united-marketplace-services/generate", ["OAuth", ], generate_united_marketplace_services_report_request)
    OpenAPI.Clients.set_param(_ctx.query, "format", format; style="", is_explode=false)  # type ReportFormatType
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Отчет по стоимости услуг

Запускает генерацию **отчета по стоимости услуг** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports.html)  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**               |**Какие поля нужны**             | |-----------------------------|---------------------------------| |По дате начисления услуги    |`dateFrom` и `dateTo`            | |По дате формирования акта    |`year` и `month`                 |  Заказать отчеты обоих типов одним запросом нельзя.  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 

Params:
- generate_united_marketplace_services_report_request::GenerateUnitedMarketplaceServicesReportRequest (required)
- format::ReportFormatType

Return: GenerateReportResponse, OpenAPI.Clients.ApiResponse
"""
function generate_united_marketplace_services_report(_api::ReportsApi, generate_united_marketplace_services_report_request::GenerateUnitedMarketplaceServicesReportRequest; format=nothing, _mediaType=nothing)
    _ctx = _oacinternal_generate_united_marketplace_services_report(_api, generate_united_marketplace_services_report_request; format=format, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function generate_united_marketplace_services_report(_api::ReportsApi, response_stream::Channel, generate_united_marketplace_services_report_request::GenerateUnitedMarketplaceServicesReportRequest; format=nothing, _mediaType=nothing)
    _ctx = _oacinternal_generate_united_marketplace_services_report(_api, generate_united_marketplace_services_report_request; format=format, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_generate_united_netting_report_ReportsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => GenerateReportResponse,
    Regex("^" * replace("400", "x"=>".") * "\$") => ApiClientDataErrorResponse,
    Regex("^" * replace("401", "x"=>".") * "\$") => ApiUnauthorizedErrorResponse,
    Regex("^" * replace("403", "x"=>".") * "\$") => ApiForbiddenErrorResponse,
    Regex("^" * replace("420", "x"=>".") * "\$") => ApiLimitErrorResponse,
    Regex("^" * replace("500", "x"=>".") * "\$") => ApiServerErrorResponse,
)

function _oacinternal_generate_united_netting_report(_api::ReportsApi, generate_united_netting_report_request::GenerateUnitedNettingReportRequest; format=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_generate_united_netting_report_ReportsApi, "/reports/united-netting/generate", ["OAuth", ], generate_united_netting_report_request)
    OpenAPI.Clients.set_param(_ctx.query, "format", format; style="", is_explode=false)  # type ReportFormatType
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Отчет по платежам

Запускает генерацию **отчета по платежам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/transactions.html)  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  Тип отчета зависит от того, какие поля заполнены в запросе:  |**Тип отчета**           |**Какие поля нужны**                   | |-------------------------|---------------------------------------| |О платежах за период     |`dateFrom` и `dateTo`                  | |О платежном поручении    |`bankOrderId` и `bankOrderDateTime`    |  Заказать отчеты обоих типов одним запросом нельзя.  |**⚙️ Лимит:** 100 запросов в час| |-| 

Params:
- generate_united_netting_report_request::GenerateUnitedNettingReportRequest (required)
- format::ReportFormatType

Return: GenerateReportResponse, OpenAPI.Clients.ApiResponse
"""
function generate_united_netting_report(_api::ReportsApi, generate_united_netting_report_request::GenerateUnitedNettingReportRequest; format=nothing, _mediaType=nothing)
    _ctx = _oacinternal_generate_united_netting_report(_api, generate_united_netting_report_request; format=format, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function generate_united_netting_report(_api::ReportsApi, response_stream::Channel, generate_united_netting_report_request::GenerateUnitedNettingReportRequest; format=nothing, _mediaType=nothing)
    _ctx = _oacinternal_generate_united_netting_report(_api, generate_united_netting_report_request; format=format, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_generate_united_orders_report_ReportsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => GenerateReportResponse,
    Regex("^" * replace("400", "x"=>".") * "\$") => ApiClientDataErrorResponse,
    Regex("^" * replace("401", "x"=>".") * "\$") => ApiUnauthorizedErrorResponse,
    Regex("^" * replace("403", "x"=>".") * "\$") => ApiForbiddenErrorResponse,
    Regex("^" * replace("420", "x"=>".") * "\$") => ApiLimitErrorResponse,
    Regex("^" * replace("500", "x"=>".") * "\$") => ApiServerErrorResponse,
)

function _oacinternal_generate_united_orders_report(_api::ReportsApi, generate_united_orders_request::GenerateUnitedOrdersRequest; format=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_generate_united_orders_report_ReportsApi, "/reports/united-orders/generate", ["OAuth", ], generate_united_orders_request)
    OpenAPI.Clients.set_param(_ctx.query, "format", format; style="", is_explode=false)  # type ReportFormatType
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Отчет по заказам

Запускает генерацию **отчета по заказам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/orders.html)  {% note info \"\" %}  Это новый отчет. Раньше мы так называли генерацию детальной информации по заказам. [Как получить детальную информацию по заказам](../../reference/stats/getOrdersStats.md)  {% endnote %}  Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).  |**⚙️ Лимит:** 100 запросов в час| |-| 

Params:
- generate_united_orders_request::GenerateUnitedOrdersRequest (required)
- format::ReportFormatType

Return: GenerateReportResponse, OpenAPI.Clients.ApiResponse
"""
function generate_united_orders_report(_api::ReportsApi, generate_united_orders_request::GenerateUnitedOrdersRequest; format=nothing, _mediaType=nothing)
    _ctx = _oacinternal_generate_united_orders_report(_api, generate_united_orders_request; format=format, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function generate_united_orders_report(_api::ReportsApi, response_stream::Channel, generate_united_orders_request::GenerateUnitedOrdersRequest; format=nothing, _mediaType=nothing)
    _ctx = _oacinternal_generate_united_orders_report(_api, generate_united_orders_request; format=format, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_get_report_info_ReportsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => GetReportInfoResponse,
    Regex("^" * replace("400", "x"=>".") * "\$") => ApiClientDataErrorResponse,
    Regex("^" * replace("401", "x"=>".") * "\$") => ApiUnauthorizedErrorResponse,
    Regex("^" * replace("403", "x"=>".") * "\$") => ApiForbiddenErrorResponse,
    Regex("^" * replace("404", "x"=>".") * "\$") => ApiNotFoundErrorResponse,
    Regex("^" * replace("420", "x"=>".") * "\$") => ApiLimitErrorResponse,
    Regex("^" * replace("500", "x"=>".") * "\$") => ApiServerErrorResponse,
)

function _oacinternal_get_report_info(_api::ReportsApi, report_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_report_info_ReportsApi, "/reports/info/{reportId}", ["OAuth", ])
    OpenAPI.Clients.set_param(_ctx.path, "reportId", report_id)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Получение заданного отчета

Возвращает статус генерации заданного отчета и, если отчет готов, ссылку для скачивания.  Чтобы воспользоваться этим запросом, вначале нужно запустить генерацию отчета. [Инструкция](../../step-by-step/reports.md)  |**⚙️ Лимит:** 100 запросов в минуту| |-| 

Params:
- report_id::String (required)

Return: GetReportInfoResponse, OpenAPI.Clients.ApiResponse
"""
function get_report_info(_api::ReportsApi, report_id::String; _mediaType=nothing)
    _ctx = _oacinternal_get_report_info(_api, report_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_report_info(_api::ReportsApi, response_stream::Channel, report_id::String; _mediaType=nothing)
    _ctx = _oacinternal_get_report_info(_api, report_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export generate_boost_consolidated_report
export generate_competitors_position_report
export generate_goods_feedback_report
export generate_goods_movement_report
export generate_goods_realization_report
export generate_goods_turnover_report
export generate_mass_order_labels_report
export generate_prices_report
export generate_shelfs_statistics_report
export generate_shipment_list_document_report
export generate_shows_sales_report
export generate_stocks_on_warehouses_report
export generate_united_marketplace_services_report
export generate_united_netting_report
export generate_united_orders_report
export get_report_info
