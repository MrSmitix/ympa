# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct WarehousesApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `WarehousesApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ WarehousesApi }) = "https://api.partner.market.yandex.ru"

const _returntypes_get_fulfillment_warehouses_WarehousesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => GetFulfillmentWarehousesResponse,
    Regex("^" * replace("400", "x"=>".") * "\$") => ApiClientDataErrorResponse,
    Regex("^" * replace("401", "x"=>".") * "\$") => ApiUnauthorizedErrorResponse,
    Regex("^" * replace("403", "x"=>".") * "\$") => ApiForbiddenErrorResponse,
    Regex("^" * replace("404", "x"=>".") * "\$") => ApiNotFoundErrorResponse,
    Regex("^" * replace("420", "x"=>".") * "\$") => ApiLimitErrorResponse,
    Regex("^" * replace("500", "x"=>".") * "\$") => ApiServerErrorResponse,
)

function _oacinternal_get_fulfillment_warehouses(_api::WarehousesApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_fulfillment_warehouses_WarehousesApi, "/warehouses", ["OAuth", ])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Идентификаторы складов Маркета (FBY)

Возвращает список складов Маркета с их идентификаторами.  |**⚙️ Лимит:** 100 запросов в минуту| |-| 

Params:

Return: GetFulfillmentWarehousesResponse, OpenAPI.Clients.ApiResponse
"""
function get_fulfillment_warehouses(_api::WarehousesApi; _mediaType=nothing)
    _ctx = _oacinternal_get_fulfillment_warehouses(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_fulfillment_warehouses(_api::WarehousesApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_get_fulfillment_warehouses(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_get_warehouses_WarehousesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => GetWarehousesResponse,
    Regex("^" * replace("400", "x"=>".") * "\$") => ApiClientDataErrorResponse,
    Regex("^" * replace("401", "x"=>".") * "\$") => ApiUnauthorizedErrorResponse,
    Regex("^" * replace("403", "x"=>".") * "\$") => ApiForbiddenErrorResponse,
    Regex("^" * replace("404", "x"=>".") * "\$") => ApiNotFoundErrorResponse,
    Regex("^" * replace("420", "x"=>".") * "\$") => ApiLimitErrorResponse,
    Regex("^" * replace("500", "x"=>".") * "\$") => ApiServerErrorResponse,
)

function _oacinternal_get_warehouses(_api::WarehousesApi, business_id::Int64; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_warehouses_WarehousesApi, "/businesses/{businessId}/warehouses", ["OAuth", ])
    OpenAPI.Clients.set_param(_ctx.path, "businessId", business_id)  # type Int64
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Список складов и групп складов

Возвращает список складов и, если склады объединены, список групп складов. [Что такое группы складов и зачем они нужны](https://yandex.ru/support/marketplace/assortment/operations/stocks.html#unified-stocks)  Среди прочего запрос позволяет определить идентификатор, который нужно использовать при передаче остатков для группы складов.  |**⚙️ Лимит:** 100 запросов в минуту| |-| 

Params:
- business_id::Int64 (required)

Return: GetWarehousesResponse, OpenAPI.Clients.ApiResponse
"""
function get_warehouses(_api::WarehousesApi, business_id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_get_warehouses(_api, business_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_warehouses(_api::WarehousesApi, response_stream::Channel, business_id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_get_warehouses(_api, business_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export get_fulfillment_warehouses
export get_warehouses
