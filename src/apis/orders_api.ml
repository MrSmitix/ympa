(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

let accept_order_cancellation ~campaign_id ~order_id ~accept_order_cancellation_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/orders/{orderId}/cancellation/accept" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "orderId" Int64.to_string order_id in
    let body = Request.write_as_json_body Accept_order_cancellation_request.to_yojson accept_order_cancellation_request_t in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Empty_api_response.of_yojson) resp body

let get_order ~campaign_id ~order_id =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/orders/{orderId}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "orderId" Int64.to_string order_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_order_response.of_yojson) resp body

let get_orders ~campaign_id ?(order_ids = []) ?(status = []) ?(substatus = []) ?from_date ?to_date ?supplier_shipment_date_from ?supplier_shipment_date_to ?updated_at_from ?updated_at_to ?dispatch_type ?(fake = false) ?(has_cis = false) ?(only_waiting_for_cancellation_approve = false) ?(only_estimated_delivery = false) ?buyer_type ?(page = 11l) ?page_size ?page_token ?limit () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/orders" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.add_query_param_list uri "orderIds" (List.map Int64.to_string) order_ids in
    let uri = Request.add_query_param_list uri "status" (List.map ) status in
    let uri = Request.add_query_param_list uri "substatus" (List.map ) substatus in
    let uri = Request.maybe_add_query_param uri "fromDate" (fun x -> x) from_date in
    let uri = Request.maybe_add_query_param uri "toDate" (fun x -> x) to_date in
    let uri = Request.maybe_add_query_param uri "supplierShipmentDateFrom" (fun x -> x) supplier_shipment_date_from in
    let uri = Request.maybe_add_query_param uri "supplierShipmentDateTo" (fun x -> x) supplier_shipment_date_to in
    let uri = Request.maybe_add_query_param uri "updatedAtFrom" (fun x -> x) updated_at_from in
    let uri = Request.maybe_add_query_param uri "updatedAtTo" (fun x -> x) updated_at_to in
    let uri = Request.maybe_add_query_param uri "dispatchType"  dispatch_type in
    let uri = Request.add_query_param uri "fake" string_of_bool fake in
    let uri = Request.add_query_param uri "hasCis" string_of_bool has_cis in
    let uri = Request.add_query_param uri "onlyWaitingForCancellationApprove" string_of_bool only_waiting_for_cancellation_approve in
    let uri = Request.add_query_param uri "onlyEstimatedDelivery" string_of_bool only_estimated_delivery in
    let uri = Request.maybe_add_query_param uri "buyerType"  buyer_type in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    let uri = Request.maybe_add_query_param uri "pageSize" Int32.to_string page_size in
    let uri = Request.maybe_add_query_param uri "page_token" (fun x -> x) page_token in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_orders_response.of_yojson) resp body

let provide_order_digital_codes ~campaign_id ~order_id ~provide_order_digital_codes_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/orders/{orderId}/deliverDigitalGoods" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "orderId" Int64.to_string order_id in
    let body = Request.write_as_json_body Provide_order_digital_codes_request.to_yojson provide_order_digital_codes_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Empty_api_response.of_yojson) resp body

let provide_order_item_identifiers ~campaign_id ~order_id ~provide_order_item_identifiers_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/orders/{orderId}/identifiers" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "orderId" Int64.to_string order_id in
    let body = Request.write_as_json_body Provide_order_item_identifiers_request.to_yojson provide_order_item_identifiers_request_t in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Provide_order_item_identifiers_response.of_yojson) resp body

let set_order_box_layout ~campaign_id ~order_id ~set_order_box_layout_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/orders/{orderId}/boxes" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "orderId" Int64.to_string order_id in
    let body = Request.write_as_json_body Set_order_box_layout_request.to_yojson set_order_box_layout_request_t in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Set_order_box_layout_response.of_yojson) resp body

let set_order_shipment_boxes ~campaign_id ~order_id ~shipment_id ~set_order_shipment_boxes_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "orderId" Int64.to_string order_id in
    let uri = Request.replace_path_param uri "shipmentId" Int64.to_string shipment_id in
    let body = Request.write_as_json_body Set_order_shipment_boxes_request.to_yojson set_order_shipment_boxes_request_t in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Set_order_shipment_boxes_response.of_yojson) resp body

let update_order_items ~campaign_id ~order_id ~update_order_item_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/orders/{orderId}/items" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "orderId" Int64.to_string order_id in
    let body = Request.write_as_json_body Update_order_item_request.to_yojson update_order_item_request_t in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers ~body >>= fun (resp, body) ->
    Request.handle_unit_response resp

let update_order_status ~campaign_id ~order_id ~update_order_status_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/orders/{orderId}/status" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "orderId" Int64.to_string order_id in
    let body = Request.write_as_json_body Update_order_status_request.to_yojson update_order_status_request_t in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Update_order_status_response.of_yojson) resp body

let update_order_statuses ~campaign_id ~update_order_statuses_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/orders/status-update" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let body = Request.write_as_json_body Update_order_statuses_request.to_yojson update_order_statuses_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Update_order_statuses_response.of_yojson) resp body

