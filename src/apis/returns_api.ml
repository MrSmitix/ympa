(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

let get_return ~campaign_id ~order_id ~return_id =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "orderId" Int64.to_string order_id in
    let uri = Request.replace_path_param uri "returnId" Int64.to_string return_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_return_response.of_yojson) resp body

let get_return_application ~campaign_id ~order_id ~return_id =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/application" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "orderId" Int64.to_string order_id in
    let uri = Request.replace_path_param uri "returnId" Int64.to_string return_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.to_string) resp body

let get_return_photo ~campaign_id ~order_id ~return_id ~item_id ~image_hash =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/{itemId}/image/{imageHash}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "orderId" Int64.to_string order_id in
    let uri = Request.replace_path_param uri "returnId" Int64.to_string return_id in
    let uri = Request.replace_path_param uri "itemId" Int64.to_string item_id in
    let uri = Request.replace_path_param uri "imageHash" (fun x -> x) image_hash in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.to_string) resp body

let get_returns ~campaign_id ?page_token ?limit ?(order_ids = []) ?(statuses = []) ?_type ?from_date ?to_date ?from_date2 ?to_date2 () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/returns" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.maybe_add_query_param uri "page_token" (fun x -> x) page_token in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.add_query_param_list uri "orderIds" (List.map Int64.to_string) order_ids in
    let uri = Request.add_query_param_list uri "statuses" (List.map ) statuses in
    let uri = Request.maybe_add_query_param uri "type"  _type in
    let uri = Request.maybe_add_query_param uri "fromDate" (fun x -> x) from_date in
    let uri = Request.maybe_add_query_param uri "toDate" (fun x -> x) to_date in
    let uri = Request.maybe_add_query_param uri "from_date" (fun x -> x) from_date2 in
    let uri = Request.maybe_add_query_param uri "to_date" (fun x -> x) to_date2 in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_returns_response.of_yojson) resp body

let set_return_decision ~campaign_id ~order_id ~return_id ~set_return_decision_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "orderId" Int64.to_string order_id in
    let uri = Request.replace_path_param uri "returnId" Int64.to_string return_id in
    let body = Request.write_as_json_body Set_return_decision_request.to_yojson set_return_decision_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Empty_api_response.of_yojson) resp body

let submit_return_decision ~campaign_id ~order_id ~return_id =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/submit" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "orderId" Int64.to_string order_id in
    let uri = Request.replace_path_param uri "returnId" Int64.to_string return_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Empty_api_response.of_yojson) resp body

