(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

let get_feed ~campaign_id ~feed_id =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/feeds/{feedId}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "feedId" Int64.to_string feed_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_feed_response.of_yojson) resp body

let get_feed_index_logs ~campaign_id ~feed_id ?limit ?published_time_from ?published_time_to ?status () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/feeds/{feedId}/index-logs" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "feedId" Int64.to_string feed_id in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "published_time_from" (fun x -> x) published_time_from in
    let uri = Request.maybe_add_query_param uri "published_time_to" (fun x -> x) published_time_to in
    let uri = Request.maybe_add_query_param uri "status"  status in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_feed_index_logs_response.of_yojson) resp body

let get_feeds ~campaign_id =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/feeds" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_feeds_response.of_yojson) resp body

let refresh_feed ~campaign_id ~feed_id =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/feeds/{feedId}/refresh" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "feedId" Int64.to_string feed_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Empty_api_response.of_yojson) resp body

let set_feed_params ~campaign_id ~feed_id ~set_feed_params_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/feeds/{feedId}/params" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "feedId" Int64.to_string feed_id in
    let body = Request.write_as_json_body Set_feed_params_request.to_yojson set_feed_params_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Empty_api_response.of_yojson) resp body

