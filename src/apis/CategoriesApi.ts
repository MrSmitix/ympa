// tslint:disable
/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { HttpMethods, QueryConfig, ResponseBody, ResponseText } from 'redux-query';
import * as runtime from '../runtime';
import {
    ApiClientDataErrorResponse,
    ApiClientDataErrorResponseFromJSON,
    ApiClientDataErrorResponseToJSON,
    ApiForbiddenErrorResponse,
    ApiForbiddenErrorResponseFromJSON,
    ApiForbiddenErrorResponseToJSON,
    ApiLimitErrorResponse,
    ApiLimitErrorResponseFromJSON,
    ApiLimitErrorResponseToJSON,
    ApiNotFoundErrorResponse,
    ApiNotFoundErrorResponseFromJSON,
    ApiNotFoundErrorResponseToJSON,
    ApiServerErrorResponse,
    ApiServerErrorResponseFromJSON,
    ApiServerErrorResponseToJSON,
    ApiUnauthorizedErrorResponse,
    ApiUnauthorizedErrorResponseFromJSON,
    ApiUnauthorizedErrorResponseToJSON,
    GetCategoriesMaxSaleQuantumRequest,
    GetCategoriesMaxSaleQuantumRequestFromJSON,
    GetCategoriesMaxSaleQuantumRequestToJSON,
    GetCategoriesMaxSaleQuantumResponse,
    GetCategoriesMaxSaleQuantumResponseFromJSON,
    GetCategoriesMaxSaleQuantumResponseToJSON,
    GetCategoriesRequest,
    GetCategoriesRequestFromJSON,
    GetCategoriesRequestToJSON,
    GetCategoriesResponse,
    GetCategoriesResponseFromJSON,
    GetCategoriesResponseToJSON,
} from '../models';

export interface GetCategoriesMaxSaleQuantumRequest {
    getCategoriesMaxSaleQuantumRequest: GetCategoriesMaxSaleQuantumRequest;
}

export interface GetCategoriesTreeRequest {
    getCategoriesRequest?: GetCategoriesRequest;
}


/**
 * Возвращает лимит на установку [кванта](*quantum) и минимального количества товаров в заказе, которые вы можете задать для товаров указанных категорий.  Если вы передадите значение кванта или минимального количества товаров выше установленного Маркетом ограничения, товар будет скрыт с витрины.  Подробнее о том, как продавать товары по несколько штук, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/fields/quantum).  |**⚙️ Лимит:** 1 000 запросов в час| |-| 
 * Лимит на установку кванта продажи и минимального количества товаров в заказе
 */
function getCategoriesMaxSaleQuantumRaw<T>(requestParameters: GetCategoriesMaxSaleQuantumRequest, requestConfig: runtime.TypedQueryConfig<T, GetCategoriesMaxSaleQuantumResponse> = {}): QueryConfig<T> {
    if (requestParameters.getCategoriesMaxSaleQuantumRequest === null || requestParameters.getCategoriesMaxSaleQuantumRequest === undefined) {
        throw new runtime.RequiredError('getCategoriesMaxSaleQuantumRequest','Required parameter requestParameters.getCategoriesMaxSaleQuantumRequest was null or undefined when calling getCategoriesMaxSaleQuantum.');
    }

    let queryParameters = null;


    const headerParameters : runtime.HttpHeaders = {};

    headerParameters['Content-Type'] = 'application/json';


    const { meta = {} } = requestConfig;

    meta.authType = ['oauth', ["market:partner-api"]];
    const config: QueryConfig<T> = {
        url: `${runtime.Configuration.basePath}/categories/max-sale-quantum`,
        meta,
        update: requestConfig.update,
        queryKey: requestConfig.queryKey,
        optimisticUpdate: requestConfig.optimisticUpdate,
        force: requestConfig.force,
        rollback: requestConfig.rollback,
        options: {
            method: 'POST',
            headers: headerParameters,
        },
        body: queryParameters || GetCategoriesMaxSaleQuantumRequestToJSON(requestParameters.getCategoriesMaxSaleQuantumRequest),
    };

    const { transform: requestTransform } = requestConfig;
    if (requestTransform) {
        config.transform = (body: ResponseBody, text: ResponseBody) => requestTransform(GetCategoriesMaxSaleQuantumResponseFromJSON(body), text);
    }

    return config;
}

/**
* Возвращает лимит на установку [кванта](*quantum) и минимального количества товаров в заказе, которые вы можете задать для товаров указанных категорий.  Если вы передадите значение кванта или минимального количества товаров выше установленного Маркетом ограничения, товар будет скрыт с витрины.  Подробнее о том, как продавать товары по несколько штук, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/fields/quantum).  |**⚙️ Лимит:** 1 000 запросов в час| |-| 
* Лимит на установку кванта продажи и минимального количества товаров в заказе
*/
export function getCategoriesMaxSaleQuantum<T>(requestParameters: GetCategoriesMaxSaleQuantumRequest, requestConfig?: runtime.TypedQueryConfig<T, GetCategoriesMaxSaleQuantumResponse>): QueryConfig<T> {
    return getCategoriesMaxSaleQuantumRaw(requestParameters, requestConfig);
}

/**
 * Возвращает дерево категорий Маркета.  |**⚙️ Лимит:** 1 000 запросов в час| |-| 
 * Дерево категорий
 */
function getCategoriesTreeRaw<T>(requestParameters: GetCategoriesTreeRequest, requestConfig: runtime.TypedQueryConfig<T, GetCategoriesResponse> = {}): QueryConfig<T> {
    let queryParameters = null;


    const headerParameters : runtime.HttpHeaders = {};

    headerParameters['Content-Type'] = 'application/json';


    const { meta = {} } = requestConfig;

    meta.authType = ['oauth', ["market:partner-api"]];
    const config: QueryConfig<T> = {
        url: `${runtime.Configuration.basePath}/categories/tree`,
        meta,
        update: requestConfig.update,
        queryKey: requestConfig.queryKey,
        optimisticUpdate: requestConfig.optimisticUpdate,
        force: requestConfig.force,
        rollback: requestConfig.rollback,
        options: {
            method: 'POST',
            headers: headerParameters,
        },
        body: queryParameters || GetCategoriesRequestToJSON(requestParameters.getCategoriesRequest),
    };

    const { transform: requestTransform } = requestConfig;
    if (requestTransform) {
        config.transform = (body: ResponseBody, text: ResponseBody) => requestTransform(GetCategoriesResponseFromJSON(body), text);
    }

    return config;
}

/**
* Возвращает дерево категорий Маркета.  |**⚙️ Лимит:** 1 000 запросов в час| |-| 
* Дерево категорий
*/
export function getCategoriesTree<T>(requestParameters: GetCategoriesTreeRequest, requestConfig?: runtime.TypedQueryConfig<T, GetCategoriesResponse>): QueryConfig<T> {
    return getCategoriesTreeRaw(requestParameters, requestConfig);
}

