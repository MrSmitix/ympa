(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

let delete_goods_feedback_comment ~business_id ~delete_goods_feedback_comment_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/businesses/{businessId}/goods-feedback/comments/delete" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "businessId" Int64.to_string business_id in
    let body = Request.write_as_json_body Delete_goods_feedback_comment_request.to_yojson delete_goods_feedback_comment_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Empty_api_response.of_yojson) resp body

let get_goods_feedback_comments ~business_id ~get_goods_feedback_comments_request_t ?page_token ?limit () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/businesses/{businessId}/goods-feedback/comments" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "businessId" Int64.to_string business_id in
    let uri = Request.maybe_add_query_param uri "page_token" (fun x -> x) page_token in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let body = Request.write_as_json_body Get_goods_feedback_comments_request.to_yojson get_goods_feedback_comments_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_goods_feedback_comments_response.of_yojson) resp body

let get_goods_feedbacks ~business_id ?page_token ?limit ~get_goods_feedback_request_t () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/businesses/{businessId}/goods-feedback" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "businessId" Int64.to_string business_id in
    let uri = Request.maybe_add_query_param uri "page_token" (fun x -> x) page_token in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let body = Request.write_as_json_body Get_goods_feedback_request.to_yojson get_goods_feedback_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_goods_feedback_response.of_yojson) resp body

let skip_goods_feedbacks_reaction ~business_id ~skip_goods_feedback_reaction_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/businesses/{businessId}/goods-feedback/skip-reaction" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "businessId" Int64.to_string business_id in
    let body = Request.write_as_json_body Skip_goods_feedback_reaction_request.to_yojson skip_goods_feedback_reaction_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Empty_api_response.of_yojson) resp body

let update_goods_feedback_comment ~business_id ~update_goods_feedback_comment_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/businesses/{businessId}/goods-feedback/comments/update" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "businessId" Int64.to_string business_id in
    let body = Request.write_as_json_body Update_goods_feedback_comment_request.to_yojson update_goods_feedback_comment_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Update_goods_feedback_comment_response.of_yojson) resp body

