(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

let accept_order_cancellation ~campaign_id ~order_id ~accept_order_cancellation_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/orders/{orderId}/cancellation/accept" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "orderId" Int64.to_string order_id in
    let body = Request.write_as_json_body Accept_order_cancellation_request.to_yojson accept_order_cancellation_request_t in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Empty_api_response.of_yojson) resp body

let add_hidden_offers ~campaign_id ~add_hidden_offers_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/hidden-offers" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let body = Request.write_as_json_body Add_hidden_offers_request.to_yojson add_hidden_offers_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Empty_api_response.of_yojson) resp body

let add_offers_to_archive ~business_id ~add_offers_to_archive_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/businesses/{businessId}/offer-mappings/archive" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "businessId" Int64.to_string business_id in
    let body = Request.write_as_json_body Add_offers_to_archive_request.to_yojson add_offers_to_archive_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Add_offers_to_archive_response.of_yojson) resp body

let calculate_tariffs ~calculate_tariffs_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/tariffs/calculate" in
    let headers = Request.default_headers in
    let body = Request.write_as_json_body Calculate_tariffs_request.to_yojson calculate_tariffs_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Calculate_tariffs_response.of_yojson) resp body

let confirm_business_prices ~business_id ~confirm_prices_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/businesses/{businessId}/price-quarantine/confirm" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "businessId" Int64.to_string business_id in
    let body = Request.write_as_json_body Confirm_prices_request.to_yojson confirm_prices_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Empty_api_response.of_yojson) resp body

let confirm_campaign_prices ~campaign_id ~confirm_prices_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/price-quarantine/confirm" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let body = Request.write_as_json_body Confirm_prices_request.to_yojson confirm_prices_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Empty_api_response.of_yojson) resp body

let create_chat ~business_id ~create_chat_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/businesses/{businessId}/chats/new" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "businessId" Int64.to_string business_id in
    let body = Request.write_as_json_body Create_chat_request.to_yojson create_chat_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Create_chat_response.of_yojson) resp body

let create_outlet ~campaign_id ~change_outlet_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/outlets" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let body = Request.write_as_json_body Change_outlet_request.to_yojson change_outlet_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Create_outlet_response.of_yojson) resp body

let delete_campaign_offers ~campaign_id ~delete_campaign_offers_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/offers/delete" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let body = Request.write_as_json_body Delete_campaign_offers_request.to_yojson delete_campaign_offers_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Delete_campaign_offers_response.of_yojson) resp body

let delete_goods_feedback_comment ~business_id ~delete_goods_feedback_comment_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/businesses/{businessId}/goods-feedback/comments/delete" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "businessId" Int64.to_string business_id in
    let body = Request.write_as_json_body Delete_goods_feedback_comment_request.to_yojson delete_goods_feedback_comment_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Empty_api_response.of_yojson) resp body

let delete_hidden_offers ~campaign_id ~delete_hidden_offers_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/hidden-offers/delete" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let body = Request.write_as_json_body Delete_hidden_offers_request.to_yojson delete_hidden_offers_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Empty_api_response.of_yojson) resp body

let delete_offers ~business_id ~delete_offers_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/businesses/{businessId}/offer-mappings/delete" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "businessId" Int64.to_string business_id in
    let body = Request.write_as_json_body Delete_offers_request.to_yojson delete_offers_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Delete_offers_response.of_yojson) resp body

let delete_offers_from_archive ~business_id ~delete_offers_from_archive_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/businesses/{businessId}/offer-mappings/unarchive" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "businessId" Int64.to_string business_id in
    let body = Request.write_as_json_body Delete_offers_from_archive_request.to_yojson delete_offers_from_archive_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Delete_offers_from_archive_response.of_yojson) resp body

let delete_outlet ~campaign_id ~outlet_id =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/outlets/{outletId}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "outletId" Int64.to_string outlet_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Empty_api_response.of_yojson) resp body

let delete_outlet_licenses ~campaign_id ?(ids = []) () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/outlets/licenses" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.add_query_param_list uri "ids" (List.map Int64.to_string) ids in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Empty_api_response.of_yojson) resp body

let delete_promo_offers ~business_id ~delete_promo_offers_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/businesses/{businessId}/promos/offers/delete" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "businessId" Int64.to_string business_id in
    let body = Request.write_as_json_body Delete_promo_offers_request.to_yojson delete_promo_offers_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Delete_promo_offers_response.of_yojson) resp body

let generate_boost_consolidated_report ~generate_boost_consolidated_request_t ?format () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/reports/boost-consolidated/generate" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "format"  format in
    let body = Request.write_as_json_body Generate_boost_consolidated_request.to_yojson generate_boost_consolidated_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Generate_report_response.of_yojson) resp body

let generate_competitors_position_report ~generate_competitors_position_report_request_t ?format () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/reports/competitors-position/generate" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "format"  format in
    let body = Request.write_as_json_body Generate_competitors_position_report_request.to_yojson generate_competitors_position_report_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Generate_report_response.of_yojson) resp body

let generate_goods_feedback_report ~generate_goods_feedback_request_t ?format () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/reports/goods-feedback/generate" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "format"  format in
    let body = Request.write_as_json_body Generate_goods_feedback_request.to_yojson generate_goods_feedback_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Generate_report_response.of_yojson) resp body

let generate_mass_order_labels_report ~generate_mass_order_labels_request_t ?format () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/reports/documents/labels/generate" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "format"  format in
    let body = Request.write_as_json_body Generate_mass_order_labels_request.to_yojson generate_mass_order_labels_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Generate_report_response.of_yojson) resp body

let generate_order_label ~campaign_id ~order_id ~shipment_id ~box_id ?format () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes/{boxId}/label" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "orderId" Int64.to_string order_id in
    let uri = Request.replace_path_param uri "shipmentId" Int64.to_string shipment_id in
    let uri = Request.replace_path_param uri "boxId" Int64.to_string box_id in
    let uri = Request.maybe_add_query_param uri "format"  format in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.to_string) resp body

let generate_order_labels ~campaign_id ~order_id ?format () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/orders/{orderId}/delivery/labels" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "orderId" Int64.to_string order_id in
    let uri = Request.maybe_add_query_param uri "format"  format in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.to_string) resp body

let generate_prices_report ~generate_prices_report_request_t ?format () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/reports/prices/generate" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "format"  format in
    let body = Request.write_as_json_body Generate_prices_report_request.to_yojson generate_prices_report_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Generate_report_response.of_yojson) resp body

let generate_shelfs_statistics_report ~generate_shelfs_statistics_request_t ?format () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/reports/shelf-statistics/generate" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "format"  format in
    let body = Request.write_as_json_body Generate_shelfs_statistics_request.to_yojson generate_shelfs_statistics_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Generate_report_response.of_yojson) resp body

let generate_shows_sales_report ~generate_shows_sales_report_request_t ?format () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/reports/shows-sales/generate" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "format"  format in
    let body = Request.write_as_json_body Generate_shows_sales_report_request.to_yojson generate_shows_sales_report_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Generate_report_response.of_yojson) resp body

let generate_stocks_on_warehouses_report ~generate_stocks_on_warehouses_report_request_t ?format () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/reports/stocks-on-warehouses/generate" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "format"  format in
    let body = Request.write_as_json_body Generate_stocks_on_warehouses_report_request.to_yojson generate_stocks_on_warehouses_report_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Generate_report_response.of_yojson) resp body

let generate_united_marketplace_services_report ~generate_united_marketplace_services_report_request_t ?format () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/reports/united-marketplace-services/generate" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "format"  format in
    let body = Request.write_as_json_body Generate_united_marketplace_services_report_request.to_yojson generate_united_marketplace_services_report_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Generate_report_response.of_yojson) resp body

let generate_united_netting_report ~generate_united_netting_report_request_t ?format () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/reports/united-netting/generate" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "format"  format in
    let body = Request.write_as_json_body Generate_united_netting_report_request.to_yojson generate_united_netting_report_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Generate_report_response.of_yojson) resp body

let generate_united_orders_report ~generate_united_orders_request_t ?format () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/reports/united-orders/generate" in
    let headers = Request.default_headers in
    let uri = Request.maybe_add_query_param uri "format"  format in
    let body = Request.write_as_json_body Generate_united_orders_request.to_yojson generate_united_orders_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Generate_report_response.of_yojson) resp body

let get_all_offers ~campaign_id ?feed_id ?chunk () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/offers/all" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.maybe_add_query_param uri "feedId" Int64.to_string feed_id in
    let uri = Request.maybe_add_query_param uri "chunk" Int32.to_string chunk in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_all_offers_response.of_yojson) resp body

let get_bids_info_for_business ~business_id ?page_token ?limit ~get_bids_info_request_t () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/businesses/{businessId}/bids/info" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "businessId" Int64.to_string business_id in
    let uri = Request.maybe_add_query_param uri "page_token" (fun x -> x) page_token in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let body = Request.write_as_json_body Get_bids_info_request.to_yojson get_bids_info_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_bids_info_response.of_yojson) resp body

let get_bids_recommendations ~business_id ~get_bids_recommendations_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/businesses/{businessId}/bids/recommendations" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "businessId" Int64.to_string business_id in
    let body = Request.write_as_json_body Get_bids_recommendations_request.to_yojson get_bids_recommendations_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_bids_recommendations_response.of_yojson) resp body

let get_business_quarantine_offers ~business_id ~get_quarantine_offers_request_t ?page_token ?limit () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/businesses/{businessId}/price-quarantine" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "businessId" Int64.to_string business_id in
    let uri = Request.maybe_add_query_param uri "page_token" (fun x -> x) page_token in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let body = Request.write_as_json_body Get_quarantine_offers_request.to_yojson get_quarantine_offers_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_quarantine_offers_response.of_yojson) resp body

let get_business_settings ~business_id =
    let open Lwt.Infix in
    let uri = Request.build_uri "/businesses/{businessId}/settings" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "businessId" Int64.to_string business_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_business_settings_response.of_yojson) resp body

let get_campaign ~campaign_id =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_campaign_response.of_yojson) resp body

let get_campaign_logins ~campaign_id =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/logins" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_campaign_logins_response.of_yojson) resp body

let get_campaign_offers ~campaign_id ~get_campaign_offers_request_t ?page_token ?limit () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/offers" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.maybe_add_query_param uri "page_token" (fun x -> x) page_token in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let body = Request.write_as_json_body Get_campaign_offers_request.to_yojson get_campaign_offers_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_campaign_offers_response.of_yojson) resp body

let get_campaign_quarantine_offers ~campaign_id ~get_quarantine_offers_request_t ?page_token ?limit () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/price-quarantine" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.maybe_add_query_param uri "page_token" (fun x -> x) page_token in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let body = Request.write_as_json_body Get_quarantine_offers_request.to_yojson get_quarantine_offers_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_quarantine_offers_response.of_yojson) resp body

let get_campaign_region ~campaign_id =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/region" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_campaign_region_response.of_yojson) resp body

let get_campaign_settings ~campaign_id =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/settings" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_campaign_settings_response.of_yojson) resp body

let get_campaigns ?(page = 11l) ?page_size () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns" in
    let headers = Request.default_headers in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    let uri = Request.maybe_add_query_param uri "pageSize" Int32.to_string page_size in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_campaigns_response.of_yojson) resp body

let get_campaigns_by_login ~login ?(page = 11l) ?page_size () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/by_login/{login}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "login" (fun x -> x) login in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    let uri = Request.maybe_add_query_param uri "pageSize" Int32.to_string page_size in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_campaigns_response.of_yojson) resp body

let get_categories_max_sale_quantum ~get_categories_max_sale_quantum_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/categories/max-sale-quantum" in
    let headers = Request.default_headers in
    let body = Request.write_as_json_body Get_categories_max_sale_quantum_request.to_yojson get_categories_max_sale_quantum_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_categories_max_sale_quantum_response.of_yojson) resp body

let get_categories_tree ~get_categories_request_t () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/categories/tree" in
    let headers = Request.default_headers in
    let body = Request.write_as_json_body Get_categories_request.to_yojson get_categories_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_categories_response.of_yojson) resp body

let get_category_content_parameters ~category_id =
    let open Lwt.Infix in
    let uri = Request.build_uri "/category/{categoryId}/parameters" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "categoryId" Int64.to_string category_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_category_content_parameters_response.of_yojson) resp body

let get_chat_history ~business_id ~chat_id ~get_chat_history_request_t ?page_token ?limit () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/businesses/{businessId}/chats/history" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "businessId" Int64.to_string business_id in
    let uri = Request.add_query_param uri "chatId" Int64.to_string chat_id in
    let uri = Request.maybe_add_query_param uri "page_token" (fun x -> x) page_token in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let body = Request.write_as_json_body Get_chat_history_request.to_yojson get_chat_history_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_chat_history_response.of_yojson) resp body

let get_chats ~business_id ~get_chats_request_t ?page_token ?limit () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/businesses/{businessId}/chats" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "businessId" Int64.to_string business_id in
    let uri = Request.maybe_add_query_param uri "page_token" (fun x -> x) page_token in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let body = Request.write_as_json_body Get_chats_request.to_yojson get_chats_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_chats_response.of_yojson) resp body

let get_delivery_services () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/delivery/services" in
    let headers = Request.default_headers in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_delivery_services_response.of_yojson) resp body

let get_feed ~campaign_id ~feed_id =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/feeds/{feedId}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "feedId" Int64.to_string feed_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_feed_response.of_yojson) resp body

let get_feed_index_logs ~campaign_id ~feed_id ?limit ?published_time_from ?published_time_to ?status () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/feeds/{feedId}/index-logs" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "feedId" Int64.to_string feed_id in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "published_time_from" (fun x -> x) published_time_from in
    let uri = Request.maybe_add_query_param uri "published_time_to" (fun x -> x) published_time_to in
    let uri = Request.maybe_add_query_param uri "status"  status in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_feed_index_logs_response.of_yojson) resp body

let get_feedback_and_comment_updates ~campaign_id ?page_token ?limit ?from_date () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/feedback/updates" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.maybe_add_query_param uri "page_token" (fun x -> x) page_token in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "from_date" (fun x -> x) from_date in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_feedback_list_response.of_yojson) resp body

let get_feeds ~campaign_id =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/feeds" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_feeds_response.of_yojson) resp body

let get_goods_feedback_comments ~business_id ~get_goods_feedback_comments_request_t ?page_token ?limit () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/businesses/{businessId}/goods-feedback/comments" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "businessId" Int64.to_string business_id in
    let uri = Request.maybe_add_query_param uri "page_token" (fun x -> x) page_token in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let body = Request.write_as_json_body Get_goods_feedback_comments_request.to_yojson get_goods_feedback_comments_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_goods_feedback_comments_response.of_yojson) resp body

let get_goods_feedbacks ~business_id ?page_token ?limit ~get_goods_feedback_request_t () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/businesses/{businessId}/goods-feedback" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "businessId" Int64.to_string business_id in
    let uri = Request.maybe_add_query_param uri "page_token" (fun x -> x) page_token in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let body = Request.write_as_json_body Get_goods_feedback_request.to_yojson get_goods_feedback_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_goods_feedback_response.of_yojson) resp body

let get_goods_stats ~campaign_id ~get_goods_stats_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/stats/skus" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let body = Request.write_as_json_body Get_goods_stats_request.to_yojson get_goods_stats_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_goods_stats_response.of_yojson) resp body

let get_hidden_offers ~campaign_id ?(offer_id = []) ?page_token ?limit ?offset ?(page = 11l) ?page_size () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/hidden-offers" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.add_query_param_list uri "offer_id" (List.map (fun x -> x)) offer_id in
    let uri = Request.maybe_add_query_param uri "page_token" (fun x -> x) page_token in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "offset" Int32.to_string offset in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    let uri = Request.maybe_add_query_param uri "pageSize" Int32.to_string page_size in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_hidden_offers_response.of_yojson) resp body

let get_model ~model_id ~region_id ?currency () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/models/{modelId}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "modelId" Int64.to_string model_id in
    let uri = Request.add_query_param uri "regionId" Int64.to_string region_id in
    let uri = Request.maybe_add_query_param uri "currency"  currency in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_models_response.of_yojson) resp body

let get_model_offers ~model_id ~region_id ?currency ?order_by_price ?(count = 1010l) ?(page = 11l) () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/models/{modelId}/offers" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "modelId" Int64.to_string model_id in
    let uri = Request.add_query_param uri "regionId" Int64.to_string region_id in
    let uri = Request.maybe_add_query_param uri "currency"  currency in
    let uri = Request.maybe_add_query_param uri "orderByPrice"  order_by_price in
    let uri = Request.add_query_param uri "count" Int32.to_string count in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_models_offers_response.of_yojson) resp body

let get_models ~region_id ~get_models_request_t ?currency () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/models" in
    let headers = Request.default_headers in
    let uri = Request.add_query_param uri "regionId" Int64.to_string region_id in
    let uri = Request.maybe_add_query_param uri "currency"  currency in
    let body = Request.write_as_json_body Get_models_request.to_yojson get_models_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_models_response.of_yojson) resp body

let get_models_offers ~region_id ~get_models_request_t ?currency ?order_by_price () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/models/offers" in
    let headers = Request.default_headers in
    let uri = Request.add_query_param uri "regionId" Int64.to_string region_id in
    let uri = Request.maybe_add_query_param uri "currency"  currency in
    let uri = Request.maybe_add_query_param uri "orderByPrice"  order_by_price in
    let body = Request.write_as_json_body Get_models_request.to_yojson get_models_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_models_offers_response.of_yojson) resp body

let get_offer_cards_content_status ~business_id ?page_token ?limit ~get_offer_cards_content_status_request_t () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/businesses/{businessId}/offer-cards" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "businessId" Int64.to_string business_id in
    let uri = Request.maybe_add_query_param uri "page_token" (fun x -> x) page_token in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let body = Request.write_as_json_body Get_offer_cards_content_status_request.to_yojson get_offer_cards_content_status_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_offer_cards_content_status_response.of_yojson) resp body

let get_offer_mapping_entries ~campaign_id ?(offer_id = []) ?(shop_sku = []) ?mapping_kind ?(status = []) ?(availability = []) ?(category_id = []) ?(vendor = []) ?page_token ?limit () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/offer-mapping-entries" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.add_query_param_list uri "offer_id" (List.map (fun x -> x)) offer_id in
    let uri = Request.add_query_param_list uri "shop_sku" (List.map (fun x -> x)) shop_sku in
    let uri = Request.maybe_add_query_param uri "mapping_kind"  mapping_kind in
    let uri = Request.add_query_param_list uri "status" (List.map ) status in
    let uri = Request.add_query_param_list uri "availability" (List.map ) availability in
    let uri = Request.add_query_param_list uri "category_id" (List.map Int32.to_string) category_id in
    let uri = Request.add_query_param_list uri "vendor" (List.map (fun x -> x)) vendor in
    let uri = Request.maybe_add_query_param uri "page_token" (fun x -> x) page_token in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_offer_mapping_entries_response.of_yojson) resp body

let get_offer_mappings ~business_id ?page_token ?limit ~get_offer_mappings_request_t () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/businesses/{businessId}/offer-mappings" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "businessId" Int64.to_string business_id in
    let uri = Request.maybe_add_query_param uri "page_token" (fun x -> x) page_token in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let body = Request.write_as_json_body Get_offer_mappings_request.to_yojson get_offer_mappings_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_offer_mappings_response.of_yojson) resp body

let get_offer_recommendations ~business_id ~get_offer_recommendations_request_t ?page_token ?limit () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/businesses/{businessId}/offers/recommendations" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "businessId" Int64.to_string business_id in
    let uri = Request.maybe_add_query_param uri "page_token" (fun x -> x) page_token in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let body = Request.write_as_json_body Get_offer_recommendations_request.to_yojson get_offer_recommendations_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_offer_recommendations_response.of_yojson) resp body

let get_offers ~campaign_id ?query ?feed_id ?shop_category_id ?currency ?matched ?(page = 11l) ?page_size () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/offers" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.maybe_add_query_param uri "query" (fun x -> x) query in
    let uri = Request.maybe_add_query_param uri "feedId" Int64.to_string feed_id in
    let uri = Request.maybe_add_query_param uri "shopCategoryId" (fun x -> x) shop_category_id in
    let uri = Request.maybe_add_query_param uri "currency"  currency in
    let uri = Request.maybe_add_query_param uri "matched" string_of_bool matched in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    let uri = Request.maybe_add_query_param uri "pageSize" Int32.to_string page_size in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_offers_response.of_yojson) resp body

let get_order ~campaign_id ~order_id =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/orders/{orderId}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "orderId" Int64.to_string order_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_order_response.of_yojson) resp body

let get_order_business_buyer_info ~campaign_id ~order_id =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/orders/{orderId}/business-buyer" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "orderId" Int64.to_string order_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_business_buyer_info_response.of_yojson) resp body

let get_order_business_documents_info ~campaign_id ~order_id =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/orders/{orderId}/documents" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "orderId" Int64.to_string order_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_business_documents_info_response.of_yojson) resp body

let get_order_buyer_info ~campaign_id ~order_id =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/orders/{orderId}/buyer" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "orderId" Int64.to_string order_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_order_buyer_info_response.of_yojson) resp body

let get_order_labels_data ~campaign_id ~order_id =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/orders/{orderId}/delivery/labels/data" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "orderId" Int64.to_string order_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_order_labels_data_response.of_yojson) resp body

let get_orders ~campaign_id ?(order_ids = []) ?(status = []) ?(substatus = []) ?from_date ?to_date ?supplier_shipment_date_from ?supplier_shipment_date_to ?updated_at_from ?updated_at_to ?dispatch_type ?(fake = false) ?(has_cis = false) ?(only_waiting_for_cancellation_approve = false) ?(only_estimated_delivery = false) ?buyer_type ?(page = 11l) ?page_size ?page_token ?limit () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/orders" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.add_query_param_list uri "orderIds" (List.map Int64.to_string) order_ids in
    let uri = Request.add_query_param_list uri "status" (List.map ) status in
    let uri = Request.add_query_param_list uri "substatus" (List.map ) substatus in
    let uri = Request.maybe_add_query_param uri "fromDate" (fun x -> x) from_date in
    let uri = Request.maybe_add_query_param uri "toDate" (fun x -> x) to_date in
    let uri = Request.maybe_add_query_param uri "supplierShipmentDateFrom" (fun x -> x) supplier_shipment_date_from in
    let uri = Request.maybe_add_query_param uri "supplierShipmentDateTo" (fun x -> x) supplier_shipment_date_to in
    let uri = Request.maybe_add_query_param uri "updatedAtFrom" (fun x -> x) updated_at_from in
    let uri = Request.maybe_add_query_param uri "updatedAtTo" (fun x -> x) updated_at_to in
    let uri = Request.maybe_add_query_param uri "dispatchType"  dispatch_type in
    let uri = Request.add_query_param uri "fake" string_of_bool fake in
    let uri = Request.add_query_param uri "hasCis" string_of_bool has_cis in
    let uri = Request.add_query_param uri "onlyWaitingForCancellationApprove" string_of_bool only_waiting_for_cancellation_approve in
    let uri = Request.add_query_param uri "onlyEstimatedDelivery" string_of_bool only_estimated_delivery in
    let uri = Request.maybe_add_query_param uri "buyerType"  buyer_type in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    let uri = Request.maybe_add_query_param uri "pageSize" Int32.to_string page_size in
    let uri = Request.maybe_add_query_param uri "page_token" (fun x -> x) page_token in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_orders_response.of_yojson) resp body

let get_orders_stats ~campaign_id ?page_token ?limit ~get_orders_stats_request_t () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/stats/orders" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.maybe_add_query_param uri "page_token" (fun x -> x) page_token in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let body = Request.write_as_json_body Get_orders_stats_request.to_yojson get_orders_stats_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_orders_stats_response.of_yojson) resp body

let get_outlet ~campaign_id ~outlet_id =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/outlets/{outletId}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "outletId" Int64.to_string outlet_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_outlet_response.of_yojson) resp body

let get_outlet_licenses ~campaign_id ?(outlet_ids = []) ?(ids = []) () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/outlets/licenses" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.add_query_param_list uri "outletIds" (List.map Int64.to_string) outlet_ids in
    let uri = Request.add_query_param_list uri "ids" (List.map Int64.to_string) ids in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_outlet_licenses_response.of_yojson) resp body

let get_outlets ~campaign_id ?page_token ?region_id ?shop_outlet_code ?region_id2 () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/outlets" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.maybe_add_query_param uri "page_token" (fun x -> x) page_token in
    let uri = Request.maybe_add_query_param uri "region_id" Int64.to_string region_id in
    let uri = Request.maybe_add_query_param uri "shop_outlet_code" (fun x -> x) shop_outlet_code in
    let uri = Request.maybe_add_query_param uri "regionId" Int64.to_string region_id2 in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_outlets_response.of_yojson) resp body

let get_prices ~campaign_id ?page_token ?limit ?(archived = false) () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/offer-prices" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.maybe_add_query_param uri "page_token" (fun x -> x) page_token in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.add_query_param uri "archived" string_of_bool archived in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_prices_response.of_yojson) resp body

let get_prices_by_offer_ids ~campaign_id ?page_token ?limit ~get_prices_by_offer_ids_request_t () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/offer-prices" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.maybe_add_query_param uri "page_token" (fun x -> x) page_token in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let body = Request.write_as_json_body Get_prices_by_offer_ids_request.to_yojson get_prices_by_offer_ids_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_prices_by_offer_ids_response.of_yojson) resp body

let get_promo_offers ~business_id ~get_promo_offers_request_t ?page_token ?limit () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/businesses/{businessId}/promos/offers" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "businessId" Int64.to_string business_id in
    let uri = Request.maybe_add_query_param uri "page_token" (fun x -> x) page_token in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let body = Request.write_as_json_body Get_promo_offers_request.to_yojson get_promo_offers_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_promo_offers_response.of_yojson) resp body

let get_promos ~business_id ~get_promos_request_t () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/businesses/{businessId}/promos" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "businessId" Int64.to_string business_id in
    let body = Request.write_as_json_body Get_promos_request.to_yojson get_promos_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_promos_response.of_yojson) resp body

let get_quality_rating_details ~campaign_id =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/ratings/quality/details" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_quality_rating_details_response.of_yojson) resp body

let get_quality_ratings ~business_id ~get_quality_rating_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/businesses/{businessId}/ratings/quality" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "businessId" Int64.to_string business_id in
    let body = Request.write_as_json_body Get_quality_rating_request.to_yojson get_quality_rating_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_quality_rating_response.of_yojson) resp body

let get_report_info ~report_id =
    let open Lwt.Infix in
    let uri = Request.build_uri "/reports/info/{reportId}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "reportId" (fun x -> x) report_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_report_info_response.of_yojson) resp body

let get_return ~campaign_id ~order_id ~return_id =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "orderId" Int64.to_string order_id in
    let uri = Request.replace_path_param uri "returnId" Int64.to_string return_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_return_response.of_yojson) resp body

let get_return_application ~campaign_id ~order_id ~return_id =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/application" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "orderId" Int64.to_string order_id in
    let uri = Request.replace_path_param uri "returnId" Int64.to_string return_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.to_string) resp body

let get_return_photo ~campaign_id ~order_id ~return_id ~item_id ~image_hash =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/{itemId}/image/{imageHash}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "orderId" Int64.to_string order_id in
    let uri = Request.replace_path_param uri "returnId" Int64.to_string return_id in
    let uri = Request.replace_path_param uri "itemId" Int64.to_string item_id in
    let uri = Request.replace_path_param uri "imageHash" (fun x -> x) image_hash in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.to_string) resp body

let get_returns ~campaign_id ?page_token ?limit ?(order_ids = []) ?(statuses = []) ?_type ?from_date ?to_date ?from_date2 ?to_date2 () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/returns" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.maybe_add_query_param uri "page_token" (fun x -> x) page_token in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.add_query_param_list uri "orderIds" (List.map Int64.to_string) order_ids in
    let uri = Request.add_query_param_list uri "statuses" (List.map ) statuses in
    let uri = Request.maybe_add_query_param uri "type"  _type in
    let uri = Request.maybe_add_query_param uri "fromDate" (fun x -> x) from_date in
    let uri = Request.maybe_add_query_param uri "toDate" (fun x -> x) to_date in
    let uri = Request.maybe_add_query_param uri "from_date" (fun x -> x) from_date2 in
    let uri = Request.maybe_add_query_param uri "to_date" (fun x -> x) to_date2 in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_returns_response.of_yojson) resp body

let get_stocks ~campaign_id ?page_token ?limit ~get_warehouse_stocks_request_t () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/offers/stocks" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.maybe_add_query_param uri "page_token" (fun x -> x) page_token in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let body = Request.write_as_json_body Get_warehouse_stocks_request.to_yojson get_warehouse_stocks_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_warehouse_stocks_response.of_yojson) resp body

let get_suggested_offer_mapping_entries ~campaign_id ~get_suggested_offer_mapping_entries_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/offer-mapping-entries/suggestions" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let body = Request.write_as_json_body Get_suggested_offer_mapping_entries_request.to_yojson get_suggested_offer_mapping_entries_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_suggested_offer_mapping_entries_response.of_yojson) resp body

let get_suggested_offer_mappings ~business_id ~get_suggested_offer_mappings_request_t () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/businesses/{businessId}/offer-mappings/suggestions" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "businessId" Int64.to_string business_id in
    let body = Request.write_as_json_body Get_suggested_offer_mappings_request.to_yojson get_suggested_offer_mappings_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_suggested_offer_mappings_response.of_yojson) resp body

let get_suggested_prices ~campaign_id ~suggest_prices_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/offer-prices/suggestions" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let body = Request.write_as_json_body Suggest_prices_request.to_yojson suggest_prices_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Suggest_prices_response.of_yojson) resp body

let get_warehouses ~business_id =
    let open Lwt.Infix in
    let uri = Request.build_uri "/businesses/{businessId}/warehouses" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "businessId" Int64.to_string business_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_warehouses_response.of_yojson) resp body

let provide_order_digital_codes ~campaign_id ~order_id ~provide_order_digital_codes_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/orders/{orderId}/deliverDigitalGoods" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "orderId" Int64.to_string order_id in
    let body = Request.write_as_json_body Provide_order_digital_codes_request.to_yojson provide_order_digital_codes_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Empty_api_response.of_yojson) resp body

let provide_order_item_identifiers ~campaign_id ~order_id ~provide_order_item_identifiers_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/orders/{orderId}/identifiers" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "orderId" Int64.to_string order_id in
    let body = Request.write_as_json_body Provide_order_item_identifiers_request.to_yojson provide_order_item_identifiers_request_t in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Provide_order_item_identifiers_response.of_yojson) resp body

let put_bids_for_business ~business_id ~put_sku_bids_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/businesses/{businessId}/bids" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "businessId" Int64.to_string business_id in
    let body = Request.write_as_json_body Put_sku_bids_request.to_yojson put_sku_bids_request_t in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Empty_api_response.of_yojson) resp body

let put_bids_for_campaign ~campaign_id ~put_sku_bids_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/bids" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let body = Request.write_as_json_body Put_sku_bids_request.to_yojson put_sku_bids_request_t in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Empty_api_response.of_yojson) resp body

let refresh_feed ~campaign_id ~feed_id =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/feeds/{feedId}/refresh" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "feedId" Int64.to_string feed_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Empty_api_response.of_yojson) resp body

let search_models ~query ~region_id ?currency ?(page = 11l) ?page_size () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/models" in
    let headers = Request.default_headers in
    let uri = Request.add_query_param uri "query" (fun x -> x) query in
    let uri = Request.add_query_param uri "regionId" Int64.to_string region_id in
    let uri = Request.maybe_add_query_param uri "currency"  currency in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    let uri = Request.maybe_add_query_param uri "pageSize" Int32.to_string page_size in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Search_models_response.of_yojson) resp body

let search_region_children ~region_id ?(page = 11l) ?page_size () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/regions/{regionId}/children" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "regionId" Int64.to_string region_id in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    let uri = Request.maybe_add_query_param uri "pageSize" Int32.to_string page_size in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_region_with_children_response.of_yojson) resp body

let search_regions_by_id ~region_id =
    let open Lwt.Infix in
    let uri = Request.build_uri "/regions/{regionId}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "regionId" Int64.to_string region_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_regions_response.of_yojson) resp body

let search_regions_by_name ~name ?page_token ?limit () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/regions" in
    let headers = Request.default_headers in
    let uri = Request.add_query_param uri "name" (fun x -> x) name in
    let uri = Request.maybe_add_query_param uri "page_token" (fun x -> x) page_token in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_regions_response.of_yojson) resp body

let send_file_to_chat ~business_id ~chat_id ~file =
    let open Lwt.Infix in
    let uri = Request.build_uri "/businesses/{businessId}/chats/file/send" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "businessId" Int64.to_string business_id in
    let uri = Request.add_query_param uri "chatId" Int64.to_string chat_id in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param body "file" (fun x -> x) file in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Empty_api_response.of_yojson) resp body

let send_message_to_chat ~business_id ~chat_id ~send_message_to_chat_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/businesses/{businessId}/chats/message" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "businessId" Int64.to_string business_id in
    let uri = Request.add_query_param uri "chatId" Int64.to_string chat_id in
    let body = Request.write_as_json_body Send_message_to_chat_request.to_yojson send_message_to_chat_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Empty_api_response.of_yojson) resp body

let set_feed_params ~campaign_id ~feed_id ~set_feed_params_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/feeds/{feedId}/params" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "feedId" Int64.to_string feed_id in
    let body = Request.write_as_json_body Set_feed_params_request.to_yojson set_feed_params_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Empty_api_response.of_yojson) resp body

let set_order_box_layout ~campaign_id ~order_id ~set_order_box_layout_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/orders/{orderId}/boxes" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "orderId" Int64.to_string order_id in
    let body = Request.write_as_json_body Set_order_box_layout_request.to_yojson set_order_box_layout_request_t in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Set_order_box_layout_response.of_yojson) resp body

let set_order_delivery_date ~campaign_id ~order_id ~set_order_delivery_date_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/orders/{orderId}/delivery/date" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "orderId" Int64.to_string order_id in
    let body = Request.write_as_json_body Set_order_delivery_date_request.to_yojson set_order_delivery_date_request_t in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Empty_api_response.of_yojson) resp body

let set_order_delivery_track_code ~campaign_id ~order_id ~set_order_delivery_track_code_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/orders/{orderId}/delivery/track" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "orderId" Int64.to_string order_id in
    let body = Request.write_as_json_body Set_order_delivery_track_code_request.to_yojson set_order_delivery_track_code_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Empty_api_response.of_yojson) resp body

let set_order_shipment_boxes ~campaign_id ~order_id ~shipment_id ~set_order_shipment_boxes_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "orderId" Int64.to_string order_id in
    let uri = Request.replace_path_param uri "shipmentId" Int64.to_string shipment_id in
    let body = Request.write_as_json_body Set_order_shipment_boxes_request.to_yojson set_order_shipment_boxes_request_t in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Set_order_shipment_boxes_response.of_yojson) resp body

let set_return_decision ~campaign_id ~order_id ~return_id ~set_return_decision_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "orderId" Int64.to_string order_id in
    let uri = Request.replace_path_param uri "returnId" Int64.to_string return_id in
    let body = Request.write_as_json_body Set_return_decision_request.to_yojson set_return_decision_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Empty_api_response.of_yojson) resp body

let skip_goods_feedbacks_reaction ~business_id ~skip_goods_feedback_reaction_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/businesses/{businessId}/goods-feedback/skip-reaction" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "businessId" Int64.to_string business_id in
    let body = Request.write_as_json_body Skip_goods_feedback_reaction_request.to_yojson skip_goods_feedback_reaction_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Empty_api_response.of_yojson) resp body

let submit_return_decision ~campaign_id ~order_id ~return_id =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/submit" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "orderId" Int64.to_string order_id in
    let uri = Request.replace_path_param uri "returnId" Int64.to_string return_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Empty_api_response.of_yojson) resp body

let update_business_prices ~business_id ~update_business_prices_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/businesses/{businessId}/offer-prices/updates" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "businessId" Int64.to_string business_id in
    let body = Request.write_as_json_body Update_business_prices_request.to_yojson update_business_prices_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Empty_api_response.of_yojson) resp body

let update_campaign_offers ~campaign_id ~update_campaign_offers_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/offers/update" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let body = Request.write_as_json_body Update_campaign_offers_request.to_yojson update_campaign_offers_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Empty_api_response.of_yojson) resp body

let update_goods_feedback_comment ~business_id ~update_goods_feedback_comment_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/businesses/{businessId}/goods-feedback/comments/update" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "businessId" Int64.to_string business_id in
    let body = Request.write_as_json_body Update_goods_feedback_comment_request.to_yojson update_goods_feedback_comment_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Update_goods_feedback_comment_response.of_yojson) resp body

let update_offer_content ~business_id ~update_offer_content_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/businesses/{businessId}/offer-cards/update" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "businessId" Int64.to_string business_id in
    let body = Request.write_as_json_body Update_offer_content_request.to_yojson update_offer_content_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Update_offer_content_response.of_yojson) resp body

let update_offer_mapping_entries ~campaign_id ~update_offer_mapping_entry_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/offer-mapping-entries/updates" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let body = Request.write_as_json_body Update_offer_mapping_entry_request.to_yojson update_offer_mapping_entry_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Empty_api_response.of_yojson) resp body

let update_offer_mappings ~business_id ~update_offer_mappings_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/businesses/{businessId}/offer-mappings/update" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "businessId" Int64.to_string business_id in
    let body = Request.write_as_json_body Update_offer_mappings_request.to_yojson update_offer_mappings_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Update_offer_mappings_response.of_yojson) resp body

let update_order_items ~campaign_id ~order_id ~update_order_item_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/orders/{orderId}/items" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "orderId" Int64.to_string order_id in
    let body = Request.write_as_json_body Update_order_item_request.to_yojson update_order_item_request_t in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers ~body >>= fun (resp, body) ->
    Request.handle_unit_response resp

let update_order_status ~campaign_id ~order_id ~update_order_status_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/orders/{orderId}/status" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "orderId" Int64.to_string order_id in
    let body = Request.write_as_json_body Update_order_status_request.to_yojson update_order_status_request_t in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Update_order_status_response.of_yojson) resp body

let update_order_statuses ~campaign_id ~update_order_statuses_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/orders/status-update" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let body = Request.write_as_json_body Update_order_statuses_request.to_yojson update_order_statuses_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Update_order_statuses_response.of_yojson) resp body

let update_order_storage_limit ~campaign_id ~order_id ~update_order_storage_limit_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/orders/{orderId}/delivery/storage-limit" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "orderId" Int64.to_string order_id in
    let body = Request.write_as_json_body Update_order_storage_limit_request.to_yojson update_order_storage_limit_request_t in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Empty_api_response.of_yojson) resp body

let update_outlet ~campaign_id ~outlet_id ~change_outlet_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/outlets/{outletId}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.replace_path_param uri "outletId" Int64.to_string outlet_id in
    let body = Request.write_as_json_body Change_outlet_request.to_yojson change_outlet_request_t in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Empty_api_response.of_yojson) resp body

let update_outlet_licenses ~campaign_id ~update_outlet_license_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/outlets/licenses" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let body = Request.write_as_json_body Update_outlet_license_request.to_yojson update_outlet_license_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Empty_api_response.of_yojson) resp body

let update_prices ~campaign_id ~update_prices_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/offer-prices/updates" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let body = Request.write_as_json_body Update_prices_request.to_yojson update_prices_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Empty_api_response.of_yojson) resp body

let update_promo_offers ~business_id ~update_promo_offers_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/businesses/{businessId}/promos/offers/update" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "businessId" Int64.to_string business_id in
    let body = Request.write_as_json_body Update_promo_offers_request.to_yojson update_promo_offers_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Update_promo_offers_response.of_yojson) resp body

let update_stocks ~campaign_id ~update_stocks_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/offers/stocks" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let body = Request.write_as_json_body Update_stocks_request.to_yojson update_stocks_request_t in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Empty_api_response.of_yojson) resp body

