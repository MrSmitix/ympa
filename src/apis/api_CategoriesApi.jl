# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


function get_categories_max_sale_quantum_read(handler)
    function get_categories_max_sale_quantum_read_handler(req::HTTP.Request)
        openapi_params = Dict{String,Any}()
        openapi_params["GetCategoriesMaxSaleQuantumRequest"] = OpenAPI.Servers.to_param_type(GetCategoriesMaxSaleQuantumRequest, String(req.body))
        req.context[:openapi_params] = openapi_params

        return handler(req)
    end
end

function get_categories_max_sale_quantum_validate(handler)
    function get_categories_max_sale_quantum_validate_handler(req::HTTP.Request)
        openapi_params = req.context[:openapi_params]
        
        return handler(req)
    end
end

function get_categories_max_sale_quantum_invoke(impl; post_invoke=nothing)
    function get_categories_max_sale_quantum_invoke_handler(req::HTTP.Request)
        openapi_params = req.context[:openapi_params]
        ret = impl.get_categories_max_sale_quantum(req::HTTP.Request, openapi_params["GetCategoriesMaxSaleQuantumRequest"];)
        resp = OpenAPI.Servers.server_response(ret)
        return (post_invoke === nothing) ? resp : post_invoke(req, resp)
    end
end

function get_categories_tree_read(handler)
    function get_categories_tree_read_handler(req::HTTP.Request)
        openapi_params = Dict{String,Any}()
        openapi_params["GetCategoriesRequest"] = OpenAPI.Servers.to_param_type(GetCategoriesRequest, String(req.body))
        req.context[:openapi_params] = openapi_params

        return handler(req)
    end
end

function get_categories_tree_validate(handler)
    function get_categories_tree_validate_handler(req::HTTP.Request)
        openapi_params = req.context[:openapi_params]
        
        return handler(req)
    end
end

function get_categories_tree_invoke(impl; post_invoke=nothing)
    function get_categories_tree_invoke_handler(req::HTTP.Request)
        openapi_params = req.context[:openapi_params]
        ret = impl.get_categories_tree(req::HTTP.Request; get_categories_request=get(openapi_params, "GetCategoriesRequest", nothing),)
        resp = OpenAPI.Servers.server_response(ret)
        return (post_invoke === nothing) ? resp : post_invoke(req, resp)
    end
end


function registerCategoriesApi(router::HTTP.Router, impl; path_prefix::String="", optional_middlewares...)
    HTTP.register!(router, "POST", path_prefix * "/categories/max-sale-quantum", OpenAPI.Servers.middleware(impl, get_categories_max_sale_quantum_read, get_categories_max_sale_quantum_validate, get_categories_max_sale_quantum_invoke; optional_middlewares...))
    HTTP.register!(router, "POST", path_prefix * "/categories/tree", OpenAPI.Servers.middleware(impl, get_categories_tree_read, get_categories_tree_validate, get_categories_tree_invoke; optional_middlewares...))
    return router
end
