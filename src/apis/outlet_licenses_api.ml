(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

let delete_outlet_licenses ~campaign_id ?(ids = []) () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/outlets/licenses" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.add_query_param_list uri "ids" (List.map Int64.to_string) ids in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Empty_api_response.of_yojson) resp body

let get_outlet_licenses ~campaign_id ?(outlet_ids = []) ?(ids = []) () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/outlets/licenses" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let uri = Request.add_query_param_list uri "outletIds" (List.map Int64.to_string) outlet_ids in
    let uri = Request.add_query_param_list uri "ids" (List.map Int64.to_string) ids in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_outlet_licenses_response.of_yojson) resp body

let update_outlet_licenses ~campaign_id ~update_outlet_license_request_t =
    let open Lwt.Infix in
    let uri = Request.build_uri "/campaigns/{campaignId}/outlets/licenses" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "campaignId" Int64.to_string campaign_id in
    let body = Request.write_as_json_body Update_outlet_license_request.to_yojson update_outlet_license_request_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Empty_api_response.of_yojson) resp body

