# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct TariffsApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `TariffsApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ TariffsApi }) = "https://api.partner.market.yandex.ru"

const _returntypes_calculate_tariffs_TariffsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => CalculateTariffsResponse,
    Regex("^" * replace("400", "x"=>".") * "\$") => ApiClientDataErrorResponse,
    Regex("^" * replace("401", "x"=>".") * "\$") => ApiUnauthorizedErrorResponse,
    Regex("^" * replace("403", "x"=>".") * "\$") => ApiForbiddenErrorResponse,
    Regex("^" * replace("404", "x"=>".") * "\$") => ApiNotFoundErrorResponse,
    Regex("^" * replace("420", "x"=>".") * "\$") => ApiLimitErrorResponse,
    Regex("^" * replace("500", "x"=>".") * "\$") => ApiServerErrorResponse,
)

function _oacinternal_calculate_tariffs(_api::TariffsApi, calculate_tariffs_request::CalculateTariffsRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_calculate_tariffs_TariffsApi, "/tariffs/calculate", ["OAuth", ], calculate_tariffs_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Калькулятор стоимости услуг

Рассчитывает стоимость услуг Маркета для товаров с заданными параметрами. Порядок товаров в запросе и ответе сохраняется, чтобы определить, для какого товара рассчитана стоимость услуги.  Обратите внимание: калькулятор осуществляет примерные расчеты. Финальная стоимость для каждого заказа зависит от предоставленных услуг.  В запросе можно указать либо параметр `campaignId`, либо `sellingProgram`. Совместное использование параметров приведет к ошибке.  |**⚙️ Лимит:** 100 запросов в минуту| |-| 

Params:
- calculate_tariffs_request::CalculateTariffsRequest (required)

Return: CalculateTariffsResponse, OpenAPI.Clients.ApiResponse
"""
function calculate_tariffs(_api::TariffsApi, calculate_tariffs_request::CalculateTariffsRequest; _mediaType=nothing)
    _ctx = _oacinternal_calculate_tariffs(_api, calculate_tariffs_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function calculate_tariffs(_api::TariffsApi, response_stream::Channel, calculate_tariffs_request::CalculateTariffsRequest; _mediaType=nothing)
    _ctx = _oacinternal_calculate_tariffs(_api, calculate_tariffs_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export calculate_tariffs
