# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct ShipmentsApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `ShipmentsApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ ShipmentsApi }) = "https://api.partner.market.yandex.ru"

const _returntypes_confirm_shipment_ShipmentsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => EmptyApiResponse,
    Regex("^" * replace("400", "x"=>".") * "\$") => ApiClientDataErrorResponse,
    Regex("^" * replace("401", "x"=>".") * "\$") => ApiUnauthorizedErrorResponse,
    Regex("^" * replace("403", "x"=>".") * "\$") => ApiForbiddenErrorResponse,
    Regex("^" * replace("404", "x"=>".") * "\$") => ApiNotFoundErrorResponse,
    Regex("^" * replace("420", "x"=>".") * "\$") => ApiLimitErrorResponse,
    Regex("^" * replace("500", "x"=>".") * "\$") => ApiServerErrorResponse,
)

function _oacinternal_confirm_shipment(_api::ShipmentsApi, campaign_id::Int64, shipment_id::Int64; confirm_shipment_request=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_confirm_shipment_ShipmentsApi, "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/confirm", ["OAuth", ], confirm_shipment_request)
    OpenAPI.Clients.set_param(_ctx.path, "campaignId", campaign_id)  # type Int64
    OpenAPI.Clients.set_param(_ctx.path, "shipmentId", shipment_id)  # type Int64
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Подтверждение отгрузки

Подтверждает отгрузку товаров в сортировочный центр или пункт приема заказов. |**⚙️ Лимит:** 100 запросов в час| |-| 

Params:
- campaign_id::Int64 (required)
- shipment_id::Int64 (required)
- confirm_shipment_request::ConfirmShipmentRequest

Return: EmptyApiResponse, OpenAPI.Clients.ApiResponse
"""
function confirm_shipment(_api::ShipmentsApi, campaign_id::Int64, shipment_id::Int64; confirm_shipment_request=nothing, _mediaType=nothing)
    _ctx = _oacinternal_confirm_shipment(_api, campaign_id, shipment_id; confirm_shipment_request=confirm_shipment_request, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function confirm_shipment(_api::ShipmentsApi, response_stream::Channel, campaign_id::Int64, shipment_id::Int64; confirm_shipment_request=nothing, _mediaType=nothing)
    _ctx = _oacinternal_confirm_shipment(_api, campaign_id, shipment_id; confirm_shipment_request=confirm_shipment_request, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_download_shipment_act_ShipmentsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => String,
    Regex("^" * replace("400", "x"=>".") * "\$") => ApiClientDataErrorResponse,
    Regex("^" * replace("401", "x"=>".") * "\$") => ApiUnauthorizedErrorResponse,
    Regex("^" * replace("403", "x"=>".") * "\$") => ApiForbiddenErrorResponse,
    Regex("^" * replace("404", "x"=>".") * "\$") => ApiNotFoundErrorResponse,
    Regex("^" * replace("420", "x"=>".") * "\$") => ApiLimitErrorResponse,
    Regex("^" * replace("500", "x"=>".") * "\$") => ApiServerErrorResponse,
)

function _oacinternal_download_shipment_act(_api::ShipmentsApi, campaign_id::Int64, shipment_id::Int64; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_download_shipment_act_ShipmentsApi, "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/act", ["OAuth", ])
    OpenAPI.Clients.set_param(_ctx.path, "campaignId", campaign_id)  # type Int64
    OpenAPI.Clients.set_param(_ctx.path, "shipmentId", shipment_id)  # type Int64
    OpenAPI.Clients.set_header_accept(_ctx, ["application/pdf", "application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Получение акта приема-передачи

{% note warning \"Экспресс‑доставка\" %}  Если ваш магазин подключен к экспресс‑доставке и вы отгружаете заказы курьерам Яндекс Go, подготавливать акт приема‑передачи не нужно.  {% endnote %}  Запрос формирует акт приема-передачи заказов, входящих в отгрузку, и возвращает акт в формате PDF. В акте содержатся собранные и готовые к отправке заказы.  При формировании акта Маркет автоматически находит и подставляет в шаблон следующие данные:  {% cut \"Данные, из которых Маркет формирует акт\" %}  | **Данные в акте**                                         | **Описание**                                                                                                                                                                                                                                                         | | --------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | | Дата                                                      | Дата запроса.                                                                                                                                                                                                                                                        | | Отправитель                                               | Название вашего юридического лица, указанное в кабинете продавца на Маркете.                                                                                                                                                                                         | | Исполнитель                                               | Название юридического лица сортировочного центра или службы доставки.                                                                                                                                                                                                | | № отправления в системе заказчика                         | Ваш идентификатор заказа, который вы указали в ответе на запрос [POST order/accept](../../pushapi/reference/orderAccept.md) от Маркета.                                                                                                                              | | № отправления в системе исполнителя (субподрядчика)       | Идентификатор заказа на Маркете, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md).                                                                                                                             | | Объявленная ценность                                      | Общая сумма заказа без учета стоимости доставки, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                       | | Вес                                                       | Масса брутто грузового места (суммарная масса упаковки и содержимого), как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md). | | Количество мест                                           | Количество грузовых мест в заказе, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                                     |  {% endcut %}  Остальные поля нужно заполнить самостоятельно в распечатанном акте. |**⚙️ Лимит:** 100 запросов в час| |-| 

Params:
- campaign_id::Int64 (required)
- shipment_id::Int64 (required)

Return: String, OpenAPI.Clients.ApiResponse
"""
function download_shipment_act(_api::ShipmentsApi, campaign_id::Int64, shipment_id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_download_shipment_act(_api, campaign_id, shipment_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function download_shipment_act(_api::ShipmentsApi, response_stream::Channel, campaign_id::Int64, shipment_id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_download_shipment_act(_api, campaign_id, shipment_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_download_shipment_discrepancy_act_ShipmentsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => String,
    Regex("^" * replace("400", "x"=>".") * "\$") => ApiClientDataErrorResponse,
    Regex("^" * replace("401", "x"=>".") * "\$") => ApiUnauthorizedErrorResponse,
    Regex("^" * replace("403", "x"=>".") * "\$") => ApiForbiddenErrorResponse,
    Regex("^" * replace("404", "x"=>".") * "\$") => ApiNotFoundErrorResponse,
    Regex("^" * replace("420", "x"=>".") * "\$") => ApiLimitErrorResponse,
    Regex("^" * replace("500", "x"=>".") * "\$") => ApiServerErrorResponse,
)

function _oacinternal_download_shipment_discrepancy_act(_api::ShipmentsApi, campaign_id::Int64, shipment_id::Int64; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_download_shipment_discrepancy_act_ShipmentsApi, "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/discrepancy-act", ["OAuth", ])
    OpenAPI.Clients.set_param(_ctx.path, "campaignId", campaign_id)  # type Int64
    OpenAPI.Clients.set_param(_ctx.path, "shipmentId", shipment_id)  # type Int64
    OpenAPI.Clients.set_header_accept(_ctx, ["application/vnd.ms-excel", "application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Получение акта расхождений

Возвращает акт расхождений для заданной отгрузки. |**⚙️ Лимит:** 200 запросов в час| |-| 

Params:
- campaign_id::Int64 (required)
- shipment_id::Int64 (required)

Return: String, OpenAPI.Clients.ApiResponse
"""
function download_shipment_discrepancy_act(_api::ShipmentsApi, campaign_id::Int64, shipment_id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_download_shipment_discrepancy_act(_api, campaign_id, shipment_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function download_shipment_discrepancy_act(_api::ShipmentsApi, response_stream::Channel, campaign_id::Int64, shipment_id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_download_shipment_discrepancy_act(_api, campaign_id, shipment_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_download_shipment_inbound_act_ShipmentsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => String,
    Regex("^" * replace("400", "x"=>".") * "\$") => ApiClientDataErrorResponse,
    Regex("^" * replace("401", "x"=>".") * "\$") => ApiUnauthorizedErrorResponse,
    Regex("^" * replace("403", "x"=>".") * "\$") => ApiForbiddenErrorResponse,
    Regex("^" * replace("404", "x"=>".") * "\$") => ApiNotFoundErrorResponse,
    Regex("^" * replace("420", "x"=>".") * "\$") => ApiLimitErrorResponse,
    Regex("^" * replace("500", "x"=>".") * "\$") => ApiServerErrorResponse,
)

function _oacinternal_download_shipment_inbound_act(_api::ShipmentsApi, campaign_id::Int64, shipment_id::Int64; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_download_shipment_inbound_act_ShipmentsApi, "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/inbound-act", ["OAuth", ])
    OpenAPI.Clients.set_param(_ctx.path, "campaignId", campaign_id)  # type Int64
    OpenAPI.Clients.set_param(_ctx.path, "shipmentId", shipment_id)  # type Int64
    OpenAPI.Clients.set_header_accept(_ctx, ["application/pdf", "application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Получение фактического акта приема-передачи

Возвращает фактический акт приема-передачи для заданной отгрузки.  Такой акт становится доступен спустя несколько часов после завершения отгрузки. Он может понадобиться, если после отгрузки обнаружатся расхождения.  |**⚙️ Лимит:** 200 запросов в час| |-| 

Params:
- campaign_id::Int64 (required)
- shipment_id::Int64 (required)

Return: String, OpenAPI.Clients.ApiResponse
"""
function download_shipment_inbound_act(_api::ShipmentsApi, campaign_id::Int64, shipment_id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_download_shipment_inbound_act(_api, campaign_id, shipment_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function download_shipment_inbound_act(_api::ShipmentsApi, response_stream::Channel, campaign_id::Int64, shipment_id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_download_shipment_inbound_act(_api, campaign_id, shipment_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_download_shipment_pallet_labels_ShipmentsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => String,
    Regex("^" * replace("400", "x"=>".") * "\$") => ApiClientDataErrorResponse,
    Regex("^" * replace("401", "x"=>".") * "\$") => ApiUnauthorizedErrorResponse,
    Regex("^" * replace("403", "x"=>".") * "\$") => ApiForbiddenErrorResponse,
    Regex("^" * replace("404", "x"=>".") * "\$") => ApiNotFoundErrorResponse,
    Regex("^" * replace("420", "x"=>".") * "\$") => ApiLimitErrorResponse,
    Regex("^" * replace("500", "x"=>".") * "\$") => ApiServerErrorResponse,
)

function _oacinternal_download_shipment_pallet_labels(_api::ShipmentsApi, campaign_id::Int64, shipment_id::Int64; format=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_download_shipment_pallet_labels_ShipmentsApi, "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallet/labels", ["OAuth", ])
    OpenAPI.Clients.set_param(_ctx.path, "campaignId", campaign_id)  # type Int64
    OpenAPI.Clients.set_param(_ctx.path, "shipmentId", shipment_id)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "format", format; style="", is_explode=false)  # type ShipmentPalletLabelPageFormatType
    OpenAPI.Clients.set_header_accept(_ctx, ["application/pdf", "application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Ярлыки для доверительной приемки (FBS)

PDF-файл с ярлыками на каждый короб или палету в отгрузке для доверительной приемки. Подробнее про доверительную приемку написано в [Справке Маркета](https://yandex.ru/support/marketplace/orders/fbs/process.html#acceptance).  Распечатайте по несколько копий каждого ярлыка: на одну тару нужно наклеить минимум 2 ярлыка с разных сторон.  Количество упаковок в отгрузке задается в запросе [PUT campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallets](../../reference/shipments/setShipmentPalletsCount.md). |**⚙️ Лимит:** 200 запросов в час| |-| 

Params:
- campaign_id::Int64 (required)
- shipment_id::Int64 (required)
- format::ShipmentPalletLabelPageFormatType

Return: String, OpenAPI.Clients.ApiResponse
"""
function download_shipment_pallet_labels(_api::ShipmentsApi, campaign_id::Int64, shipment_id::Int64; format=nothing, _mediaType=nothing)
    _ctx = _oacinternal_download_shipment_pallet_labels(_api, campaign_id, shipment_id; format=format, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function download_shipment_pallet_labels(_api::ShipmentsApi, response_stream::Channel, campaign_id::Int64, shipment_id::Int64; format=nothing, _mediaType=nothing)
    _ctx = _oacinternal_download_shipment_pallet_labels(_api, campaign_id, shipment_id; format=format, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_download_shipment_reception_transfer_act_ShipmentsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => String,
    Regex("^" * replace("400", "x"=>".") * "\$") => ApiClientDataErrorResponse,
    Regex("^" * replace("401", "x"=>".") * "\$") => ApiUnauthorizedErrorResponse,
    Regex("^" * replace("403", "x"=>".") * "\$") => ApiForbiddenErrorResponse,
    Regex("^" * replace("404", "x"=>".") * "\$") => ApiNotFoundErrorResponse,
    Regex("^" * replace("420", "x"=>".") * "\$") => ApiLimitErrorResponse,
    Regex("^" * replace("500", "x"=>".") * "\$") => ApiServerErrorResponse,
)

function _oacinternal_download_shipment_reception_transfer_act(_api::ShipmentsApi, campaign_id::Int64; warehouse_id=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_download_shipment_reception_transfer_act_ShipmentsApi, "/campaigns/{campaignId}/shipments/reception-transfer-act", ["OAuth", ])
    OpenAPI.Clients.set_param(_ctx.path, "campaignId", campaign_id)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "warehouse_id", warehouse_id; style="", is_explode=false)  # type Int64
    OpenAPI.Clients.set_header_accept(_ctx, ["application/pdf", "application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Подтверждение ближайшей отгрузки и получение акта приема-передачи для нее

Запрос подтверждает ближайшую отгрузку и возвращает акт приема-передачи в формате PDF.  {% note warning \"Экспресс‑доставка\" %}  Если ваш магазин подключен к экспресс‑доставке и вы отгружаете заказы курьерам [Яндекс Go](https://go.yandex/), подготавливать акт приема‑передачи не нужно.  {% endnote %}  В акт входят собранные и готовые к отправке заказы, которые отгружаются в сортировочный центр или пункт приема или курьерам Маркета.  При формировании акта Маркет автоматически находит и подставляет в шаблон следующие данные:  {% cut \"Данные, из которых Маркет формирует акт\" %}  | **Данные в акте**                                   | **Описание**                                                                                                                                                                                                                                                         | | --------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | | Отправитель                                         | Название вашего юридического лица, указанное в кабинете продавца на Маркете.                                                                                                                                                                                         | | Исполнитель                                         | Название юридического лица сортировочного центра или службы доставки.                                                                                                                                                                                                | | № отправления в системе заказчика                   | Ваш идентификатор заказа, который вы указали в ответе на запрос [POST order/accept](../../pushapi/reference/orderAccept.md) от Маркета.                                                                                                                              | | № отправления в системе исполнителя (субподрядчика) | Идентификатор заказа на Маркете, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md).                                                                                                                             | | Объявленная ценность                                | Общая сумма заказа без учета стоимости доставки, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                       | | Стоимость всех товаров в заказе                     | Стоимость всех заказанных товаров.                                                                                                                                                                                                                                   | | Вес                                                 | Масса брутто грузового места (суммарная масса упаковки и содержимого), как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md). | | Количество мест                                     | Количество грузовых мест в заказе, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                                     |  {% endcut %}  Остальные поля нужно заполнить самостоятельно в распечатанном акте. |**⚙️ Лимит:** 100 запросов в час| |-| 

Params:
- campaign_id::Int64 (required)
- warehouse_id::Int64

Return: String, OpenAPI.Clients.ApiResponse
"""
function download_shipment_reception_transfer_act(_api::ShipmentsApi, campaign_id::Int64; warehouse_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_download_shipment_reception_transfer_act(_api, campaign_id; warehouse_id=warehouse_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function download_shipment_reception_transfer_act(_api::ShipmentsApi, response_stream::Channel, campaign_id::Int64; warehouse_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_download_shipment_reception_transfer_act(_api, campaign_id; warehouse_id=warehouse_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_download_shipment_transportation_waybill_ShipmentsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => String,
    Regex("^" * replace("400", "x"=>".") * "\$") => ApiClientDataErrorResponse,
    Regex("^" * replace("401", "x"=>".") * "\$") => ApiUnauthorizedErrorResponse,
    Regex("^" * replace("403", "x"=>".") * "\$") => ApiForbiddenErrorResponse,
    Regex("^" * replace("404", "x"=>".") * "\$") => ApiNotFoundErrorResponse,
    Regex("^" * replace("420", "x"=>".") * "\$") => ApiLimitErrorResponse,
    Regex("^" * replace("500", "x"=>".") * "\$") => ApiServerErrorResponse,
)

function _oacinternal_download_shipment_transportation_waybill(_api::ShipmentsApi, campaign_id::Int64, shipment_id::Int64; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_download_shipment_transportation_waybill_ShipmentsApi, "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/transportation-waybill", ["OAuth", ])
    OpenAPI.Clients.set_param(_ctx.path, "campaignId", campaign_id)  # type Int64
    OpenAPI.Clients.set_param(_ctx.path, "shipmentId", shipment_id)  # type Int64
    OpenAPI.Clients.set_header_accept(_ctx, ["application/vnd.ms-excel", "application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Получение транспортной накладной

Возвращает транспортную накладную для заданной отгрузки.  Транспортная накладная понадобится, если вы отгружаете товары непосредственно со своего склада. [Подробно об этом способе отгрузки](https://yandex.ru/support/marketplace/orders/fbs/settings/shipment.html#at-your-warehouse)  |**⚙️ Лимит:** 200 запросов в час| |-| 

Params:
- campaign_id::Int64 (required)
- shipment_id::Int64 (required)

Return: String, OpenAPI.Clients.ApiResponse
"""
function download_shipment_transportation_waybill(_api::ShipmentsApi, campaign_id::Int64, shipment_id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_download_shipment_transportation_waybill(_api, campaign_id, shipment_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function download_shipment_transportation_waybill(_api::ShipmentsApi, response_stream::Channel, campaign_id::Int64, shipment_id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_download_shipment_transportation_waybill(_api, campaign_id, shipment_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_get_shipment_ShipmentsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => GetShipmentResponse,
    Regex("^" * replace("400", "x"=>".") * "\$") => ApiClientDataErrorResponse,
    Regex("^" * replace("401", "x"=>".") * "\$") => ApiUnauthorizedErrorResponse,
    Regex("^" * replace("403", "x"=>".") * "\$") => ApiForbiddenErrorResponse,
    Regex("^" * replace("404", "x"=>".") * "\$") => ApiNotFoundErrorResponse,
    Regex("^" * replace("420", "x"=>".") * "\$") => ApiLimitErrorResponse,
    Regex("^" * replace("500", "x"=>".") * "\$") => ApiServerErrorResponse,
)

function _oacinternal_get_shipment(_api::ShipmentsApi, campaign_id::Int64, shipment_id::Int64; cancelled_orders=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_shipment_ShipmentsApi, "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}", ["OAuth", ])
    OpenAPI.Clients.set_param(_ctx.path, "campaignId", campaign_id)  # type Int64
    OpenAPI.Clients.set_param(_ctx.path, "shipmentId", shipment_id)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "cancelledOrders", cancelled_orders; style="", is_explode=false)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Получение информации об одной отгрузке

Возвращает информацию об отгрузке по ее идентификатору. |**⚙️ Лимит:** 100 запросов в час| |-| 

Params:
- campaign_id::Int64 (required)
- shipment_id::Int64 (required)
- cancelled_orders::Bool

Return: GetShipmentResponse, OpenAPI.Clients.ApiResponse
"""
function get_shipment(_api::ShipmentsApi, campaign_id::Int64, shipment_id::Int64; cancelled_orders=nothing, _mediaType=nothing)
    _ctx = _oacinternal_get_shipment(_api, campaign_id, shipment_id; cancelled_orders=cancelled_orders, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_shipment(_api::ShipmentsApi, response_stream::Channel, campaign_id::Int64, shipment_id::Int64; cancelled_orders=nothing, _mediaType=nothing)
    _ctx = _oacinternal_get_shipment(_api, campaign_id, shipment_id; cancelled_orders=cancelled_orders, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_get_shipment_orders_info_ShipmentsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => GetShipmentOrdersInfoResponse,
    Regex("^" * replace("400", "x"=>".") * "\$") => ApiClientDataErrorResponse,
    Regex("^" * replace("401", "x"=>".") * "\$") => ApiUnauthorizedErrorResponse,
    Regex("^" * replace("403", "x"=>".") * "\$") => ApiForbiddenErrorResponse,
    Regex("^" * replace("404", "x"=>".") * "\$") => ApiNotFoundErrorResponse,
    Regex("^" * replace("420", "x"=>".") * "\$") => ApiLimitErrorResponse,
    Regex("^" * replace("500", "x"=>".") * "\$") => ApiServerErrorResponse,
)

function _oacinternal_get_shipment_orders_info(_api::ShipmentsApi, campaign_id::Int64, shipment_id::Int64; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_shipment_orders_info_ShipmentsApi, "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/orders/info", ["OAuth", ])
    OpenAPI.Clients.set_param(_ctx.path, "campaignId", campaign_id)  # type Int64
    OpenAPI.Clients.set_param(_ctx.path, "shipmentId", shipment_id)  # type Int64
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Получение информации о возможности печати ярлыков (FBS)

Возвращает информацию о возможности печати ярлыков-наклеек для заказов в отгрузке. |**⚙️ Лимит:** 100 запросов в час| |-| 

Params:
- campaign_id::Int64 (required)
- shipment_id::Int64 (required)

Return: GetShipmentOrdersInfoResponse, OpenAPI.Clients.ApiResponse
"""
function get_shipment_orders_info(_api::ShipmentsApi, campaign_id::Int64, shipment_id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_get_shipment_orders_info(_api, campaign_id, shipment_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_shipment_orders_info(_api::ShipmentsApi, response_stream::Channel, campaign_id::Int64, shipment_id::Int64; _mediaType=nothing)
    _ctx = _oacinternal_get_shipment_orders_info(_api, campaign_id, shipment_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_search_shipments_ShipmentsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => SearchShipmentsResponse,
    Regex("^" * replace("400", "x"=>".") * "\$") => ApiClientDataErrorResponse,
    Regex("^" * replace("401", "x"=>".") * "\$") => ApiUnauthorizedErrorResponse,
    Regex("^" * replace("403", "x"=>".") * "\$") => ApiForbiddenErrorResponse,
    Regex("^" * replace("404", "x"=>".") * "\$") => ApiNotFoundErrorResponse,
    Regex("^" * replace("420", "x"=>".") * "\$") => ApiLimitErrorResponse,
    Regex("^" * replace("500", "x"=>".") * "\$") => ApiServerErrorResponse,
)

function _oacinternal_search_shipments(_api::ShipmentsApi, campaign_id::Int64, search_shipments_request::SearchShipmentsRequest; page_token=nothing, limit=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_search_shipments_ShipmentsApi, "/campaigns/{campaignId}/first-mile/shipments", ["OAuth", ], search_shipments_request)
    OpenAPI.Clients.set_param(_ctx.path, "campaignId", campaign_id)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "page_token", page_token; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit; style="", is_explode=false)  # type Int64
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Получение информации о нескольких отгрузках

Возвращает информацию об отгрузках по заданным параметрам:  * дате; * статусу; * идентификаторам заказов.  Результаты возвращаются постранично. |**⚙️ Лимит:** 100 запросов в час| |-| 

Params:
- campaign_id::Int64 (required)
- search_shipments_request::SearchShipmentsRequest (required)
- page_token::String
- limit::Int64

Return: SearchShipmentsResponse, OpenAPI.Clients.ApiResponse
"""
function search_shipments(_api::ShipmentsApi, campaign_id::Int64, search_shipments_request::SearchShipmentsRequest; page_token=nothing, limit=nothing, _mediaType=nothing)
    _ctx = _oacinternal_search_shipments(_api, campaign_id, search_shipments_request; page_token=page_token, limit=limit, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function search_shipments(_api::ShipmentsApi, response_stream::Channel, campaign_id::Int64, search_shipments_request::SearchShipmentsRequest; page_token=nothing, limit=nothing, _mediaType=nothing)
    _ctx = _oacinternal_search_shipments(_api, campaign_id, search_shipments_request; page_token=page_token, limit=limit, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_set_shipment_pallets_count_ShipmentsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => EmptyApiResponse,
    Regex("^" * replace("400", "x"=>".") * "\$") => ApiClientDataErrorResponse,
    Regex("^" * replace("401", "x"=>".") * "\$") => ApiUnauthorizedErrorResponse,
    Regex("^" * replace("403", "x"=>".") * "\$") => ApiForbiddenErrorResponse,
    Regex("^" * replace("404", "x"=>".") * "\$") => ApiNotFoundErrorResponse,
    Regex("^" * replace("420", "x"=>".") * "\$") => ApiLimitErrorResponse,
    Regex("^" * replace("500", "x"=>".") * "\$") => ApiServerErrorResponse,
)

function _oacinternal_set_shipment_pallets_count(_api::ShipmentsApi, campaign_id::Int64, shipment_id::Int64, set_shipment_pallets_count_request::SetShipmentPalletsCountRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_set_shipment_pallets_count_ShipmentsApi, "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallets", ["OAuth", ], set_shipment_pallets_count_request)
    OpenAPI.Clients.set_param(_ctx.path, "campaignId", campaign_id)  # type Int64
    OpenAPI.Clients.set_param(_ctx.path, "shipmentId", shipment_id)  # type Int64
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Передача количества упаковок в отгрузке

Передает Маркету количество коробов или палет в отгрузке для доверительной приемки. Подробнее про доверительную приемку написано в [Справке Маркета](https://yandex.ru/support/marketplace/orders/fbs/process.html#acceptance).  Получить PDF-файл с ярлыками для упаковок можно с помощью запроса [GET campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallet/labels](../../reference/shipments/downloadShipmentPalletLabels.md). |**⚙️ Лимит:** 200 запросов в час| |-| 

Params:
- campaign_id::Int64 (required)
- shipment_id::Int64 (required)
- set_shipment_pallets_count_request::SetShipmentPalletsCountRequest (required)

Return: EmptyApiResponse, OpenAPI.Clients.ApiResponse
"""
function set_shipment_pallets_count(_api::ShipmentsApi, campaign_id::Int64, shipment_id::Int64, set_shipment_pallets_count_request::SetShipmentPalletsCountRequest; _mediaType=nothing)
    _ctx = _oacinternal_set_shipment_pallets_count(_api, campaign_id, shipment_id, set_shipment_pallets_count_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function set_shipment_pallets_count(_api::ShipmentsApi, response_stream::Channel, campaign_id::Int64, shipment_id::Int64, set_shipment_pallets_count_request::SetShipmentPalletsCountRequest; _mediaType=nothing)
    _ctx = _oacinternal_set_shipment_pallets_count(_api, campaign_id, shipment_id, set_shipment_pallets_count_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_transfer_orders_from_shipment_ShipmentsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => EmptyApiResponse,
    Regex("^" * replace("400", "x"=>".") * "\$") => ApiClientDataErrorResponse,
    Regex("^" * replace("401", "x"=>".") * "\$") => ApiUnauthorizedErrorResponse,
    Regex("^" * replace("403", "x"=>".") * "\$") => ApiForbiddenErrorResponse,
    Regex("^" * replace("404", "x"=>".") * "\$") => ApiNotFoundErrorResponse,
    Regex("^" * replace("420", "x"=>".") * "\$") => ApiLimitErrorResponse,
    Regex("^" * replace("500", "x"=>".") * "\$") => ApiServerErrorResponse,
)

function _oacinternal_transfer_orders_from_shipment(_api::ShipmentsApi, campaign_id::Int64, shipment_id::Int64, transfer_orders_from_shipment_request::TransferOrdersFromShipmentRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_transfer_orders_from_shipment_ShipmentsApi, "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/orders/transfer", ["OAuth", ], transfer_orders_from_shipment_request)
    OpenAPI.Clients.set_param(_ctx.path, "campaignId", campaign_id)  # type Int64
    OpenAPI.Clients.set_param(_ctx.path, "shipmentId", shipment_id)  # type Int64
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Перенос заказов в следующую отгрузку

Переносит указанные заказы из указанной отгрузки в следующую отгрузку. [Что такое отгрузка?](https://yandex.ru/support/marketplace/orders/fbs/process.html#ship)  Используйте этот запрос, если не успеваете собрать и упаковать заказы вовремя.  {% note warning \"Такие переносы снижают индекс качества магазина\" %}  Этот запрос предназначен для исключительных случаев. Если вы будете переносить заказы слишком часто, магазин столкнется с ограничениями. [Что за ограничения?](https://yandex.ru/support/marketplace/quality/score/fbs.html)  {% endnote %}  Переносить заказы можно, если до формирования отгрузки осталось больше получаса.  Перенос происходит не мгновенно, а занимает несколько минут.  |**⚙️ Лимит:** 200 запросов в час| |-| 

Params:
- campaign_id::Int64 (required)
- shipment_id::Int64 (required)
- transfer_orders_from_shipment_request::TransferOrdersFromShipmentRequest (required)

Return: EmptyApiResponse, OpenAPI.Clients.ApiResponse
"""
function transfer_orders_from_shipment(_api::ShipmentsApi, campaign_id::Int64, shipment_id::Int64, transfer_orders_from_shipment_request::TransferOrdersFromShipmentRequest; _mediaType=nothing)
    _ctx = _oacinternal_transfer_orders_from_shipment(_api, campaign_id, shipment_id, transfer_orders_from_shipment_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function transfer_orders_from_shipment(_api::ShipmentsApi, response_stream::Channel, campaign_id::Int64, shipment_id::Int64, transfer_orders_from_shipment_request::TransferOrdersFromShipmentRequest; _mediaType=nothing)
    _ctx = _oacinternal_transfer_orders_from_shipment(_api, campaign_id, shipment_id, transfer_orders_from_shipment_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export confirm_shipment
export download_shipment_act
export download_shipment_discrepancy_act
export download_shipment_inbound_act
export download_shipment_pallet_labels
export download_shipment_reception_transfer_act
export download_shipment_transportation_waybill
export get_shipment
export get_shipment_orders_info
export search_shipments
export set_shipment_pallets_count
export transfer_orders_from_shipment
