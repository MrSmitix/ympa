# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct DeliveryServicesApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `DeliveryServicesApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ DeliveryServicesApi }) = "https://api.partner.market.yandex.ru"

const _returntypes_get_delivery_services_DeliveryServicesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => GetDeliveryServicesResponse,
    Regex("^" * replace("400", "x"=>".") * "\$") => ApiClientDataErrorResponse,
    Regex("^" * replace("401", "x"=>".") * "\$") => ApiUnauthorizedErrorResponse,
    Regex("^" * replace("403", "x"=>".") * "\$") => ApiForbiddenErrorResponse,
    Regex("^" * replace("404", "x"=>".") * "\$") => ApiNotFoundErrorResponse,
    Regex("^" * replace("420", "x"=>".") * "\$") => ApiLimitErrorResponse,
    Regex("^" * replace("500", "x"=>".") * "\$") => ApiServerErrorResponse,
)

function _oacinternal_get_delivery_services(_api::DeliveryServicesApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_delivery_services_DeliveryServicesApi, "/delivery/services", ["OAuth", ])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Справочник служб доставки

Возвращает справочник служб доставки: идентификаторы и наименования. |**⚙️ Лимит:** 5 000 запросов в час| |-| 

Params:

Return: GetDeliveryServicesResponse, OpenAPI.Clients.ApiResponse
"""
function get_delivery_services(_api::DeliveryServicesApi; _mediaType=nothing)
    _ctx = _oacinternal_get_delivery_services(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_delivery_services(_api::DeliveryServicesApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_get_delivery_services(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export get_delivery_services
