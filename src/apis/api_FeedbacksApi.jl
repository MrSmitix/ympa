# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct FeedbacksApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `FeedbacksApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ FeedbacksApi }) = "https://api.partner.market.yandex.ru"

const _returntypes_get_feedback_and_comment_updates_FeedbacksApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => GetFeedbackListResponse,
    Regex("^" * replace("400", "x"=>".") * "\$") => ApiClientDataErrorResponse,
    Regex("^" * replace("401", "x"=>".") * "\$") => ApiUnauthorizedErrorResponse,
    Regex("^" * replace("403", "x"=>".") * "\$") => ApiForbiddenErrorResponse,
    Regex("^" * replace("404", "x"=>".") * "\$") => ApiNotFoundErrorResponse,
    Regex("^" * replace("420", "x"=>".") * "\$") => ApiLimitErrorResponse,
    Regex("^" * replace("500", "x"=>".") * "\$") => ApiServerErrorResponse,
)

function _oacinternal_get_feedback_and_comment_updates(_api::FeedbacksApi, campaign_id::Int64; page_token=nothing, limit=nothing, from_date=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_feedback_and_comment_updates_FeedbacksApi, "/campaigns/{campaignId}/feedback/updates", ["OAuth", ])
    OpenAPI.Clients.set_param(_ctx.path, "campaignId", campaign_id)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "page_token", page_token; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit; style="", is_explode=false)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "from_date", from_date; style="", is_explode=false)  # type Date
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Новые и обновленные отзывы о магазине

{% note warning \"\" %}  Этот метод устарел. Не используйте его.  {% endnote %}  Возвращает новые и обновленные отзывы о магазине на Маркете.  Результаты возвращаются постранично, одна страница содержит не более 20 отзывов. Выходные данные содержат идентификатор следующей страницы.  |**⚙️ Лимит:** 100 запросов в час| |-| 

Params:
- campaign_id::Int64 (required)
- page_token::String
- limit::Int64
- from_date::Date

Return: GetFeedbackListResponse, OpenAPI.Clients.ApiResponse
"""
function get_feedback_and_comment_updates(_api::FeedbacksApi, campaign_id::Int64; page_token=nothing, limit=nothing, from_date=nothing, _mediaType=nothing)
    _ctx = _oacinternal_get_feedback_and_comment_updates(_api, campaign_id; page_token=page_token, limit=limit, from_date=from_date, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_feedback_and_comment_updates(_api::FeedbacksApi, response_stream::Channel, campaign_id::Int64; page_token=nothing, limit=nothing, from_date=nothing, _mediaType=nothing)
    _ctx = _oacinternal_get_feedback_and_comment_updates(_api, campaign_id; page_token=page_token, limit=limit, from_date=from_date, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export get_feedback_and_comment_updates
