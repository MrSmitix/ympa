/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using ympa_aspnetcore_server.Converters;

namespace ympa_aspnetcore_server.Models
{ 
    /// <summary>
    /// Данные, необходимые для генерации документа. 
    /// </summary>
    [DataContract]
    public partial class GenerateShipmentListDocumentReportRequest : IEquatable<GenerateShipmentListDocumentReportRequest>
    {
        /// <summary>
        /// Идентификатор кампании.
        /// </summary>
        /// <value>Идентификатор кампании.</value>
        [Required]
        [DataMember(Name="campaignId", EmitDefaultValue=true)]
        public long CampaignId { get; set; }

        /// <summary>
        /// Идентификатор отгрузки.
        /// </summary>
        /// <value>Идентификатор отгрузки.</value>
        [DataMember(Name="shipmentId", EmitDefaultValue=true)]
        public long ShipmentId { get; set; }

        /// <summary>
        /// Фильтр по идентификаторам заказа в отгрузке.
        /// </summary>
        /// <value>Фильтр по идентификаторам заказа в отгрузке.</value>
        [DataMember(Name="orderIds", EmitDefaultValue=true)]
        public List<long> OrderIds { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GenerateShipmentListDocumentReportRequest {\n");
            sb.Append("  CampaignId: ").Append(CampaignId).Append("\n");
            sb.Append("  ShipmentId: ").Append(ShipmentId).Append("\n");
            sb.Append("  OrderIds: ").Append(OrderIds).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((GenerateShipmentListDocumentReportRequest)obj);
        }

        /// <summary>
        /// Returns true if GenerateShipmentListDocumentReportRequest instances are equal
        /// </summary>
        /// <param name="other">Instance of GenerateShipmentListDocumentReportRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GenerateShipmentListDocumentReportRequest other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    CampaignId == other.CampaignId ||
                    
                    CampaignId.Equals(other.CampaignId)
                ) && 
                (
                    ShipmentId == other.ShipmentId ||
                    
                    ShipmentId.Equals(other.ShipmentId)
                ) && 
                (
                    OrderIds == other.OrderIds ||
                    OrderIds != null &&
                    other.OrderIds != null &&
                    OrderIds.SequenceEqual(other.OrderIds)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    
                    hashCode = hashCode * 59 + CampaignId.GetHashCode();
                    
                    hashCode = hashCode * 59 + ShipmentId.GetHashCode();
                    if (OrderIds != null)
                    hashCode = hashCode * 59 + OrderIds.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(GenerateShipmentListDocumentReportRequest left, GenerateShipmentListDocumentReportRequest right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(GenerateShipmentListDocumentReportRequest left, GenerateShipmentListDocumentReportRequest right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
