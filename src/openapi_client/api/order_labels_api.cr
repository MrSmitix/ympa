# #Партнерский API Маркета
#
##API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
#
#The version of the OpenAPI document: LATEST
#
#Generated by: https://openapi-generator.tech
#Generator version: 7.8.0
#

require "uri"

module OpenAPIClient
  class OrderLabelsApi
    property api_client : ApiClient

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Готовый ярлык‑наклейка для коробки в заказе
    # Формирует ярлык‑наклейку для коробки в заказе и возвращает ярлык в PDF‑файле.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param order_id [Int64] Идентификатор заказа.
    # @param shipment_id [Int64] Идентификатор грузоместа.
    # @param box_id [Int64] Идентификатор коробки.
    # @return [::File]
    def generate_order_label(campaign_id : Int64, order_id : Int64, shipment_id : Int64, box_id : Int64, format : PageFormatType?)
      data, _status_code, _headers = generate_order_label_with_http_info(campaign_id, order_id, shipment_id, box_id, format)
      data
    end

    # Готовый ярлык‑наклейка для коробки в заказе
    # Формирует ярлык‑наклейку для коробки в заказе и возвращает ярлык в PDF‑файле.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param order_id [Int64] Идентификатор заказа.
    # @param shipment_id [Int64] Идентификатор грузоместа.
    # @param box_id [Int64] Идентификатор коробки.
    # @return [Array<(::File, Integer, Hash)>] ::File data, response status code and response headers
    def generate_order_label_with_http_info(campaign_id : Int64, order_id : Int64, shipment_id : Int64, box_id : Int64, format : PageFormatType?)
      if @api_client.config.debugging
        Log.debug {"Calling API: OrderLabelsApi.generate_order_label ..."}
      end
      # verify the required parameter "campaign_id" is set
      if @api_client.config.client_side_validation && campaign_id.nil?
        raise ArgumentError.new("Missing the required parameter 'campaign_id' when calling OrderLabelsApi.generate_order_label")
      end
      # verify the required parameter "order_id" is set
      if @api_client.config.client_side_validation && order_id.nil?
        raise ArgumentError.new("Missing the required parameter 'order_id' when calling OrderLabelsApi.generate_order_label")
      end
      # verify the required parameter "shipment_id" is set
      if @api_client.config.client_side_validation && shipment_id.nil?
        raise ArgumentError.new("Missing the required parameter 'shipment_id' when calling OrderLabelsApi.generate_order_label")
      end
      # verify the required parameter "box_id" is set
      if @api_client.config.client_side_validation && box_id.nil?
        raise ArgumentError.new("Missing the required parameter 'box_id' when calling OrderLabelsApi.generate_order_label")
      end
      # resource path
      local_var_path = "/campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes/{boxId}/label".sub("{" + "campaignId" + "}", URI.encode_path(campaign_id.to_s)).sub("{" + "orderId" + "}", URI.encode_path(order_id.to_s)).sub("{" + "shipmentId" + "}", URI.encode_path(shipment_id.to_s)).sub("{" + "boxId" + "}", URI.encode_path(box_id.to_s))

      # query parameters
      query_params = Hash(String, String).new
      query_params["format"] = format.to_s unless format.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/pdf", "application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "::File"

      # auth_names
      auth_names = ["OAuth"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"OrderLabelsApi.generate_order_label",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: OrderLabelsApi#generate_order_label\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return ::File.from_json(data), status_code, headers
    end

    # Готовые ярлыки‑наклейки на все коробки в одном заказе
    # Возвращает PDF-файл с ярлыками, которые нужно наклеить на коробки перед отгрузкой. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  На вход нужно передать идентификатор заказа и один необязательный параметр, который управляет версткой PDF-файла.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param order_id [Int64] Идентификатор заказа.
    # @return [::File]
    def generate_order_labels(campaign_id : Int64, order_id : Int64, format : PageFormatType?)
      data, _status_code, _headers = generate_order_labels_with_http_info(campaign_id, order_id, format)
      data
    end

    # Готовые ярлыки‑наклейки на все коробки в одном заказе
    # Возвращает PDF-файл с ярлыками, которые нужно наклеить на коробки перед отгрузкой. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  На вход нужно передать идентификатор заказа и один необязательный параметр, который управляет версткой PDF-файла.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param order_id [Int64] Идентификатор заказа.
    # @return [Array<(::File, Integer, Hash)>] ::File data, response status code and response headers
    def generate_order_labels_with_http_info(campaign_id : Int64, order_id : Int64, format : PageFormatType?)
      if @api_client.config.debugging
        Log.debug {"Calling API: OrderLabelsApi.generate_order_labels ..."}
      end
      # verify the required parameter "campaign_id" is set
      if @api_client.config.client_side_validation && campaign_id.nil?
        raise ArgumentError.new("Missing the required parameter 'campaign_id' when calling OrderLabelsApi.generate_order_labels")
      end
      # verify the required parameter "order_id" is set
      if @api_client.config.client_side_validation && order_id.nil?
        raise ArgumentError.new("Missing the required parameter 'order_id' when calling OrderLabelsApi.generate_order_labels")
      end
      # resource path
      local_var_path = "/campaigns/{campaignId}/orders/{orderId}/delivery/labels".sub("{" + "campaignId" + "}", URI.encode_path(campaign_id.to_s)).sub("{" + "orderId" + "}", URI.encode_path(order_id.to_s))

      # query parameters
      query_params = Hash(String, String).new
      query_params["format"] = format.to_s unless format.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/pdf", "application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "::File"

      # auth_names
      auth_names = ["OAuth"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"OrderLabelsApi.generate_order_labels",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: OrderLabelsApi#generate_order_labels\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return ::File.from_json(data), status_code, headers
    end

    # Данные для самостоятельного изготовления ярлыков
    # Возвращает информацию на ярлыках, которые клеятся на коробки в заказе.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param order_id [Int64] Идентификатор заказа.
    # @return [GetOrderLabelsDataResponse]
    def get_order_labels_data(campaign_id : Int64, order_id : Int64)
      data, _status_code, _headers = get_order_labels_data_with_http_info(campaign_id, order_id)
      data
    end

    # Данные для самостоятельного изготовления ярлыков
    # Возвращает информацию на ярлыках, которые клеятся на коробки в заказе.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param order_id [Int64] Идентификатор заказа.
    # @return [Array<(GetOrderLabelsDataResponse, Integer, Hash)>] GetOrderLabelsDataResponse data, response status code and response headers
    def get_order_labels_data_with_http_info(campaign_id : Int64, order_id : Int64)
      if @api_client.config.debugging
        Log.debug {"Calling API: OrderLabelsApi.get_order_labels_data ..."}
      end
      # verify the required parameter "campaign_id" is set
      if @api_client.config.client_side_validation && campaign_id.nil?
        raise ArgumentError.new("Missing the required parameter 'campaign_id' when calling OrderLabelsApi.get_order_labels_data")
      end
      # verify the required parameter "order_id" is set
      if @api_client.config.client_side_validation && order_id.nil?
        raise ArgumentError.new("Missing the required parameter 'order_id' when calling OrderLabelsApi.get_order_labels_data")
      end
      # resource path
      local_var_path = "/campaigns/{campaignId}/orders/{orderId}/delivery/labels/data".sub("{" + "campaignId" + "}", URI.encode_path(campaign_id.to_s)).sub("{" + "orderId" + "}", URI.encode_path(order_id.to_s))

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "GetOrderLabelsDataResponse"

      # auth_names
      auth_names = ["OAuth"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"OrderLabelsApi.get_order_labels_data",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: OrderLabelsApi#get_order_labels_data\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return GetOrderLabelsDataResponse.from_json(data), status_code, headers
    end
  end
end
