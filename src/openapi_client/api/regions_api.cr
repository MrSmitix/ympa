# #Партнерский API Маркета
#
##API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
#
#The version of the OpenAPI document: LATEST
#
#Generated by: https://openapi-generator.tech
#Generator version: 7.8.0
#

require "uri"

module OpenAPIClient
  class RegionsApi
    property api_client : ApiClient

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Информация о дочерних регионах
    # Возвращает информацию о регионах, являющихся дочерними по отношению к региону, идентификатор которого указан в запросе.  Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-| 
    # @param region_id [Int64] Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). 
    # @return [GetRegionWithChildrenResponse]
    def search_region_children(region_id : Int64, page : Int32?, page_size : Int32?)
      data, _status_code, _headers = search_region_children_with_http_info(region_id, page, page_size)
      data
    end

    # Информация о дочерних регионах
    # Возвращает информацию о регионах, являющихся дочерними по отношению к региону, идентификатор которого указан в запросе.  Для методов &#x60;GET regions&#x60;, &#x60;GET regions/{regionId}&#x60; и &#x60;GET regions/{regionId}/children&#x60; действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-| 
    # @param region_id [Int64] Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). 
    # @return [Array<(GetRegionWithChildrenResponse, Integer, Hash)>] GetRegionWithChildrenResponse data, response status code and response headers
    def search_region_children_with_http_info(region_id : Int64, page : Int32?, page_size : Int32?)
      if @api_client.config.debugging
        Log.debug {"Calling API: RegionsApi.search_region_children ..."}
      end
      # verify the required parameter "region_id" is set
      if @api_client.config.client_side_validation && region_id.nil?
        raise ArgumentError.new("Missing the required parameter 'region_id' when calling RegionsApi.search_region_children")
      end
      if @api_client.config.client_side_validation && !page.nil? && page > 10000
        raise ArgumentError.new("invalid value for \"page\" when calling RegionsApi.search_region_children, must be smaller than or equal to 10000.")
      end

      # resource path
      local_var_path = "/regions/{regionId}/children".sub("{" + "regionId" + "}", URI.encode_path(region_id.to_s))

      # query parameters
      query_params = Hash(String, String).new
      query_params["page"] = page.to_s unless page.nil?
      query_params["pageSize"] = page_size.to_s unless page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "GetRegionWithChildrenResponse"

      # auth_names
      auth_names = ["OAuth"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"RegionsApi.search_region_children",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: RegionsApi#search_region_children\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return GetRegionWithChildrenResponse.from_json(data), status_code, headers
    end

    # Информация о регионе
    # Возвращает информацию о регионе.  Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-| 
    # @param region_id [Int64] Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). 
    # @return [GetRegionsResponse]
    def search_regions_by_id(region_id : Int64)
      data, _status_code, _headers = search_regions_by_id_with_http_info(region_id)
      data
    end

    # Информация о регионе
    # Возвращает информацию о регионе.  Для методов &#x60;GET regions&#x60;, &#x60;GET regions/{regionId}&#x60; и &#x60;GET regions/{regionId}/children&#x60; действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-| 
    # @param region_id [Int64] Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). 
    # @return [Array<(GetRegionsResponse, Integer, Hash)>] GetRegionsResponse data, response status code and response headers
    def search_regions_by_id_with_http_info(region_id : Int64)
      if @api_client.config.debugging
        Log.debug {"Calling API: RegionsApi.search_regions_by_id ..."}
      end
      # verify the required parameter "region_id" is set
      if @api_client.config.client_side_validation && region_id.nil?
        raise ArgumentError.new("Missing the required parameter 'region_id' when calling RegionsApi.search_regions_by_id")
      end
      # resource path
      local_var_path = "/regions/{regionId}".sub("{" + "regionId" + "}", URI.encode_path(region_id.to_s))

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "GetRegionsResponse"

      # auth_names
      auth_names = ["OAuth"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"RegionsApi.search_regions_by_id",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: RegionsApi#search_regions_by_id\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return GetRegionsResponse.from_json(data), status_code, headers
    end

    # Поиск регионов по их имени
    # Возвращает информацию о регионе, удовлетворяющем заданным в запросе условиям поиска.  Если найдено несколько регионов, удовлетворяющих условиям поиска, возвращается информация по каждому найденному региону (но не более десяти регионов) для возможности определения нужного региона по родительским регионам.  Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-| 
    # @param name [String] Название региона.  Важно учитывать регистр: первая буква должна быть заглавной, остальные — строчными. Например, &#x60;Москва&#x60;. 
    # @return [GetRegionsResponse]
    def search_regions_by_name(name : String, page_token : String?, limit : Int32?)
      data, _status_code, _headers = search_regions_by_name_with_http_info(name, page_token, limit)
      data
    end

    # Поиск регионов по их имени
    # Возвращает информацию о регионе, удовлетворяющем заданным в запросе условиям поиска.  Если найдено несколько регионов, удовлетворяющих условиям поиска, возвращается информация по каждому найденному региону (но не более десяти регионов) для возможности определения нужного региона по родительским регионам.  Для методов &#x60;GET regions&#x60;, &#x60;GET regions/{regionId}&#x60; и &#x60;GET regions/{regionId}/children&#x60; действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).  Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.  |**⚙️ Лимит:** 50 000 запросов в час| |-| 
    # @param name [String] Название региона.  Важно учитывать регистр: первая буква должна быть заглавной, остальные — строчными. Например, &#x60;Москва&#x60;. 
    # @return [Array<(GetRegionsResponse, Integer, Hash)>] GetRegionsResponse data, response status code and response headers
    def search_regions_by_name_with_http_info(name : String, page_token : String?, limit : Int32?)
      if @api_client.config.debugging
        Log.debug {"Calling API: RegionsApi.search_regions_by_name ..."}
      end
      # verify the required parameter "name" is set
      if @api_client.config.client_side_validation && name.nil?
        raise ArgumentError.new("Missing the required parameter 'name' when calling RegionsApi.search_regions_by_name")
      end
      # resource path
      local_var_path = "/regions"

      # query parameters
      query_params = Hash(String, String).new
      query_params["name"] = name.to_s unless name.nil?
      query_params["page_token"] = page_token.to_s unless page_token.nil?
      query_params["limit"] = limit.to_s unless limit.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "GetRegionsResponse"

      # auth_names
      auth_names = ["OAuth"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"RegionsApi.search_regions_by_name",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: RegionsApi#search_regions_by_name\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return GetRegionsResponse.from_json(data), status_code, headers
    end
  end
end
