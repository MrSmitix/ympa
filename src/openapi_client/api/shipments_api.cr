# #Партнерский API Маркета
#
##API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
#
#The version of the OpenAPI document: LATEST
#
#Generated by: https://openapi-generator.tech
#Generator version: 7.8.0
#

require "uri"

module OpenAPIClient
  class ShipmentsApi
    property api_client : ApiClient

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Подтверждение отгрузки
    # Подтверждает отгрузку товаров в сортировочный центр или пункт приема заказов. |**⚙️ Лимит:** 100 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param shipment_id [Int64] Идентификатор отгрузки.
    # @return [EmptyApiResponse]
    def confirm_shipment(campaign_id : Int64, shipment_id : Int64, confirm_shipment_request : ConfirmShipmentRequest?)
      data, _status_code, _headers = confirm_shipment_with_http_info(campaign_id, shipment_id, confirm_shipment_request)
      data
    end

    # Подтверждение отгрузки
    # Подтверждает отгрузку товаров в сортировочный центр или пункт приема заказов. |**⚙️ Лимит:** 100 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param shipment_id [Int64] Идентификатор отгрузки.
    # @return [Array<(EmptyApiResponse, Integer, Hash)>] EmptyApiResponse data, response status code and response headers
    def confirm_shipment_with_http_info(campaign_id : Int64, shipment_id : Int64, confirm_shipment_request : ConfirmShipmentRequest?)
      if @api_client.config.debugging
        Log.debug {"Calling API: ShipmentsApi.confirm_shipment ..."}
      end
      # verify the required parameter "campaign_id" is set
      if @api_client.config.client_side_validation && campaign_id.nil?
        raise ArgumentError.new("Missing the required parameter 'campaign_id' when calling ShipmentsApi.confirm_shipment")
      end
      # verify the required parameter "shipment_id" is set
      if @api_client.config.client_side_validation && shipment_id.nil?
        raise ArgumentError.new("Missing the required parameter 'shipment_id' when calling ShipmentsApi.confirm_shipment")
      end
      # resource path
      local_var_path = "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/confirm".sub("{" + "campaignId" + "}", URI.encode_path(campaign_id.to_s)).sub("{" + "shipmentId" + "}", URI.encode_path(shipment_id.to_s))

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = confirm_shipment_request.to_json

      # return_type
      return_type = "EmptyApiResponse"

      # auth_names
      auth_names = ["OAuth"]

      data, status_code, headers = @api_client.call_api(:POST,
                                                        local_var_path,
                                                        :"ShipmentsApi.confirm_shipment",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: ShipmentsApi#confirm_shipment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return EmptyApiResponse.from_json(data), status_code, headers
    end

    # Получение акта приема-передачи
    # {% note warning \"Экспресс‑доставка\" %}  Если ваш магазин подключен к экспресс‑доставке и вы отгружаете заказы курьерам Яндекс Go, подготавливать акт приема‑передачи не нужно.  {% endnote %}  Запрос формирует акт приема-передачи заказов, входящих в отгрузку, и возвращает акт в формате PDF. В акте содержатся собранные и готовые к отправке заказы.  При формировании акта Маркет автоматически находит и подставляет в шаблон следующие данные:  {% cut \"Данные, из которых Маркет формирует акт\" %}  | **Данные в акте**                                         | **Описание**                                                                                                                                                                                                                                                         | | --------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | | Дата                                                      | Дата запроса.                                                                                                                                                                                                                                                        | | Отправитель                                               | Название вашего юридического лица, указанное в кабинете продавца на Маркете.                                                                                                                                                                                         | | Исполнитель                                               | Название юридического лица сортировочного центра или службы доставки.                                                                                                                                                                                                | | № отправления в системе заказчика                         | Ваш идентификатор заказа, который вы указали в ответе на запрос [POST order/accept](../../pushapi/reference/orderAccept.md) от Маркета.                                                                                                                              | | № отправления в системе исполнителя (субподрядчика)       | Идентификатор заказа на Маркете, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md).                                                                                                                             | | Объявленная ценность                                      | Общая сумма заказа без учета стоимости доставки, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                       | | Вес                                                       | Масса брутто грузового места (суммарная масса упаковки и содержимого), как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md). | | Количество мест                                           | Количество грузовых мест в заказе, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                                     |  {% endcut %}  Остальные поля нужно заполнить самостоятельно в распечатанном акте. |**⚙️ Лимит:** 100 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param shipment_id [Int64] Идентификатор отгрузки.
    # @return [::File]
    def download_shipment_act(campaign_id : Int64, shipment_id : Int64)
      data, _status_code, _headers = download_shipment_act_with_http_info(campaign_id, shipment_id)
      data
    end

    # Получение акта приема-передачи
    # {% note warning \&quot;Экспресс‑доставка\&quot; %}  Если ваш магазин подключен к экспресс‑доставке и вы отгружаете заказы курьерам Яндекс Go, подготавливать акт приема‑передачи не нужно.  {% endnote %}  Запрос формирует акт приема-передачи заказов, входящих в отгрузку, и возвращает акт в формате PDF. В акте содержатся собранные и готовые к отправке заказы.  При формировании акта Маркет автоматически находит и подставляет в шаблон следующие данные:  {% cut \&quot;Данные, из которых Маркет формирует акт\&quot; %}  | **Данные в акте**                                         | **Описание**                                                                                                                                                                                                                                                         | | --------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | | Дата                                                      | Дата запроса.                                                                                                                                                                                                                                                        | | Отправитель                                               | Название вашего юридического лица, указанное в кабинете продавца на Маркете.                                                                                                                                                                                         | | Исполнитель                                               | Название юридического лица сортировочного центра или службы доставки.                                                                                                                                                                                                | | № отправления в системе заказчика                         | Ваш идентификатор заказа, который вы указали в ответе на запрос [POST order/accept](../../pushapi/reference/orderAccept.md) от Маркета.                                                                                                                              | | № отправления в системе исполнителя (субподрядчика)       | Идентификатор заказа на Маркете, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md).                                                                                                                             | | Объявленная ценность                                      | Общая сумма заказа без учета стоимости доставки, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                       | | Вес                                                       | Масса брутто грузового места (суммарная масса упаковки и содержимого), как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md). | | Количество мест                                           | Количество грузовых мест в заказе, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                                     |  {% endcut %}  Остальные поля нужно заполнить самостоятельно в распечатанном акте. |**⚙️ Лимит:** 100 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param shipment_id [Int64] Идентификатор отгрузки.
    # @return [Array<(::File, Integer, Hash)>] ::File data, response status code and response headers
    def download_shipment_act_with_http_info(campaign_id : Int64, shipment_id : Int64)
      if @api_client.config.debugging
        Log.debug {"Calling API: ShipmentsApi.download_shipment_act ..."}
      end
      # verify the required parameter "campaign_id" is set
      if @api_client.config.client_side_validation && campaign_id.nil?
        raise ArgumentError.new("Missing the required parameter 'campaign_id' when calling ShipmentsApi.download_shipment_act")
      end
      # verify the required parameter "shipment_id" is set
      if @api_client.config.client_side_validation && shipment_id.nil?
        raise ArgumentError.new("Missing the required parameter 'shipment_id' when calling ShipmentsApi.download_shipment_act")
      end
      # resource path
      local_var_path = "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/act".sub("{" + "campaignId" + "}", URI.encode_path(campaign_id.to_s)).sub("{" + "shipmentId" + "}", URI.encode_path(shipment_id.to_s))

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/pdf", "application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "::File"

      # auth_names
      auth_names = ["OAuth"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"ShipmentsApi.download_shipment_act",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: ShipmentsApi#download_shipment_act\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return ::File.from_json(data), status_code, headers
    end

    # Получение акта расхождений
    # Возвращает акт расхождений для заданной отгрузки. |**⚙️ Лимит:** 200 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param shipment_id [Int64] Идентификатор отгрузки.
    # @return [::File]
    def download_shipment_discrepancy_act(campaign_id : Int64, shipment_id : Int64)
      data, _status_code, _headers = download_shipment_discrepancy_act_with_http_info(campaign_id, shipment_id)
      data
    end

    # Получение акта расхождений
    # Возвращает акт расхождений для заданной отгрузки. |**⚙️ Лимит:** 200 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param shipment_id [Int64] Идентификатор отгрузки.
    # @return [Array<(::File, Integer, Hash)>] ::File data, response status code and response headers
    def download_shipment_discrepancy_act_with_http_info(campaign_id : Int64, shipment_id : Int64)
      if @api_client.config.debugging
        Log.debug {"Calling API: ShipmentsApi.download_shipment_discrepancy_act ..."}
      end
      # verify the required parameter "campaign_id" is set
      if @api_client.config.client_side_validation && campaign_id.nil?
        raise ArgumentError.new("Missing the required parameter 'campaign_id' when calling ShipmentsApi.download_shipment_discrepancy_act")
      end
      # verify the required parameter "shipment_id" is set
      if @api_client.config.client_side_validation && shipment_id.nil?
        raise ArgumentError.new("Missing the required parameter 'shipment_id' when calling ShipmentsApi.download_shipment_discrepancy_act")
      end
      # resource path
      local_var_path = "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/discrepancy-act".sub("{" + "campaignId" + "}", URI.encode_path(campaign_id.to_s)).sub("{" + "shipmentId" + "}", URI.encode_path(shipment_id.to_s))

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/vnd.ms-excel", "application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "::File"

      # auth_names
      auth_names = ["OAuth"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"ShipmentsApi.download_shipment_discrepancy_act",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: ShipmentsApi#download_shipment_discrepancy_act\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return ::File.from_json(data), status_code, headers
    end

    # Получение фактического акта приема-передачи
    # Возвращает фактический акт приема-передачи для заданной отгрузки.  Такой акт становится доступен спустя несколько часов после завершения отгрузки. Он может понадобиться, если после отгрузки обнаружатся расхождения.  |**⚙️ Лимит:** 200 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param shipment_id [Int64] Идентификатор отгрузки.
    # @return [::File]
    def download_shipment_inbound_act(campaign_id : Int64, shipment_id : Int64)
      data, _status_code, _headers = download_shipment_inbound_act_with_http_info(campaign_id, shipment_id)
      data
    end

    # Получение фактического акта приема-передачи
    # Возвращает фактический акт приема-передачи для заданной отгрузки.  Такой акт становится доступен спустя несколько часов после завершения отгрузки. Он может понадобиться, если после отгрузки обнаружатся расхождения.  |**⚙️ Лимит:** 200 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param shipment_id [Int64] Идентификатор отгрузки.
    # @return [Array<(::File, Integer, Hash)>] ::File data, response status code and response headers
    def download_shipment_inbound_act_with_http_info(campaign_id : Int64, shipment_id : Int64)
      if @api_client.config.debugging
        Log.debug {"Calling API: ShipmentsApi.download_shipment_inbound_act ..."}
      end
      # verify the required parameter "campaign_id" is set
      if @api_client.config.client_side_validation && campaign_id.nil?
        raise ArgumentError.new("Missing the required parameter 'campaign_id' when calling ShipmentsApi.download_shipment_inbound_act")
      end
      # verify the required parameter "shipment_id" is set
      if @api_client.config.client_side_validation && shipment_id.nil?
        raise ArgumentError.new("Missing the required parameter 'shipment_id' when calling ShipmentsApi.download_shipment_inbound_act")
      end
      # resource path
      local_var_path = "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/inbound-act".sub("{" + "campaignId" + "}", URI.encode_path(campaign_id.to_s)).sub("{" + "shipmentId" + "}", URI.encode_path(shipment_id.to_s))

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/pdf", "application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "::File"

      # auth_names
      auth_names = ["OAuth"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"ShipmentsApi.download_shipment_inbound_act",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: ShipmentsApi#download_shipment_inbound_act\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return ::File.from_json(data), status_code, headers
    end

    # Ярлыки для доверительной приемки (FBS)
    # PDF-файл с ярлыками на каждый короб или палету в отгрузке для доверительной приемки. Подробнее про доверительную приемку написано в [Справке Маркета](https://yandex.ru/support/marketplace/orders/fbs/process.html#acceptance).  Распечатайте по несколько копий каждого ярлыка: на одну тару нужно наклеить минимум 2 ярлыка с разных сторон.  Количество упаковок в отгрузке задается в запросе [PUT campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallets](../../reference/shipments/setShipmentPalletsCount.md). |**⚙️ Лимит:** 200 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param shipment_id [Int64] Идентификатор отгрузки.
    # @return [::File]
    def download_shipment_pallet_labels(campaign_id : Int64, shipment_id : Int64, format : ShipmentPalletLabelPageFormatType?)
      data, _status_code, _headers = download_shipment_pallet_labels_with_http_info(campaign_id, shipment_id, format)
      data
    end

    # Ярлыки для доверительной приемки (FBS)
    # PDF-файл с ярлыками на каждый короб или палету в отгрузке для доверительной приемки. Подробнее про доверительную приемку написано в [Справке Маркета](https://yandex.ru/support/marketplace/orders/fbs/process.html#acceptance).  Распечатайте по несколько копий каждого ярлыка: на одну тару нужно наклеить минимум 2 ярлыка с разных сторон.  Количество упаковок в отгрузке задается в запросе [PUT campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallets](../../reference/shipments/setShipmentPalletsCount.md). |**⚙️ Лимит:** 200 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param shipment_id [Int64] Идентификатор отгрузки.
    # @return [Array<(::File, Integer, Hash)>] ::File data, response status code and response headers
    def download_shipment_pallet_labels_with_http_info(campaign_id : Int64, shipment_id : Int64, format : ShipmentPalletLabelPageFormatType?)
      if @api_client.config.debugging
        Log.debug {"Calling API: ShipmentsApi.download_shipment_pallet_labels ..."}
      end
      # verify the required parameter "campaign_id" is set
      if @api_client.config.client_side_validation && campaign_id.nil?
        raise ArgumentError.new("Missing the required parameter 'campaign_id' when calling ShipmentsApi.download_shipment_pallet_labels")
      end
      # verify the required parameter "shipment_id" is set
      if @api_client.config.client_side_validation && shipment_id.nil?
        raise ArgumentError.new("Missing the required parameter 'shipment_id' when calling ShipmentsApi.download_shipment_pallet_labels")
      end
      # resource path
      local_var_path = "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallet/labels".sub("{" + "campaignId" + "}", URI.encode_path(campaign_id.to_s)).sub("{" + "shipmentId" + "}", URI.encode_path(shipment_id.to_s))

      # query parameters
      query_params = Hash(String, String).new
      query_params["format"] = format.to_s unless format.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/pdf", "application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "::File"

      # auth_names
      auth_names = ["OAuth"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"ShipmentsApi.download_shipment_pallet_labels",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: ShipmentsApi#download_shipment_pallet_labels\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return ::File.from_json(data), status_code, headers
    end

    # Подтверждение ближайшей отгрузки и получение акта приема-передачи для нее
    # Запрос подтверждает ближайшую отгрузку и возвращает акт приема-передачи в формате PDF.  {% note warning \"Экспресс‑доставка\" %}  Если ваш магазин подключен к экспресс‑доставке и вы отгружаете заказы курьерам [Яндекс Go](https://go.yandex/), подготавливать акт приема‑передачи не нужно.  {% endnote %}  В акт входят собранные и готовые к отправке заказы, которые отгружаются в сортировочный центр или пункт приема или курьерам Маркета.  При формировании акта Маркет автоматически находит и подставляет в шаблон следующие данные:  {% cut \"Данные, из которых Маркет формирует акт\" %}  | **Данные в акте**                                   | **Описание**                                                                                                                                                                                                                                                         | | --------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | | Отправитель                                         | Название вашего юридического лица, указанное в кабинете продавца на Маркете.                                                                                                                                                                                         | | Исполнитель                                         | Название юридического лица сортировочного центра или службы доставки.                                                                                                                                                                                                | | № отправления в системе заказчика                   | Ваш идентификатор заказа, который вы указали в ответе на запрос [POST order/accept](../../pushapi/reference/orderAccept.md) от Маркета.                                                                                                                              | | № отправления в системе исполнителя (субподрядчика) | Идентификатор заказа на Маркете, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md).                                                                                                                             | | Объявленная ценность                                | Общая сумма заказа без учета стоимости доставки, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                       | | Стоимость всех товаров в заказе                     | Стоимость всех заказанных товаров.                                                                                                                                                                                                                                   | | Вес                                                 | Масса брутто грузового места (суммарная масса упаковки и содержимого), как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md). | | Количество мест                                     | Количество грузовых мест в заказе, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                                     |  {% endcut %}  Остальные поля нужно заполнить самостоятельно в распечатанном акте. |**⚙️ Лимит:** 100 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @return [::File]
    def download_shipment_reception_transfer_act(campaign_id : Int64, warehouse_id : Int32?)
      data, _status_code, _headers = download_shipment_reception_transfer_act_with_http_info(campaign_id, warehouse_id)
      data
    end

    # Подтверждение ближайшей отгрузки и получение акта приема-передачи для нее
    # Запрос подтверждает ближайшую отгрузку и возвращает акт приема-передачи в формате PDF.  {% note warning \&quot;Экспресс‑доставка\&quot; %}  Если ваш магазин подключен к экспресс‑доставке и вы отгружаете заказы курьерам [Яндекс Go](https://go.yandex/), подготавливать акт приема‑передачи не нужно.  {% endnote %}  В акт входят собранные и готовые к отправке заказы, которые отгружаются в сортировочный центр или пункт приема или курьерам Маркета.  При формировании акта Маркет автоматически находит и подставляет в шаблон следующие данные:  {% cut \&quot;Данные, из которых Маркет формирует акт\&quot; %}  | **Данные в акте**                                   | **Описание**                                                                                                                                                                                                                                                         | | --------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | | Отправитель                                         | Название вашего юридического лица, указанное в кабинете продавца на Маркете.                                                                                                                                                                                         | | Исполнитель                                         | Название юридического лица сортировочного центра или службы доставки.                                                                                                                                                                                                | | № отправления в системе заказчика                   | Ваш идентификатор заказа, который вы указали в ответе на запрос [POST order/accept](../../pushapi/reference/orderAccept.md) от Маркета.                                                                                                                              | | № отправления в системе исполнителя (субподрядчика) | Идентификатор заказа на Маркете, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md).                                                                                                                             | | Объявленная ценность                                | Общая сумма заказа без учета стоимости доставки, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                       | | Стоимость всех товаров в заказе                     | Стоимость всех заказанных товаров.                                                                                                                                                                                                                                   | | Вес                                                 | Масса брутто грузового места (суммарная масса упаковки и содержимого), как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md). | | Количество мест                                     | Количество грузовых мест в заказе, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                                     |  {% endcut %}  Остальные поля нужно заполнить самостоятельно в распечатанном акте. |**⚙️ Лимит:** 100 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @return [Array<(::File, Integer, Hash)>] ::File data, response status code and response headers
    def download_shipment_reception_transfer_act_with_http_info(campaign_id : Int64, warehouse_id : Int32?)
      if @api_client.config.debugging
        Log.debug {"Calling API: ShipmentsApi.download_shipment_reception_transfer_act ..."}
      end
      # verify the required parameter "campaign_id" is set
      if @api_client.config.client_side_validation && campaign_id.nil?
        raise ArgumentError.new("Missing the required parameter 'campaign_id' when calling ShipmentsApi.download_shipment_reception_transfer_act")
      end
      # resource path
      local_var_path = "/campaigns/{campaignId}/shipments/reception-transfer-act".sub("{" + "campaignId" + "}", URI.encode_path(campaign_id.to_s))

      # query parameters
      query_params = Hash(String, String).new
      query_params["warehouse_id"] = warehouse_id.to_s unless warehouse_id.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/pdf", "application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "::File"

      # auth_names
      auth_names = ["OAuth"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"ShipmentsApi.download_shipment_reception_transfer_act",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: ShipmentsApi#download_shipment_reception_transfer_act\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return ::File.from_json(data), status_code, headers
    end

    # Получение транспортной накладной
    # Возвращает транспортную накладную для заданной отгрузки.  Транспортная накладная понадобится, если вы отгружаете товары непосредственно со своего склада. [Подробно об этом способе отгрузки](https://yandex.ru/support/marketplace/orders/fbs/settings/shipment.html#at-your-warehouse)  |**⚙️ Лимит:** 200 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param shipment_id [Int64] Идентификатор отгрузки.
    # @return [::File]
    def download_shipment_transportation_waybill(campaign_id : Int64, shipment_id : Int64)
      data, _status_code, _headers = download_shipment_transportation_waybill_with_http_info(campaign_id, shipment_id)
      data
    end

    # Получение транспортной накладной
    # Возвращает транспортную накладную для заданной отгрузки.  Транспортная накладная понадобится, если вы отгружаете товары непосредственно со своего склада. [Подробно об этом способе отгрузки](https://yandex.ru/support/marketplace/orders/fbs/settings/shipment.html#at-your-warehouse)  |**⚙️ Лимит:** 200 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param shipment_id [Int64] Идентификатор отгрузки.
    # @return [Array<(::File, Integer, Hash)>] ::File data, response status code and response headers
    def download_shipment_transportation_waybill_with_http_info(campaign_id : Int64, shipment_id : Int64)
      if @api_client.config.debugging
        Log.debug {"Calling API: ShipmentsApi.download_shipment_transportation_waybill ..."}
      end
      # verify the required parameter "campaign_id" is set
      if @api_client.config.client_side_validation && campaign_id.nil?
        raise ArgumentError.new("Missing the required parameter 'campaign_id' when calling ShipmentsApi.download_shipment_transportation_waybill")
      end
      # verify the required parameter "shipment_id" is set
      if @api_client.config.client_side_validation && shipment_id.nil?
        raise ArgumentError.new("Missing the required parameter 'shipment_id' when calling ShipmentsApi.download_shipment_transportation_waybill")
      end
      # resource path
      local_var_path = "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/transportation-waybill".sub("{" + "campaignId" + "}", URI.encode_path(campaign_id.to_s)).sub("{" + "shipmentId" + "}", URI.encode_path(shipment_id.to_s))

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/vnd.ms-excel", "application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "::File"

      # auth_names
      auth_names = ["OAuth"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"ShipmentsApi.download_shipment_transportation_waybill",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: ShipmentsApi#download_shipment_transportation_waybill\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return ::File.from_json(data), status_code, headers
    end

    # Получение информации об одной отгрузке
    # Возвращает информацию об отгрузке по ее идентификатору. |**⚙️ Лимит:** 100 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param shipment_id [Int64] Идентификатор отгрузки.
    # @return [GetShipmentResponse]
    def get_shipment(campaign_id : Int64, shipment_id : Int64, cancelled_orders : Bool?)
      data, _status_code, _headers = get_shipment_with_http_info(campaign_id, shipment_id, cancelled_orders)
      data
    end

    # Получение информации об одной отгрузке
    # Возвращает информацию об отгрузке по ее идентификатору. |**⚙️ Лимит:** 100 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param shipment_id [Int64] Идентификатор отгрузки.
    # @return [Array<(GetShipmentResponse, Integer, Hash)>] GetShipmentResponse data, response status code and response headers
    def get_shipment_with_http_info(campaign_id : Int64, shipment_id : Int64, cancelled_orders : Bool?)
      if @api_client.config.debugging
        Log.debug {"Calling API: ShipmentsApi.get_shipment ..."}
      end
      # verify the required parameter "campaign_id" is set
      if @api_client.config.client_side_validation && campaign_id.nil?
        raise ArgumentError.new("Missing the required parameter 'campaign_id' when calling ShipmentsApi.get_shipment")
      end
      # verify the required parameter "shipment_id" is set
      if @api_client.config.client_side_validation && shipment_id.nil?
        raise ArgumentError.new("Missing the required parameter 'shipment_id' when calling ShipmentsApi.get_shipment")
      end
      # resource path
      local_var_path = "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}".sub("{" + "campaignId" + "}", URI.encode_path(campaign_id.to_s)).sub("{" + "shipmentId" + "}", URI.encode_path(shipment_id.to_s))

      # query parameters
      query_params = Hash(String, String).new
      query_params["cancelledOrders"] = cancelled_orders.to_s unless cancelled_orders.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "GetShipmentResponse"

      # auth_names
      auth_names = ["OAuth"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"ShipmentsApi.get_shipment",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: ShipmentsApi#get_shipment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return GetShipmentResponse.from_json(data), status_code, headers
    end

    # Получение информации о возможности печати ярлыков (FBS)
    # Возвращает информацию о возможности печати ярлыков-наклеек для заказов в отгрузке. |**⚙️ Лимит:** 100 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param shipment_id [Int64] Идентификатор отгрузки.
    # @return [GetShipmentOrdersInfoResponse]
    def get_shipment_orders_info(campaign_id : Int64, shipment_id : Int64)
      data, _status_code, _headers = get_shipment_orders_info_with_http_info(campaign_id, shipment_id)
      data
    end

    # Получение информации о возможности печати ярлыков (FBS)
    # Возвращает информацию о возможности печати ярлыков-наклеек для заказов в отгрузке. |**⚙️ Лимит:** 100 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param shipment_id [Int64] Идентификатор отгрузки.
    # @return [Array<(GetShipmentOrdersInfoResponse, Integer, Hash)>] GetShipmentOrdersInfoResponse data, response status code and response headers
    def get_shipment_orders_info_with_http_info(campaign_id : Int64, shipment_id : Int64)
      if @api_client.config.debugging
        Log.debug {"Calling API: ShipmentsApi.get_shipment_orders_info ..."}
      end
      # verify the required parameter "campaign_id" is set
      if @api_client.config.client_side_validation && campaign_id.nil?
        raise ArgumentError.new("Missing the required parameter 'campaign_id' when calling ShipmentsApi.get_shipment_orders_info")
      end
      # verify the required parameter "shipment_id" is set
      if @api_client.config.client_side_validation && shipment_id.nil?
        raise ArgumentError.new("Missing the required parameter 'shipment_id' when calling ShipmentsApi.get_shipment_orders_info")
      end
      # resource path
      local_var_path = "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/orders/info".sub("{" + "campaignId" + "}", URI.encode_path(campaign_id.to_s)).sub("{" + "shipmentId" + "}", URI.encode_path(shipment_id.to_s))

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "GetShipmentOrdersInfoResponse"

      # auth_names
      auth_names = ["OAuth"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"ShipmentsApi.get_shipment_orders_info",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: ShipmentsApi#get_shipment_orders_info\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return GetShipmentOrdersInfoResponse.from_json(data), status_code, headers
    end

    # Получение информации о нескольких отгрузках
    # Возвращает информацию об отгрузках по заданным параметрам:  * дате; * статусу; * идентификаторам заказов.  Результаты возвращаются постранично. |**⚙️ Лимит:** 100 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param search_shipments_request [SearchShipmentsRequest] 
    # @return [SearchShipmentsResponse]
    def search_shipments(campaign_id : Int64, search_shipments_request : SearchShipmentsRequest, page_token : String?, limit : Int32?)
      data, _status_code, _headers = search_shipments_with_http_info(campaign_id, search_shipments_request, page_token, limit)
      data
    end

    # Получение информации о нескольких отгрузках
    # Возвращает информацию об отгрузках по заданным параметрам:  * дате; * статусу; * идентификаторам заказов.  Результаты возвращаются постранично. |**⚙️ Лимит:** 100 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param search_shipments_request [SearchShipmentsRequest] 
    # @return [Array<(SearchShipmentsResponse, Integer, Hash)>] SearchShipmentsResponse data, response status code and response headers
    def search_shipments_with_http_info(campaign_id : Int64, search_shipments_request : SearchShipmentsRequest, page_token : String?, limit : Int32?)
      if @api_client.config.debugging
        Log.debug {"Calling API: ShipmentsApi.search_shipments ..."}
      end
      # verify the required parameter "campaign_id" is set
      if @api_client.config.client_side_validation && campaign_id.nil?
        raise ArgumentError.new("Missing the required parameter 'campaign_id' when calling ShipmentsApi.search_shipments")
      end
      # verify the required parameter "search_shipments_request" is set
      if @api_client.config.client_side_validation && search_shipments_request.nil?
        raise ArgumentError.new("Missing the required parameter 'search_shipments_request' when calling ShipmentsApi.search_shipments")
      end
      # resource path
      local_var_path = "/campaigns/{campaignId}/first-mile/shipments".sub("{" + "campaignId" + "}", URI.encode_path(campaign_id.to_s))

      # query parameters
      query_params = Hash(String, String).new
      query_params["page_token"] = page_token.to_s unless page_token.nil?
      query_params["limit"] = limit.to_s unless limit.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = search_shipments_request.to_json

      # return_type
      return_type = "SearchShipmentsResponse"

      # auth_names
      auth_names = ["OAuth"]

      data, status_code, headers = @api_client.call_api(:PUT,
                                                        local_var_path,
                                                        :"ShipmentsApi.search_shipments",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: ShipmentsApi#search_shipments\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return SearchShipmentsResponse.from_json(data), status_code, headers
    end

    # Передача количества упаковок в отгрузке
    # Передает Маркету количество коробов или палет в отгрузке для доверительной приемки. Подробнее про доверительную приемку написано в [Справке Маркета](https://yandex.ru/support/marketplace/orders/fbs/process.html#acceptance).  Получить PDF-файл с ярлыками для упаковок можно с помощью запроса [GET campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallet/labels](../../reference/shipments/downloadShipmentPalletLabels.md). |**⚙️ Лимит:** 200 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param shipment_id [Int64] Идентификатор отгрузки.
    # @param set_shipment_pallets_count_request [SetShipmentPalletsCountRequest] 
    # @return [EmptyApiResponse]
    def set_shipment_pallets_count(campaign_id : Int64, shipment_id : Int64, set_shipment_pallets_count_request : SetShipmentPalletsCountRequest)
      data, _status_code, _headers = set_shipment_pallets_count_with_http_info(campaign_id, shipment_id, set_shipment_pallets_count_request)
      data
    end

    # Передача количества упаковок в отгрузке
    # Передает Маркету количество коробов или палет в отгрузке для доверительной приемки. Подробнее про доверительную приемку написано в [Справке Маркета](https://yandex.ru/support/marketplace/orders/fbs/process.html#acceptance).  Получить PDF-файл с ярлыками для упаковок можно с помощью запроса [GET campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallet/labels](../../reference/shipments/downloadShipmentPalletLabels.md). |**⚙️ Лимит:** 200 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param shipment_id [Int64] Идентификатор отгрузки.
    # @param set_shipment_pallets_count_request [SetShipmentPalletsCountRequest] 
    # @return [Array<(EmptyApiResponse, Integer, Hash)>] EmptyApiResponse data, response status code and response headers
    def set_shipment_pallets_count_with_http_info(campaign_id : Int64, shipment_id : Int64, set_shipment_pallets_count_request : SetShipmentPalletsCountRequest)
      if @api_client.config.debugging
        Log.debug {"Calling API: ShipmentsApi.set_shipment_pallets_count ..."}
      end
      # verify the required parameter "campaign_id" is set
      if @api_client.config.client_side_validation && campaign_id.nil?
        raise ArgumentError.new("Missing the required parameter 'campaign_id' when calling ShipmentsApi.set_shipment_pallets_count")
      end
      # verify the required parameter "shipment_id" is set
      if @api_client.config.client_side_validation && shipment_id.nil?
        raise ArgumentError.new("Missing the required parameter 'shipment_id' when calling ShipmentsApi.set_shipment_pallets_count")
      end
      # verify the required parameter "set_shipment_pallets_count_request" is set
      if @api_client.config.client_side_validation && set_shipment_pallets_count_request.nil?
        raise ArgumentError.new("Missing the required parameter 'set_shipment_pallets_count_request' when calling ShipmentsApi.set_shipment_pallets_count")
      end
      # resource path
      local_var_path = "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallets".sub("{" + "campaignId" + "}", URI.encode_path(campaign_id.to_s)).sub("{" + "shipmentId" + "}", URI.encode_path(shipment_id.to_s))

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = set_shipment_pallets_count_request.to_json

      # return_type
      return_type = "EmptyApiResponse"

      # auth_names
      auth_names = ["OAuth"]

      data, status_code, headers = @api_client.call_api(:PUT,
                                                        local_var_path,
                                                        :"ShipmentsApi.set_shipment_pallets_count",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: ShipmentsApi#set_shipment_pallets_count\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return EmptyApiResponse.from_json(data), status_code, headers
    end

    # Перенос заказов в следующую отгрузку
    # Переносит указанные заказы из указанной отгрузки в следующую отгрузку. [Что такое отгрузка?](https://yandex.ru/support/marketplace/orders/fbs/process.html#ship)  Используйте этот запрос, если не успеваете собрать и упаковать заказы вовремя.  {% note warning \"Такие переносы снижают индекс качества магазина\" %}  Этот запрос предназначен для исключительных случаев. Если вы будете переносить заказы слишком часто, магазин столкнется с ограничениями. [Что за ограничения?](https://yandex.ru/support/marketplace/quality/score/fbs.html)  {% endnote %}  Переносить заказы можно, если до формирования отгрузки осталось больше получаса.  Перенос происходит не мгновенно, а занимает несколько минут.  |**⚙️ Лимит:** 200 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param shipment_id [Int64] Идентификатор отгрузки.
    # @param transfer_orders_from_shipment_request [TransferOrdersFromShipmentRequest] 
    # @return [EmptyApiResponse]
    def transfer_orders_from_shipment(campaign_id : Int64, shipment_id : Int64, transfer_orders_from_shipment_request : TransferOrdersFromShipmentRequest)
      data, _status_code, _headers = transfer_orders_from_shipment_with_http_info(campaign_id, shipment_id, transfer_orders_from_shipment_request)
      data
    end

    # Перенос заказов в следующую отгрузку
    # Переносит указанные заказы из указанной отгрузки в следующую отгрузку. [Что такое отгрузка?](https://yandex.ru/support/marketplace/orders/fbs/process.html#ship)  Используйте этот запрос, если не успеваете собрать и упаковать заказы вовремя.  {% note warning \&quot;Такие переносы снижают индекс качества магазина\&quot; %}  Этот запрос предназначен для исключительных случаев. Если вы будете переносить заказы слишком часто, магазин столкнется с ограничениями. [Что за ограничения?](https://yandex.ru/support/marketplace/quality/score/fbs.html)  {% endnote %}  Переносить заказы можно, если до формирования отгрузки осталось больше получаса.  Перенос происходит не мгновенно, а занимает несколько минут.  |**⚙️ Лимит:** 200 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param shipment_id [Int64] Идентификатор отгрузки.
    # @param transfer_orders_from_shipment_request [TransferOrdersFromShipmentRequest] 
    # @return [Array<(EmptyApiResponse, Integer, Hash)>] EmptyApiResponse data, response status code and response headers
    def transfer_orders_from_shipment_with_http_info(campaign_id : Int64, shipment_id : Int64, transfer_orders_from_shipment_request : TransferOrdersFromShipmentRequest)
      if @api_client.config.debugging
        Log.debug {"Calling API: ShipmentsApi.transfer_orders_from_shipment ..."}
      end
      # verify the required parameter "campaign_id" is set
      if @api_client.config.client_side_validation && campaign_id.nil?
        raise ArgumentError.new("Missing the required parameter 'campaign_id' when calling ShipmentsApi.transfer_orders_from_shipment")
      end
      # verify the required parameter "shipment_id" is set
      if @api_client.config.client_side_validation && shipment_id.nil?
        raise ArgumentError.new("Missing the required parameter 'shipment_id' when calling ShipmentsApi.transfer_orders_from_shipment")
      end
      # verify the required parameter "transfer_orders_from_shipment_request" is set
      if @api_client.config.client_side_validation && transfer_orders_from_shipment_request.nil?
        raise ArgumentError.new("Missing the required parameter 'transfer_orders_from_shipment_request' when calling ShipmentsApi.transfer_orders_from_shipment")
      end
      # resource path
      local_var_path = "/campaigns/{campaignId}/first-mile/shipments/{shipmentId}/orders/transfer".sub("{" + "campaignId" + "}", URI.encode_path(campaign_id.to_s)).sub("{" + "shipmentId" + "}", URI.encode_path(shipment_id.to_s))

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = transfer_orders_from_shipment_request.to_json

      # return_type
      return_type = "EmptyApiResponse"

      # auth_names
      auth_names = ["OAuth"]

      data, status_code, headers = @api_client.call_api(:POST,
                                                        local_var_path,
                                                        :"ShipmentsApi.transfer_orders_from_shipment",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: ShipmentsApi#transfer_orders_from_shipment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return EmptyApiResponse.from_json(data), status_code, headers
    end
  end
end
