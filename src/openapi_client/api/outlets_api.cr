# #Партнерский API Маркета
#
##API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
#
#The version of the OpenAPI document: LATEST
#
#Generated by: https://openapi-generator.tech
#Generator version: 7.8.0
#

require "uri"

module OpenAPIClient
  class OutletsApi
    property api_client : ApiClient

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Создание точки продаж
    # Создает точку продаж магазина на Маркете.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param change_outlet_request [ChangeOutletRequest] 
    # @return [CreateOutletResponse]
    def create_outlet(campaign_id : Int64, change_outlet_request : ChangeOutletRequest)
      data, _status_code, _headers = create_outlet_with_http_info(campaign_id, change_outlet_request)
      data
    end

    # Создание точки продаж
    # Создает точку продаж магазина на Маркете.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param change_outlet_request [ChangeOutletRequest] 
    # @return [Array<(CreateOutletResponse, Integer, Hash)>] CreateOutletResponse data, response status code and response headers
    def create_outlet_with_http_info(campaign_id : Int64, change_outlet_request : ChangeOutletRequest)
      if @api_client.config.debugging
        Log.debug {"Calling API: OutletsApi.create_outlet ..."}
      end
      # verify the required parameter "campaign_id" is set
      if @api_client.config.client_side_validation && campaign_id.nil?
        raise ArgumentError.new("Missing the required parameter 'campaign_id' when calling OutletsApi.create_outlet")
      end
      # verify the required parameter "change_outlet_request" is set
      if @api_client.config.client_side_validation && change_outlet_request.nil?
        raise ArgumentError.new("Missing the required parameter 'change_outlet_request' when calling OutletsApi.create_outlet")
      end
      # resource path
      local_var_path = "/campaigns/{campaignId}/outlets".sub("{" + "campaignId" + "}", URI.encode_path(campaign_id.to_s))

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = change_outlet_request.to_json

      # return_type
      return_type = "CreateOutletResponse"

      # auth_names
      auth_names = ["OAuth"]

      data, status_code, headers = @api_client.call_api(:POST,
                                                        local_var_path,
                                                        :"OutletsApi.create_outlet",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: OutletsApi#create_outlet\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return CreateOutletResponse.from_json(data), status_code, headers
    end

    # Удаление точки продаж
    # Удаляет точку продаж магазина на Маркете.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param outlet_id [Int64] Идентификатор точки продаж.
    # @return [EmptyApiResponse]
    def delete_outlet(campaign_id : Int64, outlet_id : Int64)
      data, _status_code, _headers = delete_outlet_with_http_info(campaign_id, outlet_id)
      data
    end

    # Удаление точки продаж
    # Удаляет точку продаж магазина на Маркете.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param outlet_id [Int64] Идентификатор точки продаж.
    # @return [Array<(EmptyApiResponse, Integer, Hash)>] EmptyApiResponse data, response status code and response headers
    def delete_outlet_with_http_info(campaign_id : Int64, outlet_id : Int64)
      if @api_client.config.debugging
        Log.debug {"Calling API: OutletsApi.delete_outlet ..."}
      end
      # verify the required parameter "campaign_id" is set
      if @api_client.config.client_side_validation && campaign_id.nil?
        raise ArgumentError.new("Missing the required parameter 'campaign_id' when calling OutletsApi.delete_outlet")
      end
      # verify the required parameter "outlet_id" is set
      if @api_client.config.client_side_validation && outlet_id.nil?
        raise ArgumentError.new("Missing the required parameter 'outlet_id' when calling OutletsApi.delete_outlet")
      end
      # resource path
      local_var_path = "/campaigns/{campaignId}/outlets/{outletId}".sub("{" + "campaignId" + "}", URI.encode_path(campaign_id.to_s)).sub("{" + "outletId" + "}", URI.encode_path(outlet_id.to_s))

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "EmptyApiResponse"

      # auth_names
      auth_names = ["OAuth"]

      data, status_code, headers = @api_client.call_api(:DELETE,
                                                        local_var_path,
                                                        :"OutletsApi.delete_outlet",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: OutletsApi#delete_outlet\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return EmptyApiResponse.from_json(data), status_code, headers
    end

    # Информация об одной точке продаж
    # Возвращает информацию о точках продаж магазина.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param outlet_id [Int64] Идентификатор точки продаж.
    # @return [GetOutletResponse]
    def get_outlet(campaign_id : Int64, outlet_id : Int64)
      data, _status_code, _headers = get_outlet_with_http_info(campaign_id, outlet_id)
      data
    end

    # Информация об одной точке продаж
    # Возвращает информацию о точках продаж магазина.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param outlet_id [Int64] Идентификатор точки продаж.
    # @return [Array<(GetOutletResponse, Integer, Hash)>] GetOutletResponse data, response status code and response headers
    def get_outlet_with_http_info(campaign_id : Int64, outlet_id : Int64)
      if @api_client.config.debugging
        Log.debug {"Calling API: OutletsApi.get_outlet ..."}
      end
      # verify the required parameter "campaign_id" is set
      if @api_client.config.client_side_validation && campaign_id.nil?
        raise ArgumentError.new("Missing the required parameter 'campaign_id' when calling OutletsApi.get_outlet")
      end
      # verify the required parameter "outlet_id" is set
      if @api_client.config.client_side_validation && outlet_id.nil?
        raise ArgumentError.new("Missing the required parameter 'outlet_id' when calling OutletsApi.get_outlet")
      end
      # resource path
      local_var_path = "/campaigns/{campaignId}/outlets/{outletId}".sub("{" + "campaignId" + "}", URI.encode_path(campaign_id.to_s)).sub("{" + "outletId" + "}", URI.encode_path(outlet_id.to_s))

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "GetOutletResponse"

      # auth_names
      auth_names = ["OAuth"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"OutletsApi.get_outlet",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: OutletsApi#get_outlet\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return GetOutletResponse.from_json(data), status_code, headers
    end

    # Информация о нескольких точках продаж
    # Возвращает список точек продаж магазина.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @return [GetOutletsResponse]
    def get_outlets(campaign_id : Int64, page_token : String?, region_id : Int64?, shop_outlet_code : String?, region_id2 : Int64?)
      data, _status_code, _headers = get_outlets_with_http_info(campaign_id, page_token, region_id, shop_outlet_code, region_id2)
      data
    end

    # Информация о нескольких точках продаж
    # Возвращает список точек продаж магазина.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @return [Array<(GetOutletsResponse, Integer, Hash)>] GetOutletsResponse data, response status code and response headers
    def get_outlets_with_http_info(campaign_id : Int64, page_token : String?, region_id : Int64?, shop_outlet_code : String?, region_id2 : Int64?)
      if @api_client.config.debugging
        Log.debug {"Calling API: OutletsApi.get_outlets ..."}
      end
      # verify the required parameter "campaign_id" is set
      if @api_client.config.client_side_validation && campaign_id.nil?
        raise ArgumentError.new("Missing the required parameter 'campaign_id' when calling OutletsApi.get_outlets")
      end
      # resource path
      local_var_path = "/campaigns/{campaignId}/outlets".sub("{" + "campaignId" + "}", URI.encode_path(campaign_id.to_s))

      # query parameters
      query_params = Hash(String, String).new
      query_params["page_token"] = page_token.to_s unless page_token.nil?
      query_params["region_id"] = region_id.to_s unless region_id.nil?
      query_params["shop_outlet_code"] = shop_outlet_code.to_s unless shop_outlet_code.nil?
      query_params["regionId"] = region_id2.to_s unless region_id2.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "GetOutletsResponse"

      # auth_names
      auth_names = ["OAuth"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"OutletsApi.get_outlets",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: OutletsApi#get_outlets\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return GetOutletsResponse.from_json(data), status_code, headers
    end

    # Изменение информации о точке продаж
    # Изменяет информацию о точке продаж магазина на Маркете.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param outlet_id [Int64] Идентификатор точки продаж.
    # @param change_outlet_request [ChangeOutletRequest] 
    # @return [EmptyApiResponse]
    def update_outlet(campaign_id : Int64, outlet_id : Int64, change_outlet_request : ChangeOutletRequest)
      data, _status_code, _headers = update_outlet_with_http_info(campaign_id, outlet_id, change_outlet_request)
      data
    end

    # Изменение информации о точке продаж
    # Изменяет информацию о точке продаж магазина на Маркете.  В течение суток этим и другими запросами о точках продаж, кроме запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md), можно получить и изменить информацию об определенном суммарном количестве точек продаж. Оно зависит от количества точек продаж магазина.  |**⚙️ Лимит:** 100 000 запросов в час| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param outlet_id [Int64] Идентификатор точки продаж.
    # @param change_outlet_request [ChangeOutletRequest] 
    # @return [Array<(EmptyApiResponse, Integer, Hash)>] EmptyApiResponse data, response status code and response headers
    def update_outlet_with_http_info(campaign_id : Int64, outlet_id : Int64, change_outlet_request : ChangeOutletRequest)
      if @api_client.config.debugging
        Log.debug {"Calling API: OutletsApi.update_outlet ..."}
      end
      # verify the required parameter "campaign_id" is set
      if @api_client.config.client_side_validation && campaign_id.nil?
        raise ArgumentError.new("Missing the required parameter 'campaign_id' when calling OutletsApi.update_outlet")
      end
      # verify the required parameter "outlet_id" is set
      if @api_client.config.client_side_validation && outlet_id.nil?
        raise ArgumentError.new("Missing the required parameter 'outlet_id' when calling OutletsApi.update_outlet")
      end
      # verify the required parameter "change_outlet_request" is set
      if @api_client.config.client_side_validation && change_outlet_request.nil?
        raise ArgumentError.new("Missing the required parameter 'change_outlet_request' when calling OutletsApi.update_outlet")
      end
      # resource path
      local_var_path = "/campaigns/{campaignId}/outlets/{outletId}".sub("{" + "campaignId" + "}", URI.encode_path(campaign_id.to_s)).sub("{" + "outletId" + "}", URI.encode_path(outlet_id.to_s))

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = change_outlet_request.to_json

      # return_type
      return_type = "EmptyApiResponse"

      # auth_names
      auth_names = ["OAuth"]

      data, status_code, headers = @api_client.call_api(:PUT,
                                                        local_var_path,
                                                        :"OutletsApi.update_outlet",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: OutletsApi#update_outlet\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return EmptyApiResponse.from_json(data), status_code, headers
    end
  end
end
