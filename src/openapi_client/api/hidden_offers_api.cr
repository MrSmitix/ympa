# #Партнерский API Маркета
#
##API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
#
#The version of the OpenAPI document: LATEST
#
#Generated by: https://openapi-generator.tech
#Generator version: 7.8.0
#

require "uri"

module OpenAPIClient
  class HiddenOffersApi
    property api_client : ApiClient

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Скрытие товаров и настройки скрытия
    # Скрывает товары магазина на Маркете.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param add_hidden_offers_request [AddHiddenOffersRequest] Запрос на скрытие оферов.
    # @return [EmptyApiResponse]
    def add_hidden_offers(campaign_id : Int64, add_hidden_offers_request : AddHiddenOffersRequest)
      data, _status_code, _headers = add_hidden_offers_with_http_info(campaign_id, add_hidden_offers_request)
      data
    end

    # Скрытие товаров и настройки скрытия
    # Скрывает товары магазина на Маркете.  {% note info \&quot;Данные в каталоге обновляются не мгновенно\&quot; %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param add_hidden_offers_request [AddHiddenOffersRequest] Запрос на скрытие оферов.
    # @return [Array<(EmptyApiResponse, Integer, Hash)>] EmptyApiResponse data, response status code and response headers
    def add_hidden_offers_with_http_info(campaign_id : Int64, add_hidden_offers_request : AddHiddenOffersRequest)
      if @api_client.config.debugging
        Log.debug {"Calling API: HiddenOffersApi.add_hidden_offers ..."}
      end
      # verify the required parameter "campaign_id" is set
      if @api_client.config.client_side_validation && campaign_id.nil?
        raise ArgumentError.new("Missing the required parameter 'campaign_id' when calling HiddenOffersApi.add_hidden_offers")
      end
      # verify the required parameter "add_hidden_offers_request" is set
      if @api_client.config.client_side_validation && add_hidden_offers_request.nil?
        raise ArgumentError.new("Missing the required parameter 'add_hidden_offers_request' when calling HiddenOffersApi.add_hidden_offers")
      end
      # resource path
      local_var_path = "/campaigns/{campaignId}/hidden-offers".sub("{" + "campaignId" + "}", URI.encode_path(campaign_id.to_s))

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = add_hidden_offers_request.to_json

      # return_type
      return_type = "EmptyApiResponse"

      # auth_names
      auth_names = ["OAuth"]

      data, status_code, headers = @api_client.call_api(:POST,
                                                        local_var_path,
                                                        :"HiddenOffersApi.add_hidden_offers",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: HiddenOffersApi#add_hidden_offers\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return EmptyApiResponse.from_json(data), status_code, headers
    end

    # Возобновление показа товаров
    # Возобновляет показ скрытых вами товаров магазина на Маркете.  {% note info \"Данные в каталоге обновляются не мгновенно\" %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param delete_hidden_offers_request [DeleteHiddenOffersRequest] Запрос на возобновление показа оферов.
    # @return [EmptyApiResponse]
    def delete_hidden_offers(campaign_id : Int64, delete_hidden_offers_request : DeleteHiddenOffersRequest)
      data, _status_code, _headers = delete_hidden_offers_with_http_info(campaign_id, delete_hidden_offers_request)
      data
    end

    # Возобновление показа товаров
    # Возобновляет показ скрытых вами товаров магазина на Маркете.  {% note info \&quot;Данные в каталоге обновляются не мгновенно\&quot; %}  Это занимает до нескольких минут.  {% endnote %}  |**⚙️ Лимит:** 5000 товаров в минуту| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @param delete_hidden_offers_request [DeleteHiddenOffersRequest] Запрос на возобновление показа оферов.
    # @return [Array<(EmptyApiResponse, Integer, Hash)>] EmptyApiResponse data, response status code and response headers
    def delete_hidden_offers_with_http_info(campaign_id : Int64, delete_hidden_offers_request : DeleteHiddenOffersRequest)
      if @api_client.config.debugging
        Log.debug {"Calling API: HiddenOffersApi.delete_hidden_offers ..."}
      end
      # verify the required parameter "campaign_id" is set
      if @api_client.config.client_side_validation && campaign_id.nil?
        raise ArgumentError.new("Missing the required parameter 'campaign_id' when calling HiddenOffersApi.delete_hidden_offers")
      end
      # verify the required parameter "delete_hidden_offers_request" is set
      if @api_client.config.client_side_validation && delete_hidden_offers_request.nil?
        raise ArgumentError.new("Missing the required parameter 'delete_hidden_offers_request' when calling HiddenOffersApi.delete_hidden_offers")
      end
      # resource path
      local_var_path = "/campaigns/{campaignId}/hidden-offers/delete".sub("{" + "campaignId" + "}", URI.encode_path(campaign_id.to_s))

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header "Content-Type"
      header_params["Content-Type"] = @api_client.select_header_content_type(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = delete_hidden_offers_request.to_json

      # return_type
      return_type = "EmptyApiResponse"

      # auth_names
      auth_names = ["OAuth"]

      data, status_code, headers = @api_client.call_api(:POST,
                                                        local_var_path,
                                                        :"HiddenOffersApi.delete_hidden_offers",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: HiddenOffersApi#delete_hidden_offers\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return EmptyApiResponse.from_json(data), status_code, headers
    end

    # Информация о скрытых вами товарах
    # Возвращает список скрытых вами товаров для заданного магазина.  В списке будут товары, скрытые любым способом — по API, с помощью YML-фида, в кабинете и так далее.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @return [GetHiddenOffersResponse]
    def get_hidden_offers(campaign_id : Int64, offer_id : Array(String)?, page_token : String?, limit : Int32?, offset : Int32?, page : Int32?, page_size : Int32?)
      data, _status_code, _headers = get_hidden_offers_with_http_info(campaign_id, offer_id, page_token, limit, offset, page, page_size)
      data
    end

    # Информация о скрытых вами товарах
    # Возвращает список скрытых вами товаров для заданного магазина.  В списке будут товары, скрытые любым способом — по API, с помощью YML-фида, в кабинете и так далее.  |**⚙️ Лимит:** 5000 товаров в минуту, не более 500 товаров в одном запросе| |-| 
    # @param campaign_id [Int64] Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
    # @return [Array<(GetHiddenOffersResponse, Integer, Hash)>] GetHiddenOffersResponse data, response status code and response headers
    def get_hidden_offers_with_http_info(campaign_id : Int64, offer_id : Array(String)?, page_token : String?, limit : Int32?, offset : Int32?, page : Int32?, page_size : Int32?)
      if @api_client.config.debugging
        Log.debug {"Calling API: HiddenOffersApi.get_hidden_offers ..."}
      end
      # verify the required parameter "campaign_id" is set
      if @api_client.config.client_side_validation && campaign_id.nil?
        raise ArgumentError.new("Missing the required parameter 'campaign_id' when calling HiddenOffersApi.get_hidden_offers")
      end
      if @api_client.config.client_side_validation && !page.nil? && page > 10000
        raise ArgumentError.new("invalid value for \"page\" when calling HiddenOffersApi.get_hidden_offers, must be smaller than or equal to 10000.")
      end

      # resource path
      local_var_path = "/campaigns/{campaignId}/hidden-offers".sub("{" + "campaignId" + "}", URI.encode_path(campaign_id.to_s))

      # query parameters
      query_params = Hash(String, String).new
      query_params["offer_id"] = @api_client.build_collection_param(offer_id, :csv)
      query_params["page_token"] = page_token.to_s unless page_token.nil?
      query_params["limit"] = limit.to_s unless limit.nil?
      query_params["offset"] = offset.to_s unless offset.nil?
      query_params["page"] = page.to_s unless page.nil?
      query_params["pageSize"] = page_size.to_s unless page_size.nil?

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "GetHiddenOffersResponse"

      # auth_names
      auth_names = ["OAuth"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"HiddenOffersApi.get_hidden_offers",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: HiddenOffersApi#get_hidden_offers\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return GetHiddenOffersResponse.from_json(data), status_code, headers
    end
  end
end
