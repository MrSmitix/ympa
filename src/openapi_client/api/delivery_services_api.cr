# #Партнерский API Маркета
#
##API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
#
#The version of the OpenAPI document: LATEST
#
#Generated by: https://openapi-generator.tech
#Generator version: 7.8.0
#

require "uri"

module OpenAPIClient
  class DeliveryServicesApi
    property api_client : ApiClient

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Справочник служб доставки
    # Возвращает справочник служб доставки: идентификаторы и наименования. |**⚙️ Лимит:** 5 000 запросов в час| |-| 
    # @return [GetDeliveryServicesResponse]
    def get_delivery_services()
      data, _status_code, _headers = get_delivery_services_with_http_info()
      data
    end

    # Справочник служб доставки
    # Возвращает справочник служб доставки: идентификаторы и наименования. |**⚙️ Лимит:** 5 000 запросов в час| |-| 
    # @return [Array<(GetDeliveryServicesResponse, Integer, Hash)>] GetDeliveryServicesResponse data, response status code and response headers
    def get_delivery_services_with_http_info()
      if @api_client.config.debugging
        Log.debug {"Calling API: DeliveryServicesApi.get_delivery_services ..."}
      end
      # resource path
      local_var_path = "/delivery/services"

      # query parameters
      query_params = Hash(String, String).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = Hash(Symbol, (String | ::File)).new

      # http body (model)
      post_body = nil

      # return_type
      return_type = "GetDeliveryServicesResponse"

      # auth_names
      auth_names = ["OAuth"]

      data, status_code, headers = @api_client.call_api(:GET,
                                                        local_var_path,
                                                        :"DeliveryServicesApi.get_delivery_services",
                                                        return_type,
                                                        post_body,
                                                        auth_names,
                                                        header_params,
                                                        query_params,
                                                        form_params)
      if @api_client.config.debugging
        Log.debug {"API called: DeliveryServicesApi#get_delivery_services\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"}
      end
      return GetDeliveryServicesResponse.from_json(data), status_code, headers
    end
  end
end
