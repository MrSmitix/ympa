/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiClientDataErrorResponse;
import org.openapitools.client.model.ApiForbiddenErrorResponse;
import org.openapitools.client.model.ApiLimitErrorResponse;
import org.openapitools.client.model.ApiNotFoundErrorResponse;
import org.openapitools.client.model.ApiServerErrorResponse;
import org.openapitools.client.model.ApiUnauthorizedErrorResponse;
import org.openapitools.client.model.CreateChatRequest;
import org.openapitools.client.model.CreateChatResponse;
import org.openapitools.client.model.EmptyApiResponse;
import java.io.File;
import org.openapitools.client.model.GetChatHistoryRequest;
import org.openapitools.client.model.GetChatHistoryResponse;
import org.openapitools.client.model.GetChatsRequest;
import org.openapitools.client.model.GetChatsResponse;
import org.openapitools.client.model.SendMessageToChatRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ChatsApi
 */
@Disabled
public class ChatsApiTest {

    private final ChatsApi api = new ChatsApi();

    /**
     * Создание нового чата с покупателем
     *
     * Создает новый чат с покупателем.  |**⚙️ Лимит:** 1000 запросов в час| |-| 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createChatTest() throws ApiException {
        Long businessId = null;
        CreateChatRequest createChatRequest = null;
        CreateChatResponse response = api.createChat(businessId, createChatRequest);
        // TODO: test validations
    }

    /**
     * Получение истории сообщений в чате
     *
     * Возвращает историю сообщений в чате с покупателем.  |**⚙️ Лимит:** 10000 запросов в час| |-| 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getChatHistoryTest() throws ApiException {
        Long businessId = null;
        Long chatId = null;
        GetChatHistoryRequest getChatHistoryRequest = null;
        String pageToken = null;
        Integer limit = null;
        GetChatHistoryResponse response = api.getChatHistory(businessId, chatId, getChatHistoryRequest, pageToken, limit);
        // TODO: test validations
    }

    /**
     * Получение доступных чатов
     *
     * Возвращает ваши чаты с покупателями.  |**⚙️ Лимит:** 10000 запросов в час| |-| 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getChatsTest() throws ApiException {
        Long businessId = null;
        GetChatsRequest getChatsRequest = null;
        String pageToken = null;
        Integer limit = null;
        GetChatsResponse response = api.getChats(businessId, getChatsRequest, pageToken, limit);
        // TODO: test validations
    }

    /**
     * Отправка файла в чат
     *
     * Отправляет файл в чат с покупателем.  |**⚙️ Лимит:** 1000 запросов в час| |-| 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sendFileToChatTest() throws ApiException {
        Long businessId = null;
        Long chatId = null;
        File _file = null;
        EmptyApiResponse response = api.sendFileToChat(businessId, chatId, _file);
        // TODO: test validations
    }

    /**
     * Отправка сообщения в чат
     *
     * Отправляет сообщение в чат с покупателем.  |**⚙️ Лимит:** 1000 запросов в час| |-| 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sendMessageToChatTest() throws ApiException {
        Long businessId = null;
        Long chatId = null;
        SendMessageToChatRequest sendMessageToChatRequest = null;
        EmptyApiResponse response = api.sendMessageToChat(businessId, chatId, sendMessageToChatRequest);
        // TODO: test validations
    }

}
