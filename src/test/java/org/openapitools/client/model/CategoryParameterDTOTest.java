/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CategoryParameterUnitDTO;
import org.openapitools.client.model.OfferCardRecommendationType;
import org.openapitools.client.model.ParameterType;
import org.openapitools.client.model.ParameterValueConstraintsDTO;
import org.openapitools.client.model.ParameterValueOptionDTO;
import org.openapitools.client.model.ValueRestrictionDTO;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import java.util.NoSuchElementException;

import org.junit.jupiter.api.Test;

/**
 * Model tests for CategoryParameterDTO
 */
public class CategoryParameterDTOTest {
    private final CategoryParameterDTO model = new CategoryParameterDTO();

    /**
     * Model tests for CategoryParameterDTO
     */
    @Test
    public void testCategoryParameterDTO() {
        // TODO: test CategoryParameterDTO
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'unit'
     */
    @Test
    public void unitTest() {
        // TODO: test unit
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'recommendationTypes'
     */
    @Test
    public void recommendationTypesTest() {
        // TODO: test recommendationTypes
    }

    /**
     * Test the property 'required'
     */
    @Test
    public void requiredTest() {
        // TODO: test required
    }

    /**
     * Test the property 'filtering'
     */
    @Test
    public void filteringTest() {
        // TODO: test filtering
    }

    /**
     * Test the property 'distinctive'
     */
    @Test
    public void distinctiveTest() {
        // TODO: test distinctive
    }

    /**
     * Test the property 'multivalue'
     */
    @Test
    public void multivalueTest() {
        // TODO: test multivalue
    }

    /**
     * Test the property 'allowCustomValues'
     */
    @Test
    public void allowCustomValuesTest() {
        // TODO: test allowCustomValues
    }

    /**
     * Test the property 'values'
     */
    @Test
    public void valuesTest() {
        // TODO: test values
    }

    /**
     * Test the property 'constraints'
     */
    @Test
    public void constraintsTest() {
        // TODO: test constraints
    }

    /**
     * Test the property 'valueRestrictions'
     */
    @Test
    public void valueRestrictionsTest() {
        // TODO: test valueRestrictions
    }

}
