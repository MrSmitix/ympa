/**
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.server.api;

import org.openapitools.server.model.ApiClientDataErrorResponse;
import org.openapitools.server.model.ApiForbiddenErrorResponse;
import org.openapitools.server.model.ApiLimitErrorResponse;
import org.openapitools.server.model.ApiNotFoundErrorResponse;
import org.openapitools.server.model.ApiServerErrorResponse;
import org.openapitools.server.model.ApiUnauthorizedErrorResponse;
import org.openapitools.server.model.DeletePromoOffersRequest;
import org.openapitools.server.model.DeletePromoOffersResponse;
import org.openapitools.server.model.GetPromoOffersRequest;
import org.openapitools.server.model.GetPromoOffersResponse;
import org.openapitools.server.model.GetPromosRequest;
import org.openapitools.server.model.GetPromosResponse;
import org.openapitools.server.model.UpdatePromoOffersRequest;
import org.openapitools.server.model.UpdatePromoOffersResponse;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Assertions;

import org.eclipse.microprofile.rest.client.RestClientBuilder;

import java.net.URL;
import java.net.MalformedURLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;

/**
 * Партнерский API Маркета Test
 *
 * API tests for PromosApi
 */
public class PromosApiTest {

    private PromosApi client;
    private String baseUrl = "http://localhost:9080";

    @BeforeEach
    public void setup() throws MalformedURLException {
        client = RestClientBuilder.newBuilder()
                        .baseUrl(new URL(baseUrl))
                        .register(ApiException.class)
                        .build(PromosApi.class);
    }

    
    /**
     * Удаление товаров из акции
     *
     * Убирает товары из акции.  Изменения начинают действовать в течение 4–6 часов.  |**⚙️ Лимит:** 10000 запросов в час| |-| 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deletePromoOffersTest() {
        // TODO: test validations
        Long businessId = null;
        DeletePromoOffersRequest deletePromoOffersRequest = null;
        //DeletePromoOffersResponse response = api.deletePromoOffers(businessId, deletePromoOffersRequest);
        //Assertions.assertNotNull(response);


    }
    
    /**
     * Получение списка товаров, которые участвуют или могут участвовать в акции
     *
     * Возвращает список товаров, которые участвуют или могут участвовать в акции.  {% note warning %}  В параметре &#x60;limit&#x60; не передавайте значение больше 500.  {% endnote %}  |**⚙️ Лимит:** 10000 запросов в час| |-| 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPromoOffersTest() {
        // TODO: test validations
        Long businessId = null;
        GetPromoOffersRequest getPromoOffersRequest = null;
        String pageToken = null;
        Integer limit = null;
        //GetPromoOffersResponse response = api.getPromoOffers(businessId, getPromoOffersRequest, pageToken, limit);
        //Assertions.assertNotNull(response);


    }
    
    /**
     * Получение списка акций
     *
     * Возвращает информацию об акциях Маркета.  По умолчанию возвращаются акции, в которых продавец участвует или может принять участие.  Чтобы получить текущие или завершенные акции, передайте параметр &#x60;participation&#x60;.  Типы акций, которые возвращаются в ответе:  * прямая скидка; * флеш-акция; * скидка по промокоду.  |**⚙️ Лимит:** 1000 запросов в час| |-| 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPromosTest() {
        // TODO: test validations
        Long businessId = null;
        GetPromosRequest getPromosRequest = null;
        //GetPromosResponse response = api.getPromos(businessId, getPromosRequest);
        //Assertions.assertNotNull(response);


    }
    
    /**
     * Добавление товаров в акцию или изменение их цен
     *
     * Добавляет товары в акцию или изменяет цены на товары, которые участвуют в акции.  Изменения начинают действовать в течение 4–6 часов.  |**⚙️ Лимит:** 10000 запросов в час| |-| 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updatePromoOffersTest() {
        // TODO: test validations
        Long businessId = null;
        UpdatePromoOffersRequest updatePromoOffersRequest = null;
        //UpdatePromoOffersResponse response = api.updatePromoOffers(businessId, updatePromoOffersRequest);
        //Assertions.assertNotNull(response);


    }
    
}
