/*
 * Партнерский API Маркета
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
 *
 * The version of the OpenAPI document: LATEST
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.prokarma.pkmst.controller;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.prokarma.pkmst.model.ApiClientDataErrorResponse;
import com.prokarma.pkmst.model.ApiForbiddenErrorResponse;
import com.prokarma.pkmst.model.ApiLimitErrorResponse;
import com.prokarma.pkmst.model.ApiNotFoundErrorResponse;
import com.prokarma.pkmst.model.ApiServerErrorResponse;
import com.prokarma.pkmst.model.ApiUnauthorizedErrorResponse;
import java.io.File;
import com.prokarma.pkmst.model.GetOrderLabelsDataResponse;
import com.prokarma.pkmst.model.PageFormatType;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.http.ResponseEntity;
import org.springframework.web.multipart.MultipartFile;

/**
 * API tests for OrderLabelsApi
 */
@Ignore
public class OrderLabelsApiTest {

    private final ObjectMapper objectMapper = new ObjectMapper();

    private final OrderLabelsApi api = new OrderLabelsApiController(objectMapper);

    private final String accept = "application/json";

    
    /**
     * Готовый ярлык‑наклейка для коробки в заказе
     *
     * Формирует ярлык‑наклейку для коробки в заказе и возвращает ярлык в PDF‑файле.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void generateOrderLabelTest() throws Exception {
        Long campaignId = null;
        Long orderId = null;
        Long shipmentId = null;
        Long boxId = null;
        PageFormatType format = null;
    ResponseEntity<File> response = api.generateOrderLabel(campaignId, orderId, shipmentId, boxId, format , accept);

        // TODO: test validations
    }
    
    /**
     * Готовые ярлыки‑наклейки на все коробки в одном заказе
     *
     * Возвращает PDF-файл с ярлыками, которые нужно наклеить на коробки перед отгрузкой. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).  На вход нужно передать идентификатор заказа и один необязательный параметр, который управляет версткой PDF-файла.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void generateOrderLabelsTest() throws Exception {
        Long campaignId = null;
        Long orderId = null;
        PageFormatType format = null;
    ResponseEntity<File> response = api.generateOrderLabels(campaignId, orderId, format , accept);

        // TODO: test validations
    }
    
    /**
     * Данные для самостоятельного изготовления ярлыков
     *
     * Возвращает информацию на ярлыках, которые клеятся на коробки в заказе.  |**⚙️ Лимит:** 1 000 000 запросов в час| |-| 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getOrderLabelsDataTest() throws Exception {
        Long campaignId = null;
        Long orderId = null;
    ResponseEntity<GetOrderLabelsDataResponse> response = api.getOrderLabelsData(campaignId, orderId , accept);

        // TODO: test validations
    }
    
}
