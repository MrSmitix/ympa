/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ympa_kotlin_client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import ympa_kotlin_client.apis.CampaignsApi
import ympa_kotlin_client.models.ApiClientDataErrorResponse
import ympa_kotlin_client.models.ApiForbiddenErrorResponse
import ympa_kotlin_client.models.ApiLimitErrorResponse
import ympa_kotlin_client.models.ApiNotFoundErrorResponse
import ympa_kotlin_client.models.ApiServerErrorResponse
import ympa_kotlin_client.models.ApiUnauthorizedErrorResponse
import ympa_kotlin_client.models.GetCampaignLoginsResponse
import ympa_kotlin_client.models.GetCampaignRegionResponse
import ympa_kotlin_client.models.GetCampaignResponse
import ympa_kotlin_client.models.GetCampaignSettingsResponse
import ympa_kotlin_client.models.GetCampaignsResponse

class CampaignsApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of CampaignsApi
        //val apiInstance = CampaignsApi()

        // to test getCampaign
        should("test getCampaign") {
            // uncomment below to test getCampaign
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val result : GetCampaignResponse = apiInstance.getCampaign(campaignId)
            //result shouldBe ("TODO")
        }

        // to test getCampaignLogins
        should("test getCampaignLogins") {
            // uncomment below to test getCampaignLogins
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val result : GetCampaignLoginsResponse = apiInstance.getCampaignLogins(campaignId)
            //result shouldBe ("TODO")
        }

        // to test getCampaignRegion
        should("test getCampaignRegion") {
            // uncomment below to test getCampaignRegion
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val result : GetCampaignRegionResponse = apiInstance.getCampaignRegion(campaignId)
            //result shouldBe ("TODO")
        }

        // to test getCampaignSettings
        should("test getCampaignSettings") {
            // uncomment below to test getCampaignSettings
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val result : GetCampaignSettingsResponse = apiInstance.getCampaignSettings(campaignId)
            //result shouldBe ("TODO")
        }

        // to test getCampaigns
        should("test getCampaigns") {
            // uncomment below to test getCampaigns
            //val page : kotlin.Int = 56 // kotlin.Int | Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. 
            //val pageSize : kotlin.Int = 56 // kotlin.Int | Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. 
            //val result : GetCampaignsResponse = apiInstance.getCampaigns(page, pageSize)
            //result shouldBe ("TODO")
        }

        // to test getCampaignsByLogin
        should("test getCampaignsByLogin") {
            // uncomment below to test getCampaignsByLogin
            //val login : kotlin.String = login_example // kotlin.String | Логин пользователя.
            //val page : kotlin.Int = 56 // kotlin.Int | Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. 
            //val pageSize : kotlin.Int = 56 // kotlin.Int | Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. 
            //val result : GetCampaignsResponse = apiInstance.getCampaignsByLogin(login, page, pageSize)
            //result shouldBe ("TODO")
        }

    }
}
