/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ympa_kotlin_client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import ympa_kotlin_client.apis.ChatsApi
import ympa_kotlin_client.models.ApiClientDataErrorResponse
import ympa_kotlin_client.models.ApiForbiddenErrorResponse
import ympa_kotlin_client.models.ApiLimitErrorResponse
import ympa_kotlin_client.models.ApiNotFoundErrorResponse
import ympa_kotlin_client.models.ApiServerErrorResponse
import ympa_kotlin_client.models.ApiUnauthorizedErrorResponse
import ympa_kotlin_client.models.CreateChatRequest
import ympa_kotlin_client.models.CreateChatResponse
import ympa_kotlin_client.models.EmptyApiResponse
import ympa_kotlin_client.models.GetChatHistoryRequest
import ympa_kotlin_client.models.GetChatHistoryResponse
import ympa_kotlin_client.models.GetChatsRequest
import ympa_kotlin_client.models.GetChatsResponse
import ympa_kotlin_client.models.SendMessageToChatRequest

class ChatsApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ChatsApi
        //val apiInstance = ChatsApi()

        // to test createChat
        should("test createChat") {
            // uncomment below to test createChat
            //val businessId : kotlin.Long = 789 // kotlin.Long | Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val createChatRequest : CreateChatRequest =  // CreateChatRequest | description
            //val result : CreateChatResponse = apiInstance.createChat(businessId, createChatRequest)
            //result shouldBe ("TODO")
        }

        // to test getChatHistory
        should("test getChatHistory") {
            // uncomment below to test getChatHistory
            //val businessId : kotlin.Long = 789 // kotlin.Long | Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val chatId : kotlin.Long = 789 // kotlin.Long | Идентификатор чата.
            //val getChatHistoryRequest : GetChatHistoryRequest =  // GetChatHistoryRequest | description
            //val pageToken : kotlin.String = eyBuZXh0SWQ6IDIzNDIgfQ== // kotlin.String | Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. 
            //val limit : kotlin.Int = 20 // kotlin.Int | Количество значений на одной странице. 
            //val result : GetChatHistoryResponse = apiInstance.getChatHistory(businessId, chatId, getChatHistoryRequest, pageToken, limit)
            //result shouldBe ("TODO")
        }

        // to test getChats
        should("test getChats") {
            // uncomment below to test getChats
            //val businessId : kotlin.Long = 789 // kotlin.Long | Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val getChatsRequest : GetChatsRequest =  // GetChatsRequest | description
            //val pageToken : kotlin.String = eyBuZXh0SWQ6IDIzNDIgfQ== // kotlin.String | Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. 
            //val limit : kotlin.Int = 20 // kotlin.Int | Количество значений на одной странице. 
            //val result : GetChatsResponse = apiInstance.getChats(businessId, getChatsRequest, pageToken, limit)
            //result shouldBe ("TODO")
        }

        // to test sendFileToChat
        should("test sendFileToChat") {
            // uncomment below to test sendFileToChat
            //val businessId : kotlin.Long = 789 // kotlin.Long | Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val chatId : kotlin.Long = 789 // kotlin.Long | Идентификатор чата.
            //val file : java.io.File = BINARY_DATA_HERE // java.io.File | Содержимое файла. Максимальный размер файла — 5 Мбайт.
            //val result : EmptyApiResponse = apiInstance.sendFileToChat(businessId, chatId, file)
            //result shouldBe ("TODO")
        }

        // to test sendMessageToChat
        should("test sendMessageToChat") {
            // uncomment below to test sendMessageToChat
            //val businessId : kotlin.Long = 789 // kotlin.Long | Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val chatId : kotlin.Long = 789 // kotlin.Long | Идентификатор чата.
            //val sendMessageToChatRequest : SendMessageToChatRequest =  // SendMessageToChatRequest | description
            //val result : EmptyApiResponse = apiInstance.sendMessageToChat(businessId, chatId, sendMessageToChatRequest)
            //result shouldBe ("TODO")
        }

    }
}
