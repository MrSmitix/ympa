/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ympa_kotlin_client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import ympa_kotlin_client.apis.OrdersApi
import ympa_kotlin_client.models.AcceptOrderCancellationRequest
import ympa_kotlin_client.models.ApiClientDataErrorResponse
import ympa_kotlin_client.models.ApiForbiddenErrorResponse
import ympa_kotlin_client.models.ApiLimitErrorResponse
import ympa_kotlin_client.models.ApiNotFoundErrorResponse
import ympa_kotlin_client.models.ApiServerErrorResponse
import ympa_kotlin_client.models.ApiUnauthorizedErrorResponse
import ympa_kotlin_client.models.EmptyApiResponse
import ympa_kotlin_client.models.GetOrderResponse
import ympa_kotlin_client.models.GetOrdersResponse
import ympa_kotlin_client.models.OrderBuyerType
import ympa_kotlin_client.models.OrderDeliveryDispatchType
import ympa_kotlin_client.models.OrderStatusType
import ympa_kotlin_client.models.OrderSubstatusType
import ympa_kotlin_client.models.ProvideOrderDigitalCodesRequest
import ympa_kotlin_client.models.ProvideOrderItemIdentifiersRequest
import ympa_kotlin_client.models.ProvideOrderItemIdentifiersResponse
import ympa_kotlin_client.models.SetOrderBoxLayoutRequest
import ympa_kotlin_client.models.SetOrderBoxLayoutResponse
import ympa_kotlin_client.models.SetOrderShipmentBoxesRequest
import ympa_kotlin_client.models.SetOrderShipmentBoxesResponse
import ympa_kotlin_client.models.UpdateOrderItemRequest
import ympa_kotlin_client.models.UpdateOrderStatusRequest
import ympa_kotlin_client.models.UpdateOrderStatusResponse
import ympa_kotlin_client.models.UpdateOrderStatusesRequest
import ympa_kotlin_client.models.UpdateOrderStatusesResponse

class OrdersApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of OrdersApi
        //val apiInstance = OrdersApi()

        // to test acceptOrderCancellation
        should("test acceptOrderCancellation") {
            // uncomment below to test acceptOrderCancellation
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val orderId : kotlin.Long = 789 // kotlin.Long | Идентификатор заказа.
            //val acceptOrderCancellationRequest : AcceptOrderCancellationRequest =  // AcceptOrderCancellationRequest | 
            //val result : EmptyApiResponse = apiInstance.acceptOrderCancellation(campaignId, orderId, acceptOrderCancellationRequest)
            //result shouldBe ("TODO")
        }

        // to test getOrder
        should("test getOrder") {
            // uncomment below to test getOrder
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val orderId : kotlin.Long = 789 // kotlin.Long | Идентификатор заказа.
            //val result : GetOrderResponse = apiInstance.getOrder(campaignId, orderId)
            //result shouldBe ("TODO")
        }

        // to test getOrders
        should("test getOrders") {
            // uncomment below to test getOrders
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val orderIds : kotlin.collections.List<kotlin.Long> =  // kotlin.collections.List<kotlin.Long> | Фильтрация заказов по идентификаторам. <br><br> ⚠️ Не используйте это поле одновременно с другими фильтрами. Если вы хотите воспользоваться ими, оставьте поле пустым. 
            //val status : kotlin.collections.Set<OrderStatusType> =  // kotlin.collections.Set<OrderStatusType> | Статус заказа:  * `CANCELLED` — заказ отменен.  * `DELIVERED` — заказ получен покупателем.  * `DELIVERY` — заказ передан в службу доставки.  * `PICKUP` — заказ доставлен в пункт самовывоза.  * `PROCESSING` — заказ находится в обработке.  * `UNPAID` — заказ оформлен, но еще не оплачен (если выбрана оплата при оформлении).  Также могут возвращаться другие значения. Обрабатывать их не требуется. 
            //val substatus : kotlin.collections.Set<OrderSubstatusType> =  // kotlin.collections.Set<OrderSubstatusType> | Этап обработки заказа (если он имеет статус `PROCESSING`) или причина отмены заказа (если он имеет статус `CANCELLED`).  Возможные значения для заказа в статусе `PROCESSING`:  * `STARTED` — заказ подтвержден, его можно начать обрабатывать. * `READY_TO_SHIP` — заказ собран и готов к отправке. * `SHIPPED` — заказ передан службе доставки.  Возможные значения для заказа в статусе `CANCELLED`:  * `DELIVERY_SERVICE_UNDELIVERED` — служба доставки не смогла доставить заказ.  * `PROCESSING_EXPIRED` — значение более не используется.  * `REPLACING_ORDER` — покупатель решил заменить товар другим по собственной инициативе.  * `RESERVATION_EXPIRED` — покупатель не завершил оформление зарезервированного заказа в течение 10 минут.  * `RESERVATION_FAILED` — Маркет не может продолжить дальнейшую обработку заказа.  * `SHOP_FAILED` — магазин не может выполнить заказ.  * `USER_CHANGED_MIND` — покупатель отменил заказ по личным причинам.  * `USER_NOT_PAID` — покупатель не оплатил заказ (для типа оплаты `PREPAID`) в течение 30 минут.  * `USER_REFUSED_DELIVERY` — покупателя не устроили условия доставки.  * `USER_REFUSED_PRODUCT` — покупателю не подошел товар.  * `USER_REFUSED_QUALITY` — покупателя не устроило качество товара.  * `USER_UNREACHABLE` — не удалось связаться с покупателем. Для отмены с этой причиной необходимо выполнить условия:    * не менее 3 звонков с 8 до 21 в часовом поясе покупателя;   * перерыв между первым и третьим звонком не менее 90 минут;   * соединение не короче 5 секунд.    Если хотя бы одно из этих условий не выполнено (кроме случая, когда номер недоступен), отменить заказ не получится. Вернется ответ с кодом ошибки 400. * `USER_WANTS_TO_CHANGE_DELIVERY_DATE` — покупатель хочет получить заказ в другой день. * `CANCELLED_COURIER_NOT_FOUND` — не удалось найти курьера.  Также могут возвращаться другие значения. Обрабатывать их не требуется. 
            //val fromDate : java.time.LocalDate = 2013-10-20 // java.time.LocalDate | Начальная дата для фильтрации заказов по дате оформления.  Формат даты: `ДД-ММ-ГГГГ`.  Между начальной и конечной датой (параметр `toDate`) должно быть не больше 30 дней.  Значение по умолчанию: 30 дней назад от текущей даты. 
            //val toDate : java.time.LocalDate = 2013-10-20 // java.time.LocalDate | Конечная дата для фильтрации заказов по дате оформления.  Показываются заказы, созданные до 00:00 указанного дня.  Формат даты: `ДД-ММ-ГГГГ`.  Между начальной (параметр `fromDate`) и конечной датой должно быть не больше 30 дней.  Значение по умолчанию: текущая дата. 
            //val supplierShipmentDateFrom : java.time.LocalDate = 2013-10-20 // java.time.LocalDate | Начальная дата для фильтрации заказов по дате отгрузки в службу доставки (параметр `shipmentDate`).  Формат даты: `ДД-ММ-ГГГГ`.  Между начальной и конечной датой (параметр `supplierShipmentDateTo`) должно быть не больше 30 дней.  Начальная дата включается в интервал для фильтрации. 
            //val supplierShipmentDateTo : java.time.LocalDate = 2013-10-20 // java.time.LocalDate | Конечная дата для фильтрации заказов по дате отгрузки в службу доставки (параметр `shipmentDate`).  Формат даты: `ДД-ММ-ГГГГ`.  Между начальной (параметр `supplierShipmentDateFrom`) и конечной датой должно быть не больше 30 дней.  Конечная дата не включается в интервал для фильтрации. 
            //val updatedAtFrom : java.time.OffsetDateTime = 2013-10-20T19:20:30+01:00 // java.time.OffsetDateTime | Начальная дата для фильтрации заказов по дате и времени обновления (параметр `updatedAt`).  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.  Между начальной и конечной датой (параметр `updatedAtTo`) должно быть не больше 30 дней.  Начальная дата включается в интервал для фильтрации. 
            //val updatedAtTo : java.time.OffsetDateTime = 2013-10-20T19:20:30+01:00 // java.time.OffsetDateTime | Конечная дата для фильтрации заказов по дате и времени обновления (параметр `updatedAt`).  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.  Между начальной (параметр `updatedAtFrom`) и конечной датой должно быть не больше 30 дней.  Конечная дата не включается в интервал для фильтрации. 
            //val dispatchType : OrderDeliveryDispatchType =  // OrderDeliveryDispatchType | Способ отгрузки
            //val fake : kotlin.Boolean = true // kotlin.Boolean | Фильтрация заказов по типам:  * `false` — настоящий заказ покупателя.  * `true` — [тестовый](../../pushapi/concepts/sandbox.md) заказ Маркета. 
            //val hasCis : kotlin.Boolean = true // kotlin.Boolean | Нужно ли вернуть только те заказы, в составе которых есть хотя бы один товар с кодом идентификации [в системе «Честный ЗНАК»](https://честныйзнак.рф/):  * `true` — да.  * `false` — нет.  Такие коды присваиваются товарам, которые подлежат маркировке и относятся к определенным категориям. 
            //val onlyWaitingForCancellationApprove : kotlin.Boolean = true // kotlin.Boolean | **Только для модели DBS**  Фильтрация заказов по наличию запросов покупателей на отмену.  При значение `true` возвращаются только заказы, которые находятся в статусе `DELIVERY` или `PICKUP` и которые пользователи решили отменить.  Чтобы подтвердить или отклонить отмену, отправьте запрос [PUT campaigns/{campaignId}/orders/{orderId}/cancellation/accept](../../reference/orders/acceptOrderCancellation). 
            //val onlyEstimatedDelivery : kotlin.Boolean = true // kotlin.Boolean | Фильтрация заказов с долгой доставкой (31-60 дней) по подтвержденной дате доставки:  * `true` — возвращаются только заказы с неподтвержденной датой доставки. * `false` — фильтрация не применяется. 
            //val buyerType : OrderBuyerType =  // OrderBuyerType | Фильтрация заказов по типу покупателя. 
            //val page : kotlin.Int = 56 // kotlin.Int | Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. 
            //val pageSize : kotlin.Int = 56 // kotlin.Int | Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. 
            //val pageToken : kotlin.String = eyBuZXh0SWQ6IDIzNDIgfQ== // kotlin.String | Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. 
            //val limit : kotlin.Int = 20 // kotlin.Int | Количество значений на одной странице. 
            //val result : GetOrdersResponse = apiInstance.getOrders(campaignId, orderIds, status, substatus, fromDate, toDate, supplierShipmentDateFrom, supplierShipmentDateTo, updatedAtFrom, updatedAtTo, dispatchType, fake, hasCis, onlyWaitingForCancellationApprove, onlyEstimatedDelivery, buyerType, page, pageSize, pageToken, limit)
            //result shouldBe ("TODO")
        }

        // to test provideOrderDigitalCodes
        should("test provideOrderDigitalCodes") {
            // uncomment below to test provideOrderDigitalCodes
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val orderId : kotlin.Long = 789 // kotlin.Long | Идентификатор заказа.
            //val provideOrderDigitalCodesRequest : ProvideOrderDigitalCodesRequest =  // ProvideOrderDigitalCodesRequest | 
            //val result : EmptyApiResponse = apiInstance.provideOrderDigitalCodes(campaignId, orderId, provideOrderDigitalCodesRequest)
            //result shouldBe ("TODO")
        }

        // to test provideOrderItemIdentifiers
        should("test provideOrderItemIdentifiers") {
            // uncomment below to test provideOrderItemIdentifiers
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val orderId : kotlin.Long = 789 // kotlin.Long | Идентификатор заказа.
            //val provideOrderItemIdentifiersRequest : ProvideOrderItemIdentifiersRequest =  // ProvideOrderItemIdentifiersRequest | 
            //val result : ProvideOrderItemIdentifiersResponse = apiInstance.provideOrderItemIdentifiers(campaignId, orderId, provideOrderItemIdentifiersRequest)
            //result shouldBe ("TODO")
        }

        // to test setOrderBoxLayout
        should("test setOrderBoxLayout") {
            // uncomment below to test setOrderBoxLayout
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val orderId : kotlin.Long = 789 // kotlin.Long | Идентификатор заказа.
            //val setOrderBoxLayoutRequest : SetOrderBoxLayoutRequest =  // SetOrderBoxLayoutRequest | 
            //val result : SetOrderBoxLayoutResponse = apiInstance.setOrderBoxLayout(campaignId, orderId, setOrderBoxLayoutRequest)
            //result shouldBe ("TODO")
        }

        // to test setOrderShipmentBoxes
        should("test setOrderShipmentBoxes") {
            // uncomment below to test setOrderShipmentBoxes
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val orderId : kotlin.Long = 789 // kotlin.Long | Идентификатор заказа.
            //val shipmentId : kotlin.Long = 789 // kotlin.Long | Параметр больше не используется. Вставьте любое число — просто чтобы получился корректный URL. 
            //val setOrderShipmentBoxesRequest : SetOrderShipmentBoxesRequest =  // SetOrderShipmentBoxesRequest | 
            //val result : SetOrderShipmentBoxesResponse = apiInstance.setOrderShipmentBoxes(campaignId, orderId, shipmentId, setOrderShipmentBoxesRequest)
            //result shouldBe ("TODO")
        }

        // to test updateOrderItems
        should("test updateOrderItems") {
            // uncomment below to test updateOrderItems
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val orderId : kotlin.Long = 789 // kotlin.Long | Идентификатор заказа.
            //val updateOrderItemRequest : UpdateOrderItemRequest =  // UpdateOrderItemRequest | 
            //apiInstance.updateOrderItems(campaignId, orderId, updateOrderItemRequest)
        }

        // to test updateOrderStatus
        should("test updateOrderStatus") {
            // uncomment below to test updateOrderStatus
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val orderId : kotlin.Long = 789 // kotlin.Long | Идентификатор заказа.
            //val updateOrderStatusRequest : UpdateOrderStatusRequest =  // UpdateOrderStatusRequest | 
            //val result : UpdateOrderStatusResponse = apiInstance.updateOrderStatus(campaignId, orderId, updateOrderStatusRequest)
            //result shouldBe ("TODO")
        }

        // to test updateOrderStatuses
        should("test updateOrderStatuses") {
            // uncomment below to test updateOrderStatuses
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val updateOrderStatusesRequest : UpdateOrderStatusesRequest =  // UpdateOrderStatusesRequest | 
            //val result : UpdateOrderStatusesResponse = apiInstance.updateOrderStatuses(campaignId, updateOrderStatusesRequest)
            //result shouldBe ("TODO")
        }

    }
}
