/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ympa_kotlin_client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import ympa_kotlin_client.apis.ExpressApi
import ympa_kotlin_client.models.AddHiddenOffersRequest
import ympa_kotlin_client.models.AddOffersToArchiveRequest
import ympa_kotlin_client.models.AddOffersToArchiveResponse
import ympa_kotlin_client.models.ApiClientDataErrorResponse
import ympa_kotlin_client.models.ApiForbiddenErrorResponse
import ympa_kotlin_client.models.ApiLimitErrorResponse
import ympa_kotlin_client.models.ApiLockedErrorResponse
import ympa_kotlin_client.models.ApiNotFoundErrorResponse
import ympa_kotlin_client.models.ApiServerErrorResponse
import ympa_kotlin_client.models.ApiUnauthorizedErrorResponse
import ympa_kotlin_client.models.CalculateTariffsRequest
import ympa_kotlin_client.models.CalculateTariffsResponse
import ympa_kotlin_client.models.ConfirmPricesRequest
import ympa_kotlin_client.models.CreateChatRequest
import ympa_kotlin_client.models.CreateChatResponse
import ympa_kotlin_client.models.CurrencyType
import ympa_kotlin_client.models.DeleteCampaignOffersRequest
import ympa_kotlin_client.models.DeleteCampaignOffersResponse
import ympa_kotlin_client.models.DeleteGoodsFeedbackCommentRequest
import ympa_kotlin_client.models.DeleteHiddenOffersRequest
import ympa_kotlin_client.models.DeleteOffersFromArchiveRequest
import ympa_kotlin_client.models.DeleteOffersFromArchiveResponse
import ympa_kotlin_client.models.DeleteOffersRequest
import ympa_kotlin_client.models.DeleteOffersResponse
import ympa_kotlin_client.models.DeletePromoOffersRequest
import ympa_kotlin_client.models.DeletePromoOffersResponse
import ympa_kotlin_client.models.EmptyApiResponse
import ympa_kotlin_client.models.FeedIndexLogsStatusType
import ympa_kotlin_client.models.GenerateBoostConsolidatedRequest
import ympa_kotlin_client.models.GenerateCompetitorsPositionReportRequest
import ympa_kotlin_client.models.GenerateGoodsFeedbackRequest
import ympa_kotlin_client.models.GenerateGoodsRealizationReportRequest
import ympa_kotlin_client.models.GenerateMassOrderLabelsRequest
import ympa_kotlin_client.models.GeneratePricesReportRequest
import ympa_kotlin_client.models.GenerateReportResponse
import ympa_kotlin_client.models.GenerateShelfsStatisticsRequest
import ympa_kotlin_client.models.GenerateShowsSalesReportRequest
import ympa_kotlin_client.models.GenerateStocksOnWarehousesReportRequest
import ympa_kotlin_client.models.GenerateUnitedMarketplaceServicesReportRequest
import ympa_kotlin_client.models.GenerateUnitedNettingReportRequest
import ympa_kotlin_client.models.GenerateUnitedOrdersRequest
import ympa_kotlin_client.models.GetAllOffersResponse
import ympa_kotlin_client.models.GetBidsInfoRequest
import ympa_kotlin_client.models.GetBidsInfoResponse
import ympa_kotlin_client.models.GetBidsRecommendationsRequest
import ympa_kotlin_client.models.GetBidsRecommendationsResponse
import ympa_kotlin_client.models.GetBusinessBuyerInfoResponse
import ympa_kotlin_client.models.GetBusinessDocumentsInfoResponse
import ympa_kotlin_client.models.GetBusinessSettingsResponse
import ympa_kotlin_client.models.GetCampaignLoginsResponse
import ympa_kotlin_client.models.GetCampaignOffersRequest
import ympa_kotlin_client.models.GetCampaignOffersResponse
import ympa_kotlin_client.models.GetCampaignRegionResponse
import ympa_kotlin_client.models.GetCampaignResponse
import ympa_kotlin_client.models.GetCampaignSettingsResponse
import ympa_kotlin_client.models.GetCampaignsResponse
import ympa_kotlin_client.models.GetCategoriesMaxSaleQuantumRequest
import ympa_kotlin_client.models.GetCategoriesMaxSaleQuantumResponse
import ympa_kotlin_client.models.GetCategoriesRequest
import ympa_kotlin_client.models.GetCategoriesResponse
import ympa_kotlin_client.models.GetCategoryContentParametersResponse
import ympa_kotlin_client.models.GetChatHistoryRequest
import ympa_kotlin_client.models.GetChatHistoryResponse
import ympa_kotlin_client.models.GetChatsRequest
import ympa_kotlin_client.models.GetChatsResponse
import ympa_kotlin_client.models.GetDeliveryServicesResponse
import ympa_kotlin_client.models.GetFeedIndexLogsResponse
import ympa_kotlin_client.models.GetFeedResponse
import ympa_kotlin_client.models.GetFeedbackListResponse
import ympa_kotlin_client.models.GetFeedsResponse
import ympa_kotlin_client.models.GetGoodsFeedbackCommentsRequest
import ympa_kotlin_client.models.GetGoodsFeedbackCommentsResponse
import ympa_kotlin_client.models.GetGoodsFeedbackRequest
import ympa_kotlin_client.models.GetGoodsFeedbackResponse
import ympa_kotlin_client.models.GetGoodsStatsRequest
import ympa_kotlin_client.models.GetGoodsStatsResponse
import ympa_kotlin_client.models.GetHiddenOffersResponse
import ympa_kotlin_client.models.GetOfferCardsContentStatusRequest
import ympa_kotlin_client.models.GetOfferCardsContentStatusResponse
import ympa_kotlin_client.models.GetOfferMappingEntriesResponse
import ympa_kotlin_client.models.GetOfferMappingsRequest
import ympa_kotlin_client.models.GetOfferMappingsResponse
import ympa_kotlin_client.models.GetOfferRecommendationsRequest
import ympa_kotlin_client.models.GetOfferRecommendationsResponse
import ympa_kotlin_client.models.GetOffersResponse
import ympa_kotlin_client.models.GetOrderLabelsDataResponse
import ympa_kotlin_client.models.GetOrderResponse
import ympa_kotlin_client.models.GetOrdersResponse
import ympa_kotlin_client.models.GetOrdersStatsRequest
import ympa_kotlin_client.models.GetOrdersStatsResponse
import ympa_kotlin_client.models.GetPricesByOfferIdsRequest
import ympa_kotlin_client.models.GetPricesByOfferIdsResponse
import ympa_kotlin_client.models.GetPricesResponse
import ympa_kotlin_client.models.GetPromoOffersRequest
import ympa_kotlin_client.models.GetPromoOffersResponse
import ympa_kotlin_client.models.GetPromosRequest
import ympa_kotlin_client.models.GetPromosResponse
import ympa_kotlin_client.models.GetQualityRatingDetailsResponse
import ympa_kotlin_client.models.GetQualityRatingRequest
import ympa_kotlin_client.models.GetQualityRatingResponse
import ympa_kotlin_client.models.GetQuarantineOffersRequest
import ympa_kotlin_client.models.GetQuarantineOffersResponse
import ympa_kotlin_client.models.GetRegionWithChildrenResponse
import ympa_kotlin_client.models.GetRegionsResponse
import ympa_kotlin_client.models.GetReportInfoResponse
import ympa_kotlin_client.models.GetReturnResponse
import ympa_kotlin_client.models.GetReturnsResponse
import ympa_kotlin_client.models.GetSuggestedOfferMappingEntriesRequest
import ympa_kotlin_client.models.GetSuggestedOfferMappingEntriesResponse
import ympa_kotlin_client.models.GetSuggestedOfferMappingsRequest
import ympa_kotlin_client.models.GetSuggestedOfferMappingsResponse
import ympa_kotlin_client.models.GetWarehouseStocksRequest
import ympa_kotlin_client.models.GetWarehouseStocksResponse
import ympa_kotlin_client.models.GetWarehousesResponse
import ympa_kotlin_client.models.OfferAvailabilityStatusType
import ympa_kotlin_client.models.OfferMappingKindType
import ympa_kotlin_client.models.OfferProcessingStatusType
import ympa_kotlin_client.models.OrderBuyerType
import ympa_kotlin_client.models.OrderDeliveryDispatchType
import ympa_kotlin_client.models.OrderStatusType
import ympa_kotlin_client.models.OrderSubstatusType
import ympa_kotlin_client.models.PageFormatType
import ympa_kotlin_client.models.ProvideOrderItemIdentifiersRequest
import ympa_kotlin_client.models.ProvideOrderItemIdentifiersResponse
import ympa_kotlin_client.models.PutSkuBidsRequest
import ympa_kotlin_client.models.RefundStatusType
import ympa_kotlin_client.models.ReportFormatType
import ympa_kotlin_client.models.ReturnType
import ympa_kotlin_client.models.SendMessageToChatRequest
import ympa_kotlin_client.models.SetFeedParamsRequest
import ympa_kotlin_client.models.SetOrderBoxLayoutRequest
import ympa_kotlin_client.models.SetOrderBoxLayoutResponse
import ympa_kotlin_client.models.SetOrderShipmentBoxesRequest
import ympa_kotlin_client.models.SetOrderShipmentBoxesResponse
import ympa_kotlin_client.models.SkipGoodsFeedbackReactionRequest
import ympa_kotlin_client.models.SuggestPricesRequest
import ympa_kotlin_client.models.SuggestPricesResponse
import ympa_kotlin_client.models.UpdateBusinessPricesRequest
import ympa_kotlin_client.models.UpdateCampaignOffersRequest
import ympa_kotlin_client.models.UpdateGoodsFeedbackCommentRequest
import ympa_kotlin_client.models.UpdateGoodsFeedbackCommentResponse
import ympa_kotlin_client.models.UpdateOfferContentRequest
import ympa_kotlin_client.models.UpdateOfferContentResponse
import ympa_kotlin_client.models.UpdateOfferMappingEntryRequest
import ympa_kotlin_client.models.UpdateOfferMappingsRequest
import ympa_kotlin_client.models.UpdateOfferMappingsResponse
import ympa_kotlin_client.models.UpdateOrderItemRequest
import ympa_kotlin_client.models.UpdateOrderStatusRequest
import ympa_kotlin_client.models.UpdateOrderStatusResponse
import ympa_kotlin_client.models.UpdateOrderStatusesRequest
import ympa_kotlin_client.models.UpdateOrderStatusesResponse
import ympa_kotlin_client.models.UpdatePricesRequest
import ympa_kotlin_client.models.UpdatePromoOffersRequest
import ympa_kotlin_client.models.UpdatePromoOffersResponse
import ympa_kotlin_client.models.UpdateStocksRequest
import ympa_kotlin_client.models.VerifyOrderEacRequest
import ympa_kotlin_client.models.VerifyOrderEacResponse

class ExpressApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ExpressApi
        //val apiInstance = ExpressApi()

        // to test addHiddenOffers
        should("test addHiddenOffers") {
            // uncomment below to test addHiddenOffers
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val addHiddenOffersRequest : AddHiddenOffersRequest =  // AddHiddenOffersRequest | Запрос на скрытие оферов.
            //val result : EmptyApiResponse = apiInstance.addHiddenOffers(campaignId, addHiddenOffersRequest)
            //result shouldBe ("TODO")
        }

        // to test addOffersToArchive
        should("test addOffersToArchive") {
            // uncomment below to test addOffersToArchive
            //val businessId : kotlin.Long = 789 // kotlin.Long | Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val addOffersToArchiveRequest : AddOffersToArchiveRequest =  // AddOffersToArchiveRequest | 
            //val result : AddOffersToArchiveResponse = apiInstance.addOffersToArchive(businessId, addOffersToArchiveRequest)
            //result shouldBe ("TODO")
        }

        // to test calculateTariffs
        should("test calculateTariffs") {
            // uncomment below to test calculateTariffs
            //val calculateTariffsRequest : CalculateTariffsRequest =  // CalculateTariffsRequest | 
            //val result : CalculateTariffsResponse = apiInstance.calculateTariffs(calculateTariffsRequest)
            //result shouldBe ("TODO")
        }

        // to test confirmBusinessPrices
        should("test confirmBusinessPrices") {
            // uncomment below to test confirmBusinessPrices
            //val businessId : kotlin.Long = 789 // kotlin.Long | Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val confirmPricesRequest : ConfirmPricesRequest =  // ConfirmPricesRequest | 
            //val result : EmptyApiResponse = apiInstance.confirmBusinessPrices(businessId, confirmPricesRequest)
            //result shouldBe ("TODO")
        }

        // to test confirmCampaignPrices
        should("test confirmCampaignPrices") {
            // uncomment below to test confirmCampaignPrices
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val confirmPricesRequest : ConfirmPricesRequest =  // ConfirmPricesRequest | 
            //val result : EmptyApiResponse = apiInstance.confirmCampaignPrices(campaignId, confirmPricesRequest)
            //result shouldBe ("TODO")
        }

        // to test createChat
        should("test createChat") {
            // uncomment below to test createChat
            //val businessId : kotlin.Long = 789 // kotlin.Long | Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val createChatRequest : CreateChatRequest =  // CreateChatRequest | description
            //val result : CreateChatResponse = apiInstance.createChat(businessId, createChatRequest)
            //result shouldBe ("TODO")
        }

        // to test deleteCampaignOffers
        should("test deleteCampaignOffers") {
            // uncomment below to test deleteCampaignOffers
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val deleteCampaignOffersRequest : DeleteCampaignOffersRequest =  // DeleteCampaignOffersRequest | 
            //val result : DeleteCampaignOffersResponse = apiInstance.deleteCampaignOffers(campaignId, deleteCampaignOffersRequest)
            //result shouldBe ("TODO")
        }

        // to test deleteGoodsFeedbackComment
        should("test deleteGoodsFeedbackComment") {
            // uncomment below to test deleteGoodsFeedbackComment
            //val businessId : kotlin.Long = 789 // kotlin.Long | Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val deleteGoodsFeedbackCommentRequest : DeleteGoodsFeedbackCommentRequest =  // DeleteGoodsFeedbackCommentRequest | 
            //val result : EmptyApiResponse = apiInstance.deleteGoodsFeedbackComment(businessId, deleteGoodsFeedbackCommentRequest)
            //result shouldBe ("TODO")
        }

        // to test deleteHiddenOffers
        should("test deleteHiddenOffers") {
            // uncomment below to test deleteHiddenOffers
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val deleteHiddenOffersRequest : DeleteHiddenOffersRequest =  // DeleteHiddenOffersRequest | Запрос на возобновление показа оферов.
            //val result : EmptyApiResponse = apiInstance.deleteHiddenOffers(campaignId, deleteHiddenOffersRequest)
            //result shouldBe ("TODO")
        }

        // to test deleteOffers
        should("test deleteOffers") {
            // uncomment below to test deleteOffers
            //val businessId : kotlin.Long = 789 // kotlin.Long | Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val deleteOffersRequest : DeleteOffersRequest =  // DeleteOffersRequest | 
            //val result : DeleteOffersResponse = apiInstance.deleteOffers(businessId, deleteOffersRequest)
            //result shouldBe ("TODO")
        }

        // to test deleteOffersFromArchive
        should("test deleteOffersFromArchive") {
            // uncomment below to test deleteOffersFromArchive
            //val businessId : kotlin.Long = 789 // kotlin.Long | Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val deleteOffersFromArchiveRequest : DeleteOffersFromArchiveRequest =  // DeleteOffersFromArchiveRequest | 
            //val result : DeleteOffersFromArchiveResponse = apiInstance.deleteOffersFromArchive(businessId, deleteOffersFromArchiveRequest)
            //result shouldBe ("TODO")
        }

        // to test deletePromoOffers
        should("test deletePromoOffers") {
            // uncomment below to test deletePromoOffers
            //val businessId : kotlin.Long = 789 // kotlin.Long | Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val deletePromoOffersRequest : DeletePromoOffersRequest =  // DeletePromoOffersRequest | 
            //val result : DeletePromoOffersResponse = apiInstance.deletePromoOffers(businessId, deletePromoOffersRequest)
            //result shouldBe ("TODO")
        }

        // to test generateBoostConsolidatedReport
        should("test generateBoostConsolidatedReport") {
            // uncomment below to test generateBoostConsolidatedReport
            //val generateBoostConsolidatedRequest : GenerateBoostConsolidatedRequest =  // GenerateBoostConsolidatedRequest | 
            //val format : ReportFormatType =  // ReportFormatType | Формат отчета.
            //val result : GenerateReportResponse = apiInstance.generateBoostConsolidatedReport(generateBoostConsolidatedRequest, format)
            //result shouldBe ("TODO")
        }

        // to test generateCompetitorsPositionReport
        should("test generateCompetitorsPositionReport") {
            // uncomment below to test generateCompetitorsPositionReport
            //val generateCompetitorsPositionReportRequest : GenerateCompetitorsPositionReportRequest =  // GenerateCompetitorsPositionReportRequest | 
            //val format : ReportFormatType =  // ReportFormatType | Формат отчета.
            //val result : GenerateReportResponse = apiInstance.generateCompetitorsPositionReport(generateCompetitorsPositionReportRequest, format)
            //result shouldBe ("TODO")
        }

        // to test generateGoodsFeedbackReport
        should("test generateGoodsFeedbackReport") {
            // uncomment below to test generateGoodsFeedbackReport
            //val generateGoodsFeedbackRequest : GenerateGoodsFeedbackRequest =  // GenerateGoodsFeedbackRequest | 
            //val format : ReportFormatType =  // ReportFormatType | Формат отчета.
            //val result : GenerateReportResponse = apiInstance.generateGoodsFeedbackReport(generateGoodsFeedbackRequest, format)
            //result shouldBe ("TODO")
        }

        // to test generateGoodsRealizationReport
        should("test generateGoodsRealizationReport") {
            // uncomment below to test generateGoodsRealizationReport
            //val generateGoodsRealizationReportRequest : GenerateGoodsRealizationReportRequest =  // GenerateGoodsRealizationReportRequest | 
            //val format : ReportFormatType =  // ReportFormatType | Формат отчета.
            //val result : GenerateReportResponse = apiInstance.generateGoodsRealizationReport(generateGoodsRealizationReportRequest, format)
            //result shouldBe ("TODO")
        }

        // to test generateMassOrderLabelsReport
        should("test generateMassOrderLabelsReport") {
            // uncomment below to test generateMassOrderLabelsReport
            //val generateMassOrderLabelsRequest : GenerateMassOrderLabelsRequest =  // GenerateMassOrderLabelsRequest | 
            //val format : PageFormatType =  // PageFormatType | Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A7.
            //val result : GenerateReportResponse = apiInstance.generateMassOrderLabelsReport(generateMassOrderLabelsRequest, format)
            //result shouldBe ("TODO")
        }

        // to test generateOrderLabel
        should("test generateOrderLabel") {
            // uncomment below to test generateOrderLabel
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val orderId : kotlin.Long = 789 // kotlin.Long | Идентификатор заказа.
            //val shipmentId : kotlin.Long = 789 // kotlin.Long | Идентификатор грузоместа.
            //val boxId : kotlin.Long = 789 // kotlin.Long | Идентификатор коробки.
            //val format : PageFormatType =  // PageFormatType | Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A6.
            //val result : java.io.File = apiInstance.generateOrderLabel(campaignId, orderId, shipmentId, boxId, format)
            //result shouldBe ("TODO")
        }

        // to test generateOrderLabels
        should("test generateOrderLabels") {
            // uncomment below to test generateOrderLabels
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val orderId : kotlin.Long = 789 // kotlin.Long | Идентификатор заказа.
            //val format : PageFormatType =  // PageFormatType | Настройка размещения ярлыков на странице. Если параметра нет, возвращается PDF с ярлыками формата A6.
            //val result : java.io.File = apiInstance.generateOrderLabels(campaignId, orderId, format)
            //result shouldBe ("TODO")
        }

        // to test generatePricesReport
        should("test generatePricesReport") {
            // uncomment below to test generatePricesReport
            //val generatePricesReportRequest : GeneratePricesReportRequest =  // GeneratePricesReportRequest | 
            //val format : ReportFormatType =  // ReportFormatType | Формат отчета.
            //val result : GenerateReportResponse = apiInstance.generatePricesReport(generatePricesReportRequest, format)
            //result shouldBe ("TODO")
        }

        // to test generateShelfsStatisticsReport
        should("test generateShelfsStatisticsReport") {
            // uncomment below to test generateShelfsStatisticsReport
            //val generateShelfsStatisticsRequest : GenerateShelfsStatisticsRequest =  // GenerateShelfsStatisticsRequest | 
            //val format : ReportFormatType =  // ReportFormatType | Формат отчета.
            //val result : GenerateReportResponse = apiInstance.generateShelfsStatisticsReport(generateShelfsStatisticsRequest, format)
            //result shouldBe ("TODO")
        }

        // to test generateShowsSalesReport
        should("test generateShowsSalesReport") {
            // uncomment below to test generateShowsSalesReport
            //val generateShowsSalesReportRequest : GenerateShowsSalesReportRequest =  // GenerateShowsSalesReportRequest | 
            //val format : ReportFormatType =  // ReportFormatType | Формат отчета.
            //val result : GenerateReportResponse = apiInstance.generateShowsSalesReport(generateShowsSalesReportRequest, format)
            //result shouldBe ("TODO")
        }

        // to test generateStocksOnWarehousesReport
        should("test generateStocksOnWarehousesReport") {
            // uncomment below to test generateStocksOnWarehousesReport
            //val generateStocksOnWarehousesReportRequest : GenerateStocksOnWarehousesReportRequest =  // GenerateStocksOnWarehousesReportRequest | 
            //val format : ReportFormatType =  // ReportFormatType | Формат отчета.
            //val result : GenerateReportResponse = apiInstance.generateStocksOnWarehousesReport(generateStocksOnWarehousesReportRequest, format)
            //result shouldBe ("TODO")
        }

        // to test generateUnitedMarketplaceServicesReport
        should("test generateUnitedMarketplaceServicesReport") {
            // uncomment below to test generateUnitedMarketplaceServicesReport
            //val generateUnitedMarketplaceServicesReportRequest : GenerateUnitedMarketplaceServicesReportRequest =  // GenerateUnitedMarketplaceServicesReportRequest | 
            //val format : ReportFormatType =  // ReportFormatType | Формат отчета.
            //val result : GenerateReportResponse = apiInstance.generateUnitedMarketplaceServicesReport(generateUnitedMarketplaceServicesReportRequest, format)
            //result shouldBe ("TODO")
        }

        // to test generateUnitedNettingReport
        should("test generateUnitedNettingReport") {
            // uncomment below to test generateUnitedNettingReport
            //val generateUnitedNettingReportRequest : GenerateUnitedNettingReportRequest =  // GenerateUnitedNettingReportRequest | 
            //val format : ReportFormatType =  // ReportFormatType | Формат отчета.
            //val result : GenerateReportResponse = apiInstance.generateUnitedNettingReport(generateUnitedNettingReportRequest, format)
            //result shouldBe ("TODO")
        }

        // to test generateUnitedOrdersReport
        should("test generateUnitedOrdersReport") {
            // uncomment below to test generateUnitedOrdersReport
            //val generateUnitedOrdersRequest : GenerateUnitedOrdersRequest =  // GenerateUnitedOrdersRequest | 
            //val format : ReportFormatType =  // ReportFormatType | Формат отчета.
            //val result : GenerateReportResponse = apiInstance.generateUnitedOrdersReport(generateUnitedOrdersRequest, format)
            //result shouldBe ("TODO")
        }

        // to test getAllOffers
        should("test getAllOffers") {
            // uncomment below to test getAllOffers
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val feedId : kotlin.Long = 789 // kotlin.Long | Идентификатор прайс-листа.
            //val chunk : kotlin.Int = 56 // kotlin.Int | Номер сегмента с результатами.  Значение по умолчанию: `0`.  {% note info %}  Номера сегментов запрашиваются последовательно, пока не будет получен сегмент с пустым ответом. Пустой ответ означает, что все предложения магазина получены.  {% endnote %}  {% note alert %}  Нумерация начинается с 0. Чтобы запросить первую страницу, необходимо указать `chunk=0` и т. д.  {% endnote %} 
            //val result : GetAllOffersResponse = apiInstance.getAllOffers(campaignId, feedId, chunk)
            //result shouldBe ("TODO")
        }

        // to test getBidsInfoForBusiness
        should("test getBidsInfoForBusiness") {
            // uncomment below to test getBidsInfoForBusiness
            //val businessId : kotlin.Long = 789 // kotlin.Long | Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val pageToken : kotlin.String = eyBuZXh0SWQ6IDIzNDIgfQ== // kotlin.String | Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. 
            //val limit : kotlin.Int = 20 // kotlin.Int | Количество значений на одной странице. 
            //val getBidsInfoRequest : GetBidsInfoRequest =  // GetBidsInfoRequest | description
            //val result : GetBidsInfoResponse = apiInstance.getBidsInfoForBusiness(businessId, pageToken, limit, getBidsInfoRequest)
            //result shouldBe ("TODO")
        }

        // to test getBidsRecommendations
        should("test getBidsRecommendations") {
            // uncomment below to test getBidsRecommendations
            //val businessId : kotlin.Long = 789 // kotlin.Long | Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val getBidsRecommendationsRequest : GetBidsRecommendationsRequest =  // GetBidsRecommendationsRequest | description.
            //val result : GetBidsRecommendationsResponse = apiInstance.getBidsRecommendations(businessId, getBidsRecommendationsRequest)
            //result shouldBe ("TODO")
        }

        // to test getBusinessQuarantineOffers
        should("test getBusinessQuarantineOffers") {
            // uncomment below to test getBusinessQuarantineOffers
            //val businessId : kotlin.Long = 789 // kotlin.Long | Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val getQuarantineOffersRequest : GetQuarantineOffersRequest =  // GetQuarantineOffersRequest | 
            //val pageToken : kotlin.String = eyBuZXh0SWQ6IDIzNDIgfQ== // kotlin.String | Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. 
            //val limit : kotlin.Int = 20 // kotlin.Int | Количество значений на одной странице. 
            //val result : GetQuarantineOffersResponse = apiInstance.getBusinessQuarantineOffers(businessId, getQuarantineOffersRequest, pageToken, limit)
            //result shouldBe ("TODO")
        }

        // to test getBusinessSettings
        should("test getBusinessSettings") {
            // uncomment below to test getBusinessSettings
            //val businessId : kotlin.Long = 789 // kotlin.Long | Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val result : GetBusinessSettingsResponse = apiInstance.getBusinessSettings(businessId)
            //result shouldBe ("TODO")
        }

        // to test getCampaign
        should("test getCampaign") {
            // uncomment below to test getCampaign
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val result : GetCampaignResponse = apiInstance.getCampaign(campaignId)
            //result shouldBe ("TODO")
        }

        // to test getCampaignLogins
        should("test getCampaignLogins") {
            // uncomment below to test getCampaignLogins
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val result : GetCampaignLoginsResponse = apiInstance.getCampaignLogins(campaignId)
            //result shouldBe ("TODO")
        }

        // to test getCampaignOffers
        should("test getCampaignOffers") {
            // uncomment below to test getCampaignOffers
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val getCampaignOffersRequest : GetCampaignOffersRequest =  // GetCampaignOffersRequest | 
            //val pageToken : kotlin.String = eyBuZXh0SWQ6IDIzNDIgfQ== // kotlin.String | Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. 
            //val limit : kotlin.Int = 20 // kotlin.Int | Количество значений на одной странице. 
            //val result : GetCampaignOffersResponse = apiInstance.getCampaignOffers(campaignId, getCampaignOffersRequest, pageToken, limit)
            //result shouldBe ("TODO")
        }

        // to test getCampaignQuarantineOffers
        should("test getCampaignQuarantineOffers") {
            // uncomment below to test getCampaignQuarantineOffers
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val getQuarantineOffersRequest : GetQuarantineOffersRequest =  // GetQuarantineOffersRequest | 
            //val pageToken : kotlin.String = eyBuZXh0SWQ6IDIzNDIgfQ== // kotlin.String | Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. 
            //val limit : kotlin.Int = 20 // kotlin.Int | Количество значений на одной странице. 
            //val result : GetQuarantineOffersResponse = apiInstance.getCampaignQuarantineOffers(campaignId, getQuarantineOffersRequest, pageToken, limit)
            //result shouldBe ("TODO")
        }

        // to test getCampaignRegion
        should("test getCampaignRegion") {
            // uncomment below to test getCampaignRegion
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val result : GetCampaignRegionResponse = apiInstance.getCampaignRegion(campaignId)
            //result shouldBe ("TODO")
        }

        // to test getCampaignSettings
        should("test getCampaignSettings") {
            // uncomment below to test getCampaignSettings
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val result : GetCampaignSettingsResponse = apiInstance.getCampaignSettings(campaignId)
            //result shouldBe ("TODO")
        }

        // to test getCampaigns
        should("test getCampaigns") {
            // uncomment below to test getCampaigns
            //val page : kotlin.Int = 56 // kotlin.Int | Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. 
            //val pageSize : kotlin.Int = 56 // kotlin.Int | Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. 
            //val result : GetCampaignsResponse = apiInstance.getCampaigns(page, pageSize)
            //result shouldBe ("TODO")
        }

        // to test getCampaignsByLogin
        should("test getCampaignsByLogin") {
            // uncomment below to test getCampaignsByLogin
            //val login : kotlin.String = login_example // kotlin.String | Логин пользователя.
            //val page : kotlin.Int = 56 // kotlin.Int | Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. 
            //val pageSize : kotlin.Int = 56 // kotlin.Int | Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. 
            //val result : GetCampaignsResponse = apiInstance.getCampaignsByLogin(login, page, pageSize)
            //result shouldBe ("TODO")
        }

        // to test getCategoriesMaxSaleQuantum
        should("test getCategoriesMaxSaleQuantum") {
            // uncomment below to test getCategoriesMaxSaleQuantum
            //val getCategoriesMaxSaleQuantumRequest : GetCategoriesMaxSaleQuantumRequest =  // GetCategoriesMaxSaleQuantumRequest | 
            //val result : GetCategoriesMaxSaleQuantumResponse = apiInstance.getCategoriesMaxSaleQuantum(getCategoriesMaxSaleQuantumRequest)
            //result shouldBe ("TODO")
        }

        // to test getCategoriesTree
        should("test getCategoriesTree") {
            // uncomment below to test getCategoriesTree
            //val getCategoriesRequest : GetCategoriesRequest =  // GetCategoriesRequest | 
            //val result : GetCategoriesResponse = apiInstance.getCategoriesTree(getCategoriesRequest)
            //result shouldBe ("TODO")
        }

        // to test getCategoryContentParameters
        should("test getCategoryContentParameters") {
            // uncomment below to test getCategoryContentParameters
            //val categoryId : kotlin.Long = 789 // kotlin.Long | Идентификатор категории на Маркете.  Чтобы узнать идентификатор категории, к которой относится интересующий вас товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md). 
            //val result : GetCategoryContentParametersResponse = apiInstance.getCategoryContentParameters(categoryId)
            //result shouldBe ("TODO")
        }

        // to test getChatHistory
        should("test getChatHistory") {
            // uncomment below to test getChatHistory
            //val businessId : kotlin.Long = 789 // kotlin.Long | Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val chatId : kotlin.Long = 789 // kotlin.Long | Идентификатор чата.
            //val getChatHistoryRequest : GetChatHistoryRequest =  // GetChatHistoryRequest | description
            //val pageToken : kotlin.String = eyBuZXh0SWQ6IDIzNDIgfQ== // kotlin.String | Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. 
            //val limit : kotlin.Int = 20 // kotlin.Int | Количество значений на одной странице. 
            //val result : GetChatHistoryResponse = apiInstance.getChatHistory(businessId, chatId, getChatHistoryRequest, pageToken, limit)
            //result shouldBe ("TODO")
        }

        // to test getChats
        should("test getChats") {
            // uncomment below to test getChats
            //val businessId : kotlin.Long = 789 // kotlin.Long | Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val getChatsRequest : GetChatsRequest =  // GetChatsRequest | description
            //val pageToken : kotlin.String = eyBuZXh0SWQ6IDIzNDIgfQ== // kotlin.String | Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. 
            //val limit : kotlin.Int = 20 // kotlin.Int | Количество значений на одной странице. 
            //val result : GetChatsResponse = apiInstance.getChats(businessId, getChatsRequest, pageToken, limit)
            //result shouldBe ("TODO")
        }

        // to test getDeliveryServices
        should("test getDeliveryServices") {
            // uncomment below to test getDeliveryServices
            //val result : GetDeliveryServicesResponse = apiInstance.getDeliveryServices()
            //result shouldBe ("TODO")
        }

        // to test getFeed
        should("test getFeed") {
            // uncomment below to test getFeed
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val feedId : kotlin.Long = 789 // kotlin.Long | Идентификатор прайс-листа.
            //val result : GetFeedResponse = apiInstance.getFeed(campaignId, feedId)
            //result shouldBe ("TODO")
        }

        // to test getFeedIndexLogs
        should("test getFeedIndexLogs") {
            // uncomment below to test getFeedIndexLogs
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val feedId : kotlin.Long = 789 // kotlin.Long | Идентификатор прайс-листа.
            //val limit : kotlin.Int = 20 // kotlin.Int | Количество значений на одной странице. 
            //val publishedTimeFrom : java.time.OffsetDateTime = 2013-10-20T19:20:30+01:00 // java.time.OffsetDateTime | Начальная дата. Используется для фильтрации записей — по дате и времени публикации предложений на Яндекс Маркете.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.  Значение по умолчанию: последние восемь дней со времени отправки запроса. 
            //val publishedTimeTo : java.time.OffsetDateTime = 2013-10-20T19:20:30+01:00 // java.time.OffsetDateTime | Конечная дата. Используется для фильтрации записей — по дате и времени публикации предложений на Яндекс Маркете.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-31T00:42:42+03:00`.  Значение по умолчанию: дата и время отправки запроса.  {% note info %}  Если во время переключения между страницами выходных данных на Яндекс Маркете появятся новые результаты индексации прайс-листа, вы не получите часть данных. Чтобы этого не произошло, зафиксируйте выходные данные с помощью входного параметра `published_time_to`. Значение параметра не должно быть датой из будущего.  {% endnote %} 
            //val status : FeedIndexLogsStatusType =  // FeedIndexLogsStatusType | Статус индексации и проверки прайс-листа на соответствие техническим требованиям.  Возможные значения: * `ERROR` — произошли ошибки. * `OK` — обработан без ошибок. * `WARNING` — наблюдались некритичные проблемы. 
            //val result : GetFeedIndexLogsResponse = apiInstance.getFeedIndexLogs(campaignId, feedId, limit, publishedTimeFrom, publishedTimeTo, status)
            //result shouldBe ("TODO")
        }

        // to test getFeedbackAndCommentUpdates
        should("test getFeedbackAndCommentUpdates") {
            // uncomment below to test getFeedbackAndCommentUpdates
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val pageToken : kotlin.String = eyBuZXh0SWQ6IDIzNDIgfQ== // kotlin.String | Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. 
            //val limit : kotlin.Int = 20 // kotlin.Int | Количество значений на одной странице. 
            //val fromDate : java.time.LocalDate = 2013-10-20 // java.time.LocalDate | Начальная дата обновления отзывов.  Если параметр указан, возвращаются отзывы, которые были написаны или обновлены с этой даты.  Формат даты: `ГГГГ-ММ-ДД`. 
            //val result : GetFeedbackListResponse = apiInstance.getFeedbackAndCommentUpdates(campaignId, pageToken, limit, fromDate)
            //result shouldBe ("TODO")
        }

        // to test getFeeds
        should("test getFeeds") {
            // uncomment below to test getFeeds
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val result : GetFeedsResponse = apiInstance.getFeeds(campaignId)
            //result shouldBe ("TODO")
        }

        // to test getGoodsFeedbackComments
        should("test getGoodsFeedbackComments") {
            // uncomment below to test getGoodsFeedbackComments
            //val businessId : kotlin.Long = 789 // kotlin.Long | Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val getGoodsFeedbackCommentsRequest : GetGoodsFeedbackCommentsRequest =  // GetGoodsFeedbackCommentsRequest | 
            //val pageToken : kotlin.String = eyBuZXh0SWQ6IDIzNDIgfQ== // kotlin.String | Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. 
            //val limit : kotlin.Int = 20 // kotlin.Int | Количество значений на одной странице. 
            //val result : GetGoodsFeedbackCommentsResponse = apiInstance.getGoodsFeedbackComments(businessId, getGoodsFeedbackCommentsRequest, pageToken, limit)
            //result shouldBe ("TODO")
        }

        // to test getGoodsFeedbacks
        should("test getGoodsFeedbacks") {
            // uncomment below to test getGoodsFeedbacks
            //val businessId : kotlin.Long = 789 // kotlin.Long | Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val pageToken : kotlin.String = eyBuZXh0SWQ6IDIzNDIgfQ== // kotlin.String | Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. 
            //val limit : kotlin.Int = 20 // kotlin.Int | Количество значений на одной странице. 
            //val getGoodsFeedbackRequest : GetGoodsFeedbackRequest =  // GetGoodsFeedbackRequest | 
            //val result : GetGoodsFeedbackResponse = apiInstance.getGoodsFeedbacks(businessId, pageToken, limit, getGoodsFeedbackRequest)
            //result shouldBe ("TODO")
        }

        // to test getGoodsStats
        should("test getGoodsStats") {
            // uncomment below to test getGoodsStats
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val getGoodsStatsRequest : GetGoodsStatsRequest =  // GetGoodsStatsRequest | 
            //val result : GetGoodsStatsResponse = apiInstance.getGoodsStats(campaignId, getGoodsStatsRequest)
            //result shouldBe ("TODO")
        }

        // to test getHiddenOffers
        should("test getHiddenOffers") {
            // uncomment below to test getHiddenOffers
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val offerId : kotlin.collections.List<kotlin.String> =  // kotlin.collections.List<kotlin.String> | Идентификатор скрытого предложения. 
            //val pageToken : kotlin.String = eyBuZXh0SWQ6IDIzNDIgfQ== // kotlin.String | Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. 
            //val limit : kotlin.Int = 20 // kotlin.Int | Количество значений на одной странице. 
            //val offset : kotlin.Int = 56 // kotlin.Int | Позиция в списке, начиная с которой возвращаются результаты ответа.  Используется вместе с параметром `limit`.  Если задан `offset`, параметры `page_number` и `page_size` игнорируются.  `offset` игнорируется, если задан `page_token`. 
            //val page : kotlin.Int = 56 // kotlin.Int | Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. 
            //val pageSize : kotlin.Int = 56 // kotlin.Int | Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. 
            //val result : GetHiddenOffersResponse = apiInstance.getHiddenOffers(campaignId, offerId, pageToken, limit, offset, page, pageSize)
            //result shouldBe ("TODO")
        }

        // to test getOfferCardsContentStatus
        should("test getOfferCardsContentStatus") {
            // uncomment below to test getOfferCardsContentStatus
            //val businessId : kotlin.Long = 789 // kotlin.Long | Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val pageToken : kotlin.String = eyBuZXh0SWQ6IDIzNDIgfQ== // kotlin.String | Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. 
            //val limit : kotlin.Int = 20 // kotlin.Int | Количество значений на одной странице. 
            //val getOfferCardsContentStatusRequest : GetOfferCardsContentStatusRequest =  // GetOfferCardsContentStatusRequest | 
            //val result : GetOfferCardsContentStatusResponse = apiInstance.getOfferCardsContentStatus(businessId, pageToken, limit, getOfferCardsContentStatusRequest)
            //result shouldBe ("TODO")
        }

        // to test getOfferMappingEntries
        should("test getOfferMappingEntries") {
            // uncomment below to test getOfferMappingEntries
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val offerId : kotlin.collections.List<kotlin.String> =  // kotlin.collections.List<kotlin.String> | Идентификатор товара в каталоге.
            //val shopSku : kotlin.collections.List<kotlin.String> =  // kotlin.collections.List<kotlin.String> | Ваш SKU товара.  Параметр может быть указан несколько раз, например:  ``` ...shop_sku=123&shop_sku=129&shop_sku=141... ```  В запросе можно указать либо параметр `shopSku`, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке. 
            //val mappingKind : OfferMappingKindType =  // OfferMappingKindType | Тип маппинга.
            //val status : kotlin.collections.List<OfferProcessingStatusType> =  // kotlin.collections.List<OfferProcessingStatusType> | Фильтрация по статусу публикации товара:  * `READY` — товар прошел модерацию. * `IN_WORK` — товар проходит модерацию. * `NEED_CONTENT` — для товара без SKU на Маркете marketSku нужно найти карточку самостоятельно или создать ее. * `NEED_INFO` — товар не прошел модерацию из-за ошибок или недостающих сведений в описании товара. * `REJECTED` — товар не прошел модерацию, так как Маркет не планирует размещать подобные товары. * `SUSPENDED` — товар не прошел модерацию, так как Маркет пока не размещает подобные товары. * `OTHER` — товар не прошел модерацию по другой причине.  Можно указать несколько статусов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:  ``` ...status=READY,IN_WORK... ...status=READY&status=IN_WORK... ```  В запросе можно указать либо параметр shopSku, либо любые параметры для фильтрации товаров. Совместное использование параметра shopSku и параметров для фильтрации приведет к ошибке. 
            //val availability : kotlin.collections.List<OfferAvailabilityStatusType> =  // kotlin.collections.List<OfferAvailabilityStatusType> | Фильтрация по планам поставок товара:  * `ACTIVE` — поставки будут. * `INACTIVE` — поставок не будет: товар есть на складе, но вы больше не планируете его поставлять. * `DELISTED` — архив: товар закончился на складе, и его поставок больше не будет.  Можно указать несколько значений в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:  ``` ...availability=INACTIVE,DELISTED... ...availability=INACTIVE&availability=DELISTED... ```  В запросе можно указать либо параметр `shopSku`, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке. 
            //val categoryId : kotlin.collections.List<kotlin.Int> =  // kotlin.collections.List<kotlin.Int> | Фильтрация по идентификатору категории на Маркете.  Чтобы узнать идентификатор категории, к которой относится товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md).  Можно указать несколько идентификаторов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:  ``` ...category_id=14727164,14382343... ...category_id=14727164&category_id=14382343... ```  В запросе можно указать либо параметр `shopSku`, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке. 
            //val vendor : kotlin.collections.List<kotlin.String> =  // kotlin.collections.List<kotlin.String> | Фильтрация по бренду товара.  Можно указать несколько брендов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:  ``` ...vendor=Aqua%20Minerale,Borjomi... ...vendor=Aqua%20Minerale&vendor=Borjomi... ```  Чтобы товар попал в результаты фильтрации, его бренд должен точно совпадать с одним из указанных в запросе. Например, если указан бренд Schwarzkopf, то в результатах не будет товаров Schwarzkopf Professional.  Если в названии бренда есть символы, которые не входят в таблицу ASCII (в том числе кириллические символы), используйте для них URL-кодирование. Например, пробел — %20, апостроф «'» — %27 и т. д. Подробнее см. в разделе [Кодирование URL русскоязычной Википедии](https://ru.wikipedia.org/wiki/URL#Кодирование_URL).  В запросе можно указать либо параметр shopSku, либо любые параметры для фильтрации товаров. Совместное использование параметра shopSku и параметров для фильтрации приведет к ошибке. 
            //val pageToken : kotlin.String = eyBuZXh0SWQ6IDIzNDIgfQ== // kotlin.String | Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. 
            //val limit : kotlin.Int = 20 // kotlin.Int | Количество значений на одной странице. 
            //val result : GetOfferMappingEntriesResponse = apiInstance.getOfferMappingEntries(campaignId, offerId, shopSku, mappingKind, status, availability, categoryId, vendor, pageToken, limit)
            //result shouldBe ("TODO")
        }

        // to test getOfferMappings
        should("test getOfferMappings") {
            // uncomment below to test getOfferMappings
            //val businessId : kotlin.Long = 789 // kotlin.Long | Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val pageToken : kotlin.String = eyBuZXh0SWQ6IDIzNDIgfQ== // kotlin.String | Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. 
            //val limit : kotlin.Int = 20 // kotlin.Int | Количество значений на одной странице. 
            //val getOfferMappingsRequest : GetOfferMappingsRequest =  // GetOfferMappingsRequest | 
            //val result : GetOfferMappingsResponse = apiInstance.getOfferMappings(businessId, pageToken, limit, getOfferMappingsRequest)
            //result shouldBe ("TODO")
        }

        // to test getOfferRecommendations
        should("test getOfferRecommendations") {
            // uncomment below to test getOfferRecommendations
            //val businessId : kotlin.Long = 789 // kotlin.Long | Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val getOfferRecommendationsRequest : GetOfferRecommendationsRequest =  // GetOfferRecommendationsRequest | 
            //val pageToken : kotlin.String = eyBuZXh0SWQ6IDIzNDIgfQ== // kotlin.String | Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. 
            //val limit : kotlin.Int = 20 // kotlin.Int | Количество значений на одной странице. 
            //val result : GetOfferRecommendationsResponse = apiInstance.getOfferRecommendations(businessId, getOfferRecommendationsRequest, pageToken, limit)
            //result shouldBe ("TODO")
        }

        // to test getOffers
        should("test getOffers") {
            // uncomment below to test getOffers
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val query : kotlin.String = query_example // kotlin.String | Поисковый запрос.  Поддерживается язык запросов.  Значение по умолчанию: все предложения магазина, размещенные на Маркете. 
            //val feedId : kotlin.Long = 789 // kotlin.Long | Идентификатор прайс-листа.
            //val shopCategoryId : kotlin.String = shopCategoryId_example // kotlin.String | Идентификатор категории предложения, указанный магазином в прайс-листе.  Параметр выводится только для предложений, у которых указана категория в прайс-листе.  Параметр доступен начиная с версии 2.0 партнерского API. 
            //val currency : CurrencyType =  // CurrencyType | Валюта, в которой указана цена предложения.  Возможные значения:  * `BYN` — белорусский рубль.  * `KZT` — казахстанский тенге.  * `RUR` — российский рубль.  * `UAH` — украинская гривна. 
            //val matched : kotlin.Boolean = true // kotlin.Boolean | Фильтр по признаку соотнесения предложения и карточки модели.  Возможные значения:  * `0 / FALSE / NO` — поиск выполняется среди предложений, не соотнесенных ни с какой карточкой модели.  * `1 / TRUE / YES` — поиск выполняется среди предложений, соотнесенных с карточками моделей). 
            //val page : kotlin.Int = 56 // kotlin.Int | Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. 
            //val pageSize : kotlin.Int = 56 // kotlin.Int | Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. 
            //val result : GetOffersResponse = apiInstance.getOffers(campaignId, query, feedId, shopCategoryId, currency, matched, page, pageSize)
            //result shouldBe ("TODO")
        }

        // to test getOrder
        should("test getOrder") {
            // uncomment below to test getOrder
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val orderId : kotlin.Long = 789 // kotlin.Long | Идентификатор заказа.
            //val result : GetOrderResponse = apiInstance.getOrder(campaignId, orderId)
            //result shouldBe ("TODO")
        }

        // to test getOrderBusinessBuyerInfo
        should("test getOrderBusinessBuyerInfo") {
            // uncomment below to test getOrderBusinessBuyerInfo
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val orderId : kotlin.Long = 789 // kotlin.Long | Идентификатор заказа.
            //val result : GetBusinessBuyerInfoResponse = apiInstance.getOrderBusinessBuyerInfo(campaignId, orderId)
            //result shouldBe ("TODO")
        }

        // to test getOrderBusinessDocumentsInfo
        should("test getOrderBusinessDocumentsInfo") {
            // uncomment below to test getOrderBusinessDocumentsInfo
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val orderId : kotlin.Long = 789 // kotlin.Long | Идентификатор заказа.
            //val result : GetBusinessDocumentsInfoResponse = apiInstance.getOrderBusinessDocumentsInfo(campaignId, orderId)
            //result shouldBe ("TODO")
        }

        // to test getOrderLabelsData
        should("test getOrderLabelsData") {
            // uncomment below to test getOrderLabelsData
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val orderId : kotlin.Long = 789 // kotlin.Long | Идентификатор заказа.
            //val result : GetOrderLabelsDataResponse = apiInstance.getOrderLabelsData(campaignId, orderId)
            //result shouldBe ("TODO")
        }

        // to test getOrders
        should("test getOrders") {
            // uncomment below to test getOrders
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val orderIds : kotlin.collections.List<kotlin.Long> =  // kotlin.collections.List<kotlin.Long> | Фильтрация заказов по идентификаторам. <br><br> ⚠️ Не используйте это поле одновременно с другими фильтрами. Если вы хотите воспользоваться ими, оставьте поле пустым. 
            //val status : kotlin.collections.Set<OrderStatusType> =  // kotlin.collections.Set<OrderStatusType> | Статус заказа:  * `CANCELLED` — заказ отменен.  * `DELIVERED` — заказ получен покупателем.  * `DELIVERY` — заказ передан в службу доставки.  * `PICKUP` — заказ доставлен в пункт самовывоза.  * `PROCESSING` — заказ находится в обработке.  * `UNPAID` — заказ оформлен, но еще не оплачен (если выбрана оплата при оформлении).  Также могут возвращаться другие значения. Обрабатывать их не требуется. 
            //val substatus : kotlin.collections.Set<OrderSubstatusType> =  // kotlin.collections.Set<OrderSubstatusType> | Этап обработки заказа (если он имеет статус `PROCESSING`) или причина отмены заказа (если он имеет статус `CANCELLED`).  Возможные значения для заказа в статусе `PROCESSING`:  * `STARTED` — заказ подтвержден, его можно начать обрабатывать. * `READY_TO_SHIP` — заказ собран и готов к отправке. * `SHIPPED` — заказ передан службе доставки.  Возможные значения для заказа в статусе `CANCELLED`:  * `DELIVERY_SERVICE_UNDELIVERED` — служба доставки не смогла доставить заказ.  * `PROCESSING_EXPIRED` — значение более не используется.  * `REPLACING_ORDER` — покупатель решил заменить товар другим по собственной инициативе.  * `RESERVATION_EXPIRED` — покупатель не завершил оформление зарезервированного заказа в течение 10 минут.  * `RESERVATION_FAILED` — Маркет не может продолжить дальнейшую обработку заказа.  * `SHOP_FAILED` — магазин не может выполнить заказ.  * `USER_CHANGED_MIND` — покупатель отменил заказ по личным причинам.  * `USER_NOT_PAID` — покупатель не оплатил заказ (для типа оплаты `PREPAID`) в течение 30 минут.  * `USER_REFUSED_DELIVERY` — покупателя не устроили условия доставки.  * `USER_REFUSED_PRODUCT` — покупателю не подошел товар.  * `USER_REFUSED_QUALITY` — покупателя не устроило качество товара.  * `USER_UNREACHABLE` — не удалось связаться с покупателем. Для отмены с этой причиной необходимо выполнить условия:    * не менее 3 звонков с 8 до 21 в часовом поясе покупателя;   * перерыв между первым и третьим звонком не менее 90 минут;   * соединение не короче 5 секунд.    Если хотя бы одно из этих условий не выполнено (кроме случая, когда номер недоступен), отменить заказ не получится. Вернется ответ с кодом ошибки 400. * `USER_WANTS_TO_CHANGE_DELIVERY_DATE` — покупатель хочет получить заказ в другой день. * `CANCELLED_COURIER_NOT_FOUND` — не удалось найти курьера.  Также могут возвращаться другие значения. Обрабатывать их не требуется. 
            //val fromDate : java.time.LocalDate = 2013-10-20 // java.time.LocalDate | Начальная дата для фильтрации заказов по дате оформления.  Формат даты: `ДД-ММ-ГГГГ`.  Между начальной и конечной датой (параметр `toDate`) должно быть не больше 30 дней.  Значение по умолчанию: 30 дней назад от текущей даты. 
            //val toDate : java.time.LocalDate = 2013-10-20 // java.time.LocalDate | Конечная дата для фильтрации заказов по дате оформления.  Показываются заказы, созданные до 00:00 указанного дня.  Формат даты: `ДД-ММ-ГГГГ`.  Между начальной (параметр `fromDate`) и конечной датой должно быть не больше 30 дней.  Значение по умолчанию: текущая дата. 
            //val supplierShipmentDateFrom : java.time.LocalDate = 2013-10-20 // java.time.LocalDate | Начальная дата для фильтрации заказов по дате отгрузки в службу доставки (параметр `shipmentDate`).  Формат даты: `ДД-ММ-ГГГГ`.  Между начальной и конечной датой (параметр `supplierShipmentDateTo`) должно быть не больше 30 дней.  Начальная дата включается в интервал для фильтрации. 
            //val supplierShipmentDateTo : java.time.LocalDate = 2013-10-20 // java.time.LocalDate | Конечная дата для фильтрации заказов по дате отгрузки в службу доставки (параметр `shipmentDate`).  Формат даты: `ДД-ММ-ГГГГ`.  Между начальной (параметр `supplierShipmentDateFrom`) и конечной датой должно быть не больше 30 дней.  Конечная дата не включается в интервал для фильтрации. 
            //val updatedAtFrom : java.time.OffsetDateTime = 2013-10-20T19:20:30+01:00 // java.time.OffsetDateTime | Начальная дата для фильтрации заказов по дате и времени обновления (параметр `updatedAt`).  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.  Между начальной и конечной датой (параметр `updatedAtTo`) должно быть не больше 30 дней.  Начальная дата включается в интервал для фильтрации. 
            //val updatedAtTo : java.time.OffsetDateTime = 2013-10-20T19:20:30+01:00 // java.time.OffsetDateTime | Конечная дата для фильтрации заказов по дате и времени обновления (параметр `updatedAt`).  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.  Между начальной (параметр `updatedAtFrom`) и конечной датой должно быть не больше 30 дней.  Конечная дата не включается в интервал для фильтрации. 
            //val dispatchType : OrderDeliveryDispatchType =  // OrderDeliveryDispatchType | Способ отгрузки
            //val fake : kotlin.Boolean = true // kotlin.Boolean | Фильтрация заказов по типам:  * `false` — настоящий заказ покупателя.  * `true` — [тестовый](../../pushapi/concepts/sandbox.md) заказ Маркета. 
            //val hasCis : kotlin.Boolean = true // kotlin.Boolean | Нужно ли вернуть только те заказы, в составе которых есть хотя бы один товар с кодом идентификации [в системе «Честный ЗНАК»](https://честныйзнак.рф/):  * `true` — да.  * `false` — нет.  Такие коды присваиваются товарам, которые подлежат маркировке и относятся к определенным категориям. 
            //val onlyWaitingForCancellationApprove : kotlin.Boolean = true // kotlin.Boolean | **Только для модели DBS**  Фильтрация заказов по наличию запросов покупателей на отмену.  При значение `true` возвращаются только заказы, которые находятся в статусе `DELIVERY` или `PICKUP` и которые пользователи решили отменить.  Чтобы подтвердить или отклонить отмену, отправьте запрос [PUT campaigns/{campaignId}/orders/{orderId}/cancellation/accept](../../reference/orders/acceptOrderCancellation). 
            //val onlyEstimatedDelivery : kotlin.Boolean = true // kotlin.Boolean | Фильтрация заказов с долгой доставкой (31-60 дней) по подтвержденной дате доставки:  * `true` — возвращаются только заказы с неподтвержденной датой доставки. * `false` — фильтрация не применяется. 
            //val buyerType : OrderBuyerType =  // OrderBuyerType | Фильтрация заказов по типу покупателя. 
            //val page : kotlin.Int = 56 // kotlin.Int | Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. 
            //val pageSize : kotlin.Int = 56 // kotlin.Int | Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. 
            //val pageToken : kotlin.String = eyBuZXh0SWQ6IDIzNDIgfQ== // kotlin.String | Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. 
            //val limit : kotlin.Int = 20 // kotlin.Int | Количество значений на одной странице. 
            //val result : GetOrdersResponse = apiInstance.getOrders(campaignId, orderIds, status, substatus, fromDate, toDate, supplierShipmentDateFrom, supplierShipmentDateTo, updatedAtFrom, updatedAtTo, dispatchType, fake, hasCis, onlyWaitingForCancellationApprove, onlyEstimatedDelivery, buyerType, page, pageSize, pageToken, limit)
            //result shouldBe ("TODO")
        }

        // to test getOrdersStats
        should("test getOrdersStats") {
            // uncomment below to test getOrdersStats
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val pageToken : kotlin.String = eyBuZXh0SWQ6IDIzNDIgfQ== // kotlin.String | Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. 
            //val limit : kotlin.Int = 20 // kotlin.Int | Количество значений на одной странице. 
            //val getOrdersStatsRequest : GetOrdersStatsRequest =  // GetOrdersStatsRequest | 
            //val result : GetOrdersStatsResponse = apiInstance.getOrdersStats(campaignId, pageToken, limit, getOrdersStatsRequest)
            //result shouldBe ("TODO")
        }

        // to test getPrices
        should("test getPrices") {
            // uncomment below to test getPrices
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val pageToken : kotlin.String = eyBuZXh0SWQ6IDIzNDIgfQ== // kotlin.String | Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. 
            //val limit : kotlin.Int = 20 // kotlin.Int | Количество значений на одной странице. 
            //val archived : kotlin.Boolean = true // kotlin.Boolean | Фильтр по нахождению в архиве.
            //val result : GetPricesResponse = apiInstance.getPrices(campaignId, pageToken, limit, archived)
            //result shouldBe ("TODO")
        }

        // to test getPricesByOfferIds
        should("test getPricesByOfferIds") {
            // uncomment below to test getPricesByOfferIds
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val pageToken : kotlin.String = eyBuZXh0SWQ6IDIzNDIgfQ== // kotlin.String | Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. 
            //val limit : kotlin.Int = 20 // kotlin.Int | Количество значений на одной странице. 
            //val getPricesByOfferIdsRequest : GetPricesByOfferIdsRequest =  // GetPricesByOfferIdsRequest | 
            //val result : GetPricesByOfferIdsResponse = apiInstance.getPricesByOfferIds(campaignId, pageToken, limit, getPricesByOfferIdsRequest)
            //result shouldBe ("TODO")
        }

        // to test getPromoOffers
        should("test getPromoOffers") {
            // uncomment below to test getPromoOffers
            //val businessId : kotlin.Long = 789 // kotlin.Long | Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val getPromoOffersRequest : GetPromoOffersRequest =  // GetPromoOffersRequest | 
            //val pageToken : kotlin.String = eyBuZXh0SWQ6IDIzNDIgfQ== // kotlin.String | Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. 
            //val limit : kotlin.Int = 20 // kotlin.Int | Количество значений на одной странице. 
            //val result : GetPromoOffersResponse = apiInstance.getPromoOffers(businessId, getPromoOffersRequest, pageToken, limit)
            //result shouldBe ("TODO")
        }

        // to test getPromos
        should("test getPromos") {
            // uncomment below to test getPromos
            //val businessId : kotlin.Long = 789 // kotlin.Long | Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val getPromosRequest : GetPromosRequest =  // GetPromosRequest | 
            //val result : GetPromosResponse = apiInstance.getPromos(businessId, getPromosRequest)
            //result shouldBe ("TODO")
        }

        // to test getQualityRatingDetails
        should("test getQualityRatingDetails") {
            // uncomment below to test getQualityRatingDetails
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val result : GetQualityRatingDetailsResponse = apiInstance.getQualityRatingDetails(campaignId)
            //result shouldBe ("TODO")
        }

        // to test getQualityRatings
        should("test getQualityRatings") {
            // uncomment below to test getQualityRatings
            //val businessId : kotlin.Long = 789 // kotlin.Long | Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val getQualityRatingRequest : GetQualityRatingRequest =  // GetQualityRatingRequest | 
            //val result : GetQualityRatingResponse = apiInstance.getQualityRatings(businessId, getQualityRatingRequest)
            //result shouldBe ("TODO")
        }

        // to test getReportInfo
        should("test getReportInfo") {
            // uncomment below to test getReportInfo
            //val reportId : kotlin.String = reportId_example // kotlin.String | Идентификатор отчета, который вы получили после запуска генерации. 
            //val result : GetReportInfoResponse = apiInstance.getReportInfo(reportId)
            //result shouldBe ("TODO")
        }

        // to test getReturn
        should("test getReturn") {
            // uncomment below to test getReturn
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val orderId : kotlin.Long = 789 // kotlin.Long | Идентификатор заказа.
            //val returnId : kotlin.Long = 789 // kotlin.Long | Идентификатор возврата.
            //val result : GetReturnResponse = apiInstance.getReturn(campaignId, orderId, returnId)
            //result shouldBe ("TODO")
        }

        // to test getReturnApplication
        should("test getReturnApplication") {
            // uncomment below to test getReturnApplication
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val orderId : kotlin.Long = 789 // kotlin.Long | Идентификатор заказа.
            //val returnId : kotlin.Long = 789 // kotlin.Long | Идентификатор возврата.
            //val result : java.io.File = apiInstance.getReturnApplication(campaignId, orderId, returnId)
            //result shouldBe ("TODO")
        }

        // to test getReturnPhoto
        should("test getReturnPhoto") {
            // uncomment below to test getReturnPhoto
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val orderId : kotlin.Long = 789 // kotlin.Long | Идентификатор заказа.
            //val returnId : kotlin.Long = 789 // kotlin.Long | Идентификатор возврата.
            //val itemId : kotlin.Long = 789 // kotlin.Long | Идентификатор товара в возврате.
            //val imageHash : kotlin.String = imageHash_example // kotlin.String | Хеш ссылки изображения для загрузки.
            //val result : java.io.File = apiInstance.getReturnPhoto(campaignId, orderId, returnId, itemId, imageHash)
            //result shouldBe ("TODO")
        }

        // to test getReturns
        should("test getReturns") {
            // uncomment below to test getReturns
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val pageToken : kotlin.String = eyBuZXh0SWQ6IDIzNDIgfQ== // kotlin.String | Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. 
            //val limit : kotlin.Int = 20 // kotlin.Int | Количество значений на одной странице. 
            //val orderIds : kotlin.collections.List<kotlin.Long> =  // kotlin.collections.List<kotlin.Long> | Идентификаторы заказов — для фильтрации результатов.  Несколько идентификаторов перечисляются через запятую без пробела. Максимальное количество идентификаторов — 50. 
            //val statuses : kotlin.collections.List<RefundStatusType> = STARTED_BY_USER,WAITING_FOR_DECISION // kotlin.collections.List<RefundStatusType> | Статусы возвратов или невыкупов — для фильтрации результатов.  Несколько статусов перечисляются через запятую. 
            //val type : ReturnType =  // ReturnType | Тип заказа для фильтрации:  * `RETURN` — возврат.  * `UNREDEEMED` — невыкуп.  Если не указывать, в ответе будут и возвраты, и невыкупы. 
            //val fromDate : java.time.LocalDate = 2022-10-31 // java.time.LocalDate | Начальная дата для фильтрации возвратов или невыкупов по дате обновления.  Формат: `ГГГГ-ММ-ДД`. 
            //val toDate : java.time.LocalDate = 2022-11-30 // java.time.LocalDate | Конечная дата для фильтрации возвратов или невыкупов по дате обновления.  Формат: `ГГГГ-ММ-ДД`. 
            //val fromDate2 : java.time.LocalDate = 2022-10-31 // java.time.LocalDate | {% note warning \"\" %}  Этот параметр устарел. Вместо него используйте `fromDate`.  {% endnote %}  Начальная дата для фильтрации возвратов или невыкупов по дате обновления. 
            //val toDate2 : java.time.LocalDate = 2022-11-30 // java.time.LocalDate | {% note warning \"\" %}  Этот параметр устарел. Вместо него используйте `toDate`.  {% endnote %}  Конечная дата для фильтрации возвратов или невыкупов по дате обновления. 
            //val result : GetReturnsResponse = apiInstance.getReturns(campaignId, pageToken, limit, orderIds, statuses, type, fromDate, toDate, fromDate2, toDate2)
            //result shouldBe ("TODO")
        }

        // to test getStocks
        should("test getStocks") {
            // uncomment below to test getStocks
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val pageToken : kotlin.String = eyBuZXh0SWQ6IDIzNDIgfQ== // kotlin.String | Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. 
            //val limit : kotlin.Int = 20 // kotlin.Int | Количество значений на одной странице. 
            //val getWarehouseStocksRequest : GetWarehouseStocksRequest =  // GetWarehouseStocksRequest | 
            //val result : GetWarehouseStocksResponse = apiInstance.getStocks(campaignId, pageToken, limit, getWarehouseStocksRequest)
            //result shouldBe ("TODO")
        }

        // to test getSuggestedOfferMappingEntries
        should("test getSuggestedOfferMappingEntries") {
            // uncomment below to test getSuggestedOfferMappingEntries
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val getSuggestedOfferMappingEntriesRequest : GetSuggestedOfferMappingEntriesRequest =  // GetSuggestedOfferMappingEntriesRequest | 
            //val result : GetSuggestedOfferMappingEntriesResponse = apiInstance.getSuggestedOfferMappingEntries(campaignId, getSuggestedOfferMappingEntriesRequest)
            //result shouldBe ("TODO")
        }

        // to test getSuggestedOfferMappings
        should("test getSuggestedOfferMappings") {
            // uncomment below to test getSuggestedOfferMappings
            //val businessId : kotlin.Long = 789 // kotlin.Long | Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val getSuggestedOfferMappingsRequest : GetSuggestedOfferMappingsRequest =  // GetSuggestedOfferMappingsRequest | 
            //val result : GetSuggestedOfferMappingsResponse = apiInstance.getSuggestedOfferMappings(businessId, getSuggestedOfferMappingsRequest)
            //result shouldBe ("TODO")
        }

        // to test getSuggestedPrices
        should("test getSuggestedPrices") {
            // uncomment below to test getSuggestedPrices
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val suggestPricesRequest : SuggestPricesRequest =  // SuggestPricesRequest | 
            //val result : SuggestPricesResponse = apiInstance.getSuggestedPrices(campaignId, suggestPricesRequest)
            //result shouldBe ("TODO")
        }

        // to test getWarehouses
        should("test getWarehouses") {
            // uncomment below to test getWarehouses
            //val businessId : kotlin.Long = 789 // kotlin.Long | Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val result : GetWarehousesResponse = apiInstance.getWarehouses(businessId)
            //result shouldBe ("TODO")
        }

        // to test provideOrderItemIdentifiers
        should("test provideOrderItemIdentifiers") {
            // uncomment below to test provideOrderItemIdentifiers
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val orderId : kotlin.Long = 789 // kotlin.Long | Идентификатор заказа.
            //val provideOrderItemIdentifiersRequest : ProvideOrderItemIdentifiersRequest =  // ProvideOrderItemIdentifiersRequest | 
            //val result : ProvideOrderItemIdentifiersResponse = apiInstance.provideOrderItemIdentifiers(campaignId, orderId, provideOrderItemIdentifiersRequest)
            //result shouldBe ("TODO")
        }

        // to test putBidsForBusiness
        should("test putBidsForBusiness") {
            // uncomment below to test putBidsForBusiness
            //val businessId : kotlin.Long = 789 // kotlin.Long | Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val putSkuBidsRequest : PutSkuBidsRequest =  // PutSkuBidsRequest | description
            //val result : EmptyApiResponse = apiInstance.putBidsForBusiness(businessId, putSkuBidsRequest)
            //result shouldBe ("TODO")
        }

        // to test putBidsForCampaign
        should("test putBidsForCampaign") {
            // uncomment below to test putBidsForCampaign
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val putSkuBidsRequest : PutSkuBidsRequest =  // PutSkuBidsRequest | description
            //val result : EmptyApiResponse = apiInstance.putBidsForCampaign(campaignId, putSkuBidsRequest)
            //result shouldBe ("TODO")
        }

        // to test refreshFeed
        should("test refreshFeed") {
            // uncomment below to test refreshFeed
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val feedId : kotlin.Long = 789 // kotlin.Long | Идентификатор прайс-листа.
            //val result : EmptyApiResponse = apiInstance.refreshFeed(campaignId, feedId)
            //result shouldBe ("TODO")
        }

        // to test searchRegionChildren
        should("test searchRegionChildren") {
            // uncomment below to test searchRegionChildren
            //val regionId : kotlin.Long = 789 // kotlin.Long | Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). 
            //val page : kotlin.Int = 56 // kotlin.Int | Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. 
            //val pageSize : kotlin.Int = 56 // kotlin.Int | Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. 
            //val result : GetRegionWithChildrenResponse = apiInstance.searchRegionChildren(regionId, page, pageSize)
            //result shouldBe ("TODO")
        }

        // to test searchRegionsById
        should("test searchRegionsById") {
            // uncomment below to test searchRegionsById
            //val regionId : kotlin.Long = 789 // kotlin.Long | Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). 
            //val result : GetRegionsResponse = apiInstance.searchRegionsById(regionId)
            //result shouldBe ("TODO")
        }

        // to test searchRegionsByName
        should("test searchRegionsByName") {
            // uncomment below to test searchRegionsByName
            //val name : kotlin.String = name_example // kotlin.String | Название региона.  Важно учитывать регистр: первая буква должна быть заглавной, остальные — строчными. Например, `Москва`. 
            //val pageToken : kotlin.String = eyBuZXh0SWQ6IDIzNDIgfQ== // kotlin.String | Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. 
            //val limit : kotlin.Int = 20 // kotlin.Int | Количество значений на одной странице. 
            //val result : GetRegionsResponse = apiInstance.searchRegionsByName(name, pageToken, limit)
            //result shouldBe ("TODO")
        }

        // to test sendFileToChat
        should("test sendFileToChat") {
            // uncomment below to test sendFileToChat
            //val businessId : kotlin.Long = 789 // kotlin.Long | Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val chatId : kotlin.Long = 789 // kotlin.Long | Идентификатор чата.
            //val file : java.io.File = BINARY_DATA_HERE // java.io.File | Содержимое файла. Максимальный размер файла — 5 Мбайт.
            //val result : EmptyApiResponse = apiInstance.sendFileToChat(businessId, chatId, file)
            //result shouldBe ("TODO")
        }

        // to test sendMessageToChat
        should("test sendMessageToChat") {
            // uncomment below to test sendMessageToChat
            //val businessId : kotlin.Long = 789 // kotlin.Long | Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val chatId : kotlin.Long = 789 // kotlin.Long | Идентификатор чата.
            //val sendMessageToChatRequest : SendMessageToChatRequest =  // SendMessageToChatRequest | description
            //val result : EmptyApiResponse = apiInstance.sendMessageToChat(businessId, chatId, sendMessageToChatRequest)
            //result shouldBe ("TODO")
        }

        // to test setFeedParams
        should("test setFeedParams") {
            // uncomment below to test setFeedParams
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val feedId : kotlin.Long = 789 // kotlin.Long | Идентификатор прайс-листа.
            //val setFeedParamsRequest : SetFeedParamsRequest =  // SetFeedParamsRequest | 
            //val result : EmptyApiResponse = apiInstance.setFeedParams(campaignId, feedId, setFeedParamsRequest)
            //result shouldBe ("TODO")
        }

        // to test setOrderBoxLayout
        should("test setOrderBoxLayout") {
            // uncomment below to test setOrderBoxLayout
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val orderId : kotlin.Long = 789 // kotlin.Long | Идентификатор заказа.
            //val setOrderBoxLayoutRequest : SetOrderBoxLayoutRequest =  // SetOrderBoxLayoutRequest | 
            //val result : SetOrderBoxLayoutResponse = apiInstance.setOrderBoxLayout(campaignId, orderId, setOrderBoxLayoutRequest)
            //result shouldBe ("TODO")
        }

        // to test setOrderShipmentBoxes
        should("test setOrderShipmentBoxes") {
            // uncomment below to test setOrderShipmentBoxes
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val orderId : kotlin.Long = 789 // kotlin.Long | Идентификатор заказа.
            //val shipmentId : kotlin.Long = 789 // kotlin.Long | Параметр больше не используется. Вставьте любое число — просто чтобы получился корректный URL. 
            //val setOrderShipmentBoxesRequest : SetOrderShipmentBoxesRequest =  // SetOrderShipmentBoxesRequest | 
            //val result : SetOrderShipmentBoxesResponse = apiInstance.setOrderShipmentBoxes(campaignId, orderId, shipmentId, setOrderShipmentBoxesRequest)
            //result shouldBe ("TODO")
        }

        // to test skipGoodsFeedbacksReaction
        should("test skipGoodsFeedbacksReaction") {
            // uncomment below to test skipGoodsFeedbacksReaction
            //val businessId : kotlin.Long = 789 // kotlin.Long | Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val skipGoodsFeedbackReactionRequest : SkipGoodsFeedbackReactionRequest =  // SkipGoodsFeedbackReactionRequest | 
            //val result : EmptyApiResponse = apiInstance.skipGoodsFeedbacksReaction(businessId, skipGoodsFeedbackReactionRequest)
            //result shouldBe ("TODO")
        }

        // to test updateBusinessPrices
        should("test updateBusinessPrices") {
            // uncomment below to test updateBusinessPrices
            //val businessId : kotlin.Long = 789 // kotlin.Long | Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val updateBusinessPricesRequest : UpdateBusinessPricesRequest =  // UpdateBusinessPricesRequest | 
            //val result : EmptyApiResponse = apiInstance.updateBusinessPrices(businessId, updateBusinessPricesRequest)
            //result shouldBe ("TODO")
        }

        // to test updateCampaignOffers
        should("test updateCampaignOffers") {
            // uncomment below to test updateCampaignOffers
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val updateCampaignOffersRequest : UpdateCampaignOffersRequest =  // UpdateCampaignOffersRequest | 
            //val result : EmptyApiResponse = apiInstance.updateCampaignOffers(campaignId, updateCampaignOffersRequest)
            //result shouldBe ("TODO")
        }

        // to test updateGoodsFeedbackComment
        should("test updateGoodsFeedbackComment") {
            // uncomment below to test updateGoodsFeedbackComment
            //val businessId : kotlin.Long = 789 // kotlin.Long | Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val updateGoodsFeedbackCommentRequest : UpdateGoodsFeedbackCommentRequest =  // UpdateGoodsFeedbackCommentRequest | 
            //val result : UpdateGoodsFeedbackCommentResponse = apiInstance.updateGoodsFeedbackComment(businessId, updateGoodsFeedbackCommentRequest)
            //result shouldBe ("TODO")
        }

        // to test updateOfferContent
        should("test updateOfferContent") {
            // uncomment below to test updateOfferContent
            //val businessId : kotlin.Long = 789 // kotlin.Long | Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val updateOfferContentRequest : UpdateOfferContentRequest =  // UpdateOfferContentRequest | 
            //val result : UpdateOfferContentResponse = apiInstance.updateOfferContent(businessId, updateOfferContentRequest)
            //result shouldBe ("TODO")
        }

        // to test updateOfferMappingEntries
        should("test updateOfferMappingEntries") {
            // uncomment below to test updateOfferMappingEntries
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val updateOfferMappingEntryRequest : UpdateOfferMappingEntryRequest =  // UpdateOfferMappingEntryRequest | 
            //val result : EmptyApiResponse = apiInstance.updateOfferMappingEntries(campaignId, updateOfferMappingEntryRequest)
            //result shouldBe ("TODO")
        }

        // to test updateOfferMappings
        should("test updateOfferMappings") {
            // uncomment below to test updateOfferMappings
            //val businessId : kotlin.Long = 789 // kotlin.Long | Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val updateOfferMappingsRequest : UpdateOfferMappingsRequest =  // UpdateOfferMappingsRequest | 
            //val result : UpdateOfferMappingsResponse = apiInstance.updateOfferMappings(businessId, updateOfferMappingsRequest)
            //result shouldBe ("TODO")
        }

        // to test updateOrderItems
        should("test updateOrderItems") {
            // uncomment below to test updateOrderItems
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val orderId : kotlin.Long = 789 // kotlin.Long | Идентификатор заказа.
            //val updateOrderItemRequest : UpdateOrderItemRequest =  // UpdateOrderItemRequest | 
            //apiInstance.updateOrderItems(campaignId, orderId, updateOrderItemRequest)
        }

        // to test updateOrderStatus
        should("test updateOrderStatus") {
            // uncomment below to test updateOrderStatus
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val orderId : kotlin.Long = 789 // kotlin.Long | Идентификатор заказа.
            //val updateOrderStatusRequest : UpdateOrderStatusRequest =  // UpdateOrderStatusRequest | 
            //val result : UpdateOrderStatusResponse = apiInstance.updateOrderStatus(campaignId, orderId, updateOrderStatusRequest)
            //result shouldBe ("TODO")
        }

        // to test updateOrderStatuses
        should("test updateOrderStatuses") {
            // uncomment below to test updateOrderStatuses
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val updateOrderStatusesRequest : UpdateOrderStatusesRequest =  // UpdateOrderStatusesRequest | 
            //val result : UpdateOrderStatusesResponse = apiInstance.updateOrderStatuses(campaignId, updateOrderStatusesRequest)
            //result shouldBe ("TODO")
        }

        // to test updatePrices
        should("test updatePrices") {
            // uncomment below to test updatePrices
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val updatePricesRequest : UpdatePricesRequest =  // UpdatePricesRequest | 
            //val result : EmptyApiResponse = apiInstance.updatePrices(campaignId, updatePricesRequest)
            //result shouldBe ("TODO")
        }

        // to test updatePromoOffers
        should("test updatePromoOffers") {
            // uncomment below to test updatePromoOffers
            //val businessId : kotlin.Long = 789 // kotlin.Long | Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val updatePromoOffersRequest : UpdatePromoOffersRequest =  // UpdatePromoOffersRequest | 
            //val result : UpdatePromoOffersResponse = apiInstance.updatePromoOffers(businessId, updatePromoOffersRequest)
            //result shouldBe ("TODO")
        }

        // to test updateStocks
        should("test updateStocks") {
            // uncomment below to test updateStocks
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val updateStocksRequest : UpdateStocksRequest =  // UpdateStocksRequest | 
            //val result : EmptyApiResponse = apiInstance.updateStocks(campaignId, updateStocksRequest)
            //result shouldBe ("TODO")
        }

        // to test verifyOrderEac
        should("test verifyOrderEac") {
            // uncomment below to test verifyOrderEac
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val orderId : kotlin.Long = 789 // kotlin.Long | Идентификатор заказа.
            //val verifyOrderEacRequest : VerifyOrderEacRequest =  // VerifyOrderEacRequest | 
            //val result : VerifyOrderEacResponse = apiInstance.verifyOrderEac(campaignId, orderId, verifyOrderEacRequest)
            //result shouldBe ("TODO")
        }

    }
}
