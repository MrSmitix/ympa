/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ympa_kotlin_client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import ympa_kotlin_client.apis.ReturnsApi
import ympa_kotlin_client.models.ApiClientDataErrorResponse
import ympa_kotlin_client.models.ApiForbiddenErrorResponse
import ympa_kotlin_client.models.ApiLimitErrorResponse
import ympa_kotlin_client.models.ApiNotFoundErrorResponse
import ympa_kotlin_client.models.ApiServerErrorResponse
import ympa_kotlin_client.models.ApiUnauthorizedErrorResponse
import ympa_kotlin_client.models.EmptyApiResponse
import ympa_kotlin_client.models.GetReturnResponse
import ympa_kotlin_client.models.GetReturnsResponse
import ympa_kotlin_client.models.RefundStatusType
import ympa_kotlin_client.models.ReturnType
import ympa_kotlin_client.models.SetReturnDecisionRequest

class ReturnsApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ReturnsApi
        //val apiInstance = ReturnsApi()

        // to test getReturn
        should("test getReturn") {
            // uncomment below to test getReturn
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val orderId : kotlin.Long = 789 // kotlin.Long | Идентификатор заказа.
            //val returnId : kotlin.Long = 789 // kotlin.Long | Идентификатор возврата.
            //val result : GetReturnResponse = apiInstance.getReturn(campaignId, orderId, returnId)
            //result shouldBe ("TODO")
        }

        // to test getReturnApplication
        should("test getReturnApplication") {
            // uncomment below to test getReturnApplication
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val orderId : kotlin.Long = 789 // kotlin.Long | Идентификатор заказа.
            //val returnId : kotlin.Long = 789 // kotlin.Long | Идентификатор возврата.
            //val result : java.io.File = apiInstance.getReturnApplication(campaignId, orderId, returnId)
            //result shouldBe ("TODO")
        }

        // to test getReturnPhoto
        should("test getReturnPhoto") {
            // uncomment below to test getReturnPhoto
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val orderId : kotlin.Long = 789 // kotlin.Long | Идентификатор заказа.
            //val returnId : kotlin.Long = 789 // kotlin.Long | Идентификатор возврата.
            //val itemId : kotlin.Long = 789 // kotlin.Long | Идентификатор товара в возврате.
            //val imageHash : kotlin.String = imageHash_example // kotlin.String | Хеш ссылки изображения для загрузки.
            //val result : java.io.File = apiInstance.getReturnPhoto(campaignId, orderId, returnId, itemId, imageHash)
            //result shouldBe ("TODO")
        }

        // to test getReturns
        should("test getReturns") {
            // uncomment below to test getReturns
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val pageToken : kotlin.String = eyBuZXh0SWQ6IDIzNDIgfQ== // kotlin.String | Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.  Если задан `page_token` и в запросе есть параметры `offset`, `page_number` и `page_size`, они игнорируются. 
            //val limit : kotlin.Int = 20 // kotlin.Int | Количество значений на одной странице. 
            //val orderIds : kotlin.collections.List<kotlin.Long> =  // kotlin.collections.List<kotlin.Long> | Идентификаторы заказов — для фильтрации результатов.  Несколько идентификаторов перечисляются через запятую без пробела. Максимальное количество идентификаторов — 50. 
            //val statuses : kotlin.collections.List<RefundStatusType> = STARTED_BY_USER,WAITING_FOR_DECISION // kotlin.collections.List<RefundStatusType> | Статусы возвратов или невыкупов — для фильтрации результатов.  Несколько статусов перечисляются через запятую. 
            //val type : ReturnType =  // ReturnType | Тип заказа для фильтрации:  * `RETURN` — возврат.  * `UNREDEEMED` — невыкуп.  Если не указывать, в ответе будут и возвраты, и невыкупы. 
            //val fromDate : java.time.LocalDate = 2022-10-31 // java.time.LocalDate | Начальная дата для фильтрации возвратов или невыкупов по дате обновления.  Формат: `ГГГГ-ММ-ДД`. 
            //val toDate : java.time.LocalDate = 2022-11-30 // java.time.LocalDate | Конечная дата для фильтрации возвратов или невыкупов по дате обновления.  Формат: `ГГГГ-ММ-ДД`. 
            //val fromDate2 : java.time.LocalDate = 2022-10-31 // java.time.LocalDate | {% note warning \"\" %}  Этот параметр устарел. Вместо него используйте `fromDate`.  {% endnote %}  Начальная дата для фильтрации возвратов или невыкупов по дате обновления. 
            //val toDate2 : java.time.LocalDate = 2022-11-30 // java.time.LocalDate | {% note warning \"\" %}  Этот параметр устарел. Вместо него используйте `toDate`.  {% endnote %}  Конечная дата для фильтрации возвратов или невыкупов по дате обновления. 
            //val result : GetReturnsResponse = apiInstance.getReturns(campaignId, pageToken, limit, orderIds, statuses, type, fromDate, toDate, fromDate2, toDate2)
            //result shouldBe ("TODO")
        }

        // to test setReturnDecision
        should("test setReturnDecision") {
            // uncomment below to test setReturnDecision
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val orderId : kotlin.Long = 789 // kotlin.Long | Идентификатор заказа.
            //val returnId : kotlin.Long = 789 // kotlin.Long | Идентификатор возврата.
            //val setReturnDecisionRequest : SetReturnDecisionRequest =  // SetReturnDecisionRequest | 
            //val result : EmptyApiResponse = apiInstance.setReturnDecision(campaignId, orderId, returnId, setReturnDecisionRequest)
            //result shouldBe ("TODO")
        }

        // to test submitReturnDecision
        should("test submitReturnDecision") {
            // uncomment below to test submitReturnDecision
            //val campaignId : kotlin.Long = 789 // kotlin.Long | Идентификатор кампании в API и магазина в кабинете. Каждая кампания в API соответствует магазину в кабинете.  Чтобы узнать идентификаторы своих магазинов, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
            //val orderId : kotlin.Long = 789 // kotlin.Long | Идентификатор заказа.
            //val returnId : kotlin.Long = 789 // kotlin.Long | Идентификатор возврата.
            //val result : EmptyApiResponse = apiInstance.submitReturnDecision(campaignId, orderId, returnId)
            //result shouldBe ("TODO")
        }

    }
}
