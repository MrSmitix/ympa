/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ympa_kotlin_client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import ympa_kotlin_client.apis.ModelsApi
import ympa_kotlin_client.models.ApiClientDataErrorResponse
import ympa_kotlin_client.models.ApiForbiddenErrorResponse
import ympa_kotlin_client.models.ApiLimitErrorResponse
import ympa_kotlin_client.models.ApiNotFoundErrorResponse
import ympa_kotlin_client.models.ApiServerErrorResponse
import ympa_kotlin_client.models.ApiUnauthorizedErrorResponse
import ympa_kotlin_client.models.CurrencyType
import ympa_kotlin_client.models.GetModelsOffersResponse
import ympa_kotlin_client.models.GetModelsRequest
import ympa_kotlin_client.models.GetModelsResponse
import ympa_kotlin_client.models.SearchModelsResponse
import ympa_kotlin_client.models.SortOrderType

class ModelsApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ModelsApi
        //val apiInstance = ModelsApi()

        // to test getModel
        should("test getModel") {
            // uncomment below to test getModel
            //val modelId : kotlin.Long = 789 // kotlin.Long | Идентификатор модели товара.
            //val regionId : kotlin.Long = 789 // kotlin.Long | Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). 
            //val currency : CurrencyType =  // CurrencyType | Валюта, в которой отображаются цены предложений на страницах с результатами поиска.  Возможные значения:  * `BYN` — белорусский рубль.  * `KZT` — казахстанский тенге.  * `RUR` — российский рубль.  * `UAH` — украинская гривна.  Значение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина). 
            //val result : GetModelsResponse = apiInstance.getModel(modelId, regionId, currency)
            //result shouldBe ("TODO")
        }

        // to test getModelOffers
        should("test getModelOffers") {
            // uncomment below to test getModelOffers
            //val modelId : kotlin.Long = 789 // kotlin.Long | Идентификатор модели товара.
            //val regionId : kotlin.Long = 789 // kotlin.Long | Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). 
            //val currency : CurrencyType =  // CurrencyType | Валюта, в которой отображаются цены предложений на страницах с результатами поиска.  Возможные значения:  * `BYN` — белорусский рубль.  * `KZT` — казахстанский тенге.  * `RUR` — российский рубль.  * `UAH` — украинская гривна.  Значение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина). 
            //val orderByPrice : SortOrderType =  // SortOrderType | Направление сортировки по цене.  Возможные значения: * `ASC` — сортировка по возрастанию. * `DESC` — сортировка по убыванию.  Значение по умолчанию: предложения выводятся в произвольном порядке. 
            //val count : kotlin.Int = 56 // kotlin.Int | Количество предложений на странице ответа.
            //val page : kotlin.Int = 56 // kotlin.Int | Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. 
            //val result : GetModelsOffersResponse = apiInstance.getModelOffers(modelId, regionId, currency, orderByPrice, count, page)
            //result shouldBe ("TODO")
        }

        // to test getModels
        should("test getModels") {
            // uncomment below to test getModels
            //val regionId : kotlin.Long = 789 // kotlin.Long | Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). 
            //val getModelsRequest : GetModelsRequest =  // GetModelsRequest | 
            //val currency : CurrencyType =  // CurrencyType | Валюта, в которой отображаются цены предложений на страницах с результатами поиска.  Возможные значения:  * `BYN` — белорусский рубль.  * `KZT` — казахстанский тенге.  * `RUR` — российский рубль.  * `UAH` — украинская гривна.  Значение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина). 
            //val result : GetModelsResponse = apiInstance.getModels(regionId, getModelsRequest, currency)
            //result shouldBe ("TODO")
        }

        // to test getModelsOffers
        should("test getModelsOffers") {
            // uncomment below to test getModelsOffers
            //val regionId : kotlin.Long = 789 // kotlin.Long | Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). 
            //val getModelsRequest : GetModelsRequest =  // GetModelsRequest | 
            //val currency : CurrencyType =  // CurrencyType | Валюта, в которой отображаются цены предложений на страницах с результатами поиска.  Возможные значения:  * `BYN` — белорусский рубль.  * `KZT` — казахстанский тенге.  * `RUR` — российский рубль.  * `UAH` — украинская гривна.  Значение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина). 
            //val orderByPrice : SortOrderType =  // SortOrderType | Направление сортировки по цене.  Возможные значения: * `ASC` — сортировка по возрастанию. * `DESC` — сортировка по убыванию.  Значение по умолчанию: предложения выводятся в произвольном порядке. 
            //val result : GetModelsOffersResponse = apiInstance.getModelsOffers(regionId, getModelsRequest, currency, orderByPrice)
            //result shouldBe ("TODO")
        }

        // to test searchModels
        should("test searchModels") {
            // uncomment below to test searchModels
            //val query : kotlin.String = query_example // kotlin.String | Поисковый запрос по названию модели товара.
            //val regionId : kotlin.Long = 789 // kotlin.Long | Идентификатор региона.  Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md). 
            //val currency : CurrencyType =  // CurrencyType | Валюта, в которой отображаются цены предложений на страницах с результатами поиска.  Возможные значения:  * `BYN` — белорусский рубль.  * `KZT` — казахстанский тенге.  * `RUR` — российский рубль.  * `UAH` — украинская гривна.  Значение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина). 
            //val page : kotlin.Int = 56 // kotlin.Int | Номер страницы результатов.  Значение по умолчанию: 1.  Используется вместе с параметром `page_size`.  `page_number` игнорируется, если задан `page_token`, `limit` или `offset`. 
            //val pageSize : kotlin.Int = 56 // kotlin.Int | Размер страницы.  Используется вместе с параметром `page_number`.  `page_size` игнорируется, если задан `page_token`, `limit` или `offset`. 
            //val result : SearchModelsResponse = apiInstance.searchModels(query, regionId, currency, page, pageSize)
            //result shouldBe ("TODO")
        }

    }
}
