/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ympa_kotlin_client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import ympa_kotlin_client.models.OrderDTO
import ympa_kotlin_client.models.CurrencyType
import ympa_kotlin_client.models.OrderBuyerDTO
import ympa_kotlin_client.models.OrderDeliveryDTO
import ympa_kotlin_client.models.OrderItemDTO
import ympa_kotlin_client.models.OrderPaymentMethodType
import ympa_kotlin_client.models.OrderPaymentType
import ympa_kotlin_client.models.OrderStatusType
import ympa_kotlin_client.models.OrderSubsidyDTO
import ympa_kotlin_client.models.OrderSubstatusType
import ympa_kotlin_client.models.OrderTaxSystemType

class OrderDTOTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of OrderDTO
        //val modelInstance = OrderDTO()

        // to test the property `items` - Список товаров в заказе.
        should("test items") {
            // uncomment below to test the property
            //modelInstance.items shouldBe ("TODO")
        }

        // to test the property `id` - Идентификатор заказа.
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `status`
        should("test status") {
            // uncomment below to test the property
            //modelInstance.status shouldBe ("TODO")
        }

        // to test the property `substatus`
        should("test substatus") {
            // uncomment below to test the property
            //modelInstance.substatus shouldBe ("TODO")
        }

        // to test the property `creationDate`
        should("test creationDate") {
            // uncomment below to test the property
            //modelInstance.creationDate shouldBe ("TODO")
        }

        // to test the property `updatedAt`
        should("test updatedAt") {
            // uncomment below to test the property
            //modelInstance.updatedAt shouldBe ("TODO")
        }

        // to test the property `currency`
        should("test currency") {
            // uncomment below to test the property
            //modelInstance.currency shouldBe ("TODO")
        }

        // to test the property `itemsTotal` - Платеж покупателя. 
        should("test itemsTotal") {
            // uncomment below to test the property
            //modelInstance.itemsTotal shouldBe ("TODO")
        }

        // to test the property `deliveryTotal` - Стоимость доставки. 
        should("test deliveryTotal") {
            // uncomment below to test the property
            //modelInstance.deliveryTotal shouldBe ("TODO")
        }

        // to test the property `buyerItemsTotal` - {% note warning \"\" %}  Этот параметр устарел.  {% endnote %}  Стоимость всех товаров в заказе в валюте покупателя после применения скидок и без учета стоимости доставки. 
        should("test buyerItemsTotal") {
            // uncomment below to test the property
            //modelInstance.buyerItemsTotal shouldBe ("TODO")
        }

        // to test the property `buyerTotal` - {% note warning \"\" %}  Этот параметр устарел.  {% endnote %}  Стоимость всех товаров в заказе в валюте покупателя после применения скидок и с учетом стоимости доставки. 
        should("test buyerTotal") {
            // uncomment below to test the property
            //modelInstance.buyerTotal shouldBe ("TODO")
        }

        // to test the property `buyerItemsTotalBeforeDiscount` - Стоимость всех товаров в заказе в валюте покупателя без учета стоимости доставки и до применения скидок по:  * акциям; * купонам; * промокодам. 
        should("test buyerItemsTotalBeforeDiscount") {
            // uncomment below to test the property
            //modelInstance.buyerItemsTotalBeforeDiscount shouldBe ("TODO")
        }

        // to test the property `buyerTotalBeforeDiscount` - {% note warning \"\" %}  Этот параметр устарел.  {% endnote %}  Стоимость всех товаров в заказе в валюте покупателя до применения скидок и с учетом стоимости доставки (`buyerItemsTotalBeforeDiscount` + стоимость доставки). 
        should("test buyerTotalBeforeDiscount") {
            // uncomment below to test the property
            //modelInstance.buyerTotalBeforeDiscount shouldBe ("TODO")
        }

        // to test the property `paymentType`
        should("test paymentType") {
            // uncomment below to test the property
            //modelInstance.paymentType shouldBe ("TODO")
        }

        // to test the property `paymentMethod`
        should("test paymentMethod") {
            // uncomment below to test the property
            //modelInstance.paymentMethod shouldBe ("TODO")
        }

        // to test the property `fake` - Тип заказа:  * `false` — настоящий заказ покупателя.  * `true` — [тестовый](../../pushapi/concepts/sandbox.md) заказ Маркета. 
        should("test fake") {
            // uncomment below to test the property
            //modelInstance.fake shouldBe ("TODO")
        }

        // to test the property `subsidies` - Список субсидий по типам.
        should("test subsidies") {
            // uncomment below to test the property
            //modelInstance.subsidies shouldBe ("TODO")
        }

        // to test the property `delivery`
        should("test delivery") {
            // uncomment below to test the property
            //modelInstance.delivery shouldBe ("TODO")
        }

        // to test the property `buyer`
        should("test buyer") {
            // uncomment below to test the property
            //modelInstance.buyer shouldBe ("TODO")
        }

        // to test the property `notes` - Комментарий к заказу.
        should("test notes") {
            // uncomment below to test the property
            //modelInstance.notes shouldBe ("TODO")
        }

        // to test the property `taxSystem`
        should("test taxSystem") {
            // uncomment below to test the property
            //modelInstance.taxSystem shouldBe ("TODO")
        }

        // to test the property `cancelRequested` - **Только для модели DBS**  Запрошена ли отмена. 
        should("test cancelRequested") {
            // uncomment below to test the property
            //modelInstance.cancelRequested shouldBe ("TODO")
        }

        // to test the property `expiryDate`
        should("test expiryDate") {
            // uncomment below to test the property
            //modelInstance.expiryDate shouldBe ("TODO")
        }

    }
}
