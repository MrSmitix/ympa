/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ympa_kotlin_client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import ympa_kotlin_client.models.GetPromoDTO
import ympa_kotlin_client.models.ChannelType
import ympa_kotlin_client.models.GetPromoAssortmentInfoDTO
import ympa_kotlin_client.models.GetPromoBestsellerInfoDTO
import ympa_kotlin_client.models.GetPromoConstraintsDTO
import ympa_kotlin_client.models.GetPromoMechanicsInfoDTO
import ympa_kotlin_client.models.PromoPeriodDTO

class GetPromoDTOTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of GetPromoDTO
        //val modelInstance = GetPromoDTO()

        // to test the property `id` - Идентификатор акции.
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `name` - Название акции.
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `period`
        should("test period") {
            // uncomment below to test the property
            //modelInstance.period shouldBe ("TODO")
        }

        // to test the property `participating` - Участвует или участвовал ли продавец в этой акции.  Для текущих и будущих акций возвращается со значением `true`, если в акции есть товары, которые были добавлены вручную. Если товары не участвуют в акции или добавлены в нее автоматически, параметр возвращается со значением `false`.  Для прошедших акций всегда возвращается со значением `true`.  Об автоматическом и ручном добавлении товаров в акцию читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/index). 
        should("test participating") {
            // uncomment below to test the property
            //modelInstance.participating shouldBe ("TODO")
        }

        // to test the property `assortmentInfo`
        should("test assortmentInfo") {
            // uncomment below to test the property
            //modelInstance.assortmentInfo shouldBe ("TODO")
        }

        // to test the property `mechanicsInfo`
        should("test mechanicsInfo") {
            // uncomment below to test the property
            //modelInstance.mechanicsInfo shouldBe ("TODO")
        }

        // to test the property `bestsellerInfo`
        should("test bestsellerInfo") {
            // uncomment below to test the property
            //modelInstance.bestsellerInfo shouldBe ("TODO")
        }

        // to test the property `channels` - Список каналов продвижения товаров.
        should("test channels") {
            // uncomment below to test the property
            //modelInstance.channels shouldBe ("TODO")
        }

        // to test the property `constraints`
        should("test constraints") {
            // uncomment below to test the property
            //modelInstance.constraints shouldBe ("TODO")
        }

    }
}
