/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ympa_kotlin_client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import ympa_kotlin_client.models.CategoryParameterDTO
import ympa_kotlin_client.models.CategoryParameterUnitDTO
import ympa_kotlin_client.models.OfferCardRecommendationType
import ympa_kotlin_client.models.ParameterType
import ympa_kotlin_client.models.ParameterValueConstraintsDTO
import ympa_kotlin_client.models.ParameterValueOptionDTO
import ympa_kotlin_client.models.ValueRestrictionDTO

class CategoryParameterDTOTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of CategoryParameterDTO
        //val modelInstance = CategoryParameterDTO()

        // to test the property `id` - Идентификатор характеристики.
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `type`
        should("test type") {
            // uncomment below to test the property
            //modelInstance.type shouldBe ("TODO")
        }

        // to test the property `required` - Обязательность характеристики.
        should("test required") {
            // uncomment below to test the property
            //modelInstance.required shouldBe ("TODO")
        }

        // to test the property `filtering` - Используется ли характеристика в фильтре.
        should("test filtering") {
            // uncomment below to test the property
            //modelInstance.filtering shouldBe ("TODO")
        }

        // to test the property `distinctive` - Является ли характеристика особенностью варианта.
        should("test distinctive") {
            // uncomment below to test the property
            //modelInstance.distinctive shouldBe ("TODO")
        }

        // to test the property `multivalue` - Можно ли передать сразу несколько значений.
        should("test multivalue") {
            // uncomment below to test the property
            //modelInstance.multivalue shouldBe ("TODO")
        }

        // to test the property `allowCustomValues` - Можно ли передавать собственное значение, которого нет в списке вариантов Маркета. Только для характеристик типа `ENUM`.
        should("test allowCustomValues") {
            // uncomment below to test the property
            //modelInstance.allowCustomValues shouldBe ("TODO")
        }

        // to test the property `name` - Название характеристики.
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `unit`
        should("test unit") {
            // uncomment below to test the property
            //modelInstance.unit shouldBe ("TODO")
        }

        // to test the property `description` - Описание характеристики.
        should("test description") {
            // uncomment below to test the property
            //modelInstance.description shouldBe ("TODO")
        }

        // to test the property `recommendationTypes` - Перечень возможных рекомендаций по заполнению карточки, к которым относится данная характеристика.
        should("test recommendationTypes") {
            // uncomment below to test the property
            //modelInstance.recommendationTypes shouldBe ("TODO")
        }

        // to test the property `propertyValues` - Список допустимых значений параметра. Только для характеристик типа `ENUM`.
        should("test propertyValues") {
            // uncomment below to test the property
            //modelInstance.propertyValues shouldBe ("TODO")
        }

        // to test the property `constraints`
        should("test constraints") {
            // uncomment below to test the property
            //modelInstance.constraints shouldBe ("TODO")
        }

        // to test the property `valueRestrictions` - Ограничения на значения, накладываемые другими характеристиками. Только для характеристик типа `ENUM`.
        should("test valueRestrictions") {
            // uncomment below to test the property
            //modelInstance.valueRestrictions shouldBe ("TODO")
        }

    }
}
