/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ympa_kotlin_client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import ympa_kotlin_client.models.EnrichedMappingsOfferDTO
import ympa_kotlin_client.models.DayOfWeekType
import ympa_kotlin_client.models.OfferAvailabilityStatusType
import ympa_kotlin_client.models.OfferProcessingStateDTO
import ympa_kotlin_client.models.OfferWeightDimensionsDTO
import ympa_kotlin_client.models.TimePeriodDTO

class EnrichedMappingsOfferDTOTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of EnrichedMappingsOfferDTO
        //val modelInstance = EnrichedMappingsOfferDTO()

        // to test the property `name` - Составляйте название по схеме: тип + бренд или производитель + модель + особенности, если есть (например, цвет, размер или вес) и количество в упаковке.  Не включайте в название условия продажи (например, «скидка», «бесплатная доставка» и т. д.), эмоциональные характеристики («хит», «супер» и т. д.). Не пишите слова большими буквами — кроме устоявшихся названий брендов и моделей.  Оптимальная длина — 50–60 символов, максимальная — 256.  [Рекомендации и правила](https://yandex.ru/support/marketplace/assortment/fields/title.html) 
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `shopSku` - Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
        should("test shopSku") {
            // uncomment below to test the property
            //modelInstance.shopSku shouldBe ("TODO")
        }

        // to test the property `category` - Категория товара в вашем магазине. Значение будет использовано для определения категории товара на Маркете в случае, если вы не передали категорию в параметре `marketCategoryId`.  Указывайте конкретные категории — например, набор ножей лучше отнести к категории **Столовые приборы**, а не просто **Посуда**.  Выбирайте категории, которые описывают товар, а не абстрактный признак — например, **Духи**, а не **Подарки**.  Значение будет использовано для определения категории товара на Маркете в случае, если вы не передали категорию в параметре `marketCategoryId`. 
        should("test category") {
            // uncomment below to test the property
            //modelInstance.category shouldBe ("TODO")
        }

        // to test the property `vendor` - Название бренда или производителя. Должно быть записано так, как его пишет сам бренд.
        should("test vendor") {
            // uncomment below to test the property
            //modelInstance.vendor shouldBe ("TODO")
        }

        // to test the property `vendorCode` - Артикул товара от производителя.
        should("test vendorCode") {
            // uncomment below to test the property
            //modelInstance.vendorCode shouldBe ("TODO")
        }

        // to test the property `description` - Подробное описание товара: например, его преимущества и особенности.  Не давайте в описании инструкций по установке и сборке. Не используйте слова «скидка», «распродажа», «дешевый», «подарок» (кроме подарочных категорий), «бесплатно», «акция», «специальная цена», «новинка», «new», «аналог», «заказ», «хит». Не указывайте никакой контактной информации и не давайте ссылок.  Можно использовать теги:  * \\<h>, \\<h1>, \\<h2> и так далее — для заголовков; * \\<br> и \\<p> — для переноса строки; * \\<ol> — для нумерованного списка; * \\<ul> — для маркированного списка; * \\<li> — для создания элементов списка (должен находиться внутри \\<ol> или \\<ul>); * \\<div> — поддерживается, но не влияет на отображение текста.  Оптимальная длина — 400–600 символов, максимальная — 6000.  [Рекомендации и правила](https://yandex.ru/support/marketplace/assortment/fields/description.html) 
        should("test description") {
            // uncomment below to test the property
            //modelInstance.description shouldBe ("TODO")
        }

        // to test the property `id` - Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `feedId` - Идентификатор фида.
        should("test feedId") {
            // uncomment below to test the property
            //modelInstance.feedId shouldBe ("TODO")
        }

        // to test the property `barcodes` - Указывайте в виде последовательности цифр. Подойдут коды EAN-13, EAN-8, UPC-A, UPC-E или Code 128.  Для книг указывайте ISBN.  Для товаров [определенных категорий и торговых марок](https://yastatic.net/s3/doc-binary/src/support/market/ru/yandex-market-list-for-gtin.xlsx) штрихкод должен быть действительным кодом GTIN. Обратите внимание: внутренние штрихкоды, начинающиеся на 2 или 02, и коды формата Code 128 не являются GTIN.  [Что такое GTIN](*gtin)  
        should("test barcodes") {
            // uncomment below to test the property
            //modelInstance.barcodes shouldBe ("TODO")
        }

        // to test the property `urls` - URL фотографии товара или страницы с описанием на вашем сайте.  Переданные данные не будут отображаться на витрине, но они помогут специалистам Маркета найти карточку для вашего товара.  Должен содержать один вложенный параметр url. 
        should("test urls") {
            // uncomment below to test the property
            //modelInstance.urls shouldBe ("TODO")
        }

        // to test the property `pictures` - Ссылки (URL) изображений товара в хорошем качестве.  Можно указать до 30 ссылок. При этом изображение по первой ссылке будет основным. Оно используется в качестве изображения товара в поиске Маркета и на карточке товара. Другие изображения товара доступны в режиме просмотра увеличенных изображений.  Обязательный параметр.  Должен содержать хотя бы один вложенный параметр `picture`. 
        should("test pictures") {
            // uncomment below to test the property
            //modelInstance.pictures shouldBe ("TODO")
        }

        // to test the property `manufacturer` - Изготовитель товара: компания, которая произвела товар, ее адрес и регистрационный номер (если есть).  Необязательный параметр. 
        should("test manufacturer") {
            // uncomment below to test the property
            //modelInstance.manufacturer shouldBe ("TODO")
        }

        // to test the property `manufacturerCountries` - Список стран, в которых произведен товар.  Обязательный параметр.  Должен содержать хотя бы одну, но не больше 5 стран. 
        should("test manufacturerCountries") {
            // uncomment below to test the property
            //modelInstance.manufacturerCountries shouldBe ("TODO")
        }

        // to test the property `minShipment` - Минимальное количество единиц товара, которое вы поставляете на склад.  Например, если вы поставляете детское питание партиями минимум по 10 коробок, а в каждой коробке по 6 баночек, укажите значение 60. 
        should("test minShipment") {
            // uncomment below to test the property
            //modelInstance.minShipment shouldBe ("TODO")
        }

        // to test the property `transportUnitSize` - Количество единиц товара в одной упаковке, которую вы поставляете на склад.  Например, если вы поставляете детское питание коробками по 6 баночек, укажите значение 6. 
        should("test transportUnitSize") {
            // uncomment below to test the property
            //modelInstance.transportUnitSize shouldBe ("TODO")
        }

        // to test the property `quantumOfSupply` - Добавочная партия: по сколько единиц товара можно добавлять к минимальному количеству minShipment.  Например, если вы поставляете детское питание партиями минимум по 10 коробок и хотите добавлять к минимальной партии по 2 коробки, а в каждой коробке по 6 баночек, укажите значение 12. 
        should("test quantumOfSupply") {
            // uncomment below to test the property
            //modelInstance.quantumOfSupply shouldBe ("TODO")
        }

        // to test the property `deliveryDurationDays` - Срок, за который продавец поставляет товары на склад, в днях.
        should("test deliveryDurationDays") {
            // uncomment below to test the property
            //modelInstance.deliveryDurationDays shouldBe ("TODO")
        }

        // to test the property `boxCount` - Сколько мест (если больше одного) занимает товар.  Параметр указывается, только если товар занимает больше одного места (например, кондиционер занимает два места: внешний и внутренний блоки в двух коробках). Если товар занимает одно место, не указывайте этот параметр. 
        should("test boxCount") {
            // uncomment below to test the property
            //modelInstance.boxCount shouldBe ("TODO")
        }

        // to test the property `customsCommodityCodes` - Список кодов товара в единой Товарной номенклатуре внешнеэкономической деятельности (ТН ВЭД).  Обязательный параметр, если товар подлежит особому учету (например, в системе «Меркурий» как продукция животного происхождения или в системе «Честный ЗНАК»).  Может содержать только один вложенный код ТН ВЭД. 
        should("test customsCommodityCodes") {
            // uncomment below to test the property
            //modelInstance.customsCommodityCodes shouldBe ("TODO")
        }

        // to test the property `weightDimensions`
        should("test weightDimensions") {
            // uncomment below to test the property
            //modelInstance.weightDimensions shouldBe ("TODO")
        }

        // to test the property `supplyScheduleDays` - Дни недели, в которые продавец поставляет товары на склад.
        should("test supplyScheduleDays") {
            // uncomment below to test the property
            //modelInstance.supplyScheduleDays shouldBe ("TODO")
        }

        // to test the property `shelfLifeDays` - {% note warning \"\" %}  Этот параметр устарел. Вместо него используйте `shelfLife`. Совместное использование обоих параметров приведет к ошибке.  {% endnote %}  Срок годности: через сколько дней товар станет непригоден для использования. 
        should("test shelfLifeDays") {
            // uncomment below to test the property
            //modelInstance.shelfLifeDays shouldBe ("TODO")
        }

        // to test the property `lifeTimeDays` - {% note warning \"\" %}  Этот параметр устарел. Вместо него используйте `lifeTime`. Совместное использование обоих параметров приведет к ошибке.  {% endnote %}  Срок службы: сколько дней товар будет исправно выполнять свою функцию, а изготовитель — нести ответственность за его существенные недостатки. 
        should("test lifeTimeDays") {
            // uncomment below to test the property
            //modelInstance.lifeTimeDays shouldBe ("TODO")
        }

        // to test the property `guaranteePeriodDays` - Гарантийный срок товара: сколько дней возможно обслуживание и ремонт товара или возврат денег, а изготовитель или продавец будет нести ответственность за недостатки товара. 
        should("test guaranteePeriodDays") {
            // uncomment below to test the property
            //modelInstance.guaranteePeriodDays shouldBe ("TODO")
        }

        // to test the property `processingState`
        should("test processingState") {
            // uncomment below to test the property
            //modelInstance.processingState shouldBe ("TODO")
        }

        // to test the property `availability`
        should("test availability") {
            // uncomment below to test the property
            //modelInstance.availability shouldBe ("TODO")
        }

        // to test the property `shelfLife`
        should("test shelfLife") {
            // uncomment below to test the property
            //modelInstance.shelfLife shouldBe ("TODO")
        }

        // to test the property `lifeTime`
        should("test lifeTime") {
            // uncomment below to test the property
            //modelInstance.lifeTime shouldBe ("TODO")
        }

        // to test the property `guaranteePeriod`
        should("test guaranteePeriod") {
            // uncomment below to test the property
            //modelInstance.guaranteePeriod shouldBe ("TODO")
        }

        // to test the property `certificate` - Номер документа на товар.  Перед указанием номера документ нужно загрузить в кабинете продавца на Маркете. [Инструкция](https://yandex.ru/support/marketplace/assortment/restrictions/certificates.html) 
        should("test certificate") {
            // uncomment below to test the property
            //modelInstance.certificate shouldBe ("TODO")
        }

        // to test the property `price` - Цена на товар в рублях.
        should("test price") {
            // uncomment below to test the property
            //modelInstance.price shouldBe ("TODO")
        }

        // to test the property `marketCategoryId` - Идентификатор категории для рекомендованной карточки товара на Маркете.  Возвращается только вместе с параметром ##marketSku##. 
        should("test marketCategoryId") {
            // uncomment below to test the property
            //modelInstance.marketCategoryId shouldBe ("TODO")
        }

        // to test the property `marketCategoryName` - Название категории для рекомендованной карточки товара на Маркете.  Может отсутствовать в ответе. 
        should("test marketCategoryName") {
            // uncomment below to test the property
            //modelInstance.marketCategoryName shouldBe ("TODO")
        }

        // to test the property `marketModelId` - Идентификатор модели для рекомендованной карточки товара на Маркете.  Может отсутствовать в ответе. 
        should("test marketModelId") {
            // uncomment below to test the property
            //modelInstance.marketModelId shouldBe ("TODO")
        }

        // to test the property `marketModelName` - Название модели для рекомендованной карточки товара на Маркете.  Возвращается только вместе с параметром ##marketSku##. 
        should("test marketModelName") {
            // uncomment below to test the property
            //modelInstance.marketModelName shouldBe ("TODO")
        }

        // to test the property `marketSku` - SKU на Маркете.
        should("test marketSku") {
            // uncomment below to test the property
            //modelInstance.marketSku shouldBe ("TODO")
        }

        // to test the property `marketSkuName` - Название товара с рекомендованной карточки на Маркете.  Может отсутствовать в ответе. 
        should("test marketSkuName") {
            // uncomment below to test the property
            //modelInstance.marketSkuName shouldBe ("TODO")
        }

    }
}
