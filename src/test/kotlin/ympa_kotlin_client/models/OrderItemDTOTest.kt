/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ympa_kotlin_client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import ympa_kotlin_client.models.OrderItemDTO
import ympa_kotlin_client.models.OrderItemDetailDTO
import ympa_kotlin_client.models.OrderItemInstanceDTO
import ympa_kotlin_client.models.OrderItemInstanceType
import ympa_kotlin_client.models.OrderItemPromoDTO
import ympa_kotlin_client.models.OrderItemSubsidyDTO
import ympa_kotlin_client.models.OrderVatType

class OrderItemDTOTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of OrderItemDTO
        //val modelInstance = OrderItemDTO()

        // to test the property `id` - Идентификатор товара в заказе.  Позволяет идентифицировать товар в рамках данного заказа. 
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `offerId` - Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
        should("test offerId") {
            // uncomment below to test the property
            //modelInstance.offerId shouldBe ("TODO")
        }

        // to test the property `offerName` - Название товара.
        should("test offerName") {
            // uncomment below to test the property
            //modelInstance.offerName shouldBe ("TODO")
        }

        // to test the property `price` - Цена на товар в валюте заказа без учета вознаграждения партнеру за скидки по промокодам, купонам и акциям (параметр `subsidies`). 
        should("test price") {
            // uncomment below to test the property
            //modelInstance.price shouldBe ("TODO")
        }

        // to test the property `buyerPrice` - Цена на товар в валюте покупателя. В цене уже учтены скидки по:  * акциям; * купонам; * промокодам. 
        should("test buyerPrice") {
            // uncomment below to test the property
            //modelInstance.buyerPrice shouldBe ("TODO")
        }

        // to test the property `buyerPriceBeforeDiscount` - Стоимость товара в валюте покупателя до применения скидок по:  * акциям; * купонам; * промокодам. 
        should("test buyerPriceBeforeDiscount") {
            // uncomment below to test the property
            //modelInstance.buyerPriceBeforeDiscount shouldBe ("TODO")
        }

        // to test the property `priceBeforeDiscount` - {% note warning \"\" %}  Этот параметр устарел.  {% endnote %}  Стоимость товара в валюте магазина до применения скидок. 
        should("test priceBeforeDiscount") {
            // uncomment below to test the property
            //modelInstance.priceBeforeDiscount shouldBe ("TODO")
        }

        // to test the property `count` - Количество единиц товара.
        should("test count") {
            // uncomment below to test the property
            //modelInstance.count shouldBe ("TODO")
        }

        // to test the property `vat`
        should("test vat") {
            // uncomment below to test the property
            //modelInstance.vat shouldBe ("TODO")
        }

        // to test the property `shopSku` - Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
        should("test shopSku") {
            // uncomment below to test the property
            //modelInstance.shopSku shouldBe ("TODO")
        }

        // to test the property `subsidy` - {% note warning \"\" %}  Этот параметр устарел. Вместо него используйте `subsidies`.  {% endnote %}  Общее вознаграждение партнеру за DBS-доставку и все скидки на товар:  * по промокодам; * по купонам; * по баллам Плюса; * по акциям.  Передается в валюте заказа. 
        should("test subsidy") {
            // uncomment below to test the property
            //modelInstance.subsidy shouldBe ("TODO")
        }

        // to test the property `partnerWarehouseId` - {% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Идентификатор склада в системе партнера, на который сформирован заказ. 
        should("test partnerWarehouseId") {
            // uncomment below to test the property
            //modelInstance.partnerWarehouseId shouldBe ("TODO")
        }

        // to test the property `promos` - Информация о вознаграждениях партнеру за скидки на товар по промокодам, купонам и акциям.
        should("test promos") {
            // uncomment below to test the property
            //modelInstance.promos shouldBe ("TODO")
        }

        // to test the property `instances` - Информация о маркировке единиц товара.  Возвращаются данные для маркировки, переданные в запросе [PUT campaigns/{campaignId}/orders/{orderId}/cis](../../reference/orders/provideOrderItemCis.md).  Если магазин еще не передавал коды для этого заказа, `instances` отсутствует. 
        should("test instances") {
            // uncomment below to test the property
            //modelInstance.instances shouldBe ("TODO")
        }

        // to test the property `details` - Информация об удалении товара из заказа. 
        should("test details") {
            // uncomment below to test the property
            //modelInstance.details shouldBe ("TODO")
        }

        // to test the property `subsidies` - Список субсидий по типам.
        should("test subsidies") {
            // uncomment below to test the property
            //modelInstance.subsidies shouldBe ("TODO")
        }

        // to test the property `requiredInstanceTypes` - Список необходимых маркировок товара.
        should("test requiredInstanceTypes") {
            // uncomment below to test the property
            //modelInstance.requiredInstanceTypes shouldBe ("TODO")
        }

    }
}
