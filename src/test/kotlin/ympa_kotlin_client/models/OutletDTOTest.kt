/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ympa_kotlin_client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import ympa_kotlin_client.models.OutletDTO
import ympa_kotlin_client.models.OutletAddressDTO
import ympa_kotlin_client.models.OutletDeliveryRuleDTO
import ympa_kotlin_client.models.OutletType
import ympa_kotlin_client.models.OutletVisibilityType
import ympa_kotlin_client.models.OutletWorkingScheduleDTO

class OutletDTOTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of OutletDTO
        //val modelInstance = OutletDTO()

        // to test the property `name` - Название точки продаж. 
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `type`
        should("test type") {
            // uncomment below to test the property
            //modelInstance.type shouldBe ("TODO")
        }

        // to test the property `address`
        should("test address") {
            // uncomment below to test the property
            //modelInstance.address shouldBe ("TODO")
        }

        // to test the property `phones` - Номера телефонов точки продаж. Передавайте в формате: `+7 (999) 999-99-99`. 
        should("test phones") {
            // uncomment below to test the property
            //modelInstance.phones shouldBe ("TODO")
        }

        // to test the property `workingSchedule`
        should("test workingSchedule") {
            // uncomment below to test the property
            //modelInstance.workingSchedule shouldBe ("TODO")
        }

        // to test the property `coords` - Координаты точки продаж.  Формат: долгота, широта. Разделители: запятая и / или пробел. Например, `20.4522144, 54.7104264`.  Если параметр не передан, координаты будут определены по значениям параметров, вложенных в `address`. 
        should("test coords") {
            // uncomment below to test the property
            //modelInstance.coords shouldBe ("TODO")
        }

        // to test the property `isMain` - Признак основной точки продаж.  Возможные значения:  * `false` — неосновная точка продаж. * `true` — основная точка продаж. 
        should("test isMain") {
            // uncomment below to test the property
            //modelInstance.isMain shouldBe ("TODO")
        }

        // to test the property `shopOutletCode` - Идентификатор точки продаж, присвоенный магазином.
        should("test shopOutletCode") {
            // uncomment below to test the property
            //modelInstance.shopOutletCode shouldBe ("TODO")
        }

        // to test the property `visibility`
        should("test visibility") {
            // uncomment below to test the property
            //modelInstance.visibility shouldBe ("TODO")
        }

        // to test the property `deliveryRules` - Информация об условиях доставки для данной точки продаж.  Обязательный параметр, если параметр `type=DEPOT` или `type=MIXED`. 
        should("test deliveryRules") {
            // uncomment below to test the property
            //modelInstance.deliveryRules shouldBe ("TODO")
        }

        // to test the property `storagePeriod` - Срок хранения заказа в собственном пункте выдачи заказов. Считается в днях.
        should("test storagePeriod") {
            // uncomment below to test the property
            //modelInstance.storagePeriod shouldBe ("TODO")
        }

    }
}
