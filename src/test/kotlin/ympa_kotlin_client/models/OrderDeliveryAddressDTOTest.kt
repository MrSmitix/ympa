/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ympa_kotlin_client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import ympa_kotlin_client.models.OrderDeliveryAddressDTO
import ympa_kotlin_client.models.GpsDTO

class OrderDeliveryAddressDTOTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of OrderDeliveryAddressDTO
        //val modelInstance = OrderDeliveryAddressDTO()

        // to test the property `country` - Страна.  Обязательный параметр. 
        should("test country") {
            // uncomment below to test the property
            //modelInstance.country shouldBe ("TODO")
        }

        // to test the property `postcode` - Почтовый индекс.  Указывается, если выбрана доставка почтой (`delivery type=POST`). 
        should("test postcode") {
            // uncomment below to test the property
            //modelInstance.postcode shouldBe ("TODO")
        }

        // to test the property `city` - Город или населенный пункт.  Обязательный параметр. 
        should("test city") {
            // uncomment below to test the property
            //modelInstance.city shouldBe ("TODO")
        }

        // to test the property `district` - Район.
        should("test district") {
            // uncomment below to test the property
            //modelInstance.district shouldBe ("TODO")
        }

        // to test the property `subway` - Станция метро.
        should("test subway") {
            // uncomment below to test the property
            //modelInstance.subway shouldBe ("TODO")
        }

        // to test the property `street` - Улица.  Обязательный параметр. 
        should("test street") {
            // uncomment below to test the property
            //modelInstance.street shouldBe ("TODO")
        }

        // to test the property `house` - Дом или владение.  Обязательный параметр. 
        should("test house") {
            // uncomment below to test the property
            //modelInstance.house shouldBe ("TODO")
        }

        // to test the property `block` - Корпус или строение.
        should("test block") {
            // uncomment below to test the property
            //modelInstance.block shouldBe ("TODO")
        }

        // to test the property `entrance` - Подъезд.
        should("test entrance") {
            // uncomment below to test the property
            //modelInstance.entrance shouldBe ("TODO")
        }

        // to test the property `entryphone` - Код домофона.
        should("test entryphone") {
            // uncomment below to test the property
            //modelInstance.entryphone shouldBe ("TODO")
        }

        // to test the property `floor` - Этаж.
        should("test floor") {
            // uncomment below to test the property
            //modelInstance.floor shouldBe ("TODO")
        }

        // to test the property `apartment` - Квартира или офис.
        should("test apartment") {
            // uncomment below to test the property
            //modelInstance.apartment shouldBe ("TODO")
        }

        // to test the property `phone` - Телефон получателя заказа.  Обязательный параметр. 
        should("test phone") {
            // uncomment below to test the property
            //modelInstance.phone shouldBe ("TODO")
        }

        // to test the property `recipient` - Фамилия, имя и отчество получателя заказа.  Обязательный параметр. 
        should("test recipient") {
            // uncomment below to test the property
            //modelInstance.recipient shouldBe ("TODO")
        }

        // to test the property `gps`
        should("test gps") {
            // uncomment below to test the property
            //modelInstance.gps shouldBe ("TODO")
        }

    }
}
