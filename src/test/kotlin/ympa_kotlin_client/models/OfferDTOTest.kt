/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ympa_kotlin_client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import ympa_kotlin_client.models.OfferDTO
import ympa_kotlin_client.models.CurrencyType

class OfferDTOTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of OfferDTO
        //val modelInstance = OfferDTO()

        // to test the property `modelId` - Идентификатор модели Маркета, с которой соотнесено предложение.  Если предложение не соотнесено ни с какой карточкой модели, то параметр `modelid` содержит значение `0`.  {% note info %}  Идентификатор модели присутствует в URL карточки модели в виде значения параметра `product`. Например: `https://market.yandex.ru/product/13584121`.  {% endnote %} 
        should("test modelId") {
            // uncomment below to test the property
            //modelInstance.modelId shouldBe ("TODO")
        }

        // to test the property `price` - Цена предложения.  До версии 2.0 партнерского API у параметра был тип String. 
        should("test price") {
            // uncomment below to test the property
            //modelInstance.price shouldBe ("TODO")
        }

        // to test the property `feedId` - Идентификатор прайс-листа, содержащего предложение.  Параметр доступен начиная с версии 2.0 партнерского API. 
        should("test feedId") {
            // uncomment below to test the property
            //modelInstance.feedId shouldBe ("TODO")
        }

        // to test the property `id` - Идентификатор предложения из прайс-листа.  Параметр выводится, если в прайс-листе задан уникальный идентификатор. Если в прайс-листе содержится несколько предложений с одинаковыми идентификаторами, параметр `id` указывается только для первого из них, для остальных параметры `id` и `feedId` не выводятся.  Параметр доступен начиная с версии 2.0 партнерского API. 
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `shopCategoryId` - Идентификатор категории предложения, указанный магазином в прайс-листе.  Параметр выводится только для предложений, у которых указана категория в прайс-листе.  Параметр доступен начиная с версии 2.0 партнерского API. 
        should("test shopCategoryId") {
            // uncomment below to test the property
            //modelInstance.shopCategoryId shouldBe ("TODO")
        }

        // to test the property `marketCategoryId` - Идентификатор категории предложения в дереве категорий Маркета. Параметр доступен начиная с версии 2.0 партнерского API. 
        should("test marketCategoryId") {
            // uncomment below to test the property
            //modelInstance.marketCategoryId shouldBe ("TODO")
        }

        // to test the property `preDiscountPrice` - Цена предложения без скидки.
        should("test preDiscountPrice") {
            // uncomment below to test the property
            //modelInstance.preDiscountPrice shouldBe ("TODO")
        }

        // to test the property `discount` - Скидка на предложение в процентах.
        should("test discount") {
            // uncomment below to test the property
            //modelInstance.discount shouldBe ("TODO")
        }

        // to test the property `cutPrice` - Является ли предложение уцененным:  * `true` — да. * `false` — нет.  Параметр доступен начиная с версии 2.58 партнерского API. 
        should("test cutPrice") {
            // uncomment below to test the property
            //modelInstance.cutPrice shouldBe ("TODO")
        }

        // to test the property `url` - URL-адрес предложения на сайте магазина.
        should("test url") {
            // uncomment below to test the property
            //modelInstance.url shouldBe ("TODO")
        }

        // to test the property `name` - Наименование предложения.
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `currency`
        should("test currency") {
            // uncomment below to test the property
            //modelInstance.currency shouldBe ("TODO")
        }

        // to test the property `bid` - {% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Ставка на клик. 
        should("test bid") {
            // uncomment below to test the property
            //modelInstance.bid shouldBe ("TODO")
        }

        // to test the property `cbid` - {% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Ставка на клик. 
        should("test cbid") {
            // uncomment below to test the property
            //modelInstance.cbid shouldBe ("TODO")
        }

        // to test the property `fee` - {% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Процент комиссии на товар при продаже по CPA. 
        should("test fee") {
            // uncomment below to test the property
            //modelInstance.fee shouldBe ("TODO")
        }

        // to test the property `blocked` - Признак блокировки предложения. Возможные значения: * `false` — предложение активно, параметр не выводится. * `true` — предложение заблокировано. Параметр выводится, если предложение заблокировано и не попадает в выдачу Маркета. Это может произойти из-за отключения магазина. 
        should("test blocked") {
            // uncomment below to test the property
            //modelInstance.blocked shouldBe ("TODO")
        }

    }
}
