//> using scala "3.3.1"
//> using lib "com.lihaoyi::cask:0.9.2"
//> using lib "com.lihaoyi::scalatags:0.8.2"
/**
 * –ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏–π API –ú–∞—Ä–∫–µ—Ç–∞
 * API –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç–∞ –ø–æ–º–æ–≥–∞–µ—Ç –ø—Ä–æ–¥–∞–≤—Ü–∞–º –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏ —É–ø—Ä–æ—Å—Ç–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–º.  –í —á–∏—Å–ª–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:  * —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–æ–º —Ç–æ–≤–∞—Ä–æ–≤ –∏ –≤–∏—Ç—Ä–∏–Ω–æ–π,  * –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫–∞–∑–æ–≤,  * –∏–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –º–∞–≥–∞–∑–∏–Ω–∞,  * –ø–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–æ–≤. 
 *
 * OpenAPI spec version: LATEST
 *
 * Contact: team@openapitools.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 *
 * https://openapi-generator.tech
 */


// this file was generated from app.mustache
package ympa_scala_cask_server

import _root_.ympa_scala_cask_server.model.*
import _root_.ympa_scala_cask_server.api.*

/**
 * This class was created with the intention of being extended by some runnable object,
 * passing in the custom business logic services
 */
class BaseApp(
    override val appBidsService : BidsService = BidsService(),

    override val appBusinessOfferMappingsService : BusinessOfferMappingsService = BusinessOfferMappingsService(),

    override val appBusinessesService : BusinessesService = BusinessesService(),

    override val appCampaignsService : CampaignsService = CampaignsService(),

    override val appCategoriesService : CategoriesService = CategoriesService(),

    override val appChatsService : ChatsService = ChatsService(),

    override val appContentService : ContentService = ContentService(),

    override val appDbsService : DbsService = DbsService(),

    override val appDeliveryServicesService : DeliveryServicesService = DeliveryServicesService(),

    override val appExpressService : ExpressService = ExpressService(),

    override val appFbsService : FbsService = FbsService(),

    override val appFbyService : FbyService = FbyService(),

    override val appFeedbacksService : FeedbacksService = FeedbacksService(),

    override val appFeedsService : FeedsService = FeedsService(),

    override val appGoodsFeedbackService : GoodsFeedbackService = GoodsFeedbackService(),

    override val appGoodsStatsService : GoodsStatsService = GoodsStatsService(),

    override val appHiddenOffersService : HiddenOffersService = HiddenOffersService(),

    override val appModelsService : ModelsService = ModelsService(),

    override val appOfferMappingsService : OfferMappingsService = OfferMappingsService(),

    override val appOffersService : OffersService = OffersService(),

    override val appOrderBusinessInformationService : OrderBusinessInformationService = OrderBusinessInformationService(),

    override val appOrderDeliveryService : OrderDeliveryService = OrderDeliveryService(),

    override val appOrderLabelsService : OrderLabelsService = OrderLabelsService(),

    override val appOrdersService : OrdersService = OrdersService(),

    override val appOrdersStatsService : OrdersStatsService = OrdersStatsService(),

    override val appOutletLicensesService : OutletLicensesService = OutletLicensesService(),

    override val appOutletsService : OutletsService = OutletsService(),

    override val appPriceQuarantineService : PriceQuarantineService = PriceQuarantineService(),

    override val appPricesService : PricesService = PricesService(),

    override val appPromosService : PromosService = PromosService(),

    override val appRatingsService : RatingsService = RatingsService(),

    override val appRegionsService : RegionsService = RegionsService(),

    override val appReportsService : ReportsService = ReportsService(),

    override val appReturnsService : ReturnsService = ReturnsService(),

    override val appShipmentsService : ShipmentsService = ShipmentsService(),

    override val appStocksService : StocksService = StocksService(),

    override val appTariffsService : TariffsService = TariffsService(),

    override val appWarehousesService : WarehousesService = WarehousesService(),
    override val port : Int = sys.env.get("PORT").map(_.toInt).getOrElse(8080)) extends cask.MainRoutes with AppRoutes {

    /** routes for the UI
     * Subclasses can override to turn this off
     */
    def openApiRoute: Option[cask.Routes] = Option(OpenApiRoutes(port))

    override def allRoutes = appRoutes ++ openApiRoute


    override def host: String = "0.0.0.0"

    def start() = locally {
        initialize()
        println(box(s""" üöÄ browse to localhost:$port üöÄ
        |      host : $host
        |      port : $port
        |   verbose : $verbose
        | debugMode : $debugMode
        |""".stripMargin))

        // if java.awt.Desktop.isDesktopSupported then {
        //    java.awt.Desktop.getDesktop.browse(new java.net.URI(s"http://localhost:${port}"))
        // }
    }
}
