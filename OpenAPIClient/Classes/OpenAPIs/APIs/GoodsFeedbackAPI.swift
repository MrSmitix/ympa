//
// GoodsFeedbackAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class GoodsFeedbackAPI {

    /**
     Удаление комментария к отзыву
     
     - parameter businessId: (path) Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)  
     - parameter deleteGoodsFeedbackCommentRequest: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func deleteGoodsFeedbackComment(businessId: Int64, deleteGoodsFeedbackCommentRequest: DeleteGoodsFeedbackCommentRequest, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: EmptyApiResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return deleteGoodsFeedbackCommentWithRequestBuilder(businessId: businessId, deleteGoodsFeedbackCommentRequest: deleteGoodsFeedbackCommentRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Удаление комментария к отзыву
     - POST /businesses/{businessId}/goods-feedback/comments/delete
     - Удаляет комментарий магазина.  |**⚙️ Лимит:** 1 000 запросов в час| |-| 
     - OAuth:
       - type: oauth2
       - name: OAuth
     - parameter businessId: (path) Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)  
     - parameter deleteGoodsFeedbackCommentRequest: (body)  
     - returns: RequestBuilder<EmptyApiResponse> 
     */
    open class func deleteGoodsFeedbackCommentWithRequestBuilder(businessId: Int64, deleteGoodsFeedbackCommentRequest: DeleteGoodsFeedbackCommentRequest) -> RequestBuilder<EmptyApiResponse> {
        var localVariablePath = "/businesses/{businessId}/goods-feedback/comments/delete"
        let businessIdPreEscape = "\(APIHelper.mapValueToPathItem(businessId))"
        let businessIdPostEscape = businessIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{businessId}", with: businessIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: deleteGoodsFeedbackCommentRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<EmptyApiResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Получение комментариев к отзыву
     
     - parameter businessId: (path) Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)  
     - parameter getGoodsFeedbackCommentsRequest: (body)  
     - parameter pageToken: (query) Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.  (optional)
     - parameter limit: (query) Количество значений на одной странице.  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func getGoodsFeedbackComments(businessId: Int64, getGoodsFeedbackCommentsRequest: GetGoodsFeedbackCommentsRequest, pageToken: String? = nil, limit: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: GetGoodsFeedbackCommentsResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return getGoodsFeedbackCommentsWithRequestBuilder(businessId: businessId, getGoodsFeedbackCommentsRequest: getGoodsFeedbackCommentsRequest, pageToken: pageToken, limit: limit).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получение комментариев к отзыву
     - POST /businesses/{businessId}/goods-feedback/comments
     - Возвращает комментарии к отзыву.  Результаты возвращаются постранично, одна страница содержит не более 20 комментариев.  Комментарии расположены в порядке публикации, поэтому вы можете передавать определенный идентификатор страницы в `page_token`, если вы получали его ранее.  |**⚙️ Лимит:** 1 000 запросов в час| |-| 
     - OAuth:
       - type: oauth2
       - name: OAuth
     - parameter businessId: (path) Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)  
     - parameter getGoodsFeedbackCommentsRequest: (body)  
     - parameter pageToken: (query) Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.  (optional)
     - parameter limit: (query) Количество значений на одной странице.  (optional)
     - returns: RequestBuilder<GetGoodsFeedbackCommentsResponse> 
     */
    open class func getGoodsFeedbackCommentsWithRequestBuilder(businessId: Int64, getGoodsFeedbackCommentsRequest: GetGoodsFeedbackCommentsRequest, pageToken: String? = nil, limit: Int? = nil) -> RequestBuilder<GetGoodsFeedbackCommentsResponse> {
        var localVariablePath = "/businesses/{businessId}/goods-feedback/comments"
        let businessIdPreEscape = "\(APIHelper.mapValueToPathItem(businessId))"
        let businessIdPostEscape = businessIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{businessId}", with: businessIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: getGoodsFeedbackCommentsRequest)

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "page_token": (wrappedValue: pageToken?.encodeToJSON(), isExplode: false),
            "limit": (wrappedValue: limit?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetGoodsFeedbackCommentsResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Получение отзывов о товарах продавца
     
     - parameter businessId: (path) Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)  
     - parameter pageToken: (query) Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.  (optional)
     - parameter limit: (query) Количество значений на одной странице.  (optional)
     - parameter getGoodsFeedbackRequest: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func getGoodsFeedbacks(businessId: Int64, pageToken: String? = nil, limit: Int? = nil, getGoodsFeedbackRequest: GetGoodsFeedbackRequest? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: GetGoodsFeedbackResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return getGoodsFeedbacksWithRequestBuilder(businessId: businessId, pageToken: pageToken, limit: limit, getGoodsFeedbackRequest: getGoodsFeedbackRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получение отзывов о товарах продавца
     - POST /businesses/{businessId}/goods-feedback
     - Возвращает все отзывы о товарах продавца по указанным фильтрам.  Результаты возвращаются постранично, одна страница содержит не более 20 отзывов.  Отзывы расположены в порядке публикации, поэтому вы можете передавать определенный идентификатор страницы в `page_token`, если вы получали его ранее.  |**⚙️ Лимит:** 1 000 запросов в час| |-| 
     - OAuth:
       - type: oauth2
       - name: OAuth
     - parameter businessId: (path) Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)  
     - parameter pageToken: (query) Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.  (optional)
     - parameter limit: (query) Количество значений на одной странице.  (optional)
     - parameter getGoodsFeedbackRequest: (body)  (optional)
     - returns: RequestBuilder<GetGoodsFeedbackResponse> 
     */
    open class func getGoodsFeedbacksWithRequestBuilder(businessId: Int64, pageToken: String? = nil, limit: Int? = nil, getGoodsFeedbackRequest: GetGoodsFeedbackRequest? = nil) -> RequestBuilder<GetGoodsFeedbackResponse> {
        var localVariablePath = "/businesses/{businessId}/goods-feedback"
        let businessIdPreEscape = "\(APIHelper.mapValueToPathItem(businessId))"
        let businessIdPostEscape = businessIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{businessId}", with: businessIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: getGoodsFeedbackRequest)

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "page_token": (wrappedValue: pageToken?.encodeToJSON(), isExplode: false),
            "limit": (wrappedValue: limit?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetGoodsFeedbackResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Отказ от ответа на отзывы
     
     - parameter businessId: (path) Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)  
     - parameter skipGoodsFeedbackReactionRequest: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func skipGoodsFeedbacksReaction(businessId: Int64, skipGoodsFeedbackReactionRequest: SkipGoodsFeedbackReactionRequest, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: EmptyApiResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return skipGoodsFeedbacksReactionWithRequestBuilder(businessId: businessId, skipGoodsFeedbackReactionRequest: skipGoodsFeedbackReactionRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Отказ от ответа на отзывы
     - POST /businesses/{businessId}/goods-feedback/skip-reaction
     - Пропускает отзывы — они больше не будут возвращаться в методе получения всех отзывов [POST businesses/{businessId}/goods-feedback](../../reference/goods-feedback/getGoodsFeedbacks.md).  |**⚙️ Лимит:** 1 000 запросов в час| |-| 
     - OAuth:
       - type: oauth2
       - name: OAuth
     - parameter businessId: (path) Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)  
     - parameter skipGoodsFeedbackReactionRequest: (body)  
     - returns: RequestBuilder<EmptyApiResponse> 
     */
    open class func skipGoodsFeedbacksReactionWithRequestBuilder(businessId: Int64, skipGoodsFeedbackReactionRequest: SkipGoodsFeedbackReactionRequest) -> RequestBuilder<EmptyApiResponse> {
        var localVariablePath = "/businesses/{businessId}/goods-feedback/skip-reaction"
        let businessIdPreEscape = "\(APIHelper.mapValueToPathItem(businessId))"
        let businessIdPostEscape = businessIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{businessId}", with: businessIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: skipGoodsFeedbackReactionRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<EmptyApiResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Добавление нового или изменение созданного комментария
     
     - parameter businessId: (path) Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)  
     - parameter updateGoodsFeedbackCommentRequest: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func updateGoodsFeedbackComment(businessId: Int64, updateGoodsFeedbackCommentRequest: UpdateGoodsFeedbackCommentRequest, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: UpdateGoodsFeedbackCommentResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return updateGoodsFeedbackCommentWithRequestBuilder(businessId: businessId, updateGoodsFeedbackCommentRequest: updateGoodsFeedbackCommentRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Добавление нового или изменение созданного комментария
     - POST /businesses/{businessId}/goods-feedback/comments/update
     - Добавляет новый комментарий магазина или изменяет комментарий, который магазин оставлял ранее.  Для создания комментария к отзыву передайте только идентификатор отзыва `feedbackId`.  Чтобы добавить комментарий к другому комментарию, передайте:  * `feedbackId` — идентификатор отзыва; * `comment.parentId` — идентификатор родительского комментария.  Чтобы изменить комментарий, передайте:  * `feedbackId`— идентификатор отзыва; * `comment.id` — идентификатор комментария, который нужно изменить.  Если передать одновременно `comment.parentId` и `comment.id`, будет изменен существующий комментарий.  |**⚙️ Лимит:** 1 000 запросов в час| |-| 
     - OAuth:
       - type: oauth2
       - name: OAuth
     - parameter businessId: (path) Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)  
     - parameter updateGoodsFeedbackCommentRequest: (body)  
     - returns: RequestBuilder<UpdateGoodsFeedbackCommentResponse> 
     */
    open class func updateGoodsFeedbackCommentWithRequestBuilder(businessId: Int64, updateGoodsFeedbackCommentRequest: UpdateGoodsFeedbackCommentRequest) -> RequestBuilder<UpdateGoodsFeedbackCommentResponse> {
        var localVariablePath = "/businesses/{businessId}/goods-feedback/comments/update"
        let businessIdPreEscape = "\(APIHelper.mapValueToPathItem(businessId))"
        let businessIdPostEscape = businessIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{businessId}", with: businessIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: updateGoodsFeedbackCommentRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UpdateGoodsFeedbackCommentResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
