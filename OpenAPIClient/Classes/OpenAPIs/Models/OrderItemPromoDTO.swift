//
// OrderItemPromoDTO.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Информация о вознаграждениях партнеру за скидки на товар по промокодам, купонам и акциям. */
public struct OrderItemPromoDTO: Codable, JSONEncodable, Hashable {

    public var type: OrderPromoType
    /** Размер пользовательской скидки в валюте покупателя.  */
    public var discount: Double?
    /** Вознаграждение партнеру от Маркета за товар, проданный в рамках акции.  Передается в валюте заказа.  */
    public var subsidy: Double?
    /** Идентификатор акции поставщика.  */
    public var shopPromoId: String?
    /** Идентификатор акции в рамках соглашения на оказание услуг по продвижению сервиса между Маркетом и партнером.  Параметр передается, только если параметр `type=MARKET_DEAL`.  */
    public var marketPromoId: String?

    public init(type: OrderPromoType, discount: Double? = nil, subsidy: Double? = nil, shopPromoId: String? = nil, marketPromoId: String? = nil) {
        self.type = type
        self.discount = discount
        self.subsidy = subsidy
        self.shopPromoId = shopPromoId
        self.marketPromoId = marketPromoId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case type
        case discount
        case subsidy
        case shopPromoId
        case marketPromoId
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(type, forKey: .type)
        try container.encodeIfPresent(discount, forKey: .discount)
        try container.encodeIfPresent(subsidy, forKey: .subsidy)
        try container.encodeIfPresent(shopPromoId, forKey: .shopPromoId)
        try container.encodeIfPresent(marketPromoId, forKey: .marketPromoId)
    }
}

