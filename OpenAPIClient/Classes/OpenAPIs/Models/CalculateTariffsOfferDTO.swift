//
// CalculateTariffsOfferDTO.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Параметры товара, для которого нужно рассчитать стоимость услуг. */
public struct CalculateTariffsOfferDTO: Codable, JSONEncodable, Hashable {

    static let categoryIdRule = NumericRule<Int64>(minimum: 0, exclusiveMinimum: true, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    static let priceRule = NumericRule<Double>(minimum: 0, exclusiveMinimum: true, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    static let lengthRule = NumericRule<Double>(minimum: 0, exclusiveMinimum: true, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    static let widthRule = NumericRule<Double>(minimum: 0, exclusiveMinimum: true, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    static let heightRule = NumericRule<Double>(minimum: 0, exclusiveMinimum: true, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    static let weightRule = NumericRule<Double>(minimum: 0, exclusiveMinimum: true, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    static let quantityRule = NumericRule<Int>(minimum: 1, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    /** Идентификатор категории товара на Маркете.  Для расчета стоимости услуг необходимо указать идентификатор листовой категории товара — той, которая не имеет дочерних категорий.  Чтобы узнать идентификатор категории, к которой относится товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md).  */
    public var categoryId: Int64
    /** Цена на товар в рублях. */
    public var price: Double
    /** Длина товара в сантиметрах. */
    public var length: Double
    /** Ширина товара в сантиметрах. */
    public var width: Double
    /** Высота товара в сантиметрах. */
    public var height: Double
    /** Вес товара в килограммах. */
    public var weight: Double
    /** Квант продажи — количество единиц товара в одном товарном предложении. */
    public var quantity: Int? = 1

    public init(categoryId: Int64, price: Double, length: Double, width: Double, height: Double, weight: Double, quantity: Int? = 1) {
        self.categoryId = categoryId
        self.price = price
        self.length = length
        self.width = width
        self.height = height
        self.weight = weight
        self.quantity = quantity
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case categoryId
        case price
        case length
        case width
        case height
        case weight
        case quantity
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(categoryId, forKey: .categoryId)
        try container.encode(price, forKey: .price)
        try container.encode(length, forKey: .length)
        try container.encode(width, forKey: .width)
        try container.encode(height, forKey: .height)
        try container.encode(weight, forKey: .weight)
        try container.encodeIfPresent(quantity, forKey: .quantity)
    }
}

