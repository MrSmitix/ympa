//
// OrderItemInstanceDTO.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Переданные вами для данной позиции коды маркировки или УИНы. Коды «Честного знака» возвращаются в двух вариантах — с криптохвостом и без.  */
public struct OrderItemInstanceDTO: Codable, JSONEncodable, Hashable {

    /** Код идентификации единицы товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/) без криптохвоста. */
    public var cis: String?
    /** Код идентификации единицы товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/) с криптохвостом. */
    public var cisFull: String?
    /** УИН ювелирного изделия (16-значный код) Производитель получает УИН, когда регистрирует изделие в системе контроля за оборотом драгоценных металлов и камней — ГИИС ДМДК.  */
    public var uin: String?
    /** Регистрационный номер партии товара.  Представляет собой строку из четырех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ/ХХХ.  Первая часть — код таможни, которая зарегистрировала декларацию на партию товара. Далее — дата, номер декларации и номер маркированного товара в декларации.  */
    public var rnpt: String?
    /** Грузовая таможенная декларация.  Представляет собой строку из трех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ.  Первая часть — код таможни, которая зарегистрировала декларацию на ввезенные товары. Далее — дата и номер декларации.  */
    public var gtd: String?

    public init(cis: String? = nil, cisFull: String? = nil, uin: String? = nil, rnpt: String? = nil, gtd: String? = nil) {
        self.cis = cis
        self.cisFull = cisFull
        self.uin = uin
        self.rnpt = rnpt
        self.gtd = gtd
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case cis
        case cisFull
        case uin
        case rnpt
        case gtd
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(cis, forKey: .cis)
        try container.encodeIfPresent(cisFull, forKey: .cisFull)
        try container.encodeIfPresent(uin, forKey: .uin)
        try container.encodeIfPresent(rnpt, forKey: .rnpt)
        try container.encodeIfPresent(gtd, forKey: .gtd)
    }
}

