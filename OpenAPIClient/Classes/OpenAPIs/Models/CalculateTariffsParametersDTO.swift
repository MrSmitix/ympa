//
// CalculateTariffsParametersDTO.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Параметры для расчета стоимости услуг. */
public struct CalculateTariffsParametersDTO: Codable, JSONEncodable, Hashable {

    /** Идентификатор кампании. У пользователя, который выполняет запрос, должен быть доступ к этой кампании.  Используйте параметр `campaignId`, если уже завершили подключение магазина на Маркете. Иначе вернется пустой список.  Обязательный параметр, если не указан параметр `sellingProgram`. Совместное использование параметров приведет к ошибке.  */
    public var campaignId: Int64?
    public var sellingProgram: SellingProgramType?
    public var frequency: PaymentFrequencyType?

    public init(campaignId: Int64? = nil, sellingProgram: SellingProgramType? = nil, frequency: PaymentFrequencyType? = nil) {
        self.campaignId = campaignId
        self.sellingProgram = sellingProgram
        self.frequency = frequency
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case campaignId
        case sellingProgram
        case frequency
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(campaignId, forKey: .campaignId)
        try container.encodeIfPresent(sellingProgram, forKey: .sellingProgram)
        try container.encodeIfPresent(frequency, forKey: .frequency)
    }
}

