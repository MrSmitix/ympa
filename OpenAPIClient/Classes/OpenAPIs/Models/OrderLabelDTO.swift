//
// OrderLabelDTO.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Данные для печати ярлыка. */
public struct OrderLabelDTO: Codable, JSONEncodable, Hashable {

    /** Идентификатор заказа. */
    public var orderId: Int64
    /** Количество коробок в заказе. */
    public var placesNumber: Int
    /** URL файла с ярлыками‑наклейками на все коробки в заказе.  Соответствует URL, по которому выполняется запрос [GET campaigns/{campaignId}/orders/{orderId}/delivery/labels](../../reference/orders/generateOrderLabels.md).  */
    public var url: String
    /** Информация на ярлыке. */
    public var parcelBoxLabels: [ParcelBoxLabelDTO]

    public init(orderId: Int64, placesNumber: Int, url: String, parcelBoxLabels: [ParcelBoxLabelDTO]) {
        self.orderId = orderId
        self.placesNumber = placesNumber
        self.url = url
        self.parcelBoxLabels = parcelBoxLabels
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case orderId
        case placesNumber
        case url
        case parcelBoxLabels
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(orderId, forKey: .orderId)
        try container.encode(placesNumber, forKey: .placesNumber)
        try container.encode(url, forKey: .url)
        try container.encode(parcelBoxLabels, forKey: .parcelBoxLabels)
    }
}

