//
// FeedbackGradesDTO.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Информация об оценках, которые поставил автор отзыва магазину, и об оценках полезности отзыва от других пользователей Маркета. */
public struct FeedbackGradesDTO: Codable, JSONEncodable, Hashable {

    /** Общая оценка, указанная в отзыве: от `1` («Ужасный магазин») до `5` («Отличный магазин»). */
    public var average: Double?
    /** Количество пользователей, считающих отзыв полезным. */
    public var agreeCount: Int64?
    /** Количество пользователей, считающих отзыв бесполезным. */
    public var rejectCount: Int64?
    /** Информация об оценках по параметрам, указанных в отзыве.  При создании отзыва автору предлагается поставить оценки магазину по нескольким параметрам: например, за скорость обработки заказа или удобство самовывоза. Набор параметров зависит от того, какой способ покупки (параметр `delivery`) указал автор.  */
    public var factors: [FeedbackFactorDTO]

    public init(average: Double? = nil, agreeCount: Int64? = nil, rejectCount: Int64? = nil, factors: [FeedbackFactorDTO]) {
        self.average = average
        self.agreeCount = agreeCount
        self.rejectCount = rejectCount
        self.factors = factors
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case average
        case agreeCount
        case rejectCount
        case factors
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(average, forKey: .average)
        try container.encodeIfPresent(agreeCount, forKey: .agreeCount)
        try container.encodeIfPresent(rejectCount, forKey: .rejectCount)
        try container.encode(factors, forKey: .factors)
    }
}

