//
// FlippingPagerDTO.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Модель для пагинации. */
public struct FlippingPagerDTO: Codable, JSONEncodable, Hashable {

    /** Сколько всего найдено элементов. */
    public var total: Int?
    /** Начальный номер найденного элемента на странице. */
    public var from: Int?
    /** Конечный номер найденного элемента на странице. */
    public var to: Int?
    /** Текущая страница. */
    public var currentPage: Int?
    /** Общее количество страниц. */
    public var pagesCount: Int?
    /** Размер страницы. */
    public var pageSize: Int?

    public init(total: Int? = nil, from: Int? = nil, to: Int? = nil, currentPage: Int? = nil, pagesCount: Int? = nil, pageSize: Int? = nil) {
        self.total = total
        self.from = from
        self.to = to
        self.currentPage = currentPage
        self.pagesCount = pagesCount
        self.pageSize = pageSize
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case total
        case from
        case to
        case currentPage
        case pagesCount
        case pageSize
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(total, forKey: .total)
        try container.encodeIfPresent(from, forKey: .from)
        try container.encodeIfPresent(to, forKey: .to)
        try container.encodeIfPresent(currentPage, forKey: .currentPage)
        try container.encodeIfPresent(pagesCount, forKey: .pagesCount)
        try container.encodeIfPresent(pageSize, forKey: .pageSize)
    }
}

