//
// GoodsFeedbackStatisticsDTO.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Статистическая информация по отзыву. */
public struct GoodsFeedbackStatisticsDTO: Codable, JSONEncodable, Hashable {

    static let ratingRule = NumericRule<Int>(minimum: 1, exclusiveMinimum: false, maximum: 5, exclusiveMaximum: false, multipleOf: nil)
    /** Оценка товара. */
    public var rating: Int
    /** Количество комментариев к отзыву.  Учитываются только ответы на отзывы, а не дочерние комментарии.  */
    public var commentsCount: Int64
    /** Рекомендуют ли этот товар. */
    public var recommended: Bool?
    /** Количество баллов Плюса, которое автор получил за отзыв. */
    public var paidAmount: Int64?

    public init(rating: Int, commentsCount: Int64, recommended: Bool? = nil, paidAmount: Int64? = nil) {
        self.rating = rating
        self.commentsCount = commentsCount
        self.recommended = recommended
        self.paidAmount = paidAmount
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case rating
        case commentsCount
        case recommended
        case paidAmount
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(rating, forKey: .rating)
        try container.encode(commentsCount, forKey: .commentsCount)
        try container.encodeIfPresent(recommended, forKey: .recommended)
        try container.encodeIfPresent(paidAmount, forKey: .paidAmount)
    }
}

