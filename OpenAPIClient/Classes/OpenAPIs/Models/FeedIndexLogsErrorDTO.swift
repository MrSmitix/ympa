//
// FeedIndexLogsErrorDTO.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Информация об ошибке, произошедшей во время индексации прайс-листа.  Выводится, если во время индексации произошли ошибки (&#x60;index-log-record status&#x3D;ERROR&#x60;).  */
public struct FeedIndexLogsErrorDTO: Codable, JSONEncodable, Hashable {

    /** HTTP-код ошибки индексации прайс-листа.  Выводится, если `type=DOWNLOAD_HTTP_ERROR`.  */
    public var httpStatusCode: Int?
    public var type: FeedIndexLogsErrorType?
    /** Описание ошибки.  Выводится, если `type=DOWNLOAD_ERROR`.  */
    public var description: String?

    public init(httpStatusCode: Int? = nil, type: FeedIndexLogsErrorType? = nil, description: String? = nil) {
        self.httpStatusCode = httpStatusCode
        self.type = type
        self.description = description
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case httpStatusCode
        case type
        case description
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(httpStatusCode, forKey: .httpStatusCode)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(description, forKey: .description)
    }
}

