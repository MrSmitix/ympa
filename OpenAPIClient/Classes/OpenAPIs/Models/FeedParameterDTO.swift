//
// FeedParameterDTO.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Параметр прайс-листа. */
public struct FeedParameterDTO: Codable, JSONEncodable, Hashable {

    /** Удалить ли значение параметра.  Возможное значение: * `true` — удалить значение параметра.  Используется вместе с параметром `name`.  */
    public var deleted: Bool?
    /** Название параметра.  Возможное значение: - `reparseIntervalMinutes` — период скачивания прайс-листа. Маркет будет скачивать прайс-лист через количество минут, указанное в параметре `value`. Например, при `value=1440`, Маркет будет скачивать прайс-лист один раз в сутки.  {% note alert %}  Несмотря на установленное значение, Маркет скачает прайс-лист один раз в сутки.  {% endnote %}  Обязательный параметр.  */
    public var name: String
    /** Значения параметра.  Используется вместе с параметром `name`.  */
    public var values: [Int]?

    public init(deleted: Bool? = nil, name: String, values: [Int]? = nil) {
        self.deleted = deleted
        self.name = name
        self.values = values
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case deleted
        case name
        case values
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(deleted, forKey: .deleted)
        try container.encode(name, forKey: .name)
        try container.encodeIfPresent(values, forKey: .values)
    }
}

