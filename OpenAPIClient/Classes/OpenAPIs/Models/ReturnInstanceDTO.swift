//
// ReturnInstanceDTO.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Логистическая информация по возврату. */
public struct ReturnInstanceDTO: Codable, JSONEncodable, Hashable {

    public var stockType: ReturnInstanceStockType?
    public var status: ReturnInstanceStatusType?
    /** Код идентификации единицы товара [в системе «Честный ЗНАК»](https://честныйзнак.рф/). */
    public var cis: String?
    /** Международный идентификатор мобильного оборудования. */
    public var imei: String?

    public init(stockType: ReturnInstanceStockType? = nil, status: ReturnInstanceStatusType? = nil, cis: String? = nil, imei: String? = nil) {
        self.stockType = stockType
        self.status = status
        self.cis = cis
        self.imei = imei
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case stockType
        case status
        case cis
        case imei
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(stockType, forKey: .stockType)
        try container.encodeIfPresent(status, forKey: .status)
        try container.encodeIfPresent(cis, forKey: .cis)
        try container.encodeIfPresent(imei, forKey: .imei)
    }
}

