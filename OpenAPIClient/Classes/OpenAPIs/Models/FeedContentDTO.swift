//
// FeedContentDTO.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Информация о проверке содержимого прайс-листа, загруженного на Маркет. */
public struct FeedContentDTO: Codable, JSONEncodable, Hashable {

    /** Количество предложений, в которых найдены ошибки на этапе загрузки прайс-листа. Выводится, если параметр `content status=OK`.  */
    public var rejectedOffersCount: Int64?
    public var status: FeedStatusType?
    /** Количество предложений в прайс-листе. Выводится, если параметр `content status=OK`.  */
    public var totalOffersCount: Int64?
    public var error: FeedContentErrorDTO?

    public init(rejectedOffersCount: Int64? = nil, status: FeedStatusType? = nil, totalOffersCount: Int64? = nil, error: FeedContentErrorDTO? = nil) {
        self.rejectedOffersCount = rejectedOffersCount
        self.status = status
        self.totalOffersCount = totalOffersCount
        self.error = error
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case rejectedOffersCount
        case status
        case totalOffersCount
        case error
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(rejectedOffersCount, forKey: .rejectedOffersCount)
        try container.encodeIfPresent(status, forKey: .status)
        try container.encodeIfPresent(totalOffersCount, forKey: .totalOffersCount)
        try container.encodeIfPresent(error, forKey: .error)
    }
}

