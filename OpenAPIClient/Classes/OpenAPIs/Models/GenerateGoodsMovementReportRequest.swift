//
// GenerateGoodsMovementReportRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Данные, необходимые для генерации отчета. */
public struct GenerateGoodsMovementReportRequest: Codable, JSONEncodable, Hashable {

    static let shopSkuRule = StringRule(minLength: 1, maxLength: 255, pattern: "/^[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$/")
    /** Идентификатор кампании. */
    public var campaignId: Int64
    /** Начало периода, включительно. */
    public var dateFrom: Date
    /** Конец периода, включительно. */
    public var dateTo: Date
    /** Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)  */
    public var shopSku: String?

    public init(campaignId: Int64, dateFrom: Date, dateTo: Date, shopSku: String? = nil) {
        self.campaignId = campaignId
        self.dateFrom = dateFrom
        self.dateTo = dateTo
        self.shopSku = shopSku
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case campaignId
        case dateFrom
        case dateTo
        case shopSku
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(campaignId, forKey: .campaignId)
        try container.encode(dateFrom, forKey: .dateFrom)
        try container.encode(dateTo, forKey: .dateTo)
        try container.encodeIfPresent(shopSku, forKey: .shopSku)
    }
}

