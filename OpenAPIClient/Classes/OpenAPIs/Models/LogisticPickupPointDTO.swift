//
// LogisticPickupPointDTO.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Описание пункта вывоза для возврата. */
public struct LogisticPickupPointDTO: Codable, JSONEncodable, Hashable {

    /** Идентификатор пункта вывоза. */
    public var id: Int64?
    /** Название пункта вывоза. */
    public var name: String?
    public var address: PickupAddressDTO?
    /** Дополнительные инструкции к вывозу. */
    public var instruction: String?
    public var type: LogisticPointType?
    /** Идентификатор логистического партнера, к которому относится логистическая точка. */
    public var logisticPartnerId: Int64?

    public init(id: Int64? = nil, name: String? = nil, address: PickupAddressDTO? = nil, instruction: String? = nil, type: LogisticPointType? = nil, logisticPartnerId: Int64? = nil) {
        self.id = id
        self.name = name
        self.address = address
        self.instruction = instruction
        self.type = type
        self.logisticPartnerId = logisticPartnerId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case address
        case instruction
        case type
        case logisticPartnerId
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(address, forKey: .address)
        try container.encodeIfPresent(instruction, forKey: .instruction)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(logisticPartnerId, forKey: .logisticPartnerId)
    }
}

