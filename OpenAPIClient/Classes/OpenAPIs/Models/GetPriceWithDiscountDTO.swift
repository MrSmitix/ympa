//
// GetPriceWithDiscountDTO.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Цена с указанием скидки и времени последнего обновления. */
public struct GetPriceWithDiscountDTO: Codable, JSONEncodable, Hashable {

    static let valueRule = NumericRule<Double>(minimum: 0, exclusiveMinimum: true, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    static let discountBaseRule = NumericRule<Double>(minimum: 0, exclusiveMinimum: true, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    /** Значение. */
    public var value: Double
    public var currencyId: CurrencyType
    /** Цена до скидки.  Число должно быть целым. Вы можете указать цену со скидкой от 5 до 99%.  Передавайте этот параметр при каждом обновлении цены, если предоставляете скидку на товар.  */
    public var discountBase: Double?
    /** Время последнего обновления. */
    public var updatedAt: Date

    public init(value: Double, currencyId: CurrencyType, discountBase: Double? = nil, updatedAt: Date) {
        self.value = value
        self.currencyId = currencyId
        self.discountBase = discountBase
        self.updatedAt = updatedAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case value
        case currencyId
        case discountBase
        case updatedAt
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(value, forKey: .value)
        try container.encode(currencyId, forKey: .currencyId)
        try container.encodeIfPresent(discountBase, forKey: .discountBase)
        try container.encode(updatedAt, forKey: .updatedAt)
    }
}

