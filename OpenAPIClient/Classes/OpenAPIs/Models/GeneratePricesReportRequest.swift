//
// GeneratePricesReportRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Данные, необходимые для генерации отчета. */
public struct GeneratePricesReportRequest: Codable, JSONEncodable, Hashable {

    /** Идентификатор бизнеса.  В большинстве случаев обязателен. Не указывается, если задан `campaignId`.  */
    public var businessId: Int64?
    /** Идентификатор кампании.  Как правило, не используется. Передавайте только если в кабинете есть магазины с уникальными ценами и вы хотите получить отчет для них. В этом случае передавать `businessId` не нужно.  */
    public var campaignId: Int64?
    /** Фильтр по категориям на Маркете. */
    public var categoryIds: [Int64]?
    /** Фильтр по времени появления предложения — начало периода.  Формат даты: `ДД-ММ-ГГГГ`.  */
    public var creationDateFrom: Date?
    /** Фильтр по времени появления предложения — окончание периода.  Формат даты: `ДД-ММ-ГГГГ`.  */
    public var creationDateTo: Date?

    public init(businessId: Int64? = nil, campaignId: Int64? = nil, categoryIds: [Int64]? = nil, creationDateFrom: Date? = nil, creationDateTo: Date? = nil) {
        self.businessId = businessId
        self.campaignId = campaignId
        self.categoryIds = categoryIds
        self.creationDateFrom = creationDateFrom
        self.creationDateTo = creationDateTo
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case businessId
        case campaignId
        case categoryIds
        case creationDateFrom
        case creationDateTo
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(businessId, forKey: .businessId)
        try container.encodeIfPresent(campaignId, forKey: .campaignId)
        try container.encodeIfPresent(categoryIds, forKey: .categoryIds)
        try container.encodeIfPresent(creationDateFrom, forKey: .creationDateFrom)
        try container.encodeIfPresent(creationDateTo, forKey: .creationDateTo)
    }
}

