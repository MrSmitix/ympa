//
// SetReturnDecisionRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Решения по позиции в возврате. */
public struct SetReturnDecisionRequest: Codable, JSONEncodable, Hashable {

    /** Идентификатор товара в возврате. */
    public var returnItemId: Int64
    public var decisionType: ReturnRequestDecisionType
    /** Комментарий к решению. Укажите:  * для `REFUND_MONEY_INCLUDING_SHIPMENT`— стоимость обратной пересылки;  * для `REPAIR` — когда вы устраните недостатки товара;  * для `DECLINE_REFUND` — причину отказа;  * для `OTHER_DECISION` — какое решение вы предлагаете.  */
    public var comment: String?

    public init(returnItemId: Int64, decisionType: ReturnRequestDecisionType, comment: String? = nil) {
        self.returnItemId = returnItemId
        self.decisionType = decisionType
        self.comment = comment
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case returnItemId
        case decisionType
        case comment
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(returnItemId, forKey: .returnItemId)
        try container.encode(decisionType, forKey: .decisionType)
        try container.encodeIfPresent(comment, forKey: .comment)
    }
}

