#import <Foundation/Foundation.h>
#import "OAIApiClientDataErrorResponse.h"
#import "OAIApiForbiddenErrorResponse.h"
#import "OAIApiLimitErrorResponse.h"
#import "OAIApiNotFoundErrorResponse.h"
#import "OAIApiServerErrorResponse.h"
#import "OAIApiUnauthorizedErrorResponse.h"
#import "OAICreateChatRequest.h"
#import "OAICreateChatResponse.h"
#import "OAIEmptyApiResponse.h"
#import "OAIGetChatHistoryRequest.h"
#import "OAIGetChatHistoryResponse.h"
#import "OAIGetChatsRequest.h"
#import "OAIGetChatsResponse.h"
#import "OAISendMessageToChatRequest.h"
#import "OAIApi.h"

/**
* Партнерский API Маркета
* API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 
*
* The version of the OpenAPI document: LATEST
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/



@interface OAIChatsApi: NSObject <OAIApi>

extern NSString* kOAIChatsApiErrorDomain;
extern NSInteger kOAIChatsApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(OAIApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Создание нового чата с покупателем
/// Создает новый чат с покупателем.  |**⚙️ Лимит:** 1000 запросов в час| |-| 
///
/// @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
/// @param createChatRequest description
/// 
///  code:200 message:"Все получилось: чат создан. ",
///  code:400 message:"Запрос содержит неправильные данные.",
///  code:401 message:"В запросе не указаны данные для авторизации.",
///  code:403 message:"Данные для авторизации неверны или доступ к ресурсу запрещен.",
///  code:404 message:"Запрашиваемый ресурс не найден.",
///  code:420 message:"Превышено ограничение на доступ к ресурсу.",
///  code:500 message:"Внутренняя ошибка сервера."
///
/// @return OAICreateChatResponse*
-(NSURLSessionTask*) createChatWithBusinessId: (NSNumber*) businessId
    createChatRequest: (OAICreateChatRequest*) createChatRequest
    completionHandler: (void (^)(OAICreateChatResponse* output, NSError* error)) handler;


/// Получение истории сообщений в чате
/// Возвращает историю сообщений в чате с покупателем.  |**⚙️ Лимит:** 10000 запросов в час| |-| 
///
/// @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
/// @param chatId Идентификатор чата.
/// @param getChatHistoryRequest description
/// @param pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.  (optional)
/// @param limit Количество значений на одной странице.  (optional)
/// 
///  code:200 message:"История сообщений успешно получена. ",
///  code:400 message:"Запрос содержит неправильные данные.",
///  code:401 message:"В запросе не указаны данные для авторизации.",
///  code:403 message:"Данные для авторизации неверны или доступ к ресурсу запрещен.",
///  code:404 message:"Запрашиваемый ресурс не найден.",
///  code:420 message:"Превышено ограничение на доступ к ресурсу.",
///  code:500 message:"Внутренняя ошибка сервера."
///
/// @return OAIGetChatHistoryResponse*
-(NSURLSessionTask*) getChatHistoryWithBusinessId: (NSNumber*) businessId
    chatId: (NSNumber*) chatId
    getChatHistoryRequest: (OAIGetChatHistoryRequest*) getChatHistoryRequest
    pageToken: (NSString*) pageToken
    limit: (NSNumber*) limit
    completionHandler: (void (^)(OAIGetChatHistoryResponse* output, NSError* error)) handler;


/// Получение доступных чатов
/// Возвращает ваши чаты с покупателями.  |**⚙️ Лимит:** 10000 запросов в час| |-| 
///
/// @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
/// @param getChatsRequest description
/// @param pageToken Идентификатор страницы c результатами.  Если параметр не указан, возвращается первая страница.  Рекомендуется передавать значение выходного параметра &#x60;nextPageToken&#x60;, полученное при последнем запросе.  Если задан &#x60;page_token&#x60; и в запросе есть параметры &#x60;offset&#x60;, &#x60;page_number&#x60; и &#x60;page_size&#x60;, они игнорируются.  (optional)
/// @param limit Количество значений на одной странице.  (optional)
/// 
///  code:200 message:"Список чатов. ",
///  code:400 message:"Запрос содержит неправильные данные.",
///  code:401 message:"В запросе не указаны данные для авторизации.",
///  code:403 message:"Данные для авторизации неверны или доступ к ресурсу запрещен.",
///  code:404 message:"Запрашиваемый ресурс не найден.",
///  code:420 message:"Превышено ограничение на доступ к ресурсу.",
///  code:500 message:"Внутренняя ошибка сервера."
///
/// @return OAIGetChatsResponse*
-(NSURLSessionTask*) getChatsWithBusinessId: (NSNumber*) businessId
    getChatsRequest: (OAIGetChatsRequest*) getChatsRequest
    pageToken: (NSString*) pageToken
    limit: (NSNumber*) limit
    completionHandler: (void (^)(OAIGetChatsResponse* output, NSError* error)) handler;


/// Отправка файла в чат
/// Отправляет файл в чат с покупателем.  |**⚙️ Лимит:** 1000 запросов в час| |-| 
///
/// @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
/// @param chatId Идентификатор чата.
/// @param file Содержимое файла. Максимальный размер файла — 5 Мбайт.
/// 
///  code:200 message:"Пустой ответ. Означает, что файл отправлен.",
///  code:400 message:"Запрос содержит неправильные данные.",
///  code:401 message:"В запросе не указаны данные для авторизации.",
///  code:403 message:"Данные для авторизации неверны или доступ к ресурсу запрещен.",
///  code:404 message:"Запрашиваемый ресурс не найден.",
///  code:420 message:"Превышено ограничение на доступ к ресурсу.",
///  code:500 message:"Внутренняя ошибка сервера."
///
/// @return OAIEmptyApiResponse*
-(NSURLSessionTask*) sendFileToChatWithBusinessId: (NSNumber*) businessId
    chatId: (NSNumber*) chatId
    file: (NSURL*) file
    completionHandler: (void (^)(OAIEmptyApiResponse* output, NSError* error)) handler;


/// Отправка сообщения в чат
/// Отправляет сообщение в чат с покупателем.  |**⚙️ Лимит:** 1000 запросов в час| |-| 
///
/// @param businessId Идентификатор кабинета. Чтобы узнать идентификатор, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md#businessdto).  ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html) 
/// @param chatId Идентификатор чата.
/// @param sendMessageToChatRequest description
/// 
///  code:200 message:"Пустой ответ. Означает, что сообщение отправлено.",
///  code:400 message:"Запрос содержит неправильные данные.",
///  code:401 message:"В запросе не указаны данные для авторизации.",
///  code:403 message:"Данные для авторизации неверны или доступ к ресурсу запрещен.",
///  code:404 message:"Запрашиваемый ресурс не найден.",
///  code:420 message:"Превышено ограничение на доступ к ресурсу.",
///  code:500 message:"Внутренняя ошибка сервера."
///
/// @return OAIEmptyApiResponse*
-(NSURLSessionTask*) sendMessageToChatWithBusinessId: (NSNumber*) businessId
    chatId: (NSNumber*) chatId
    sendMessageToChatRequest: (OAISendMessageToChatRequest*) sendMessageToChatRequest
    completionHandler: (void (^)(OAIEmptyApiResponse* output, NSError* error)) handler;



@end
