//
// OrderItemDTO.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/// Список товаров в заказе. 
public struct OrderItemDTO: Codable {
    /// Идентификатор товара в заказе.  Позволяет идентифицировать товар в рамках данного заказа. 
    public var id: Int64?
    /// Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
    public var offerId: String?
    /// Название товара.
    public var offerName: String?
    /// Цена на товар в валюте заказа без учета вознаграждения партнеру за скидки по промокодам, купонам и акциям (параметр `subsidies`). 
    public var price: Double?
    /// Цена на товар в валюте покупателя. В цене уже учтены скидки по:  * акциям; * купонам; * промокодам. 
    public var buyerPrice: Double?
    /// Стоимость товара в валюте покупателя до применения скидок по:  * акциям; * купонам; * промокодам. 
    public var buyerPriceBeforeDiscount: Double?
    /// {% note warning \"\" %}  Этот параметр устарел.  {% endnote %}  Стоимость товара в валюте магазина до применения скидок. 
    public var priceBeforeDiscount: Double?
    /// Количество единиц товара.
    public var count: Int?
    public var vat: OrderVatType?
    /// Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
    public var shopSku: String?
    /// {% note warning \"\" %}  Этот параметр устарел. Вместо него используйте `subsidies`.  {% endnote %}  Общее вознаграждение партнеру за DBS-доставку и все скидки на товар:  * по промокодам; * по купонам; * по баллам Плюса; * по акциям.  Передается в валюте заказа. 
    public var subsidy: Double?
    /// {% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %}  Идентификатор склада в системе партнера, на который сформирован заказ. 
    public var partnerWarehouseId: String?
    /// Информация о вознаграждениях партнеру за скидки на товар по промокодам, купонам и акциям.
    public var promos: [OrderItemPromoDTO]?
    /// Информация о маркировке единиц товара.  Возвращаются данные для маркировки, переданные в запросе [PUT campaigns/{campaignId}/orders/{orderId}/cis](../../reference/orders/provideOrderItemCis.md).  Если магазин еще не передавал коды для этого заказа, `instances` отсутствует. 
    public var instances: [OrderItemInstanceDTO]?
    /// Информация об удалении товара из заказа. 
    public var details: [OrderItemDetailDTO]?
    /// Список субсидий по типам.
    public var subsidies: [OrderItemSubsidyDTO]?
    /// Список необходимых маркировок товара.
    public var requiredInstanceTypes: [OrderItemInstanceType]?

    public init(id: Int64? = nil, offerId: String? = nil, offerName: String? = nil, price: Double? = nil, buyerPrice: Double? = nil, buyerPriceBeforeDiscount: Double? = nil, priceBeforeDiscount: Double? = nil, count: Int? = nil, vat: OrderVatType? = nil, shopSku: String? = nil, subsidy: Double? = nil, partnerWarehouseId: String? = nil, promos: [OrderItemPromoDTO]? = nil, instances: [OrderItemInstanceDTO]? = nil, details: [OrderItemDetailDTO]? = nil, subsidies: [OrderItemSubsidyDTO]? = nil, requiredInstanceTypes: [OrderItemInstanceType]? = nil) {
        self.id = id
        self.offerId = offerId
        self.offerName = offerName
        self.price = price
        self.buyerPrice = buyerPrice
        self.buyerPriceBeforeDiscount = buyerPriceBeforeDiscount
        self.priceBeforeDiscount = priceBeforeDiscount
        self.count = count
        self.vat = vat
        self.shopSku = shopSku
        self.subsidy = subsidy
        self.partnerWarehouseId = partnerWarehouseId
        self.promos = promos
        self.instances = instances
        self.details = details
        self.subsidies = subsidies
        self.requiredInstanceTypes = requiredInstanceTypes
    }
}
