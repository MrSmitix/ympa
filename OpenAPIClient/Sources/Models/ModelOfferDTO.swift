//
// ModelOfferDTO.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/// Информация о предложении. 
public struct ModelOfferDTO: Codable {
    /// Скидка на предложение в процентах.
    public var discount: Int?
    /// Наименование предложения.
    public var name: String?
    /// Позиция предложения в выдаче Маркета на карточке модели.
    public var pos: Int?
    /// Цена предложения без скидки магазина.
    public var preDiscountPrice: Double?
    /// Цена предложения без скидки, которую получает покупатель при оплате через Yandex Pay.
    public var price: Double?
    /// Идентификатор региона предложения (регион, откуда доставляется товар).  Сначала показываются предложения, доставляемые из региона, указанного в запросе в параметре `regionId`. Предложения, доставляемые из других регионов, показываются после них. 
    public var regionId: Int64?
    /// Стоимость доставки товара в регион:  * `0` — доставка осуществляется бесплатно. * `-1` — магазин не осуществляет доставку этого товара (самовывоз).  Если стоимость доставки неизвестна, параметр не выводится. 
    public var shippingCost: Double?
    /// Название магазина (в том виде, в котором отображается на Маркете).
    public var shopName: String?
    /// Рейтинг магазина.  Возможные значения: * `-1` — у магазинов, недавно появившихся на Маркете, рейтинг появляется не сразу. До момента появления рейтинга для таких магазинов возвращается значение `-1`. * `1`. * `2`. * `3`. * `4`. * `5`. 
    public var shopRating: Int?
    /// {% note warning \"\" %}  Этот параметр устарел. Не используйте его.  {% endnote %} 
    public var inStock: Int?

    public init(discount: Int? = nil, name: String? = nil, pos: Int? = nil, preDiscountPrice: Double? = nil, price: Double? = nil, regionId: Int64? = nil, shippingCost: Double? = nil, shopName: String? = nil, shopRating: Int? = nil, inStock: Int? = nil) {
        self.discount = discount
        self.name = name
        self.pos = pos
        self.preDiscountPrice = preDiscountPrice
        self.price = price
        self.regionId = regionId
        self.shippingCost = shippingCost
        self.shopName = shopName
        self.shopRating = shopRating
        self.inStock = inStock
    }
}
